<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/CFNetwork.framework'/>
<depends_on path='/System/Library/Frameworks/SystemConfiguration.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<struct name='NSAffineTransformStruct' type64='{_NSAffineTransformStruct=&quot;m11&quot;d&quot;m12&quot;d&quot;m21&quot;d&quot;m22&quot;d&quot;tX&quot;d&quot;tY&quot;d}' type='{_NSAffineTransformStruct=&quot;m11&quot;f&quot;m12&quot;f&quot;m21&quot;f&quot;m22&quot;f&quot;tX&quot;f&quot;tY&quot;f}'>
<field name='m11' type64='d' type='f' declared_type='CGFloat'/>
<field name='m12' type64='d' type='f' declared_type='CGFloat'/>
<field name='m21' type64='d' type='f' declared_type='CGFloat'/>
<field name='m22' type64='d' type='f' declared_type='CGFloat'/>
<field name='tX' type64='d' type='f' declared_type='CGFloat'/>
<field name='tY' type64='d' type='f' declared_type='CGFloat'/>
</struct>
<struct name='NSDecimal' type='{_NSDecimal=&quot;_exponent&quot;b8&quot;_length&quot;b4&quot;_isNegative&quot;b1&quot;_isCompact&quot;b1&quot;_reserved&quot;b18&quot;_mantissa&quot;[8S]}'>
<field name='_exponent' type='b8' declared_type='int'/>
<field name='_length' type='b4' declared_type='unsigned int'/>
<field name='_isNegative' type='b1' declared_type='unsigned int'/>
<field name='_isCompact' type='b1' declared_type='unsigned int'/>
<field name='_reserved' type='b18' declared_type='unsigned int'/>
<field name='_mantissa' type='[8S]' declared_type='unsigned short*'/>
</struct>
<struct name='NSFastEnumerationState' type64='{_NSFastEnumerationState=&quot;state&quot;Q&quot;itemsPtr&quot;^@&quot;mutationsPtr&quot;^Q&quot;extra&quot;[5Q]}' type='{_NSFastEnumerationState=&quot;state&quot;L&quot;itemsPtr&quot;^@&quot;mutationsPtr&quot;^L&quot;extra&quot;[5L]}'>
<field name='state' type64='Q' type='L' declared_type='unsigned long'/>
<field name='itemsPtr' type='^@' declared_type='id*'/>
<field name='mutationsPtr' type64='^Q' type='^L' declared_type='unsigned long*'/>
<field name='extra' type64='[5Q]' type='[5L]' declared_type='unsigned long*'/>
</struct>
<struct name='NSHashEnumerator' type64='{_NSHashEnumerator=&quot;_pi&quot;Q&quot;_si&quot;Q&quot;_bs&quot;^v}' type='{_NSHashEnumerator=&quot;_pi&quot;I&quot;_si&quot;I&quot;_bs&quot;^v}'>
<field name='_pi' type64='Q' type='I' declared_type='NSUInteger'/>
<field name='_si' type64='Q' type='I' declared_type='NSUInteger'/>
<field name='_bs' type='^v' declared_type='void*'/>
</struct>
<struct name='NSHashTableCallBacks' type='{_NSHashTableCallBacks=&quot;hash&quot;^?&quot;isEqual&quot;^?&quot;retain&quot;^?&quot;release&quot;^?&quot;describe&quot;^?}'>
<field function_pointer='true' name='hash' type='^?' declared_type='NSUInteger (*)(NSHashTable *, void *)'>
<arg type='@' declared_type='NSHashTable*'/>
<arg const='true' type='^v' declared_type='void*'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</field>
<field function_pointer='true' name='isEqual' type='^?' declared_type='BOOL (*)(NSHashTable *, void *, void *)'>
<arg type='@' declared_type='NSHashTable*'/>
<arg const='true' type='^v' declared_type='void*'/>
<arg const='true' type='^v' declared_type='void*'/>
<retval type='B' declared_type='BOOL'/>
</field>
<field function_pointer='true' name='retain' type='^?' declared_type='void (*)(NSHashTable *, void *)'>
<arg type='@' declared_type='NSHashTable*'/>
<arg const='true' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</field>
<field function_pointer='true' name='release' type='^?' declared_type='void (*)(NSHashTable *, void *)'>
<arg type='@' declared_type='NSHashTable*'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</field>
<field function_pointer='true' name='describe' type='^?' declared_type='NSString *(*)(NSHashTable *, void *)'>
<arg type='@' declared_type='NSHashTable*'/>
<arg const='true' type='^v' declared_type='void*'/>
<retval type='@' declared_type='NSString*'/>
</field>
</struct>
<struct name='NSMapEnumerator' type64='{_NSMapEnumerator=&quot;_pi&quot;Q&quot;_si&quot;Q&quot;_bs&quot;^v}' type='{_NSMapEnumerator=&quot;_pi&quot;I&quot;_si&quot;I&quot;_bs&quot;^v}'>
<field name='_pi' type64='Q' type='I' declared_type='NSUInteger'/>
<field name='_si' type64='Q' type='I' declared_type='NSUInteger'/>
<field name='_bs' type='^v' declared_type='void*'/>
</struct>
<struct name='NSMapTableKeyCallBacks' type='{_NSMapTableKeyCallBacks=&quot;hash&quot;^?&quot;isEqual&quot;^?&quot;retain&quot;^?&quot;release&quot;^?&quot;describe&quot;^?&quot;notAKeyMarker&quot;^v}'>
<field function_pointer='true' name='hash' type='^?' declared_type='NSUInteger (*)(NSMapTable *, void *)'>
<arg type='@' declared_type='NSMapTable*'/>
<arg const='true' type='^v' declared_type='void*'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</field>
<field function_pointer='true' name='isEqual' type='^?' declared_type='BOOL (*)(NSMapTable *, void *, void *)'>
<arg type='@' declared_type='NSMapTable*'/>
<arg const='true' type='^v' declared_type='void*'/>
<arg const='true' type='^v' declared_type='void*'/>
<retval type='B' declared_type='BOOL'/>
</field>
<field function_pointer='true' name='retain' type='^?' declared_type='void (*)(NSMapTable *, void *)'>
<arg type='@' declared_type='NSMapTable*'/>
<arg const='true' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</field>
<field function_pointer='true' name='release' type='^?' declared_type='void (*)(NSMapTable *, void *)'>
<arg type='@' declared_type='NSMapTable*'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</field>
<field function_pointer='true' name='describe' type='^?' declared_type='NSString *(*)(NSMapTable *, void *)'>
<arg type='@' declared_type='NSMapTable*'/>
<arg const='true' type='^v' declared_type='void*'/>
<retval type='@' declared_type='NSString*'/>
</field>
<field const='true' name='notAKeyMarker' type='^v' declared_type='void*'/>
</struct>
<struct name='NSMapTableValueCallBacks' type='{_NSMapTableValueCallBacks=&quot;retain&quot;^?&quot;release&quot;^?&quot;describe&quot;^?}'>
<field function_pointer='true' name='retain' type='^?' declared_type='void (*)(NSMapTable *, void *)'>
<arg type='@' declared_type='NSMapTable*'/>
<arg const='true' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</field>
<field function_pointer='true' name='release' type='^?' declared_type='void (*)(NSMapTable *, void *)'>
<arg type='@' declared_type='NSMapTable*'/>
<arg type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</field>
<field function_pointer='true' name='describe' type='^?' declared_type='NSString *(*)(NSMapTable *, void *)'>
<arg type='@' declared_type='NSMapTable*'/>
<arg const='true' type='^v' declared_type='void*'/>
<retval type='@' declared_type='NSString*'/>
</field>
</struct>
<struct name='NSPoint' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' type='{_NSPoint=&quot;x&quot;f&quot;y&quot;f}'>
<field name='x' type64='d' type='f' declared_type='CGFloat'/>
<field name='y' type64='d' type='f' declared_type='CGFloat'/>
</struct>
<struct name='NSRange' type64='{_NSRange=&quot;location&quot;Q&quot;length&quot;Q}' type='{_NSRange=&quot;location&quot;I&quot;length&quot;I}'>
<field name='location' type64='Q' type='I' declared_type='NSUInteger'/>
<field name='length' type64='Q' type='I' declared_type='NSUInteger'/>
</struct>
<struct name='NSRect' type64='{CGRect=&quot;origin&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;size&quot;{CGSize=&quot;width&quot;d&quot;height&quot;d}}' type='{_NSRect=&quot;origin&quot;{_NSPoint=&quot;x&quot;f&quot;y&quot;f}&quot;size&quot;{_NSSize=&quot;width&quot;f&quot;height&quot;f}}'>
<field name='origin' declared_type64='CGPoint' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' type='{_NSPoint=&quot;x&quot;f&quot;y&quot;f}' declared_type='NSPoint'/>
<field name='size' declared_type64='CGSize' type64='{CGSize=&quot;width&quot;d&quot;height&quot;d}' type='{_NSSize=&quot;width&quot;f&quot;height&quot;f}' declared_type='NSSize'/>
</struct>
<struct name='NSSize' type64='{CGSize=&quot;width&quot;d&quot;height&quot;d}' type='{_NSSize=&quot;width&quot;f&quot;height&quot;f}'>
<field name='width' type64='d' type='f' declared_type='CGFloat'/>
<field name='height' type64='d' type='f' declared_type='CGFloat'/>
</struct>
<struct name='NSSwappedDouble' type='{_NSSwappedDouble=&quot;v&quot;Q}'>
<field name='v' type='Q' declared_type='unsigned long long'/>
</struct>
<struct name='NSSwappedFloat' type='{_NSSwappedFloat=&quot;v&quot;I}'>
<field name='v' type='I' declared_type='unsigned int'/>
</struct>
<opaque name='NSAppleEventManagerSuspensionID' type='^{__NSAppleEventManagerSuspension=}'/>
<opaque name='NSZone' type='^{_NSZone=}'/>
<constant const='true' name='NSAMPMDesignation' type='@' declared_type='NSString*'/>
<constant name='NSAppleEventManagerWillProcessFirstEventNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSAppleEventTimeOutDefault' type='d' declared_type='double'/>
<constant const='true' name='NSAppleEventTimeOutNone' type='d' declared_type='double'/>
<constant const='true' name='NSAppleScriptErrorAppName' type='@' declared_type='NSString*'/>
<constant const='true' name='NSAppleScriptErrorBriefMessage' type='@' declared_type='NSString*'/>
<constant const='true' name='NSAppleScriptErrorMessage' type='@' declared_type='NSString*'/>
<constant const='true' name='NSAppleScriptErrorNumber' type='@' declared_type='NSString*'/>
<constant const='true' name='NSAppleScriptErrorRange' type='@' declared_type='NSString*'/>
<constant const='true' name='NSArgumentDomain' type='@' declared_type='NSString*'/>
<constant const='true' name='NSAssertionHandlerKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSAverageKeyValueOperator' type='@' declared_type='NSString*'/>
<constant const='true' name='NSBuddhistCalendar' type='@' declared_type='NSString*'/>
<constant const='true' name='NSBundleDidLoadNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSCharacterConversionException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSChineseCalendar' type='@' declared_type='NSString*'/>
<constant name='NSClassDescriptionNeededForClassNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSCocoaErrorDomain' type='@' declared_type='NSString*'/>
<constant const='true' name='NSConnectionDidDieNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSConnectionDidInitializeNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSConnectionReplyMode' type='@' declared_type='NSString*'/>
<constant const='true' name='NSCountKeyValueOperator' type='@' declared_type='NSString*'/>
<constant const='true' name='NSCurrencySymbol' type='@' declared_type='NSString*'/>
<constant const='true' name='NSCurrentLocaleDidChangeNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSDateFormatString' type='@' declared_type='NSString*'/>
<constant const='true' name='NSDateTimeOrdering' type='@' declared_type='NSString*'/>
<constant name='NSDeallocateZombies' type='B' declared_type='BOOL'/>
<constant name='NSDebugEnabled' type='B' declared_type='BOOL'/>
<constant const='true' name='NSDecimalDigits' type='@' declared_type='NSString*'/>
<constant const='true' name='NSDecimalNumberDivideByZeroException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSDecimalNumberExactnessException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSDecimalNumberOverflowException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSDecimalNumberUnderflowException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSDecimalSeparator' type='@' declared_type='NSString*'/>
<constant const='true' name='NSDefaultRunLoopMode' type='@' declared_type='NSString*'/>
<constant const='true' name='NSDestinationInvalidException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSDidBecomeSingleThreadedNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSDistinctUnionOfArraysKeyValueOperator' type='@' declared_type='NSString*'/>
<constant const='true' name='NSDistinctUnionOfObjectsKeyValueOperator' type='@' declared_type='NSString*'/>
<constant const='true' name='NSDistinctUnionOfSetsKeyValueOperator' type='@' declared_type='NSString*'/>
<constant const='true' name='NSEarlierTimeDesignations' type='@' declared_type='NSString*'/>
<constant const='true' name='NSErrorFailingURLStringKey' type='@' declared_type='NSString*'/>
<constant name='NSFTPPropertyActiveTransferModeKey' type='@' declared_type='NSString*'/>
<constant name='NSFTPPropertyFTPProxy' type='@' declared_type='NSString*'/>
<constant name='NSFTPPropertyFileOffsetKey' type='@' declared_type='NSString*'/>
<constant name='NSFTPPropertyUserLoginKey' type='@' declared_type='NSString*'/>
<constant name='NSFTPPropertyUserPasswordKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFailedAuthenticationException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileAppendOnly' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileBusy' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileCreationDate' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileDeviceIdentifier' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileExtensionHidden' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileGroupOwnerAccountID' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileGroupOwnerAccountName' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileHFSCreatorCode' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileHFSTypeCode' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileHandleConnectionAcceptedNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileHandleDataAvailableNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileHandleNotificationDataItem' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileHandleNotificationFileHandleItem' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileHandleNotificationMonitorModes' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileHandleOperationException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileHandleReadCompletionNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileHandleReadToEndOfFileCompletionNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileImmutable' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileModificationDate' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileOwnerAccountID' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileOwnerAccountName' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFilePathErrorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFilePosixPermissions' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileReferenceCount' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileSize' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileSystemFileNumber' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileSystemFreeNodes' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileSystemFreeSize' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileSystemNodes' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileSystemNumber' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileSystemSize' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileType' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileTypeBlockSpecial' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileTypeCharacterSpecial' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileTypeDirectory' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileTypeRegular' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileTypeSocket' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileTypeSymbolicLink' type='@' declared_type='NSString*'/>
<constant const='true' name='NSFileTypeUnknown' type='@' declared_type='NSString*'/>
<constant name='NSFoundationVersionNumber' type='d' declared_type='double'/>
<constant const='true' name='NSGenericException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSGlobalDomain' type='@' declared_type='NSString*'/>
<constant const='true' name='NSGrammarCorrections' type='@' declared_type='NSString*'/>
<constant const='true' name='NSGrammarRange' type='@' declared_type='NSString*'/>
<constant const='true' name='NSGrammarUserDescription' type='@' declared_type='NSString*'/>
<constant const='true' name='NSGregorianCalendar' type='@' declared_type='NSString*'/>
<constant const='true' name='NSHTTPCookieComment' type='@' declared_type='NSString*'/>
<constant const='true' name='NSHTTPCookieCommentURL' type='@' declared_type='NSString*'/>
<constant const='true' name='NSHTTPCookieDiscard' type='@' declared_type='NSString*'/>
<constant const='true' name='NSHTTPCookieDomain' type='@' declared_type='NSString*'/>
<constant const='true' name='NSHTTPCookieExpires' type='@' declared_type='NSString*'/>
<constant const='true' name='NSHTTPCookieManagerAcceptPolicyChangedNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSHTTPCookieManagerCookiesChangedNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSHTTPCookieMaximumAge' type='@' declared_type='NSString*'/>
<constant const='true' name='NSHTTPCookieName' type='@' declared_type='NSString*'/>
<constant const='true' name='NSHTTPCookieOriginURL' type='@' declared_type='NSString*'/>
<constant const='true' name='NSHTTPCookiePath' type='@' declared_type='NSString*'/>
<constant const='true' name='NSHTTPCookiePort' type='@' declared_type='NSString*'/>
<constant const='true' name='NSHTTPCookieSecure' type='@' declared_type='NSString*'/>
<constant const='true' name='NSHTTPCookieValue' type='@' declared_type='NSString*'/>
<constant const='true' name='NSHTTPCookieVersion' type='@' declared_type='NSString*'/>
<constant name='NSHTTPPropertyErrorPageDataKey' type='@' declared_type='NSString*'/>
<constant name='NSHTTPPropertyHTTPProxy' type='@' declared_type='NSString*'/>
<constant name='NSHTTPPropertyRedirectionHeadersKey' type='@' declared_type='NSString*'/>
<constant name='NSHTTPPropertyServerHTTPVersionKey' type='@' declared_type='NSString*'/>
<constant name='NSHTTPPropertyStatusCodeKey' type='@' declared_type='NSString*'/>
<constant name='NSHTTPPropertyStatusReasonKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSHebrewCalendar' type='@' declared_type='NSString*'/>
<constant const='true' name='NSHelpAnchorErrorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSHourNameDesignations' type='@' declared_type='NSString*'/>
<constant const='true' name='NSISO8601Calendar' type='@' declared_type='NSString*'/>
<constant const='true' name='NSInconsistentArchiveException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSIndianCalendar' type='@' declared_type='NSString*'/>
<constant const='true' name='NSIntHashCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' declared_type='NSHashTableCallBacks'/>
<constant const='true' name='NSIntMapKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' declared_type='NSMapTableKeyCallBacks'/>
<constant const='true' name='NSIntMapValueCallBacks' type='{_NSMapTableValueCallBacks=^?^?^?}' declared_type='NSMapTableValueCallBacks'/>
<constant const='true' name='NSIntegerHashCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' declared_type='NSHashTableCallBacks'/>
<constant const='true' name='NSIntegerMapKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' declared_type='NSMapTableKeyCallBacks'/>
<constant const='true' name='NSIntegerMapValueCallBacks' type='{_NSMapTableValueCallBacks=^?^?^?}' declared_type='NSMapTableValueCallBacks'/>
<constant const='true' name='NSInternalInconsistencyException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSInternationalCurrencyString' type='@' declared_type='NSString*'/>
<constant const='true' name='NSInvalidArchiveOperationException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSInvalidArgumentException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSInvalidReceivePortException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSInvalidSendPortException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSInvalidUnarchiveOperationException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSInvocationOperationCancelledException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSInvocationOperationVoidResultException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSIsNilTransformerName' type='@' declared_type='NSString*'/>
<constant const='true' name='NSIsNotNilTransformerName' type='@' declared_type='NSString*'/>
<constant const='true' name='NSIslamicCalendar' type='@' declared_type='NSString*'/>
<constant const='true' name='NSIslamicCivilCalendar' type='@' declared_type='NSString*'/>
<constant const='true' name='NSJapaneseCalendar' type='@' declared_type='NSString*'/>
<constant name='NSKeepAllocationStatistics' type='B' declared_type='BOOL'/>
<constant const='true' name='NSKeyValueChangeIndexesKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSKeyValueChangeKindKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSKeyValueChangeNewKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSKeyValueChangeNotificationIsPriorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSKeyValueChangeOldKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSKeyedUnarchiveFromDataTransformerName' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLaterTimeDesignations' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagAdjective' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagAdverb' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagClassifier' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagCloseParenthesis' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagCloseQuote' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagConjunction' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagDash' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagDeterminer' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagIdiom' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagInterjection' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagNoun' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagNumber' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagOpenParenthesis' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagOpenQuote' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagOrganizationName' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagOther' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagOtherPunctuation' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagOtherWhitespace' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagOtherWord' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagParagraphBreak' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagParticle' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagPersonalName' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagPlaceName' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagPreposition' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagPronoun' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagPunctuation' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagSchemeLanguage' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagSchemeLemma' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagSchemeLexicalClass' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagSchemeNameType' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagSchemeNameTypeOrLexicalClass' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagSchemeScript' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagSchemeTokenType' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagSentenceTerminator' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagVerb' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagWhitespace' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagWord' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLinguisticTagWordJoiner' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLoadedClasses' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocalNotificationCenterType' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocaleAlternateQuotationBeginDelimiterKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocaleAlternateQuotationEndDelimiterKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocaleCalendar' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocaleCollationIdentifier' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocaleCollatorIdentifier' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocaleCountryCode' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocaleCurrencyCode' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocaleCurrencySymbol' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocaleDecimalSeparator' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocaleExemplarCharacterSet' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocaleGroupingSeparator' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocaleIdentifier' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocaleLanguageCode' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocaleMeasurementSystem' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocaleQuotationBeginDelimiterKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocaleQuotationEndDelimiterKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocaleScriptCode' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocaleUsesMetricSystem' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocaleVariantCode' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocalizedDescriptionKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocalizedFailureReasonErrorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocalizedRecoveryOptionsErrorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSLocalizedRecoverySuggestionErrorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMachErrorDomain' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMallocException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMaximumKeyValueOperator' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataItemDisplayNameKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataItemFSContentChangeDateKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataItemFSCreationDateKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataItemFSNameKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataItemFSSizeKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataItemIsUbiquitousKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataItemPathKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataItemURLKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataQueryDidFinishGatheringNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataQueryDidStartGatheringNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataQueryDidUpdateNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataQueryGatheringProgressNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataQueryLocalComputerScope' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataQueryNetworkScope' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataQueryResultContentRelevanceAttribute' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataQueryUbiquitousDataScope' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataQueryUbiquitousDocumentsScope' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataQueryUserHomeScope' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataUbiquitousItemHasUnresolvedConflictsKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataUbiquitousItemIsDownloadedKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataUbiquitousItemIsDownloadingKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataUbiquitousItemIsUploadedKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataUbiquitousItemIsUploadingKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataUbiquitousItemPercentDownloadedKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMetadataUbiquitousItemPercentUploadedKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMinimumKeyValueOperator' type='@' declared_type='NSString*'/>
<constant const='true' name='NSMonthNameArray' type='@' declared_type='NSString*'/>
<constant const='true' name='NSNegateBooleanTransformerName' type='@' declared_type='NSString*'/>
<constant const='true' name='NSNegativeCurrencyFormatString' type='@' declared_type='NSString*'/>
<constant const='true' name='NSNetServicesErrorCode' type='@' declared_type='NSString*'/>
<constant const='true' name='NSNetServicesErrorDomain' type='@' declared_type='NSString*'/>
<constant const='true' name='NSNextDayDesignations' type='@' declared_type='NSString*'/>
<constant const='true' name='NSNextNextDayDesignations' type='@' declared_type='NSString*'/>
<constant const='true' name='NSNonOwnedPointerHashCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' declared_type='NSHashTableCallBacks'/>
<constant const='true' name='NSNonOwnedPointerMapKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' declared_type='NSMapTableKeyCallBacks'/>
<constant const='true' name='NSNonOwnedPointerMapValueCallBacks' type='{_NSMapTableValueCallBacks=^?^?^?}' declared_type='NSMapTableValueCallBacks'/>
<constant const='true' name='NSNonOwnedPointerOrNullMapKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' declared_type='NSMapTableKeyCallBacks'/>
<constant const='true' name='NSNonRetainedObjectHashCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' declared_type='NSHashTableCallBacks'/>
<constant const='true' name='NSNonRetainedObjectMapKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' declared_type='NSMapTableKeyCallBacks'/>
<constant const='true' name='NSNonRetainedObjectMapValueCallBacks' type='{_NSMapTableValueCallBacks=^?^?^?}' declared_type='NSMapTableValueCallBacks'/>
<constant const='true' name='NSOSStatusErrorDomain' type='@' declared_type='NSString*'/>
<constant const='true' name='NSObjectHashCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' declared_type='NSHashTableCallBacks'/>
<constant const='true' name='NSObjectInaccessibleException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSObjectMapKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' declared_type='NSMapTableKeyCallBacks'/>
<constant const='true' name='NSObjectMapValueCallBacks' type='{_NSMapTableValueCallBacks=^?^?^?}' declared_type='NSMapTableValueCallBacks'/>
<constant const='true' name='NSObjectNotAvailableException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSOldStyleException' type='@' declared_type='NSString*'/>
<constant name='NSOperationNotSupportedForKeyException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSOwnedObjectIdentityHashCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' declared_type='NSHashTableCallBacks'/>
<constant const='true' name='NSOwnedPointerHashCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' declared_type='NSHashTableCallBacks'/>
<constant const='true' name='NSOwnedPointerMapKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' declared_type='NSMapTableKeyCallBacks'/>
<constant const='true' name='NSOwnedPointerMapValueCallBacks' type='{_NSMapTableValueCallBacks=^?^?^?}' declared_type='NSMapTableValueCallBacks'/>
<constant const='true' name='NSPOSIXErrorDomain' type='@' declared_type='NSString*'/>
<constant const='true' name='NSParseErrorException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSPersianCalendar' type='@' declared_type='NSString*'/>
<constant const='true' name='NSPointerToStructHashCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' declared_type='NSHashTableCallBacks'/>
<constant const='true' name='NSPortDidBecomeInvalidNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSPortReceiveException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSPortSendException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSPortTimeoutException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSPositiveCurrencyFormatString' type='@' declared_type='NSString*'/>
<constant const='true' name='NSPriorDayDesignations' type='@' declared_type='NSString*'/>
<constant const='true' name='NSRangeException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSRecoveryAttempterErrorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSRegistrationDomain' type='@' declared_type='NSString*'/>
<constant const='true' name='NSRepublicOfChinaCalendar' type='@' declared_type='NSString*'/>
<constant const='true' name='NSRunLoopCommonModes' type='@' declared_type='NSString*'/>
<constant const='true' name='NSShortDateFormatString' type='@' declared_type='NSString*'/>
<constant const='true' name='NSShortMonthNameArray' type='@' declared_type='NSString*'/>
<constant const='true' name='NSShortTimeDateFormatString' type='@' declared_type='NSString*'/>
<constant const='true' name='NSShortWeekDayNameArray' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamDataWrittenToMemoryStreamKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamFileCurrentOffsetKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamNetworkServiceType' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamNetworkServiceTypeBackground' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamNetworkServiceTypeVideo' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamNetworkServiceTypeVoIP' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamNetworkServiceTypeVoice' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamSOCKSErrorDomain' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamSOCKSProxyConfigurationKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamSOCKSProxyHostKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamSOCKSProxyPasswordKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamSOCKSProxyPortKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamSOCKSProxyUserKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamSOCKSProxyVersion4' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamSOCKSProxyVersion5' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamSOCKSProxyVersionKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamSocketSSLErrorDomain' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamSocketSecurityLevelKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamSocketSecurityLevelNegotiatedSSL' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamSocketSecurityLevelNone' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamSocketSecurityLevelSSLv2' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamSocketSecurityLevelSSLv3' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStreamSocketSecurityLevelTLSv1' type='@' declared_type='NSString*'/>
<constant const='true' name='NSStringEncodingErrorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSSumKeyValueOperator' type='@' declared_type='NSString*'/>
<constant const='true' name='NSSystemClockDidChangeNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSSystemTimeZoneDidChangeNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSTaskDidTerminateNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSTextCheckingAirlineKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSTextCheckingCityKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSTextCheckingCountryKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSTextCheckingFlightKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSTextCheckingJobTitleKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSTextCheckingNameKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSTextCheckingOrganizationKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSTextCheckingPhoneKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSTextCheckingStateKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSTextCheckingStreetKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSTextCheckingZIPKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSThisDayDesignations' type='@' declared_type='NSString*'/>
<constant const='true' name='NSThousandsSeparator' type='@' declared_type='NSString*'/>
<constant const='true' name='NSThreadWillExitNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSTimeDateFormatString' type='@' declared_type='NSString*'/>
<constant const='true' name='NSTimeFormatString' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLAttributeModificationDateKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLAuthenticationMethodClientCertificate' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLAuthenticationMethodDefault' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLAuthenticationMethodHTMLForm' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLAuthenticationMethodHTTPBasic' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLAuthenticationMethodHTTPDigest' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLAuthenticationMethodNTLM' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLAuthenticationMethodNegotiate' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLAuthenticationMethodServerTrust' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLContentAccessDateKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLContentModificationDateKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLCreationDateKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLCredentialStorageChangedNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLCustomIconKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLEffectiveIconKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLErrorDomain' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLErrorFailingURLErrorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLErrorFailingURLPeerTrustErrorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLErrorFailingURLStringErrorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLErrorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLFileAllocatedSizeKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLFileResourceIdentifierKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLFileResourceTypeBlockSpecial' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLFileResourceTypeCharacterSpecial' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLFileResourceTypeDirectory' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLFileResourceTypeKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLFileResourceTypeNamedPipe' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLFileResourceTypeRegular' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLFileResourceTypeSocket' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLFileResourceTypeSymbolicLink' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLFileResourceTypeUnknown' type='@' declared_type='NSString*'/>
<constant name='NSURLFileScheme' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLFileSecurityKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLFileSizeKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLHasHiddenExtensionKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLIsAliasFileKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLIsDirectoryKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLIsExcludedFromBackupKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLIsExecutableKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLIsHiddenKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLIsMountTriggerKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLIsPackageKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLIsReadableKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLIsRegularFileKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLIsSymbolicLinkKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLIsSystemImmutableKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLIsUbiquitousItemKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLIsUserImmutableKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLIsVolumeKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLIsWritableKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLKeysOfUnsetValuesKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLLabelColorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLLabelNumberKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLLinkCountKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLLocalizedLabelKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLLocalizedNameKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLLocalizedTypeDescriptionKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLNameKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLParentDirectoryURLKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLPathKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLPreferredIOBlockSizeKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLProtectionSpaceFTP' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLProtectionSpaceFTPProxy' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLProtectionSpaceHTTP' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLProtectionSpaceHTTPProxy' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLProtectionSpaceHTTPS' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLProtectionSpaceHTTPSProxy' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLProtectionSpaceSOCKSProxy' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLTotalFileAllocatedSizeKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLTotalFileSizeKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLTypeIdentifierKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLUbiquitousItemHasUnresolvedConflictsKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLUbiquitousItemIsDownloadedKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLUbiquitousItemIsDownloadingKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLUbiquitousItemIsUploadedKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLUbiquitousItemIsUploadingKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLUbiquitousItemPercentDownloadedKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLUbiquitousItemPercentUploadedKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeAvailableCapacityKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeCreationDateKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeIdentifierKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeIsAutomountedKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeIsBrowsableKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeIsEjectableKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeIsInternalKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeIsJournalingKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeIsLocalKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeIsReadOnlyKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeIsRemovableKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeLocalizedFormatDescriptionKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeLocalizedNameKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeMaximumFileSizeKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeNameKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeResourceCountKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeSupportsAdvisoryFileLockingKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeSupportsCasePreservedNamesKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeSupportsCaseSensitiveNamesKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeSupportsExtendedSecurityKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeSupportsHardLinksKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeSupportsJournalingKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeSupportsPersistentIDsKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeSupportsRenamingKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeSupportsRootDirectoryDatesKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeSupportsSparseFilesKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeSupportsSymbolicLinksKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeSupportsVolumeSizesKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeSupportsZeroRunsKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeTotalCapacityKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeURLForRemountingKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeURLKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSURLVolumeUUIDStringKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSUbiquitousKeyValueStoreChangeReasonKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSUbiquitousKeyValueStoreChangedKeysKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSUbiquitousKeyValueStoreDidChangeExternallyNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSUbiquityIdentityDidChangeNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSUnarchiveFromDataTransformerName' type='@' declared_type='NSString*'/>
<constant const='true' name='NSUndefinedKeyException' type='@' declared_type='NSString*'/>
<constant const='true' name='NSUnderlyingErrorKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSUndoManagerCheckpointNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSUndoManagerDidCloseUndoGroupNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSUndoManagerDidOpenUndoGroupNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSUndoManagerDidRedoChangeNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSUndoManagerDidUndoChangeNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSUndoManagerGroupIsDiscardableKey' type='@' declared_type='NSString*'/>
<constant const='true' name='NSUndoManagerWillCloseUndoGroupNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSUndoManagerWillRedoChangeNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSUndoManagerWillUndoChangeNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSUnionOfArraysKeyValueOperator' type='@' declared_type='NSString*'/>
<constant const='true' name='NSUnionOfObjectsKeyValueOperator' type='@' declared_type='NSString*'/>
<constant const='true' name='NSUnionOfSetsKeyValueOperator' type='@' declared_type='NSString*'/>
<constant const='true' name='NSUserDefaultsDidChangeNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSUserNotificationDefaultSoundName' type='@' declared_type='NSString*'/>
<constant const='true' name='NSWeekDayNameArray' type='@' declared_type='NSString*'/>
<constant const='true' name='NSWillBecomeMultiThreadedNotification' type='@' declared_type='NSString*'/>
<constant const='true' name='NSXMLParserErrorDomain' type='@' declared_type='NSString*'/>
<constant const='true' name='NSYearMonthWeekDesignations' type='@' declared_type='NSString*'/>
<constant const='true' name='NSZeroPoint' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
<constant const='true' name='NSZeroRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<constant const='true' name='NSZeroSize' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
<constant name='NSZombieEnabled' type='B' declared_type='BOOL'/>
<enum name='NSASCIIStringEncoding' value='1'/>
<enum name='NSAdminApplicationDirectory' value='4'/>
<enum name='NSAggregateExpressionType' value='14'/>
<enum name='NSAlignAllEdgesInward' value='15'/>
<enum name='NSAlignAllEdgesNearest' value='983040'/>
<enum name='NSAlignAllEdgesOutward' value='3840'/>
<enum name='NSAlignHeightInward' value='32'/>
<enum name='NSAlignHeightNearest' value='2097152'/>
<enum name='NSAlignHeightOutward' value='8192'/>
<enum name='NSAlignMaxXInward' value='4'/>
<enum name='NSAlignMaxXNearest' value='262144'/>
<enum name='NSAlignMaxXOutward' value='1024'/>
<enum name='NSAlignMaxYInward' value='8'/>
<enum name='NSAlignMaxYNearest' value='524288'/>
<enum name='NSAlignMaxYOutward' value='2048'/>
<enum name='NSAlignMinXInward' value='1'/>
<enum name='NSAlignMinXNearest' value='65536'/>
<enum name='NSAlignMinXOutward' value='256'/>
<enum name='NSAlignMinYInward' value='2'/>
<enum name='NSAlignMinYNearest' value='131072'/>
<enum name='NSAlignMinYOutward' value='512'/>
<enum name='NSAlignRectFlipped' value='9223372036854775808'/>
<enum name='NSAlignWidthInward' value='16'/>
<enum name='NSAlignWidthNearest' value='1048576'/>
<enum name='NSAlignWidthOutward' value='4096'/>
<enum name='NSAllApplicationsDirectory' value='100'/>
<enum name='NSAllDomainsMask' value='65535'/>
<enum name='NSAllLibrariesDirectory' value='101'/>
<enum name='NSAllPredicateModifier' value='1'/>
<enum name='NSAnchoredSearch' value='8'/>
<enum name='NSAndPredicateType' value='1'/>
<enum name='NSAnyPredicateModifier' value='2'/>
<enum name='NSApplicationDirectory' value='1'/>
<enum name='NSApplicationScriptsDirectory' value='23'/>
<enum name='NSApplicationSupportDirectory' value='14'/>
<enum name='NSArgumentEvaluationScriptError' value='3'/>
<enum name='NSArgumentsWrongScriptError' value='6'/>
<enum name='NSAtomicWrite' value='1'/>
<enum name='NSAttributedStringEnumerationLongestEffectiveRangeNotRequired' value='1048576'/>
<enum name='NSAttributedStringEnumerationReverse' value='2'/>
<enum name='NSAutosavedInformationDirectory' value='11'/>
<enum name='NSBackwardsSearch' value='4'/>
<enum name='NSBeginsWithComparison' value='5'/>
<enum name='NSBeginsWithPredicateOperatorType' value='8'/>
<enum name='NSBetweenPredicateOperatorType' value='100'/>
<enum name='NSBinarySearchingFirstEqual' value='256'/>
<enum name='NSBinarySearchingInsertionIndex' value='1024'/>
<enum name='NSBinarySearchingLastEqual' value='512'/>
<enum name='NSBlockExpressionType' value='19'/>
<enum name='NSBundleExecutableArchitectureI386' value='7'/>
<enum name='NSBundleExecutableArchitecturePPC' value='18'/>
<enum name='NSBundleExecutableArchitecturePPC64' value='16777234'/>
<enum name='NSBundleExecutableArchitectureX86_64' value='16777223'/>
<enum name='NSByteCountFormatterCountStyleBinary' value='3'/>
<enum name='NSByteCountFormatterCountStyleDecimal' value='2'/>
<enum name='NSByteCountFormatterCountStyleFile' value='0'/>
<enum name='NSByteCountFormatterCountStyleMemory' value='1'/>
<enum name='NSByteCountFormatterUseAll' value='65535'/>
<enum name='NSByteCountFormatterUseBytes' value='1'/>
<enum name='NSByteCountFormatterUseDefault' value='0'/>
<enum name='NSByteCountFormatterUseEB' value='64'/>
<enum name='NSByteCountFormatterUseGB' value='8'/>
<enum name='NSByteCountFormatterUseKB' value='2'/>
<enum name='NSByteCountFormatterUseMB' value='4'/>
<enum name='NSByteCountFormatterUsePB' value='32'/>
<enum name='NSByteCountFormatterUseTB' value='16'/>
<enum name='NSByteCountFormatterUseYBOrHigher' value='65280'/>
<enum name='NSByteCountFormatterUseZB' value='128'/>
<enum name='NSCachesDirectory' value='13'/>
<enum name='NSCalculationDivideByZero' value='4'/>
<enum name='NSCalculationLossOfPrecision' value='1'/>
<enum name='NSCalculationNoError' value='0'/>
<enum name='NSCalculationOverflow' value='3'/>
<enum name='NSCalculationUnderflow' value='2'/>
<enum name='NSCalendarCalendarUnit' value='1048576'/>
<enum name='NSCannotCreateScriptCommandError' value='10'/>
<enum name='NSCaseInsensitivePredicateOption' value='1'/>
<enum name='NSCaseInsensitiveSearch' value='1'/>
<enum name='NSCollectorDisabledOption' value='2'/>
<enum name='NSConstantValueExpressionType' value='0'/>
<enum name='NSContainerSpecifierError' value='2'/>
<enum name='NSContainsComparison' value='7'/>
<enum name='NSContainsPredicateOperatorType' value='99'/>
<enum name='NSCoreServiceDirectory' value='10'/>
<enum name='NSCustomSelectorPredicateOperatorType' value='11'/>
<enum name='NSDataReadingMapped' value='1'/>
<enum name='NSDataReadingMappedAlways' value='8'/>
<enum name='NSDataReadingMappedIfSafe' value='1'/>
<enum name='NSDataReadingUncached' value='2'/>
<enum name='NSDataSearchAnchored' value='2'/>
<enum name='NSDataSearchBackwards' value='1'/>
<enum name='NSDataWritingAtomic' value='1'/>
<enum name='NSDataWritingFileProtectionComplete' value='536870912'/>
<enum name='NSDataWritingFileProtectionCompleteUnlessOpen' value='805306368'/>
<enum name='NSDataWritingFileProtectionCompleteUntilFirstUserAuthentication' value='1073741824'/>
<enum name='NSDataWritingFileProtectionMask' value='4026531840'/>
<enum name='NSDataWritingFileProtectionNone' value='268435456'/>
<enum name='NSDataWritingWithoutOverwriting' value='2'/>
<enum name='NSDateFormatterBehavior10_0' value='1000'/>
<enum name='NSDateFormatterBehavior10_4' value='1040'/>
<enum name='NSDateFormatterBehaviorDefault' value='0'/>
<enum name='NSDateFormatterFullStyle' value='4'/>
<enum name='NSDateFormatterLongStyle' value='3'/>
<enum name='NSDateFormatterMediumStyle' value='2'/>
<enum name='NSDateFormatterNoStyle' value='0'/>
<enum name='NSDateFormatterShortStyle' value='1'/>
<enum name='NSDayCalendarUnit' value='16'/>
<enum name='NSDecimalMaxSize' value='8'/>
<enum name='NSDecimalNoScale' value='32767'/>
<enum name='NSDemoApplicationDirectory' value='2'/>
<enum name='NSDesktopDirectory' value='12'/>
<enum name='NSDeveloperApplicationDirectory' value='3'/>
<enum name='NSDeveloperDirectory' value='6'/>
<enum name='NSDiacriticInsensitivePredicateOption' value='2'/>
<enum name='NSDiacriticInsensitiveSearch' value='128'/>
<enum name='NSDirectPredicateModifier' value='0'/>
<enum name='NSDirectoryEnumerationSkipsHiddenFiles' value='4'/>
<enum name='NSDirectoryEnumerationSkipsPackageDescendants' value='2'/>
<enum name='NSDirectoryEnumerationSkipsSubdirectoryDescendants' value='1'/>
<enum name='NSDocumentDirectory' value='9'/>
<enum name='NSDocumentationDirectory' value='8'/>
<enum name='NSDownloadsDirectory' value='15'/>
<enum name='NSEndsWithComparison' value='6'/>
<enum name='NSEndsWithPredicateOperatorType' value='9'/>
<enum name='NSEnumerationConcurrent' value='1'/>
<enum name='NSEnumerationReverse' value='2'/>
<enum name='NSEqualToComparison' value='0'/>
<enum name='NSEqualToPredicateOperatorType' value='4'/>
<enum name='NSEraCalendarUnit' value='2'/>
<enum name='NSEvaluatedObjectExpressionType' value='1'/>
<enum name='NSEverySubelement' value='1'/>
<enum name='NSExecutableArchitectureMismatchError' value='3585'/>
<enum name='NSExecutableErrorMaximum' value='3839'/>
<enum name='NSExecutableErrorMinimum' value='3584'/>
<enum name='NSExecutableLinkError' value='3588'/>
<enum name='NSExecutableLoadError' value='3587'/>
<enum name='NSExecutableNotLoadableError' value='3584'/>
<enum name='NSExecutableRuntimeMismatchError' value='3586'/>
<enum name='NSFeatureUnsupportedError' value='3328'/>
<enum name='NSFileCoordinatorReadingResolvesSymbolicLink' value='2'/>
<enum name='NSFileCoordinatorReadingWithoutChanges' value='1'/>
<enum name='NSFileCoordinatorWritingForDeleting' value='1'/>
<enum name='NSFileCoordinatorWritingForMerging' value='4'/>
<enum name='NSFileCoordinatorWritingForMoving' value='2'/>
<enum name='NSFileCoordinatorWritingForReplacing' value='8'/>
<enum name='NSFileErrorMaximum' value='1023'/>
<enum name='NSFileErrorMinimum' value='0'/>
<enum name='NSFileLockingError' value='255'/>
<enum name='NSFileManagerItemReplacementUsingNewMetadataOnly' value='1'/>
<enum name='NSFileManagerItemReplacementWithoutDeletingBackupItem' value='2'/>
<enum name='NSFileNoSuchFileError' value='4'/>
<enum name='NSFileReadCorruptFileError' value='259'/>
<enum name='NSFileReadInapplicableStringEncodingError' value='261'/>
<enum name='NSFileReadInvalidFileNameError' value='258'/>
<enum name='NSFileReadNoPermissionError' value='257'/>
<enum name='NSFileReadNoSuchFileError' value='260'/>
<enum name='NSFileReadTooLargeError' value='263'/>
<enum name='NSFileReadUnknownError' value='256'/>
<enum name='NSFileReadUnknownStringEncodingError' value='264'/>
<enum name='NSFileReadUnsupportedSchemeError' value='262'/>
<enum name='NSFileVersionAddingByMoving' value='1'/>
<enum name='NSFileVersionReplacingByMoving' value='1'/>
<enum name='NSFileWrapperReadingImmediate' value='1'/>
<enum name='NSFileWrapperReadingWithoutMapping' value='2'/>
<enum name='NSFileWrapperWritingAtomic' value='1'/>
<enum name='NSFileWrapperWritingWithNameUpdating' value='2'/>
<enum name='NSFileWriteFileExistsError' value='516'/>
<enum name='NSFileWriteInapplicableStringEncodingError' value='517'/>
<enum name='NSFileWriteInvalidFileNameError' value='514'/>
<enum name='NSFileWriteNoPermissionError' value='513'/>
<enum name='NSFileWriteOutOfSpaceError' value='640'/>
<enum name='NSFileWriteUnknownError' value='512'/>
<enum name='NSFileWriteUnsupportedSchemeError' value='518'/>
<enum name='NSFileWriteVolumeReadOnlyError' value='642'/>
<enum name='NSForcedOrderingSearch' value='512'/>
<enum name='NSFormattingError' value='2048'/>
<enum name='NSFormattingErrorMaximum' value='2559'/>
<enum name='NSFormattingErrorMinimum' value='2048'/>
<enum name='NSFoundationVersionNumber10_0' value='397.40'/>
<enum name='NSFoundationVersionNumber10_1' value='425.00'/>
<enum name='NSFoundationVersionNumber10_1_1' value='425.00'/>
<enum name='NSFoundationVersionNumber10_1_2' value='425.00'/>
<enum name='NSFoundationVersionNumber10_1_3' value='425.00'/>
<enum name='NSFoundationVersionNumber10_1_4' value='425.00'/>
<enum name='NSFoundationVersionNumber10_2' value='462.00'/>
<enum name='NSFoundationVersionNumber10_2_1' value='462.00'/>
<enum name='NSFoundationVersionNumber10_2_2' value='462.00'/>
<enum name='NSFoundationVersionNumber10_2_3' value='462.00'/>
<enum name='NSFoundationVersionNumber10_2_4' value='462.00'/>
<enum name='NSFoundationVersionNumber10_2_5' value='462.00'/>
<enum name='NSFoundationVersionNumber10_2_6' value='462.00'/>
<enum name='NSFoundationVersionNumber10_2_7' value='462.70'/>
<enum name='NSFoundationVersionNumber10_2_8' value='462.70'/>
<enum name='NSFoundationVersionNumber10_3' value='500.00'/>
<enum name='NSFoundationVersionNumber10_3_1' value='500.00'/>
<enum name='NSFoundationVersionNumber10_3_2' value='500.30'/>
<enum name='NSFoundationVersionNumber10_3_3' value='500.54'/>
<enum name='NSFoundationVersionNumber10_3_4' value='500.56'/>
<enum name='NSFoundationVersionNumber10_3_5' value='500.56'/>
<enum name='NSFoundationVersionNumber10_3_6' value='500.56'/>
<enum name='NSFoundationVersionNumber10_3_7' value='500.56'/>
<enum name='NSFoundationVersionNumber10_3_8' value='500.56'/>
<enum name='NSFoundationVersionNumber10_3_9' value='500.58'/>
<enum name='NSFoundationVersionNumber10_4' value='567.00'/>
<enum name='NSFoundationVersionNumber10_4_1' value='567.00'/>
<enum name='NSFoundationVersionNumber10_4_10' value='567.29'/>
<enum name='NSFoundationVersionNumber10_4_11' value='567.36'/>
<enum name='NSFoundationVersionNumber10_4_2' value='567.12'/>
<enum name='NSFoundationVersionNumber10_4_3' value='567.21'/>
<enum name='NSFoundationVersionNumber10_4_4_Intel' value='567.23'/>
<enum name='NSFoundationVersionNumber10_4_4_PowerPC' value='567.21'/>
<enum name='NSFoundationVersionNumber10_4_5' value='567.25'/>
<enum name='NSFoundationVersionNumber10_4_6' value='567.26'/>
<enum name='NSFoundationVersionNumber10_4_7' value='567.27'/>
<enum name='NSFoundationVersionNumber10_4_8' value='567.28'/>
<enum name='NSFoundationVersionNumber10_4_9' value='567.29'/>
<enum name='NSFoundationVersionNumber10_5' value='677.00'/>
<enum name='NSFoundationVersionNumber10_5_1' value='677.10'/>
<enum name='NSFoundationVersionNumber10_5_2' value='677.15'/>
<enum name='NSFoundationVersionNumber10_5_3' value='677.19'/>
<enum name='NSFoundationVersionNumber10_5_4' value='677.19'/>
<enum name='NSFoundationVersionNumber10_5_5' value='677.21'/>
<enum name='NSFoundationVersionNumber10_5_6' value='677.22'/>
<enum name='NSFoundationVersionNumber10_5_7' value='677.24'/>
<enum name='NSFoundationVersionNumber10_5_8' value='677.26'/>
<enum name='NSFoundationVersionNumber10_6' value='751.00'/>
<enum name='NSFoundationVersionNumber10_6_1' value='751.00'/>
<enum name='NSFoundationVersionNumber10_6_2' value='751.14'/>
<enum name='NSFoundationVersionNumber10_6_3' value='751.21'/>
<enum name='NSFoundationVersionNumber10_6_4' value='751.29'/>
<enum name='NSFoundationVersionNumber10_6_5' value='751.42'/>
<enum name='NSFoundationVersionNumber10_6_6' value='751.53'/>
<enum name='NSFoundationVersionNumber10_6_7' value='751.53'/>
<enum name='NSFoundationVersionNumber10_6_8' value='751.62'/>
<enum name='NSFoundationVersionNumber10_7' value='833.10'/>
<enum name='NSFoundationVersionNumber10_7_1' value='833.10'/>
<enum name='NSFoundationVersionNumber10_7_2' value='833.20'/>
<enum name='NSFoundationVersionNumber10_7_3' value='833.24'/>
<enum name='NSFoundationVersionNumber10_7_4' value='833.25'/>
<enum name='NSFoundationVersionWithFileManagerResourceForkSupport' value='412'/>
<enum name='NSFunctionExpressionType' value='4'/>
<enum name='NSGEOMETRY_TYPES_SAME_AS_CGGEOMETRY_TYPES' value64='1'/>
<enum name='NSGreaterThanComparison' value='4'/>
<enum name='NSGreaterThanOrEqualToComparison' value='3'/>
<enum name='NSGreaterThanOrEqualToPredicateOperatorType' value='3'/>
<enum name='NSGreaterThanPredicateOperatorType' value='2'/>
<enum name='NSHPUXOperatingSystem' value='4'/>
<enum name='NSHTTPCookieAcceptPolicyAlways' value='0'/>
<enum name='NSHTTPCookieAcceptPolicyNever' value='1'/>
<enum name='NSHTTPCookieAcceptPolicyOnlyFromMainDocumentDomain' value='2'/>
<enum name='NSHashTableCopyIn' value='65536'/>
<enum name='NSHashTableObjectPointerPersonality' value='512'/>
<enum name='NSHashTableStrongMemory' value='0'/>
<enum name='NSHashTableWeakMemory' value='5'/>
<enum name='NSHashTableZeroingWeakMemory' value='1'/>
<enum name='NSHourCalendarUnit' value='32'/>
<enum name='NSINTEGER_DEFINED' value='1'/>
<enum name='NSISO2022JPStringEncoding' value='21'/>
<enum name='NSISOLatin1StringEncoding' value='5'/>
<enum name='NSISOLatin2StringEncoding' value='9'/>
<enum name='NSInPredicateOperatorType' value='10'/>
<enum name='NSIndexSubelement' value='0'/>
<enum name='NSInputMethodsDirectory' value='16'/>
<enum name='NSIntegerMax' value64='9223372036854775807' value='2147483647'/>
<enum name='NSIntegerMin' value64='-9223372036854775808' value='-2147483648'/>
<enum name='NSInternalScriptError' value='8'/>
<enum name='NSInternalSpecifierError' value='5'/>
<enum name='NSIntersectSetExpressionType' value='6'/>
<enum name='NSInvalidIndexSpecifierError' value='4'/>
<enum name='NSItemReplacementDirectory' value='99'/>
<enum name='NSJSONReadingAllowFragments' value='4'/>
<enum name='NSJSONReadingMutableContainers' value='1'/>
<enum name='NSJSONReadingMutableLeaves' value='2'/>
<enum name='NSJSONWritingPrettyPrinted' value='1'/>
<enum name='NSJapaneseEUCStringEncoding' value='3'/>
<enum name='NSKeyPathExpressionType' value='3'/>
<enum name='NSKeySpecifierEvaluationScriptError' value='2'/>
<enum name='NSKeyValueChangeInsertion' value='2'/>
<enum name='NSKeyValueChangeRemoval' value='3'/>
<enum name='NSKeyValueChangeReplacement' value='4'/>
<enum name='NSKeyValueChangeSetting' value='1'/>
<enum name='NSKeyValueIntersectSetMutation' value='3'/>
<enum name='NSKeyValueMinusSetMutation' value='2'/>
<enum name='NSKeyValueObservingOptionInitial' value='4'/>
<enum name='NSKeyValueObservingOptionNew' value='1'/>
<enum name='NSKeyValueObservingOptionOld' value='2'/>
<enum name='NSKeyValueObservingOptionPrior' value='8'/>
<enum name='NSKeyValueSetSetMutation' value='4'/>
<enum name='NSKeyValueUnionSetMutation' value='1'/>
<enum name='NSKeyValueValidationError' value='1024'/>
<enum name='NSLessThanComparison' value='2'/>
<enum name='NSLessThanOrEqualToComparison' value='1'/>
<enum name='NSLessThanOrEqualToPredicateOperatorType' value='1'/>
<enum name='NSLessThanPredicateOperatorType' value='0'/>
<enum name='NSLibraryDirectory' value='5'/>
<enum name='NSLikePredicateOperatorType' value='7'/>
<enum name='NSLinguisticTaggerJoinNames' value='16'/>
<enum name='NSLinguisticTaggerOmitOther' value='8'/>
<enum name='NSLinguisticTaggerOmitPunctuation' value='2'/>
<enum name='NSLinguisticTaggerOmitWhitespace' value='4'/>
<enum name='NSLinguisticTaggerOmitWords' value='1'/>
<enum name='NSLiteralSearch' value='2'/>
<enum name='NSLocalDomainMask' value='2'/>
<enum name='NSLocaleLanguageDirectionBottomToTop' value='4'/>
<enum name='NSLocaleLanguageDirectionLeftToRight' value='1'/>
<enum name='NSLocaleLanguageDirectionRightToLeft' value='2'/>
<enum name='NSLocaleLanguageDirectionTopToBottom' value='3'/>
<enum name='NSLocaleLanguageDirectionUnknown' value='0'/>
<enum name='NSMACHOperatingSystem' value='5'/>
<enum name='NSMacOSRomanStringEncoding' value='30'/>
<enum name='NSMachPortDeallocateNone' value='0'/>
<enum name='NSMachPortDeallocateReceiveRight' value='2'/>
<enum name='NSMachPortDeallocateSendRight' value='1'/>
<enum name='NSMapTableCopyIn' value='65536'/>
<enum name='NSMapTableObjectPointerPersonality' value='512'/>
<enum name='NSMapTableStrongMemory' value='0'/>
<enum name='NSMapTableWeakMemory' value='5'/>
<enum name='NSMapTableZeroingWeakMemory' value='1'/>
<enum name='NSMappedRead' value='1'/>
<enum name='NSMatchesPredicateOperatorType' value='6'/>
<enum name='NSMatchingAnchored' value='4'/>
<enum name='NSMatchingCompleted' value='2'/>
<enum name='NSMatchingHitEnd' value='4'/>
<enum name='NSMatchingInternalError' value='16'/>
<enum name='NSMatchingProgress' value='1'/>
<enum name='NSMatchingReportCompletion' value='2'/>
<enum name='NSMatchingReportProgress' value='1'/>
<enum name='NSMatchingRequiredEnd' value='8'/>
<enum name='NSMatchingWithTransparentBounds' value='8'/>
<enum name='NSMatchingWithoutAnchoringBounds' value='16'/>
<enum name='NSMaxXEdge' value64='2'/>
<enum name='NSMaxYEdge' value64='3'/>
<enum name='NSMaximumStringLength' value='2147483646'/>
<enum name='NSMiddleSubelement' value='2'/>
<enum name='NSMinXEdge' value64='0'/>
<enum name='NSMinYEdge' value64='1'/>
<enum name='NSMinusSetExpressionType' value='7'/>
<enum name='NSMinuteCalendarUnit' value='64'/>
<enum name='NSMonthCalendarUnit' value='8'/>
<enum name='NSMoviesDirectory' value='17'/>
<enum name='NSMusicDirectory' value='18'/>
<enum name='NSNEXTSTEPStringEncoding' value='2'/>
<enum name='NSNetServiceNoAutoRename' value='1'/>
<enum name='NSNetServicesActivityInProgress' value='-72003'/>
<enum name='NSNetServicesBadArgumentError' value='-72004'/>
<enum name='NSNetServicesCancelledError' value='-72005'/>
<enum name='NSNetServicesCollisionError' value='-72001'/>
<enum name='NSNetServicesInvalidError' value='-72006'/>
<enum name='NSNetServicesNotFoundError' value='-72002'/>
<enum name='NSNetServicesTimeoutError' value='-72007'/>
<enum name='NSNetServicesUnknownError' value='-72000'/>
<enum name='NSNetworkDomainMask' value='4'/>
<enum name='NSNoScriptError' value='0'/>
<enum name='NSNoSpecifierError' value='0'/>
<enum name='NSNoSubelement' value='4'/>
<enum name='NSNoTopLevelContainersSpecifierError' value='1'/>
<enum name='NSNonLossyASCIIStringEncoding' value='7'/>
<enum name='NSNormalizedPredicateOption' value='4'/>
<enum name='NSNotEqualToPredicateOperatorType' value='5'/>
<enum name='NSNotFound' value64='9223372036854775807' value='2147483647'/>
<enum name='NSNotPredicateType' value='0'/>
<enum name='NSNotificationCoalescingOnName' value='1'/>
<enum name='NSNotificationCoalescingOnSender' value='2'/>
<enum name='NSNotificationDeliverImmediately' value='1'/>
<enum name='NSNotificationNoCoalescing' value='0'/>
<enum name='NSNotificationPostToAllSessions' value='2'/>
<enum name='NSNotificationSuspensionBehaviorCoalesce' value='2'/>
<enum name='NSNotificationSuspensionBehaviorDeliverImmediately' value='4'/>
<enum name='NSNotificationSuspensionBehaviorDrop' value='1'/>
<enum name='NSNotificationSuspensionBehaviorHold' value='3'/>
<enum name='NSNumberFormatterBehavior10_0' value='1000'/>
<enum name='NSNumberFormatterBehavior10_4' value='1040'/>
<enum name='NSNumberFormatterBehaviorDefault' value='0'/>
<enum name='NSNumberFormatterCurrencyStyle' value='2'/>
<enum name='NSNumberFormatterDecimalStyle' value='1'/>
<enum name='NSNumberFormatterNoStyle' value='0'/>
<enum name='NSNumberFormatterPadAfterPrefix' value='1'/>
<enum name='NSNumberFormatterPadAfterSuffix' value='3'/>
<enum name='NSNumberFormatterPadBeforePrefix' value='0'/>
<enum name='NSNumberFormatterPadBeforeSuffix' value='2'/>
<enum name='NSNumberFormatterPercentStyle' value='3'/>
<enum name='NSNumberFormatterRoundCeiling' value='0'/>
<enum name='NSNumberFormatterRoundDown' value='2'/>
<enum name='NSNumberFormatterRoundFloor' value='1'/>
<enum name='NSNumberFormatterRoundHalfDown' value='5'/>
<enum name='NSNumberFormatterRoundHalfEven' value='4'/>
<enum name='NSNumberFormatterRoundHalfUp' value='6'/>
<enum name='NSNumberFormatterRoundUp' value='3'/>
<enum name='NSNumberFormatterScientificStyle' value='4'/>
<enum name='NSNumberFormatterSpellOutStyle' value='5'/>
<enum name='NSNumericSearch' value='64'/>
<enum name='NSOSF1OperatingSystem' value='7'/>
<enum name='NSObjectAutoreleasedEvent' value='3'/>
<enum name='NSObjectExtraRefDecrementedEvent' value='5'/>
<enum name='NSObjectExtraRefIncrementedEvent' value='4'/>
<enum name='NSObjectInternalRefDecrementedEvent' value='7'/>
<enum name='NSObjectInternalRefIncrementedEvent' value='6'/>
<enum name='NSOpenStepUnicodeReservedBase' value='62464'/>
<enum name='NSOperationNotSupportedForKeyScriptError' value='9'/>
<enum name='NSOperationNotSupportedForKeySpecifierError' value='6'/>
<enum name='NSOperationQueueDefaultMaxConcurrentOperationCount' value='-1'/>
<enum name='NSOperationQueuePriorityHigh' value='4'/>
<enum name='NSOperationQueuePriorityLow' value='-4'/>
<enum name='NSOperationQueuePriorityNormal' value='0'/>
<enum name='NSOperationQueuePriorityVeryHigh' value='8'/>
<enum name='NSOperationQueuePriorityVeryLow' value='-8'/>
<enum name='NSOrPredicateType' value='2'/>
<enum name='NSOrderedAscending' value='-1'/>
<enum name='NSOrderedDescending' value='1'/>
<enum name='NSOrderedSame' value='0'/>
<enum name='NSPicturesDirectory' value='19'/>
<enum name='NSPointerFunctionsCStringPersonality' value='768'/>
<enum name='NSPointerFunctionsCopyIn' value='65536'/>
<enum name='NSPointerFunctionsIntegerPersonality' value='1280'/>
<enum name='NSPointerFunctionsMachVirtualMemory' value='4'/>
<enum name='NSPointerFunctionsMallocMemory' value='3'/>
<enum name='NSPointerFunctionsObjectPersonality' value='0'/>
<enum name='NSPointerFunctionsObjectPointerPersonality' value='512'/>
<enum name='NSPointerFunctionsOpaqueMemory' value='2'/>
<enum name='NSPointerFunctionsOpaquePersonality' value='256'/>
<enum name='NSPointerFunctionsStrongMemory' value='0'/>
<enum name='NSPointerFunctionsStructPersonality' value='1024'/>
<enum name='NSPointerFunctionsWeakMemory' value='5'/>
<enum name='NSPointerFunctionsZeroingWeakMemory' value='1'/>
<enum name='NSPositionAfter' value='0'/>
<enum name='NSPositionBefore' value='1'/>
<enum name='NSPositionBeginning' value='2'/>
<enum name='NSPositionEnd' value='3'/>
<enum name='NSPositionReplace' value='4'/>
<enum name='NSPostASAP' value='2'/>
<enum name='NSPostNow' value='3'/>
<enum name='NSPostWhenIdle' value='1'/>
<enum name='NSPreferencePanesDirectory' value='22'/>
<enum name='NSPrinterDescriptionDirectory' value='20'/>
<enum name='NSPropertyListBinaryFormat_v1_0' value='200'/>
<enum name='NSPropertyListErrorMaximum' value='4095'/>
<enum name='NSPropertyListErrorMinimum' value='3840'/>
<enum name='NSPropertyListImmutable' value='0'/>
<enum name='NSPropertyListMutableContainers' value='1'/>
<enum name='NSPropertyListMutableContainersAndLeaves' value='2'/>
<enum name='NSPropertyListOpenStepFormat' value='1'/>
<enum name='NSPropertyListReadCorruptError' value='3840'/>
<enum name='NSPropertyListReadStreamError' value='3842'/>
<enum name='NSPropertyListReadUnknownVersionError' value='3841'/>
<enum name='NSPropertyListWriteStreamError' value='3851'/>
<enum name='NSPropertyListXMLFormat_v1_0' value='100'/>
<enum name='NSProprietaryStringEncoding' value='65536'/>
<enum name='NSQuarterCalendarUnit' value='2048'/>
<enum name='NSRandomSubelement' value='3'/>
<enum name='NSReceiverEvaluationScriptError' value='1'/>
<enum name='NSReceiversCantHandleCommandScriptError' value='4'/>
<enum name='NSRegularExpressionAllowCommentsAndWhitespace' value='2'/>
<enum name='NSRegularExpressionAnchorsMatchLines' value='16'/>
<enum name='NSRegularExpressionCaseInsensitive' value='1'/>
<enum name='NSRegularExpressionDotMatchesLineSeparators' value='8'/>
<enum name='NSRegularExpressionIgnoreMetacharacters' value='4'/>
<enum name='NSRegularExpressionSearch' value='1024'/>
<enum name='NSRegularExpressionUseUnicodeWordBoundaries' value='64'/>
<enum name='NSRegularExpressionUseUnixLineSeparators' value='32'/>
<enum name='NSRelativeAfter' value='0'/>
<enum name='NSRelativeBefore' value='1'/>
<enum name='NSRequiredArgumentsMissingScriptError' value='5'/>
<enum name='NSRoundBankers' value='3'/>
<enum name='NSRoundDown' value='1'/>
<enum name='NSRoundPlain' value='0'/>
<enum name='NSRoundUp' value='2'/>
<enum name='NSSaveOptionsAsk' value='2'/>
<enum name='NSSaveOptionsNo' value='1'/>
<enum name='NSSaveOptionsYes' value='0'/>
<enum name='NSScannedOption' value='1'/>
<enum name='NSSecondCalendarUnit' value='128'/>
<enum name='NSSharedPublicDirectory' value='21'/>
<enum name='NSShiftJISStringEncoding' value='8'/>
<enum name='NSSolarisOperatingSystem' value='3'/>
<enum name='NSSortConcurrent' value='1'/>
<enum name='NSSortStable' value='16'/>
<enum name='NSStreamEventEndEncountered' value='16'/>
<enum name='NSStreamEventErrorOccurred' value='8'/>
<enum name='NSStreamEventHasBytesAvailable' value='2'/>
<enum name='NSStreamEventHasSpaceAvailable' value='4'/>
<enum name='NSStreamEventNone' value='0'/>
<enum name='NSStreamEventOpenCompleted' value='1'/>
<enum name='NSStreamStatusAtEnd' value='5'/>
<enum name='NSStreamStatusClosed' value='6'/>
<enum name='NSStreamStatusError' value='7'/>
<enum name='NSStreamStatusNotOpen' value='0'/>
<enum name='NSStreamStatusOpen' value='2'/>
<enum name='NSStreamStatusOpening' value='1'/>
<enum name='NSStreamStatusReading' value='3'/>
<enum name='NSStreamStatusWriting' value='4'/>
<enum name='NSStringEncodingConversionAllowLossy' value='1'/>
<enum name='NSStringEncodingConversionExternalRepresentation' value='2'/>
<enum name='NSStringEnumerationByComposedCharacterSequences' value='2'/>
<enum name='NSStringEnumerationByLines' value='0'/>
<enum name='NSStringEnumerationByParagraphs' value='1'/>
<enum name='NSStringEnumerationBySentences' value='4'/>
<enum name='NSStringEnumerationByWords' value='3'/>
<enum name='NSStringEnumerationLocalized' value='1024'/>
<enum name='NSStringEnumerationReverse' value='256'/>
<enum name='NSStringEnumerationSubstringNotRequired' value='512'/>
<enum name='NSSubqueryExpressionType' value='13'/>
<enum name='NSSunOSOperatingSystem' value='6'/>
<enum name='NSSymbolStringEncoding' value='6'/>
<enum name='NSSystemDomainMask' value='8'/>
<enum name='NSTaskTerminationReasonExit' value='1'/>
<enum name='NSTaskTerminationReasonUncaughtSignal' value='2'/>
<enum name='NSTextCheckingAllCustomTypes' value='18446744069414584320'/>
<enum name='NSTextCheckingAllSystemTypes' value='4294967295'/>
<enum name='NSTextCheckingAllTypes' value='18446744073709551615'/>
<enum name='NSTextCheckingTypeAddress' value='16'/>
<enum name='NSTextCheckingTypeCorrection' value='512'/>
<enum name='NSTextCheckingTypeDash' value='128'/>
<enum name='NSTextCheckingTypeDate' value='8'/>
<enum name='NSTextCheckingTypeGrammar' value='4'/>
<enum name='NSTextCheckingTypeLink' value='32'/>
<enum name='NSTextCheckingTypeOrthography' value='1'/>
<enum name='NSTextCheckingTypePhoneNumber' value='2048'/>
<enum name='NSTextCheckingTypeQuote' value='64'/>
<enum name='NSTextCheckingTypeRegularExpression' value='1024'/>
<enum name='NSTextCheckingTypeReplacement' value='256'/>
<enum name='NSTextCheckingTypeSpelling' value='2'/>
<enum name='NSTextCheckingTypeTransitInformation' value='4096'/>
<enum name='NSTimeIntervalSince1970' value='978307200.0'/>
<enum name='NSTimeZoneCalendarUnit' value='2097152'/>
<enum name='NSTimeZoneNameStyleDaylightSaving' value='2'/>
<enum name='NSTimeZoneNameStyleGeneric' value='4'/>
<enum name='NSTimeZoneNameStyleShortDaylightSaving' value='3'/>
<enum name='NSTimeZoneNameStyleShortGeneric' value='5'/>
<enum name='NSTimeZoneNameStyleShortStandard' value='1'/>
<enum name='NSTimeZoneNameStyleStandard' value='0'/>
<enum name='NSTrashDirectory' value='102'/>
<enum name='NSUIntegerMax' value64='18446744073709551615' value='4294967295'/>
<enum name='NSURLBookmarkCreationMinimalBookmark' value='512'/>
<enum name='NSURLBookmarkCreationPreferFileIDResolution' value='256'/>
<enum name='NSURLBookmarkCreationSecurityScopeAllowOnlyReadAccess' value='4096'/>
<enum name='NSURLBookmarkCreationSuitableForBookmarkFile' value='1024'/>
<enum name='NSURLBookmarkCreationWithSecurityScope' value='2048'/>
<enum name='NSURLBookmarkResolutionWithSecurityScope' value='1024'/>
<enum name='NSURLBookmarkResolutionWithoutMounting' value='512'/>
<enum name='NSURLBookmarkResolutionWithoutUI' value='256'/>
<enum name='NSURLCacheStorageAllowed' value='0'/>
<enum name='NSURLCacheStorageAllowedInMemoryOnly' value='1'/>
<enum name='NSURLCacheStorageNotAllowed' value='2'/>
<enum name='NSURLCredentialPersistenceForSession' value='1'/>
<enum name='NSURLCredentialPersistenceNone' value='0'/>
<enum name='NSURLCredentialPersistencePermanent' value='2'/>
<enum name='NSURLErrorBadServerResponse' value='-1011'/>
<enum name='NSURLErrorBadURL' value='-1000'/>
<enum name='NSURLErrorCallIsActive' value='-1019'/>
<enum name='NSURLErrorCancelled' value='-999'/>
<enum name='NSURLErrorCannotCloseFile' value='-3002'/>
<enum name='NSURLErrorCannotConnectToHost' value='-1004'/>
<enum name='NSURLErrorCannotCreateFile' value='-3000'/>
<enum name='NSURLErrorCannotDecodeContentData' value='-1016'/>
<enum name='NSURLErrorCannotDecodeRawData' value='-1015'/>
<enum name='NSURLErrorCannotFindHost' value='-1003'/>
<enum name='NSURLErrorCannotLoadFromNetwork' value='-2000'/>
<enum name='NSURLErrorCannotMoveFile' value='-3005'/>
<enum name='NSURLErrorCannotOpenFile' value='-3001'/>
<enum name='NSURLErrorCannotParseResponse' value='-1017'/>
<enum name='NSURLErrorCannotRemoveFile' value='-3004'/>
<enum name='NSURLErrorCannotWriteToFile' value='-3003'/>
<enum name='NSURLErrorClientCertificateRejected' value='-1205'/>
<enum name='NSURLErrorClientCertificateRequired' value='-1206'/>
<enum name='NSURLErrorDNSLookupFailed' value='-1006'/>
<enum name='NSURLErrorDataLengthExceedsMaximum' value='-1103'/>
<enum name='NSURLErrorDataNotAllowed' value='-1020'/>
<enum name='NSURLErrorDownloadDecodingFailedMidStream' value='-3006'/>
<enum name='NSURLErrorDownloadDecodingFailedToComplete' value='-3007'/>
<enum name='NSURLErrorFileDoesNotExist' value='-1100'/>
<enum name='NSURLErrorFileIsDirectory' value='-1101'/>
<enum name='NSURLErrorHTTPTooManyRedirects' value='-1007'/>
<enum name='NSURLErrorInternationalRoamingOff' value='-1018'/>
<enum name='NSURLErrorNetworkConnectionLost' value='-1005'/>
<enum name='NSURLErrorNoPermissionsToReadFile' value='-1102'/>
<enum name='NSURLErrorNotConnectedToInternet' value='-1009'/>
<enum name='NSURLErrorRedirectToNonExistentLocation' value='-1010'/>
<enum name='NSURLErrorRequestBodyStreamExhausted' value='-1021'/>
<enum name='NSURLErrorResourceUnavailable' value='-1008'/>
<enum name='NSURLErrorSecureConnectionFailed' value='-1200'/>
<enum name='NSURLErrorServerCertificateHasBadDate' value='-1201'/>
<enum name='NSURLErrorServerCertificateHasUnknownRoot' value='-1203'/>
<enum name='NSURLErrorServerCertificateNotYetValid' value='-1204'/>
<enum name='NSURLErrorServerCertificateUntrusted' value='-1202'/>
<enum name='NSURLErrorTimedOut' value='-1001'/>
<enum name='NSURLErrorUnknown' value='-1'/>
<enum name='NSURLErrorUnsupportedURL' value='-1002'/>
<enum name='NSURLErrorUserAuthenticationRequired' value='-1013'/>
<enum name='NSURLErrorUserCancelledAuthentication' value='-1012'/>
<enum name='NSURLErrorZeroByteResource' value='-1014'/>
<enum name='NSURLHandleLoadFailed' value='3'/>
<enum name='NSURLHandleLoadInProgress' value='2'/>
<enum name='NSURLHandleLoadSucceeded' value='1'/>
<enum name='NSURLHandleNotLoaded' value='0'/>
<enum name='NSURLNetworkServiceTypeBackground' value='3'/>
<enum name='NSURLNetworkServiceTypeDefault' value='0'/>
<enum name='NSURLNetworkServiceTypeVideo' value='2'/>
<enum name='NSURLNetworkServiceTypeVoIP' value='1'/>
<enum name='NSURLNetworkServiceTypeVoice' value='4'/>
<enum name='NSURLRequestReloadIgnoringCacheData' value='1'/>
<enum name='NSURLRequestReloadIgnoringLocalAndRemoteCacheData' value='4'/>
<enum name='NSURLRequestReloadIgnoringLocalCacheData' value='1'/>
<enum name='NSURLRequestReloadRevalidatingCacheData' value='5'/>
<enum name='NSURLRequestReturnCacheDataDontLoad' value='3'/>
<enum name='NSURLRequestReturnCacheDataElseLoad' value='2'/>
<enum name='NSURLRequestUseProtocolCachePolicy' value='0'/>
<enum name='NSURLResponseUnknownLength' value='-1'/>
<enum name='NSUTF16BigEndianStringEncoding' value='2415919360'/>
<enum name='NSUTF16LittleEndianStringEncoding' value='2483028224'/>
<enum name='NSUTF16StringEncoding' value='10'/>
<enum name='NSUTF32BigEndianStringEncoding' value='2550137088'/>
<enum name='NSUTF32LittleEndianStringEncoding' value='2617245952'/>
<enum name='NSUTF32StringEncoding' value='2348810496'/>
<enum name='NSUTF8StringEncoding' value='4'/>
<enum name='NSUbiquitousKeyValueStoreAccountChange' value='3'/>
<enum name='NSUbiquitousKeyValueStoreInitialSyncChange' value='1'/>
<enum name='NSUbiquitousKeyValueStoreQuotaViolationChange' value='2'/>
<enum name='NSUbiquitousKeyValueStoreServerChange' value='0'/>
<enum name='NSUncachedRead' value='2'/>
<enum name='NSUndefinedDateComponent' value64='9223372036854775807' value='2147483647'/>
<enum name='NSUndoCloseGroupingRunLoopOrdering' value='350000'/>
<enum name='NSUnicodeStringEncoding' value='10'/>
<enum name='NSUnionSetExpressionType' value='5'/>
<enum name='NSUnknownKeyScriptError' value='7'/>
<enum name='NSUnknownKeySpecifierError' value='3'/>
<enum name='NSUserCancelledError' value='3072'/>
<enum name='NSUserDirectory' value='7'/>
<enum name='NSUserDomainMask' value='1'/>
<enum name='NSUserNotificationActivationTypeActionButtonClicked' value='2'/>
<enum name='NSUserNotificationActivationTypeContentsClicked' value='1'/>
<enum name='NSUserNotificationActivationTypeNone' value='0'/>
<enum name='NSValidationErrorMaximum' value='2047'/>
<enum name='NSValidationErrorMinimum' value='1024'/>
<enum name='NSVariableExpressionType' value='2'/>
<enum name='NSVolumeEnumerationProduceFileReferenceURLs' value='4'/>
<enum name='NSVolumeEnumerationSkipHiddenVolumes' value='2'/>
<enum name='NSWeekCalendarUnit' value='256'/>
<enum name='NSWeekOfMonthCalendarUnit' value='4096'/>
<enum name='NSWeekOfYearCalendarUnit' value='8192'/>
<enum name='NSWeekdayCalendarUnit' value='512'/>
<enum name='NSWeekdayOrdinalCalendarUnit' value='1024'/>
<enum name='NSWidthInsensitiveSearch' value='256'/>
<enum name='NSWindows95OperatingSystem' value='2'/>
<enum name='NSWindowsCP1250StringEncoding' value='15'/>
<enum name='NSWindowsCP1251StringEncoding' value='11'/>
<enum name='NSWindowsCP1252StringEncoding' value='12'/>
<enum name='NSWindowsCP1253StringEncoding' value='13'/>
<enum name='NSWindowsCP1254StringEncoding' value='14'/>
<enum name='NSWindowsNTOperatingSystem' value='1'/>
<enum name='NSWrapCalendarComponents' value='1'/>
<enum name='NSXMLAttributeCDATAKind' value='6'/>
<enum name='NSXMLAttributeDeclarationKind' value='10'/>
<enum name='NSXMLAttributeEntitiesKind' value='11'/>
<enum name='NSXMLAttributeEntityKind' value='10'/>
<enum name='NSXMLAttributeEnumerationKind' value='14'/>
<enum name='NSXMLAttributeIDKind' value='7'/>
<enum name='NSXMLAttributeIDRefKind' value='8'/>
<enum name='NSXMLAttributeIDRefsKind' value='9'/>
<enum name='NSXMLAttributeKind' value='3'/>
<enum name='NSXMLAttributeNMTokenKind' value='12'/>
<enum name='NSXMLAttributeNMTokensKind' value='13'/>
<enum name='NSXMLAttributeNotationKind' value='15'/>
<enum name='NSXMLCommentKind' value='6'/>
<enum name='NSXMLDTDKind' value='8'/>
<enum name='NSXMLDocumentHTMLKind' value='2'/>
<enum name='NSXMLDocumentIncludeContentTypeDeclaration' value='262144'/>
<enum name='NSXMLDocumentKind' value='1'/>
<enum name='NSXMLDocumentTextKind' value='3'/>
<enum name='NSXMLDocumentTidyHTML' value='512'/>
<enum name='NSXMLDocumentTidyXML' value='1024'/>
<enum name='NSXMLDocumentValidate' value='8192'/>
<enum name='NSXMLDocumentXHTMLKind' value='1'/>
<enum name='NSXMLDocumentXInclude' value='65536'/>
<enum name='NSXMLDocumentXMLKind' value='0'/>
<enum name='NSXMLElementDeclarationAnyKind' value='18'/>
<enum name='NSXMLElementDeclarationElementKind' value='20'/>
<enum name='NSXMLElementDeclarationEmptyKind' value='17'/>
<enum name='NSXMLElementDeclarationKind' value='11'/>
<enum name='NSXMLElementDeclarationMixedKind' value='19'/>
<enum name='NSXMLElementDeclarationUndefinedKind' value='16'/>
<enum name='NSXMLElementKind' value='2'/>
<enum name='NSXMLEntityDeclarationKind' value='9'/>
<enum name='NSXMLEntityGeneralKind' value='1'/>
<enum name='NSXMLEntityParameterKind' value='4'/>
<enum name='NSXMLEntityParsedKind' value='2'/>
<enum name='NSXMLEntityPredefined' value='5'/>
<enum name='NSXMLEntityUnparsedKind' value='3'/>
<enum name='NSXMLInvalidKind' value='0'/>
<enum name='NSXMLNamespaceKind' value='4'/>
<enum name='NSXMLNodeCompactEmptyElement' value='4'/>
<enum name='NSXMLNodeExpandEmptyElement' value='2'/>
<enum name='NSXMLNodeIsCDATA' value='1'/>
<enum name='NSXMLNodeLoadExternalEntitiesAlways' value='16384'/>
<enum name='NSXMLNodeLoadExternalEntitiesNever' value='524288'/>
<enum name='NSXMLNodeLoadExternalEntitiesSameOriginOnly' value='32768'/>
<enum name='NSXMLNodeOptionsNone' value='0'/>
<enum name='NSXMLNodePreserveAll' value='4293918750'/>
<enum name='NSXMLNodePreserveAttributeOrder' value='2097152'/>
<enum name='NSXMLNodePreserveCDATA' value='16777216'/>
<enum name='NSXMLNodePreserveCharacterReferences' value='134217728'/>
<enum name='NSXMLNodePreserveDTD' value='67108864'/>
<enum name='NSXMLNodePreserveEmptyElements' value='6'/>
<enum name='NSXMLNodePreserveEntities' value='4194304'/>
<enum name='NSXMLNodePreserveNamespaceOrder' value='1048576'/>
<enum name='NSXMLNodePreservePrefixes' value='8388608'/>
<enum name='NSXMLNodePreserveQuotes' value='24'/>
<enum name='NSXMLNodePreserveWhitespace' value='33554432'/>
<enum name='NSXMLNodePrettyPrint' value='131072'/>
<enum name='NSXMLNodeUseDoubleQuotes' value='16'/>
<enum name='NSXMLNodeUseSingleQuotes' value='8'/>
<enum name='NSXMLNotationDeclarationKind' value='12'/>
<enum name='NSXMLParserAttributeHasNoValueError' value='41'/>
<enum name='NSXMLParserAttributeListNotFinishedError' value='51'/>
<enum name='NSXMLParserAttributeListNotStartedError' value='50'/>
<enum name='NSXMLParserAttributeNotFinishedError' value='40'/>
<enum name='NSXMLParserAttributeNotStartedError' value='39'/>
<enum name='NSXMLParserAttributeRedefinedError' value='42'/>
<enum name='NSXMLParserCDATANotFinishedError' value='63'/>
<enum name='NSXMLParserCharacterRefAtEOFError' value='10'/>
<enum name='NSXMLParserCharacterRefInDTDError' value='13'/>
<enum name='NSXMLParserCharacterRefInEpilogError' value='12'/>
<enum name='NSXMLParserCharacterRefInPrologError' value='11'/>
<enum name='NSXMLParserCommentContainsDoubleHyphenError' value='80'/>
<enum name='NSXMLParserCommentNotFinishedError' value='45'/>
<enum name='NSXMLParserConditionalSectionNotFinishedError' value='59'/>
<enum name='NSXMLParserConditionalSectionNotStartedError' value='58'/>
<enum name='NSXMLParserDOCTYPEDeclNotFinishedError' value='61'/>
<enum name='NSXMLParserDelegateAbortedParseError' value='512'/>
<enum name='NSXMLParserDocumentStartError' value='3'/>
<enum name='NSXMLParserElementContentDeclNotFinishedError' value='55'/>
<enum name='NSXMLParserElementContentDeclNotStartedError' value='54'/>
<enum name='NSXMLParserEmptyDocumentError' value='4'/>
<enum name='NSXMLParserEncodingNotSupportedError' value='32'/>
<enum name='NSXMLParserEntityBoundaryError' value='90'/>
<enum name='NSXMLParserEntityIsExternalError' value='29'/>
<enum name='NSXMLParserEntityIsParameterError' value='30'/>
<enum name='NSXMLParserEntityNotFinishedError' value='37'/>
<enum name='NSXMLParserEntityNotStartedError' value='36'/>
<enum name='NSXMLParserEntityRefAtEOFError' value='14'/>
<enum name='NSXMLParserEntityRefInDTDError' value='17'/>
<enum name='NSXMLParserEntityRefInEpilogError' value='16'/>
<enum name='NSXMLParserEntityRefInPrologError' value='15'/>
<enum name='NSXMLParserEntityRefLoopError' value='89'/>
<enum name='NSXMLParserEntityReferenceMissingSemiError' value='23'/>
<enum name='NSXMLParserEntityReferenceWithoutNameError' value='22'/>
<enum name='NSXMLParserEntityValueRequiredError' value='84'/>
<enum name='NSXMLParserEqualExpectedError' value='75'/>
<enum name='NSXMLParserExternalStandaloneEntityError' value='82'/>
<enum name='NSXMLParserExternalSubsetNotFinishedError' value='60'/>
<enum name='NSXMLParserExtraContentError' value='86'/>
<enum name='NSXMLParserGTRequiredError' value='73'/>
<enum name='NSXMLParserInternalError' value='1'/>
<enum name='NSXMLParserInvalidCharacterError' value='9'/>
<enum name='NSXMLParserInvalidCharacterInEntityError' value='87'/>
<enum name='NSXMLParserInvalidCharacterRefError' value='8'/>
<enum name='NSXMLParserInvalidConditionalSectionError' value='83'/>
<enum name='NSXMLParserInvalidDecimalCharacterRefError' value='7'/>
<enum name='NSXMLParserInvalidEncodingError' value='81'/>
<enum name='NSXMLParserInvalidEncodingNameError' value='79'/>
<enum name='NSXMLParserInvalidHexCharacterRefError' value='6'/>
<enum name='NSXMLParserInvalidURIError' value='91'/>
<enum name='NSXMLParserLTRequiredError' value='72'/>
<enum name='NSXMLParserLTSlashRequiredError' value='74'/>
<enum name='NSXMLParserLessThanSymbolInAttributeError' value='38'/>
<enum name='NSXMLParserLiteralNotFinishedError' value='44'/>
<enum name='NSXMLParserLiteralNotStartedError' value='43'/>
<enum name='NSXMLParserMisplacedCDATAEndStringError' value='62'/>
<enum name='NSXMLParserMisplacedXMLDeclarationError' value='64'/>
<enum name='NSXMLParserMixedContentDeclNotFinishedError' value='53'/>
<enum name='NSXMLParserMixedContentDeclNotStartedError' value='52'/>
<enum name='NSXMLParserNAMERequiredError' value='68'/>
<enum name='NSXMLParserNMTOKENRequiredError' value='67'/>
<enum name='NSXMLParserNamespaceDeclarationError' value='35'/>
<enum name='NSXMLParserNoDTDError' value='94'/>
<enum name='NSXMLParserNotWellBalancedError' value='85'/>
<enum name='NSXMLParserNotationNotFinishedError' value='49'/>
<enum name='NSXMLParserNotationNotStartedError' value='48'/>
<enum name='NSXMLParserOutOfMemoryError' value='2'/>
<enum name='NSXMLParserPCDATARequiredError' value='69'/>
<enum name='NSXMLParserParsedEntityRefAtEOFError' value='18'/>
<enum name='NSXMLParserParsedEntityRefInEpilogError' value='20'/>
<enum name='NSXMLParserParsedEntityRefInInternalError' value='88'/>
<enum name='NSXMLParserParsedEntityRefInInternalSubsetError' value='21'/>
<enum name='NSXMLParserParsedEntityRefInPrologError' value='19'/>
<enum name='NSXMLParserParsedEntityRefMissingSemiError' value='25'/>
<enum name='NSXMLParserParsedEntityRefNoNameError' value='24'/>
<enum name='NSXMLParserPrematureDocumentEndError' value='5'/>
<enum name='NSXMLParserProcessingInstructionNotFinishedError' value='47'/>
<enum name='NSXMLParserProcessingInstructionNotStartedError' value='46'/>
<enum name='NSXMLParserPublicIdentifierRequiredError' value='71'/>
<enum name='NSXMLParserSeparatorRequiredError' value='66'/>
<enum name='NSXMLParserSpaceRequiredError' value='65'/>
<enum name='NSXMLParserStandaloneValueError' value='78'/>
<enum name='NSXMLParserStringNotClosedError' value='34'/>
<enum name='NSXMLParserStringNotStartedError' value='33'/>
<enum name='NSXMLParserTagNameMismatchError' value='76'/>
<enum name='NSXMLParserURIFragmentError' value='92'/>
<enum name='NSXMLParserURIRequiredError' value='70'/>
<enum name='NSXMLParserUndeclaredEntityError' value='26'/>
<enum name='NSXMLParserUnfinishedTagError' value='77'/>
<enum name='NSXMLParserUnknownEncodingError' value='31'/>
<enum name='NSXMLParserUnparsedEntityError' value='28'/>
<enum name='NSXMLParserXMLDeclNotFinishedError' value='57'/>
<enum name='NSXMLParserXMLDeclNotStartedError' value='56'/>
<enum name='NSXMLProcessingInstructionKind' value='5'/>
<enum name='NSXMLTextKind' value='7'/>
<enum name='NSXPCConnectionErrorMaximum' value='4224'/>
<enum name='NSXPCConnectionErrorMinimum' value='4096'/>
<enum name='NSXPCConnectionInterrupted' value='4097'/>
<enum name='NSXPCConnectionInvalid' value='4099'/>
<enum name='NSXPCConnectionPrivileged' value='4096'/>
<enum name='NSXPCConnectionReplyInvalid' value='4101'/>
<enum name='NSYearCalendarUnit' value='4'/>
<enum name='NSYearForWeekOfYearCalendarUnit' value='16384'/>
<enum name='NS_BLOCKS_AVAILABLE' value='1'/>
<enum name='NS_BigEndian' value='2'/>
<enum name='NS_LittleEndian' value='1'/>
<enum name='NS_UNICHAR_IS_EIGHT_BIT' value='0'/>
<enum name='NS_UnknownByteOrder' value='0'/>
<function name='CFBridgingRelease' inline='true'>
<arg name='X' type='@' declared_type='CFTypeRef'/>
<retval type='@' declared_type='id'/>
</function>
<function name='CFBridgingRetain' inline='true'>
<arg name='X' type='@' declared_type='id'/>
<retval type='@' declared_type='CFTypeRef'/>
</function>
<function name='NSAllHashTableObjects'>
<arg name='table' type='@' declared_type='NSHashTable*'/>
<retval type='@' declared_type='NSArray*'/>
</function>
<function name='NSAllMapTableKeys'>
<arg name='table' type='@' declared_type='NSMapTable*'/>
<retval type='@' declared_type='NSArray*'/>
</function>
<function name='NSAllMapTableValues'>
<arg name='table' type='@' declared_type='NSMapTable*'/>
<retval type='@' declared_type='NSArray*'/>
</function>
<function name='NSAllocateCollectable'>
<arg name='size' type64='Q' type='I' declared_type='NSUInteger'/>
<arg name='options' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSAllocateMemoryPages'>
<arg name='bytes' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSAllocateObject'>
<arg name='aClass' type='#' declared_type='Class'/>
<arg name='extraBytes' type64='Q' type='I' declared_type='NSUInteger'/>
<arg name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<retval type='@' declared_type='id'/>
</function>
<function name='NSClassFromString'>
<arg name='aClassName' type='@' declared_type='NSString*'/>
<retval type='#' declared_type='Class'/>
</function>
<function name='NSCompareHashTables'>
<arg name='table1' type='@' declared_type='NSHashTable*'/>
<arg name='table2' type='@' declared_type='NSHashTable*'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSCompareMapTables'>
<arg name='table1' type='@' declared_type='NSMapTable*'/>
<arg name='table2' type='@' declared_type='NSMapTable*'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSContainsRect'>
<arg name='aRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<arg name='bRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSConvertHostDoubleToSwapped' inline='true'>
<arg name='x' type='d' declared_type='double'/>
<retval type='{_NSSwappedDouble=Q}' declared_type='NSSwappedDouble'/>
</function>
<function name='NSConvertHostFloatToSwapped' inline='true'>
<arg name='x' type='f' declared_type='float'/>
<retval type='{_NSSwappedFloat=I}' declared_type='NSSwappedFloat'/>
</function>
<function name='NSConvertSwappedDoubleToHost' inline='true'>
<arg name='x' type='{_NSSwappedDouble=Q}' declared_type='NSSwappedDouble'/>
<retval type='d' declared_type='double'/>
</function>
<function name='NSConvertSwappedFloatToHost' inline='true'>
<arg name='x' type='{_NSSwappedFloat=I}' declared_type='NSSwappedFloat'/>
<retval type='f' declared_type='float'/>
</function>
<function name='NSCopyHashTableWithZone'>
<arg name='table' type='@' declared_type='NSHashTable*'/>
<arg name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<retval type='@' declared_type='NSHashTable*'/>
</function>
<function name='NSCopyMapTableWithZone'>
<arg name='table' type='@' declared_type='NSMapTable*'/>
<arg name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<retval type='@' declared_type='NSMapTable*'/>
</function>
<function name='NSCopyMemoryPages'>
<arg const='true' name='source' type='^v' declared_type='void*'/>
<arg name='dest' type='^v' declared_type='void*'/>
<arg name='bytes' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSCopyObject'>
<arg name='object' type='@' declared_type='id'/>
<arg name='extraBytes' type64='Q' type='I' declared_type='NSUInteger'/>
<arg name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<retval type='@' declared_type='id'/>
</function>
<function name='NSCountFrames'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</function>
<function name='NSCountHashTable'>
<arg name='table' type='@' declared_type='NSHashTable*'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</function>
<function name='NSCountMapTable'>
<arg name='table' type='@' declared_type='NSMapTable*'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</function>
<function name='NSCreateHashTable'>
<arg name='callBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' declared_type='NSHashTableCallBacks'/>
<arg name='capacity' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSHashTable*'/>
</function>
<function name='NSCreateHashTableWithZone'>
<arg name='callBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' declared_type='NSHashTableCallBacks'/>
<arg name='capacity' type64='Q' type='I' declared_type='NSUInteger'/>
<arg name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<retval type='@' declared_type='NSHashTable*'/>
</function>
<function name='NSCreateMapTable'>
<arg name='keyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' declared_type='NSMapTableKeyCallBacks'/>
<arg name='valueCallBacks' type='{_NSMapTableValueCallBacks=^?^?^?}' declared_type='NSMapTableValueCallBacks'/>
<arg name='capacity' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSMapTable*'/>
</function>
<function name='NSCreateMapTableWithZone'>
<arg name='keyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' declared_type='NSMapTableKeyCallBacks'/>
<arg name='valueCallBacks' type='{_NSMapTableValueCallBacks=^?^?^?}' declared_type='NSMapTableValueCallBacks'/>
<arg name='capacity' type64='Q' type='I' declared_type='NSUInteger'/>
<arg name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<retval type='@' declared_type='NSMapTable*'/>
</function>
<function name='NSCreateZone'>
<arg name='startSize' type64='Q' type='I' declared_type='NSUInteger'/>
<arg name='granularity' type64='Q' type='I' declared_type='NSUInteger'/>
<arg name='canFree' type='B' declared_type='BOOL'/>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</function>
<function name='NSDeallocateMemoryPages'>
<arg name='ptr' type='^v' declared_type='void*'/>
<arg name='bytes' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDeallocateObject'>
<arg name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDecimalAdd'>
<arg name='result' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg const='true' name='leftOperand' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg const='true' name='rightOperand' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg name='roundingMode' type64='Q' type='I' declared_type='NSRoundingMode'/>
<retval type64='Q' type='I' declared_type='NSCalculationError'/>
</function>
<function name='NSDecimalCompact'>
<arg name='number' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDecimalCompare'>
<arg const='true' name='leftOperand' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg const='true' name='rightOperand' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</function>
<function name='NSDecimalCopy'>
<arg name='destination' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg const='true' name='source' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDecimalDivide'>
<arg name='result' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg const='true' name='leftOperand' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg const='true' name='rightOperand' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg name='roundingMode' type64='Q' type='I' declared_type='NSRoundingMode'/>
<retval type64='Q' type='I' declared_type='NSCalculationError'/>
</function>
<function name='NSDecimalIsNotANumber' inline='true'>
<arg const='true' name='dcm' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSDecimalMultiply'>
<arg name='result' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg const='true' name='leftOperand' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg const='true' name='rightOperand' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg name='roundingMode' type64='Q' type='I' declared_type='NSRoundingMode'/>
<retval type64='Q' type='I' declared_type='NSCalculationError'/>
</function>
<function name='NSDecimalMultiplyByPowerOf10'>
<arg name='result' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg const='true' name='number' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg name='power' type='s' declared_type='short'/>
<arg name='roundingMode' type64='Q' type='I' declared_type='NSRoundingMode'/>
<retval type64='Q' type='I' declared_type='NSCalculationError'/>
</function>
<function name='NSDecimalNormalize'>
<arg name='number1' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg name='number2' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg name='roundingMode' type64='Q' type='I' declared_type='NSRoundingMode'/>
<retval type64='Q' type='I' declared_type='NSCalculationError'/>
</function>
<function name='NSDecimalPower'>
<arg name='result' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg const='true' name='number' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg name='power' type64='Q' type='I' declared_type='NSUInteger'/>
<arg name='roundingMode' type64='Q' type='I' declared_type='NSRoundingMode'/>
<retval type64='Q' type='I' declared_type='NSCalculationError'/>
</function>
<function name='NSDecimalRound'>
<arg name='result' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg const='true' name='number' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg name='scale' type64='q' type='i' declared_type='NSInteger'/>
<arg name='roundingMode' type64='Q' type='I' declared_type='NSRoundingMode'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDecimalString'>
<arg const='true' name='dcm' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg name='locale' type='@' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSDecimalSubtract'>
<arg name='result' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg const='true' name='leftOperand' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg const='true' name='rightOperand' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<arg name='roundingMode' type64='Q' type='I' declared_type='NSRoundingMode'/>
<retval type64='Q' type='I' declared_type='NSCalculationError'/>
</function>
<function name='NSDecrementExtraRefCountWasZero'>
<arg name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSDefaultMallocZone'>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</function>
<function name='NSDivideRect'>
<arg name='inRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<arg name='slice' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect*'/>
<arg name='rem' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect*'/>
<arg name='amount' type64='d' type='f' declared_type='CGFloat'/>
<arg name='edge' type64='Q' type='i' declared_type='NSRectEdge'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSEndHashTableEnumeration'>
<arg name='enumerator' type64='^{_NSHashEnumerator=QQ^v}' type='^{_NSHashEnumerator=II^v}' declared_type='NSHashEnumerator*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSEndMapTableEnumeration'>
<arg name='enumerator' type64='^{_NSMapEnumerator=QQ^v}' type='^{_NSMapEnumerator=II^v}' declared_type='NSMapEnumerator*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSEnumerateHashTable'>
<arg name='table' type='@' declared_type='NSHashTable*'/>
<retval type64='{_NSHashEnumerator=QQ^v}' type='{_NSHashEnumerator=II^v}' declared_type='NSHashEnumerator'/>
</function>
<function name='NSEnumerateMapTable'>
<arg name='table' type='@' declared_type='NSMapTable*'/>
<retval type64='{_NSMapEnumerator=QQ^v}' type='{_NSMapEnumerator=II^v}' declared_type='NSMapEnumerator'/>
</function>
<function name='NSEqualPoints'>
<arg name='aPoint' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
<arg name='bPoint' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSEqualRanges' inline='true'>
<arg name='range1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg name='range2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSEqualRects'>
<arg name='aRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<arg name='bRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSEqualSizes'>
<arg name='aSize' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
<arg name='bSize' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSExtraRefCount'>
<arg name='object' type='@' declared_type='id'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</function>
<function name='NSFileTypeForHFSTypeCode'>
<arg name='hfsFileTypeCode' type64='I' type='L' declared_type='OSType'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSFrameAddress'>
<arg name='frame' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSFreeHashTable'>
<arg name='table' type='@' declared_type='NSHashTable*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSFreeMapTable'>
<arg name='table' type='@' declared_type='NSMapTable*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSFullUserName'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSGetSizeAndAlignment'>
<arg const='true' name='typePtr' type='*' declared_type='char*'/>
<arg name='sizep' type64='^Q' type='^I' declared_type='NSUInteger*'/>
<arg name='alignp' type64='^Q' type='^I' declared_type='NSUInteger*'/>
<retval const='true' type='*' declared_type='char*'/>
</function>
<function name='NSGetUncaughtExceptionHandler'>
<retval function_pointer='true' type='^?' declared_type='NSUncaughtExceptionHandler*'>
<arg type='@' declared_type='NSException*'/>
<retval type='v' declared_type='void'/>
</retval>
</function>
<function name='NSHFSTypeCodeFromFileType'>
<arg name='fileTypeString' type='@' declared_type='NSString*'/>
<retval type64='I' type='L' declared_type='OSType'/>
</function>
<function name='NSHFSTypeOfFile'>
<arg name='fullFilePath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSHashGet'>
<arg name='table' type='@' declared_type='NSHashTable*'/>
<arg const='true' name='pointer' type='^v' declared_type='void*'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSHashInsert'>
<arg name='table' type='@' declared_type='NSHashTable*'/>
<arg const='true' name='pointer' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSHashInsertIfAbsent'>
<arg name='table' type='@' declared_type='NSHashTable*'/>
<arg const='true' name='pointer' type='^v' declared_type='void*'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSHashInsertKnownAbsent'>
<arg name='table' type='@' declared_type='NSHashTable*'/>
<arg const='true' name='pointer' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSHashRemove'>
<arg name='table' type='@' declared_type='NSHashTable*'/>
<arg const='true' name='pointer' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSHeight' inline='true'>
<arg name='aRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</function>
<function name='NSHomeDirectory'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSHomeDirectoryForUser'>
<arg name='userName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSHostByteOrder' inline='true'>
<retval type64='q' type='l' declared_type='long'/>
</function>
<function name='NSIncrementExtraRefCount'>
<arg name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSInsetRect'>
<arg name='aRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<arg name='dX' type64='d' type='f' declared_type='CGFloat'/>
<arg name='dY' type64='d' type='f' declared_type='CGFloat'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</function>
<function name='NSIntegralRect'>
<arg name='aRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</function>
<function name='NSIntegralRectWithOptions'>
<arg name='aRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<arg name='opts' type='Q' declared_type='NSAlignmentOptions'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</function>
<function name='NSIntersectionRange'>
<arg name='range1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg name='range2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</function>
<function name='NSIntersectionRect'>
<arg name='aRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<arg name='bRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</function>
<function name='NSIntersectsRect'>
<arg name='aRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<arg name='bRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSIsEmptyRect'>
<arg name='aRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSIsFreedObject'>
<arg name='anObject' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSLocationInRange' inline='true'>
<arg name='loc' type64='Q' type='I' declared_type='NSUInteger'/>
<arg name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSLog' variadic='true'>
<arg name='format' printf_format='true' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSLogPageSize'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</function>
<function name='NSLogv'>
<arg name='format' printf_format='true' type='@' declared_type='NSString*'/>
<arg name='args' declared_type64='__va_list_tag*' type64='^{__va_list_tag=II^v^v}' type='*' declared_type='va_list'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSMakeCollectable' inline='true'>
<arg name='cf' type='@' declared_type='CFTypeRef'/>
<retval type='@' declared_type='id'/>
</function>
<function name='NSMakePoint' inline='true'>
<arg name='x' type64='d' type='f' declared_type='CGFloat'/>
<arg name='y' type64='d' type='f' declared_type='CGFloat'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</function>
<function name='NSMakeRange' inline='true'>
<arg name='loc' type64='Q' type='I' declared_type='NSUInteger'/>
<arg name='len' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</function>
<function name='NSMakeRect' inline='true'>
<arg name='x' type64='d' type='f' declared_type='CGFloat'/>
<arg name='y' type64='d' type='f' declared_type='CGFloat'/>
<arg name='w' type64='d' type='f' declared_type='CGFloat'/>
<arg name='h' type64='d' type='f' declared_type='CGFloat'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</function>
<function name='NSMakeSize' inline='true'>
<arg name='w' type64='d' type='f' declared_type='CGFloat'/>
<arg name='h' type64='d' type='f' declared_type='CGFloat'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</function>
<function name='NSMapGet'>
<arg name='table' type='@' declared_type='NSMapTable*'/>
<arg const='true' name='key' type='^v' declared_type='void*'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSMapInsert'>
<arg name='table' type='@' declared_type='NSMapTable*'/>
<arg const='true' name='key' type='^v' declared_type='void*'/>
<arg const='true' name='value' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSMapInsertIfAbsent'>
<arg name='table' type='@' declared_type='NSMapTable*'/>
<arg const='true' name='key' type='^v' declared_type='void*'/>
<arg const='true' name='value' type='^v' declared_type='void*'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSMapInsertKnownAbsent'>
<arg name='table' type='@' declared_type='NSMapTable*'/>
<arg const='true' name='key' type='^v' declared_type='void*'/>
<arg const='true' name='value' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSMapMember'>
<arg name='table' type='@' declared_type='NSMapTable*'/>
<arg const='true' name='key' type='^v' declared_type='void*'/>
<arg name='originalKey' type='^^v' declared_type='void**'/>
<arg name='value' type='^^v' declared_type='void**'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSMapRemove'>
<arg name='table' type='@' declared_type='NSMapTable*'/>
<arg const='true' name='key' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSMaxRange' inline='true'>
<arg name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</function>
<function name='NSMaxX' inline='true'>
<arg name='aRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</function>
<function name='NSMaxY' inline='true'>
<arg name='aRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</function>
<function name='NSMidX' inline='true'>
<arg name='aRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</function>
<function name='NSMidY' inline='true'>
<arg name='aRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</function>
<function name='NSMinX' inline='true'>
<arg name='aRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</function>
<function name='NSMinY' inline='true'>
<arg name='aRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</function>
<function name='NSMouseInRect'>
<arg name='aPoint' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
<arg name='aRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<arg name='flipped' type='B' declared_type='BOOL'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSNextHashEnumeratorItem'>
<arg name='enumerator' type64='^{_NSHashEnumerator=QQ^v}' type='^{_NSHashEnumerator=II^v}' declared_type='NSHashEnumerator*'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSNextMapEnumeratorPair'>
<arg name='enumerator' type64='^{_NSMapEnumerator=QQ^v}' type='^{_NSMapEnumerator=II^v}' declared_type='NSMapEnumerator*'/>
<arg name='key' type='^^v' declared_type='void**'/>
<arg name='value' type='^^v' declared_type='void**'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSOffsetRect'>
<arg name='aRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<arg name='dX' type64='d' type='f' declared_type='CGFloat'/>
<arg name='dY' type64='d' type='f' declared_type='CGFloat'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</function>
<function name='NSOpenStepRootDirectory'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSPageSize'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</function>
<function name='NSPointFromCGPoint' inline='true'>
<arg name='cgpoint' type64='{CGPoint=dd}' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</function>
<function name='NSPointFromString'>
<arg name='aString' type='@' declared_type='NSString*'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</function>
<function name='NSPointInRect'>
<arg name='aPoint' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
<arg name='aRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSPointToCGPoint' inline='true'>
<arg name='nspoint' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
<retval type64='{CGPoint=dd}' type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='NSProtocolFromString'>
<arg name='namestr' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='Protocol*'/>
</function>
<function name='NSRangeFromString'>
<arg name='aString' type='@' declared_type='NSString*'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</function>
<function name='NSRealMemoryAvailable'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</function>
<function name='NSReallocateCollectable'>
<arg name='ptr' type='^v' declared_type='void*'/>
<arg name='size' type64='Q' type='I' declared_type='NSUInteger'/>
<arg name='options' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSRecordAllocationEvent'>
<arg name='eventType' type='i' declared_type='int'/>
<arg name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSRectFromCGRect' inline='true'>
<arg name='cgrect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</function>
<function name='NSRectFromString'>
<arg name='aString' type='@' declared_type='NSString*'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</function>
<function name='NSRectToCGRect' inline='true'>
<arg name='nsrect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</function>
<function name='NSRecycleZone'>
<arg name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSResetHashTable'>
<arg name='table' type='@' declared_type='NSHashTable*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSResetMapTable'>
<arg name='table' type='@' declared_type='NSMapTable*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSReturnAddress'>
<arg name='frame' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSRoundDownToMultipleOfPageSize'>
<arg name='bytes' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</function>
<function name='NSRoundUpToMultipleOfPageSize'>
<arg name='bytes' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</function>
<function name='NSSearchPathForDirectoriesInDomains'>
<arg name='directory' type64='Q' type='I' declared_type='NSSearchPathDirectory'/>
<arg name='domainMask' type64='Q' type='I' declared_type='NSSearchPathDomainMask'/>
<arg name='expandTilde' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='NSArray*'/>
</function>
<function name='NSSelectorFromString'>
<arg name='aSelectorName' type='@' declared_type='NSString*'/>
<retval type=':' declared_type='SEL'/>
</function>
<function name='NSSetUncaughtExceptionHandler'>
<arg function_pointer='true' type='^?' declared_type='NSUncaughtExceptionHandler*'>
<arg type='@' declared_type='NSException*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</function>
<function name='NSSetZoneName'>
<arg name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<arg name='name' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSShouldRetainWithZone'>
<arg name='anObject' type='@' declared_type='id'/>
<arg name='requestedZone' type='^{_NSZone=}' declared_type='NSZone*'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSSizeFromCGSize' inline='true'>
<arg name='cgsize' type64='{CGSize=dd}' type='{CGSize=ff}' declared_type='CGSize'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</function>
<function name='NSSizeFromString'>
<arg name='aString' type='@' declared_type='NSString*'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</function>
<function name='NSSizeToCGSize' inline='true'>
<arg name='nssize' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
<retval type64='{CGSize=dd}' type='{CGSize=ff}' declared_type='CGSize'/>
</function>
<function name='NSStringFromClass'>
<arg name='aClass' type='#' declared_type='Class'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromHashTable'>
<arg name='table' type='@' declared_type='NSHashTable*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromMapTable'>
<arg name='table' type='@' declared_type='NSMapTable*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromPoint'>
<arg name='aPoint' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromProtocol'>
<arg name='proto' type='@' declared_type='Protocol*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromRange'>
<arg name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromRect'>
<arg name='aRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromSelector'>
<arg name='aSelector' type=':' declared_type='SEL'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSStringFromSize'>
<arg name='aSize' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSSwapBigDoubleToHost' inline='true'>
<arg name='x' type='{_NSSwappedDouble=Q}' declared_type='NSSwappedDouble'/>
<retval type='d' declared_type='double'/>
</function>
<function name='NSSwapBigFloatToHost' inline='true'>
<arg name='x' type='{_NSSwappedFloat=I}' declared_type='NSSwappedFloat'/>
<retval type='f' declared_type='float'/>
</function>
<function name='NSSwapBigIntToHost' inline='true'>
<arg name='x' type='I' declared_type='unsigned int'/>
<retval type='I' declared_type='unsigned int'/>
</function>
<function name='NSSwapBigLongLongToHost' inline='true'>
<arg name='x' type='Q' declared_type='unsigned long long'/>
<retval type='Q' declared_type='unsigned long long'/>
</function>
<function name='NSSwapBigLongToHost' inline='true'>
<arg name='x' type64='Q' type='L' declared_type='unsigned long'/>
<retval type64='Q' type='L' declared_type='unsigned long'/>
</function>
<function name='NSSwapBigShortToHost' inline='true'>
<arg name='x' type='S' declared_type='unsigned short'/>
<retval type='S' declared_type='unsigned short'/>
</function>
<function name='NSSwapDouble' inline='true'>
<arg name='x' type='{_NSSwappedDouble=Q}' declared_type='NSSwappedDouble'/>
<retval type='{_NSSwappedDouble=Q}' declared_type='NSSwappedDouble'/>
</function>
<function name='NSSwapFloat' inline='true'>
<arg name='x' type='{_NSSwappedFloat=I}' declared_type='NSSwappedFloat'/>
<retval type='{_NSSwappedFloat=I}' declared_type='NSSwappedFloat'/>
</function>
<function name='NSSwapHostDoubleToBig' inline='true'>
<arg name='x' type='d' declared_type='double'/>
<retval type='{_NSSwappedDouble=Q}' declared_type='NSSwappedDouble'/>
</function>
<function name='NSSwapHostDoubleToLittle' inline='true'>
<arg name='x' type='d' declared_type='double'/>
<retval type='{_NSSwappedDouble=Q}' declared_type='NSSwappedDouble'/>
</function>
<function name='NSSwapHostFloatToBig' inline='true'>
<arg name='x' type='f' declared_type='float'/>
<retval type='{_NSSwappedFloat=I}' declared_type='NSSwappedFloat'/>
</function>
<function name='NSSwapHostFloatToLittle' inline='true'>
<arg name='x' type='f' declared_type='float'/>
<retval type='{_NSSwappedFloat=I}' declared_type='NSSwappedFloat'/>
</function>
<function name='NSSwapHostIntToBig' inline='true'>
<arg name='x' type='I' declared_type='unsigned int'/>
<retval type='I' declared_type='unsigned int'/>
</function>
<function name='NSSwapHostIntToLittle' inline='true'>
<arg name='x' type='I' declared_type='unsigned int'/>
<retval type='I' declared_type='unsigned int'/>
</function>
<function name='NSSwapHostLongLongToBig' inline='true'>
<arg name='x' type='Q' declared_type='unsigned long long'/>
<retval type='Q' declared_type='unsigned long long'/>
</function>
<function name='NSSwapHostLongLongToLittle' inline='true'>
<arg name='x' type='Q' declared_type='unsigned long long'/>
<retval type='Q' declared_type='unsigned long long'/>
</function>
<function name='NSSwapHostLongToBig' inline='true'>
<arg name='x' type64='Q' type='L' declared_type='unsigned long'/>
<retval type64='Q' type='L' declared_type='unsigned long'/>
</function>
<function name='NSSwapHostLongToLittle' inline='true'>
<arg name='x' type64='Q' type='L' declared_type='unsigned long'/>
<retval type64='Q' type='L' declared_type='unsigned long'/>
</function>
<function name='NSSwapHostShortToBig' inline='true'>
<arg name='x' type='S' declared_type='unsigned short'/>
<retval type='S' declared_type='unsigned short'/>
</function>
<function name='NSSwapHostShortToLittle' inline='true'>
<arg name='x' type='S' declared_type='unsigned short'/>
<retval type='S' declared_type='unsigned short'/>
</function>
<function name='NSSwapInt' inline='true'>
<arg name='inv' type='I' declared_type='unsigned int'/>
<retval type='I' declared_type='unsigned int'/>
</function>
<function name='NSSwapLittleDoubleToHost' inline='true'>
<arg name='x' type='{_NSSwappedDouble=Q}' declared_type='NSSwappedDouble'/>
<retval type='d' declared_type='double'/>
</function>
<function name='NSSwapLittleFloatToHost' inline='true'>
<arg name='x' type='{_NSSwappedFloat=I}' declared_type='NSSwappedFloat'/>
<retval type='f' declared_type='float'/>
</function>
<function name='NSSwapLittleIntToHost' inline='true'>
<arg name='x' type='I' declared_type='unsigned int'/>
<retval type='I' declared_type='unsigned int'/>
</function>
<function name='NSSwapLittleLongLongToHost' inline='true'>
<arg name='x' type='Q' declared_type='unsigned long long'/>
<retval type='Q' declared_type='unsigned long long'/>
</function>
<function name='NSSwapLittleLongToHost' inline='true'>
<arg name='x' type64='Q' type='L' declared_type='unsigned long'/>
<retval type64='Q' type='L' declared_type='unsigned long'/>
</function>
<function name='NSSwapLittleShortToHost' inline='true'>
<arg name='x' type='S' declared_type='unsigned short'/>
<retval type='S' declared_type='unsigned short'/>
</function>
<function name='NSSwapLong' inline='true'>
<arg name='inv' type64='Q' type='L' declared_type='unsigned long'/>
<retval type64='Q' type='L' declared_type='unsigned long'/>
</function>
<function name='NSSwapLongLong' inline='true'>
<arg name='inv' type='Q' declared_type='unsigned long long'/>
<retval type='Q' declared_type='unsigned long long'/>
</function>
<function name='NSSwapShort' inline='true'>
<arg name='inv' type='S' declared_type='unsigned short'/>
<retval type='S' declared_type='unsigned short'/>
</function>
<function name='NSTemporaryDirectory'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSUnionRange'>
<arg name='range1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg name='range2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</function>
<function name='NSUnionRect'>
<arg name='aRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<arg name='bRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</function>
<function name='NSUserName'>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSWidth' inline='true'>
<arg name='aRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</function>
<function name='NSZoneCalloc'>
<arg name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<arg name='numElems' type64='Q' type='I' declared_type='NSUInteger'/>
<arg name='byteSize' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSZoneFree'>
<arg name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<arg name='ptr' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSZoneFromPointer'>
<arg name='ptr' type='^v' declared_type='void*'/>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</function>
<function name='NSZoneMalloc'>
<arg name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<arg name='size' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NSZoneName'>
<arg name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSZoneRealloc'>
<arg name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<arg name='ptr' type='^v' declared_type='void*'/>
<arg name='size' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='NXReadNSObjectFromCoder'>
<arg name='decoder' type='@' declared_type='NSCoder*'/>
<retval type='@' declared_type='NSObject*'/>
</function>
<class name='NSAffineTransform'>
<method selector='appendTransform:'>
<arg index='0' name='transform' type='@' declared_type='NSAffineTransform*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithTransform:'>
<arg index='0' name='transform' type='@' declared_type='NSAffineTransform*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='invert'>
<retval type='v' declared_type='void'/>
</method>
<method selector='prependTransform:'>
<arg index='0' name='transform' type='@' declared_type='NSAffineTransform*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rotateByDegrees:'>
<arg index='0' name='angle' type64='d' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rotateByRadians:'>
<arg index='0' name='angle' type64='d' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scaleBy:'>
<arg index='0' name='scale' type64='d' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scaleXBy:yBy:'>
<arg index='0' name='scaleX' type64='d' type='f' declared_type='CGFloat'/>
<arg index='1' name='scaleY' type64='d' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTransformStruct:'>
<arg index='0' name='transformStruct' type64='{_NSAffineTransformStruct=dddddd}' type='{_NSAffineTransformStruct=ffffff}' declared_type='NSAffineTransformStruct'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='transform'>
<retval type='@' declared_type='NSAffineTransform*'/>
</method>
<method selector='transformPoint:'>
<arg index='0' name='aPoint' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='transformSize:'>
<arg index='0' name='aSize' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='transformStruct'>
<retval type64='{_NSAffineTransformStruct=dddddd}' type='{_NSAffineTransformStruct=ffffff}' declared_type='NSAffineTransformStruct'/>
</method>
<method selector='translateXBy:yBy:'>
<arg index='0' name='deltaX' type64='d' type='f' declared_type='CGFloat'/>
<arg index='1' name='deltaY' type64='d' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSAppleEventDescriptor'>
<method selector='aeDesc'>
<retval const='true' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' declared_type='AEDesc*'/>
</method>
<method class_method='true' selector='appleEventWithEventClass:eventID:targetDescriptor:returnID:transactionID:'>
<arg index='0' name='eventClass' type64='I' type='L' declared_type='AEEventClass'/>
<arg index='1' name='eventID' type64='I' type='L' declared_type='AEEventID'/>
<arg index='2' name='targetDescriptor' type='@' declared_type='NSAppleEventDescriptor*'/>
<arg index='3' name='returnID' type='s' declared_type='AEReturnID'/>
<arg index='4' name='transactionID' type64='i' type='l' declared_type='AETransactionID'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='attributeDescriptorForKeyword:'>
<arg index='0' name='keyword' type64='I' type='L' declared_type='AEKeyword'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='booleanValue'>
<retval type='B' declared_type='Boolean'/>
</method>
<method selector='coerceToDescriptorType:'>
<arg index='0' name='descriptorType' type64='I' type='L' declared_type='DescType'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='data'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='descriptorAtIndex:'>
<arg index='0' name='index' type64='q' type='i' declared_type='NSInteger'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='descriptorForKeyword:'>
<arg index='0' name='keyword' type64='I' type='L' declared_type='AEKeyword'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='descriptorType'>
<retval type64='I' type='L' declared_type='DescType'/>
</method>
<method class_method='true' selector='descriptorWithBoolean:'>
<arg index='0' name='boolean' type='B' declared_type='Boolean'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method class_method='true' selector='descriptorWithDescriptorType:bytes:length:'>
<arg index='0' name='descriptorType' type64='I' type='L' declared_type='DescType'/>
<arg const='true' index='1' name='bytes' type='^v' declared_type='void*'/>
<arg index='2' name='byteCount' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method class_method='true' selector='descriptorWithDescriptorType:data:'>
<arg index='0' name='descriptorType' type64='I' type='L' declared_type='DescType'/>
<arg index='1' name='data' type='@' declared_type='NSData*'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method class_method='true' selector='descriptorWithEnumCode:'>
<arg index='0' name='enumerator' type64='I' type='L' declared_type='OSType'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method class_method='true' selector='descriptorWithInt32:'>
<arg index='0' name='signedInt' type64='i' type='l' declared_type='SInt32'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method class_method='true' selector='descriptorWithString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method class_method='true' selector='descriptorWithTypeCode:'>
<arg index='0' name='typeCode' type64='I' type='L' declared_type='OSType'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='enumCodeValue'>
<retval type64='I' type='L' declared_type='OSType'/>
</method>
<method selector='eventClass'>
<retval type64='I' type='L' declared_type='AEEventClass'/>
</method>
<method selector='eventID'>
<retval type64='I' type='L' declared_type='AEEventID'/>
</method>
<method selector='initListDescriptor'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initRecordDescriptor'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithAEDescNoCopy:'>
<arg const='true' index='0' name='aeDesc' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' declared_type='AEDesc*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDescriptorType:bytes:length:'>
<arg index='0' name='descriptorType' type64='I' type='L' declared_type='DescType'/>
<arg const='true' index='1' name='bytes' type='^v' declared_type='void*'/>
<arg index='2' name='byteCount' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDescriptorType:data:'>
<arg index='0' name='descriptorType' type64='I' type='L' declared_type='DescType'/>
<arg index='1' name='data' type='@' declared_type='NSData*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithEventClass:eventID:targetDescriptor:returnID:transactionID:'>
<arg index='0' name='eventClass' type64='I' type='L' declared_type='AEEventClass'/>
<arg index='1' name='eventID' type64='I' type='L' declared_type='AEEventID'/>
<arg index='2' name='targetDescriptor' type='@' declared_type='NSAppleEventDescriptor*'/>
<arg index='3' name='returnID' type='s' declared_type='AEReturnID'/>
<arg index='4' name='transactionID' type64='i' type='l' declared_type='AETransactionID'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertDescriptor:atIndex:'>
<arg index='0' name='descriptor' type='@' declared_type='NSAppleEventDescriptor*'/>
<arg index='1' name='index' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='int32Value'>
<retval type64='i' type='l' declared_type='SInt32'/>
</method>
<method selector='keywordForDescriptorAtIndex:'>
<arg index='0' name='index' type64='q' type='i' declared_type='NSInteger'/>
<retval type64='I' type='L' declared_type='AEKeyword'/>
</method>
<method class_method='true' selector='listDescriptor'>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method class_method='true' selector='nullDescriptor'>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='numberOfItems'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='paramDescriptorForKeyword:'>
<arg index='0' name='keyword' type64='I' type='L' declared_type='AEKeyword'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method class_method='true' selector='recordDescriptor'>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='removeDescriptorAtIndex:'>
<arg index='0' name='index' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeDescriptorWithKeyword:'>
<arg index='0' name='keyword' type64='I' type='L' declared_type='AEKeyword'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeParamDescriptorWithKeyword:'>
<arg index='0' name='keyword' type64='I' type='L' declared_type='AEKeyword'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='returnID'>
<retval type='s' declared_type='AEReturnID'/>
</method>
<method selector='setAttributeDescriptor:forKeyword:'>
<arg index='0' name='descriptor' type='@' declared_type='NSAppleEventDescriptor*'/>
<arg index='1' name='keyword' type64='I' type='L' declared_type='AEKeyword'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDescriptor:forKeyword:'>
<arg index='0' name='descriptor' type='@' declared_type='NSAppleEventDescriptor*'/>
<arg index='1' name='keyword' type64='I' type='L' declared_type='AEKeyword'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParamDescriptor:forKeyword:'>
<arg index='0' name='descriptor' type='@' declared_type='NSAppleEventDescriptor*'/>
<arg index='1' name='keyword' type64='I' type='L' declared_type='AEKeyword'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringValue'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='transactionID'>
<retval type64='i' type='l' declared_type='AETransactionID'/>
</method>
<method selector='typeCodeValue'>
<retval type64='I' type='L' declared_type='OSType'/>
</method>
</class>
<class name='NSAppleEventManager'>
<method selector='appleEventForSuspensionID:'>
<arg index='0' name='suspensionID' type='^{__NSAppleEventManagerSuspension=}' declared_type='NSAppleEventManagerSuspensionID'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='currentAppleEvent'>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='currentReplyAppleEvent'>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='dispatchRawAppleEvent:withRawReply:handlerRefCon:'>
<arg const='true' index='0' name='theAppleEvent' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' declared_type='AppleEvent*'/>
<arg index='1' name='theReply' type='^{AEDesc=I^^{OpaqueAEDataStorageType}}' declared_type='AppleEvent*'/>
<arg index='2' name='handlerRefCon' type64='^v' type='l' declared_type='SRefCon'/>
<retval type='s' declared_type='OSErr'/>
</method>
<method selector='removeEventHandlerForEventClass:andEventID:'>
<arg index='0' name='eventClass' type64='I' type='L' declared_type='AEEventClass'/>
<arg index='1' name='eventID' type64='I' type='L' declared_type='AEEventID'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replyAppleEventForSuspensionID:'>
<arg index='0' name='suspensionID' type='^{__NSAppleEventManagerSuspension=}' declared_type='NSAppleEventManagerSuspensionID'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='resumeWithSuspensionID:'>
<arg index='0' name='suspensionID' type='^{__NSAppleEventManagerSuspension=}' declared_type='NSAppleEventManagerSuspensionID'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCurrentAppleEventAndReplyEventWithSuspensionID:'>
<arg index='0' name='suspensionID' type='^{__NSAppleEventManagerSuspension=}' declared_type='NSAppleEventManagerSuspensionID'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEventHandler:andSelector:forEventClass:andEventID:'>
<arg index='0' name='handler' type='@' declared_type='id'/>
<arg index='1' name='handleEventSelector' type=':' declared_type='SEL'/>
<arg index='2' name='eventClass' type64='I' type='L' declared_type='AEEventClass'/>
<arg index='3' name='eventID' type64='I' type='L' declared_type='AEEventID'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedAppleEventManager'>
<retval type='@' declared_type='NSAppleEventManager*'/>
</method>
<method selector='suspendCurrentAppleEvent'>
<retval type='^{__NSAppleEventManagerSuspension=}' declared_type='NSAppleEventManagerSuspensionID'/>
</method>
</class>
<class name='NSAppleScript'>
<method selector='compileAndReturnError:'>
<arg index='0' name='errorInfo' type='^@' declared_type='NSDictionary**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='executeAndReturnError:'>
<arg index='0' name='errorInfo' type='^@' declared_type='NSDictionary**'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='executeAppleEvent:error:'>
<arg index='0' name='event' type='@' declared_type='NSAppleEventDescriptor*'/>
<arg index='1' name='errorInfo' type='^@' declared_type='NSDictionary**'/>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='initWithContentsOfURL:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='errorInfo' type='^@' declared_type='NSDictionary**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSource:'>
<arg index='0' name='source' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isCompiled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='source'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSArchiver'>
<method class_method='true' selector='archiveRootObject:toFile:'>
<arg index='0' name='rootObject' type='@' declared_type='id'/>
<arg index='1' name='path' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='archivedDataWithRootObject:'>
<arg index='0' name='rootObject' type='@' declared_type='id'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='archiverData'>
<retval type='@' declared_type='NSMutableData*'/>
</method>
<method selector='classNameEncodedForTrueClassName:'>
<arg index='0' name='trueName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='encodeClassName:intoClassName:'>
<arg index='0' name='trueName' type='@' declared_type='NSString*'/>
<arg index='1' name='inArchiveName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeConditionalObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeRootObject:'>
<arg index='0' name='rootObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initForWritingWithMutableData:'>
<arg index='0' name='mdata' type='@' declared_type='NSMutableData*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='replaceObject:withObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='newObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSArray'>
<method selector='addObserver:forKeyPath:options:context:'>
<arg index='0' name='observer' type='@' declared_type='NSObject*'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='2' name='options' type64='Q' type='I' declared_type='NSKeyValueObservingOptions'/>
<arg index='3' name='context' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObserver:toObjectsAtIndexes:forKeyPath:options:context:'>
<arg index='0' name='observer' type='@' declared_type='NSObject*'/>
<arg index='1' name='indexes' type='@' declared_type='NSIndexSet*'/>
<arg index='2' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='3' name='options' type64='Q' type='I' declared_type='NSKeyValueObservingOptions'/>
<arg index='4' name='context' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='array'>
<retval type='@' declared_type='id'/>
</method>
<method selector='arrayByAddingObject:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='arrayByAddingObjectsFromArray:'>
<arg index='0' name='otherArray' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='arrayWithArray:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='arrayWithContentsOfFile:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='arrayWithContentsOfURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='arrayWithObject:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' variadic='true' selector='arrayWithObjects:' sentinel='0'>
<arg index='0' name='firstObj' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='arrayWithObjects:count:'>
<arg const='true' index='0' name='objects' type='^@' declared_type='id*'/>
<arg index='1' name='cnt' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='componentsJoinedByString:'>
<arg index='0' name='separator' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='containsObject:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='count'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:'>
<arg index='0' name='locale' type='@' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:indent:'>
<arg index='0' name='locale' type='@' declared_type='id'/>
<arg index='1' name='level' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='enumerateObjectsAtIndexes:options:usingBlock:'>
<arg index='0' name='s' type='@' declared_type='NSIndexSet*'/>
<arg index='1' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='2' name='block' type='@?' declared_type='void (^)(id, NSUInteger, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateObjectsUsingBlock:'>
<arg function_pointer='true' index='0' name='block' type='@?' declared_type='void (^)(id, NSUInteger, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateObjectsWithOptions:usingBlock:'>
<arg index='0' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='1' name='block' type='@?' declared_type='void (^)(id, NSUInteger, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='filteredArrayUsingPredicate:'>
<arg index='0' name='predicate' type='@' declared_type='NSPredicate*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='firstObjectCommonWithArray:'>
<arg index='0' name='otherArray' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='getObjects:'>
<arg index='0' name='objects' type='^@' declared_type='id*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getObjects:range:'>
<arg index='0' name='objects' type='^@' declared_type='id*'/>
<arg index='1' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='indexOfObject:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObject:inRange:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<arg index='1' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObject:inSortedRange:options:usingComparator:'>
<arg index='0' name='obj' type='@' declared_type='id'/>
<arg index='1' name='r' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='2' name='opts' type64='Q' type='I' declared_type='NSBinarySearchingOptions'/>
<arg function_pointer='true' index='3' name='cmp' type='@?' declared_type='NSComparator'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectAtIndexes:options:passingTest:'>
<arg index='0' name='s' type='@' declared_type='NSIndexSet*'/>
<arg index='1' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='2' name='predicate' type='@?' declared_type='BOOL (^)(id, NSUInteger, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectIdenticalTo:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectIdenticalTo:inRange:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<arg index='1' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectPassingTest:'>
<arg function_pointer='true' index='0' name='predicate' type='@?' declared_type='BOOL (^)(id, NSUInteger, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectWithOptions:passingTest:'>
<arg index='0' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='1' name='predicate' type='@?' declared_type='BOOL (^)(id, NSUInteger, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexesOfObjectsAtIndexes:options:passingTest:'>
<arg index='0' name='s' type='@' declared_type='NSIndexSet*'/>
<arg index='1' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='2' name='predicate' type='@?' declared_type='BOOL (^)(id, NSUInteger, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='indexesOfObjectsPassingTest:'>
<arg function_pointer='true' index='0' name='predicate' type='@?' declared_type='BOOL (^)(id, NSUInteger, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='indexesOfObjectsWithOptions:passingTest:'>
<arg index='0' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='1' name='predicate' type='@?' declared_type='BOOL (^)(id, NSUInteger, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='initWithArray:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithArray:copyItems:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<arg index='1' name='flag' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method variadic='true' selector='initWithObjects:' sentinel='0'>
<arg index='0' name='firstObj' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithObjects:count:'>
<arg const='true' index='0' name='objects' type='^@' declared_type='id*'/>
<arg index='1' name='cnt' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToArray:'>
<arg index='0' name='otherArray' type='@' declared_type='NSArray*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lastObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='makeObjectsPerformSelector:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeObjectsPerformSelector:withObject:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<arg index='1' name='argument' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='objectAtIndex:'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectAtIndexedSubscript:'>
<arg index='0' name='idx' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='objectsAtIndexes:'>
<arg index='0' name='indexes' type='@' declared_type='NSIndexSet*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='pathsMatchingExtensions:'>
<arg index='0' name='filterTypes' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removeObserver:forKeyPath:'>
<arg index='0' name='observer' type='@' declared_type='NSObject*'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:forKeyPath:context:'>
<arg index='0' name='observer' type='@' declared_type='NSObject*'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='2' name='context' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:fromObjectsAtIndexes:forKeyPath:'>
<arg index='0' name='observer' type='@' declared_type='NSObject*'/>
<arg index='1' name='indexes' type='@' declared_type='NSIndexSet*'/>
<arg index='2' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:fromObjectsAtIndexes:forKeyPath:context:'>
<arg index='0' name='observer' type='@' declared_type='NSObject*'/>
<arg index='1' name='indexes' type='@' declared_type='NSIndexSet*'/>
<arg index='2' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='3' name='context' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reverseObjectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='setValue:forKey:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortedArrayHint'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='sortedArrayUsingComparator:'>
<arg function_pointer='true' index='0' name='cmptr' type='@?' declared_type='NSComparator'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sortedArrayUsingDescriptors:'>
<arg index='0' name='sortDescriptors' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sortedArrayUsingFunction:context:'>
<arg function_pointer='true' index='0' name='comparator' type='^?' declared_type='NSInteger (*)(id, id, void *)'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^v' declared_type='void*'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</arg>
<arg index='1' name='context' type='^v' declared_type='void*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sortedArrayUsingFunction:context:hint:'>
<arg function_pointer='true' index='0' name='comparator' type='^?' declared_type='NSInteger (*)(id, id, void *)'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^v' declared_type='void*'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</arg>
<arg index='1' name='context' type='^v' declared_type='void*'/>
<arg index='2' name='hint' type='@' declared_type='NSData*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sortedArrayUsingSelector:'>
<arg index='0' name='comparator' type=':' declared_type='SEL'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sortedArrayWithOptions:usingComparator:'>
<arg index='0' name='opts' type64='Q' type='I' declared_type='NSSortOptions'/>
<arg function_pointer='true' index='1' name='cmptr' type='@?' declared_type='NSComparator'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='subarrayWithRange:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='valueForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='writeToFile:atomically:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='useAuxiliaryFile' type='B' declared_type='BOOL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:atomically:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='atomically' type='B' declared_type='BOOL'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSAssertionHandler'>
<method class_method='true' selector='currentHandler'>
<retval type='@' declared_type='NSAssertionHandler*'/>
</method>
<method variadic='true' selector='handleFailureInFunction:file:lineNumber:description:'>
<arg index='0' name='functionName' type='@' declared_type='NSString*'/>
<arg index='1' name='fileName' type='@' declared_type='NSString*'/>
<arg index='2' name='line' type64='q' type='i' declared_type='NSInteger'/>
<arg index='3' name='format' printf_format='true' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method variadic='true' selector='handleFailureInMethod:object:file:lineNumber:description:'>
<arg index='0' name='selector' type=':' declared_type='SEL'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<arg index='2' name='fileName' type='@' declared_type='NSString*'/>
<arg index='3' name='line' type64='q' type='i' declared_type='NSInteger'/>
<arg index='4' name='format' printf_format='true' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSAttributedString'>
<method selector='attribute:atIndex:effectiveRange:'>
<arg index='0' name='attrName' type='@' declared_type='NSString*'/>
<arg index='1' name='location' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='range' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='attribute:atIndex:longestEffectiveRange:inRange:'>
<arg index='0' name='attrName' type='@' declared_type='NSString*'/>
<arg index='1' name='location' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='range' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer'/>
<arg index='3' name='rangeLimit' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='attributedSubstringFromRange:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='attributesAtIndex:effectiveRange:'>
<arg index='0' name='location' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='range' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='attributesAtIndex:longestEffectiveRange:inRange:'>
<arg index='0' name='location' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='range' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer'/>
<arg index='2' name='rangeLimit' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='enumerateAttribute:inRange:options:usingBlock:'>
<arg index='0' name='attrName' type='@' declared_type='NSString*'/>
<arg index='1' name='enumerationRange' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='2' name='opts' type64='Q' type='I' declared_type='NSAttributedStringEnumerationOptions'/>
<arg function_pointer='true' index='3' name='block' type='@?' declared_type='void (^)(id, NSRange, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateAttributesInRange:options:usingBlock:'>
<arg index='0' name='enumerationRange' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='opts' type64='Q' type='I' declared_type='NSAttributedStringEnumerationOptions'/>
<arg function_pointer='true' index='2' name='block' type='@?' declared_type='void (^)(NSDictionary *, NSRange, BOOL *)'>
<arg type='@' declared_type='NSDictionary*'/>
<arg type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithAttributedString:'>
<arg index='0' name='attrStr' type='@' declared_type='NSAttributedString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:'>
<arg index='0' name='str' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:attributes:'>
<arg index='0' name='str' type='@' declared_type='NSString*'/>
<arg index='1' name='attrs' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToAttributedString:'>
<arg index='0' name='other' type='@' declared_type='NSAttributedString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='length'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='string'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSAutoreleasePool'>
<method class_method='true' selector='addObject:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObject:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drain'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='showPools'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSBlockOperation'>
<method selector='addExecutionBlock:'>
<arg function_pointer='true' index='0' name='block' type='@?' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='blockOperationWithBlock:'>
<arg function_pointer='true' index='0' name='block' type='@?' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='executionBlocks'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSBundle'>
<method selector='URLForAuxiliaryExecutable:'>
<arg index='0' name='executableName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForResource:withExtension:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='ext' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForResource:withExtension:subdirectory:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='ext' type='@' declared_type='NSString*'/>
<arg index='2' name='subpath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method class_method='true' selector='URLForResource:withExtension:subdirectory:inBundleWithURL:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='ext' type='@' declared_type='NSString*'/>
<arg index='2' name='subpath' type='@' declared_type='NSString*'/>
<arg index='3' name='bundleURL' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForResource:withExtension:subdirectory:localization:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='ext' type='@' declared_type='NSString*'/>
<arg index='2' name='subpath' type='@' declared_type='NSString*'/>
<arg index='3' name='localizationName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLsForResourcesWithExtension:subdirectory:'>
<arg index='0' name='ext' type='@' declared_type='NSString*'/>
<arg index='1' name='subpath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='URLsForResourcesWithExtension:subdirectory:inBundleWithURL:'>
<arg index='0' name='ext' type='@' declared_type='NSString*'/>
<arg index='1' name='subpath' type='@' declared_type='NSString*'/>
<arg index='2' name='bundleURL' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='URLsForResourcesWithExtension:subdirectory:localization:'>
<arg index='0' name='ext' type='@' declared_type='NSString*'/>
<arg index='1' name='subpath' type='@' declared_type='NSString*'/>
<arg index='2' name='localizationName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='allBundles'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='allFrameworks'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='appStoreReceiptURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='builtInPlugInsPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='builtInPlugInsURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method class_method='true' selector='bundleForClass:'>
<arg index='0' name='aClass' type='#' declared_type='Class'/>
<retval type='@' declared_type='NSBundle*'/>
</method>
<method selector='bundleIdentifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='bundlePath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='bundleURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method class_method='true' selector='bundleWithIdentifier:'>
<arg index='0' name='identifier' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSBundle*'/>
</method>
<method class_method='true' selector='bundleWithPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSBundle*'/>
</method>
<method class_method='true' selector='bundleWithURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='NSBundle*'/>
</method>
<method selector='classNamed:'>
<arg index='0' name='className' type='@' declared_type='NSString*'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='developmentLocalization'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='executableArchitectures'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='executablePath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='executableURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='infoDictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='initWithPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isLoaded'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='load'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='loadAndReturnError:'>
<arg index='0' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='localizations'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='localizedInfoDictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='localizedStringForKey:value:table:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<arg index='1' name='value' type='@' declared_type='NSString*'/>
<arg index='2' name='tableName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='mainBundle'>
<retval type='@' declared_type='NSBundle*'/>
</method>
<method selector='objectForInfoDictionaryKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='pathForAuxiliaryExecutable:'>
<arg index='0' name='executableName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pathForResource:ofType:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='ext' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='pathForResource:ofType:inDirectory:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='ext' type='@' declared_type='NSString*'/>
<arg index='2' name='bundlePath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pathForResource:ofType:inDirectory:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='ext' type='@' declared_type='NSString*'/>
<arg index='2' name='subpath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pathForResource:ofType:inDirectory:forLocalization:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='ext' type='@' declared_type='NSString*'/>
<arg index='2' name='subpath' type='@' declared_type='NSString*'/>
<arg index='3' name='localizationName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='pathsForResourcesOfType:inDirectory:'>
<arg index='0' name='ext' type='@' declared_type='NSString*'/>
<arg index='1' name='bundlePath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='pathsForResourcesOfType:inDirectory:'>
<arg index='0' name='ext' type='@' declared_type='NSString*'/>
<arg index='1' name='subpath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='pathsForResourcesOfType:inDirectory:forLocalization:'>
<arg index='0' name='ext' type='@' declared_type='NSString*'/>
<arg index='1' name='subpath' type='@' declared_type='NSString*'/>
<arg index='2' name='localizationName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='preferredLocalizations'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='preferredLocalizationsFromArray:'>
<arg index='0' name='localizationsArray' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='preferredLocalizationsFromArray:forPreferences:'>
<arg index='0' name='localizationsArray' type='@' declared_type='NSArray*'/>
<arg index='1' name='preferencesArray' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='preflightAndReturnError:'>
<arg index='0' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='principalClass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='privateFrameworksPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='privateFrameworksURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='resourcePath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='resourceURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='sharedFrameworksPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='sharedFrameworksURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='sharedSupportPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='sharedSupportURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='unload'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSByteCountFormatter'>
<method selector='allowedUnits'>
<retval type64='Q' type='I' declared_type='NSByteCountFormatterUnits'/>
</method>
<method selector='allowsNonnumericFormatting'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='countStyle'>
<retval type64='q' type='i' declared_type='NSByteCountFormatterCountStyle'/>
</method>
<method selector='includesActualByteCount'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='includesCount'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='includesUnit'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isAdaptive'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAdaptive:'>
<arg index='0' name='adaptive' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowedUnits:'>
<arg index='0' name='allowedUnits' type64='Q' type='I' declared_type='NSByteCountFormatterUnits'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsNonnumericFormatting:'>
<arg index='0' name='allowsNonnumericFormatting' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCountStyle:'>
<arg index='0' name='countStyle' type64='q' type='i' declared_type='NSByteCountFormatterCountStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIncludesActualByteCount:'>
<arg index='0' name='includesActualByteCount' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIncludesCount:'>
<arg index='0' name='includesCount' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIncludesUnit:'>
<arg index='0' name='includesUnit' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setZeroPadsFractionDigits:'>
<arg index='0' name='zeroPadsFractionDigits' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringFromByteCount:'>
<arg index='0' name='byteCount' type='q' declared_type='long long'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='stringFromByteCount:countStyle:'>
<arg index='0' name='byteCount' type='q' declared_type='long long'/>
<arg index='1' name='countStyle' type64='q' type='i' declared_type='NSByteCountFormatterCountStyle'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='zeroPadsFractionDigits'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSCache'>
<method selector='countLimit'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='evictsObjectsWithDiscardedContent'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='objectForKey:'>
<arg index='0' name='key' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectForKey:'>
<arg index='0' name='key' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCountLimit:'>
<arg index='0' name='lim' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' name='d' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEvictsObjectsWithDiscardedContent:'>
<arg index='0' name='b' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setName:'>
<arg index='0' name='n' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:forKey:'>
<arg index='0' name='obj' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:forKey:cost:'>
<arg index='0' name='obj' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='id'/>
<arg index='2' name='g' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTotalCostLimit:'>
<arg index='0' name='lim' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='totalCostLimit'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
</class>
<class name='NSCachedURLResponse'>
<method selector='data'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='initWithResponse:data:'>
<arg index='0' name='response' type='@' declared_type='NSURLResponse*'/>
<arg index='1' name='data' type='@' declared_type='NSData*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithResponse:data:userInfo:storagePolicy:'>
<arg index='0' name='response' type='@' declared_type='NSURLResponse*'/>
<arg index='1' name='data' type='@' declared_type='NSData*'/>
<arg index='2' name='userInfo' type='@' declared_type='NSDictionary*'/>
<arg index='3' name='storagePolicy' type64='Q' type='I' declared_type='NSURLCacheStoragePolicy'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='response'>
<retval type='@' declared_type='NSURLResponse*'/>
</method>
<method selector='storagePolicy'>
<retval type64='Q' type='I' declared_type='NSURLCacheStoragePolicy'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSCalendar'>
<method class_method='true' selector='autoupdatingCurrentCalendar'>
<retval type='@' declared_type='id'/>
</method>
<method selector='calendarIdentifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='components:fromDate:'>
<arg index='0' name='unitFlags' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='date' type='@' declared_type='NSDate*'/>
<retval type='@' declared_type='NSDateComponents*'/>
</method>
<method selector='components:fromDate:toDate:options:'>
<arg index='0' name='unitFlags' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='startingDate' type='@' declared_type='NSDate*'/>
<arg index='2' name='resultDate' type='@' declared_type='NSDate*'/>
<arg index='3' name='opts' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSDateComponents*'/>
</method>
<method class_method='true' selector='currentCalendar'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dateByAddingComponents:toDate:options:'>
<arg index='0' name='comps' type='@' declared_type='NSDateComponents*'/>
<arg index='1' name='date' type='@' declared_type='NSDate*'/>
<arg index='2' name='opts' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='dateFromComponents:'>
<arg index='0' name='comps' type='@' declared_type='NSDateComponents*'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='firstWeekday'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='initWithCalendarIdentifier:'>
<arg index='0' name='ident' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='locale'>
<retval type='@' declared_type='NSLocale*'/>
</method>
<method selector='maximumRangeOfUnit:'>
<arg index='0' name='unit' type64='Q' type='I' declared_type='NSCalendarUnit'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='minimumDaysInFirstWeek'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='minimumRangeOfUnit:'>
<arg index='0' name='unit' type64='Q' type='I' declared_type='NSCalendarUnit'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='ordinalityOfUnit:inUnit:forDate:'>
<arg index='0' name='smaller' type64='Q' type='I' declared_type='NSCalendarUnit'/>
<arg index='1' name='larger' type64='Q' type='I' declared_type='NSCalendarUnit'/>
<arg index='2' name='date' type='@' declared_type='NSDate*'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='rangeOfUnit:inUnit:forDate:'>
<arg index='0' name='smaller' type64='Q' type='I' declared_type='NSCalendarUnit'/>
<arg index='1' name='larger' type64='Q' type='I' declared_type='NSCalendarUnit'/>
<arg index='2' name='date' type='@' declared_type='NSDate*'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeOfUnit:startDate:interval:forDate:'>
<arg index='0' name='unit' type64='Q' type='I' declared_type='NSCalendarUnit'/>
<arg index='1' name='datep' type='^@' declared_type='NSDate**'/>
<arg index='2' name='tip' type='^d' declared_type='NSTimeInterval*'/>
<arg index='3' name='date' type='@' declared_type='NSDate*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setFirstWeekday:'>
<arg index='0' name='weekday' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocale:'>
<arg index='0' name='locale' type='@' declared_type='NSLocale*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumDaysInFirstWeek:'>
<arg index='0' name='mdw' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeZone:'>
<arg index='0' name='tz' type='@' declared_type='NSTimeZone*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='timeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
</class>
<class name='NSCalendarDate'>
<method class_method='true' selector='calendarDate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='calendarFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dateByAddingYears:months:days:hours:minutes:seconds:'>
<arg index='0' name='year' type64='q' type='i' declared_type='NSInteger'/>
<arg index='1' name='month' type64='q' type='i' declared_type='NSInteger'/>
<arg index='2' name='day' type64='q' type='i' declared_type='NSInteger'/>
<arg index='3' name='hour' type64='q' type='i' declared_type='NSInteger'/>
<arg index='4' name='minute' type64='q' type='i' declared_type='NSInteger'/>
<arg index='5' name='second' type64='q' type='i' declared_type='NSInteger'/>
<retval type='@' declared_type='NSCalendarDate*'/>
</method>
<method class_method='true' selector='dateWithString:calendarFormat:'>
<arg index='0' name='description' type='@' declared_type='NSString*'/>
<arg index='1' name='format' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dateWithString:calendarFormat:locale:'>
<arg index='0' name='description' type='@' declared_type='NSString*'/>
<arg index='1' name='format' type='@' declared_type='NSString*'/>
<arg index='2' name='locale' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dateWithYear:month:day:hour:minute:second:timeZone:'>
<arg index='0' name='year' type64='q' type='i' declared_type='NSInteger'/>
<arg index='1' name='month' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='day' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='3' name='hour' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='4' name='minute' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='5' name='second' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='6' name='aTimeZone' type='@' declared_type='NSTimeZone*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dayOfCommonEra'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='dayOfMonth'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='dayOfWeek'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='dayOfYear'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='descriptionWithCalendarFormat:'>
<arg index='0' name='format' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithCalendarFormat:locale:'>
<arg index='0' name='format' type='@' declared_type='NSString*'/>
<arg index='1' name='locale' type='@' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:'>
<arg index='0' name='locale' type='@' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='hourOfDay'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='initWithString:'>
<arg index='0' name='description' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:calendarFormat:'>
<arg index='0' name='description' type='@' declared_type='NSString*'/>
<arg index='1' name='format' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:calendarFormat:locale:'>
<arg index='0' name='description' type='@' declared_type='NSString*'/>
<arg index='1' name='format' type='@' declared_type='NSString*'/>
<arg index='2' name='locale' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithYear:month:day:hour:minute:second:timeZone:'>
<arg index='0' name='year' type64='q' type='i' declared_type='NSInteger'/>
<arg index='1' name='month' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='day' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='3' name='hour' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='4' name='minute' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='5' name='second' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='6' name='aTimeZone' type='@' declared_type='NSTimeZone*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='minuteOfHour'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='monthOfYear'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='secondOfMinute'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='setCalendarFormat:'>
<arg index='0' name='format' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeZone:'>
<arg index='0' name='aTimeZone' type='@' declared_type='NSTimeZone*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='timeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method selector='yearOfCommonEra'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='years:months:days:hours:minutes:seconds:sinceDate:'>
<arg index='0' name='yp' type64='^q' type='^i' declared_type='NSInteger*'/>
<arg index='1' name='mop' type64='^q' type='^i' declared_type='NSInteger*'/>
<arg index='2' name='dp' type64='^q' type='^i' declared_type='NSInteger*'/>
<arg index='3' name='hp' type64='^q' type='^i' declared_type='NSInteger*'/>
<arg index='4' name='mip' type64='^q' type='^i' declared_type='NSInteger*'/>
<arg index='5' name='sp' type64='^q' type='^i' declared_type='NSInteger*'/>
<arg index='6' name='date' type='@' declared_type='NSCalendarDate*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSCharacterSet'>
<method class_method='true' selector='alphanumericCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method selector='bitmapRepresentation'>
<retval type='@' declared_type='NSData*'/>
</method>
<method class_method='true' selector='capitalizedLetterCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method selector='characterIsMember:'>
<arg index='0' name='aCharacter' type='S' declared_type='unichar'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='characterSetWithBitmapRepresentation:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='characterSetWithCharactersInString:'>
<arg index='0' name='aString' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='characterSetWithContentsOfFile:'>
<arg index='0' name='fName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='characterSetWithRange:'>
<arg index='0' name='aRange' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='controlCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='decimalDigitCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='decomposableCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method selector='hasMemberInPlane:'>
<arg index='0' name='thePlane' type='C' declared_type='uint8_t'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='illegalCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method selector='invertedSet'>
<retval type='@' declared_type='NSCharacterSet*'/>
</method>
<method selector='isSupersetOfSet:'>
<arg index='0' name='theOtherSet' type='@' declared_type='NSCharacterSet*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='letterCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method selector='longCharacterIsMember:'>
<arg index='0' name='theLongChar' type64='I' type='L' declared_type='UTF32Char'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='lowercaseLetterCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='newlineCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='nonBaseCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='punctuationCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='symbolCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='uppercaseLetterCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='whitespaceAndNewlineCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='whitespaceCharacterSet'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSClassDescription'>
<method selector='attributeKeys'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='classDescriptionForClass:'>
<arg index='0' name='aClass' type='#' declared_type='Class'/>
<retval type='@' declared_type='NSClassDescription*'/>
</method>
<method class_method='true' selector='invalidateClassDescriptionCache'>
<retval type='v' declared_type='void'/>
</method>
<method selector='inverseForRelationshipKey:'>
<arg index='0' name='relationshipKey' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='registerClassDescription:forClass:'>
<arg index='0' name='description' type='@' declared_type='NSClassDescription*'/>
<arg index='1' name='aClass' type='#' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='toManyRelationshipKeys'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='toOneRelationshipKeys'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSCloneCommand'>
<method selector='keySpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='setReceiversSpecifier:'>
<arg index='0' name='receiversRef' type='@' declared_type='NSScriptObjectSpecifier*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSCloseCommand'>
<method selector='saveOptions'>
<retval type64='Q' type='I' declared_type='NSSaveOptions'/>
</method>
</class>
<class name='NSCoder'>
<method selector='allowedClasses'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='allowsKeyedCoding'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='containsValueForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='decodeArrayOfObjCType:count:at:'>
<arg const='true' index='0' name='itemType' type='*' declared_type='char*'/>
<arg index='1' name='count' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='array' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='decodeBoolForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='decodeBytesForKey:returnedLength:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<arg index='1' name='lengthp' type64='^Q' type='^I' declared_type='NSUInteger*'/>
<retval const='true' type='*' declared_type='uint8_t*'/>
</method>
<method selector='decodeBytesWithReturnedLength:'>
<arg index='0' name='lengthp' type64='^Q' type='^I' declared_type='NSUInteger*'/>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='decodeDataObject'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='decodeDoubleForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='decodeFloatForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='f' declared_type='float'/>
</method>
<method selector='decodeInt32ForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='i' declared_type='int32_t'/>
</method>
<method selector='decodeInt64ForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='q' declared_type='int64_t'/>
</method>
<method selector='decodeIntForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='i' declared_type='int'/>
</method>
<method selector='decodeIntegerForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='decodeNXObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='decodeObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='decodeObjectForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='decodeObjectOfClass:forKey:'>
<arg index='0' name='aClass' type='#' declared_type='Class'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='decodeObjectOfClasses:forKey:'>
<arg index='0' name='classes' type='@' declared_type='NSSet*'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='decodePoint'>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='decodePointForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='decodePropertyList'>
<retval type='@' declared_type='id'/>
</method>
<method selector='decodePropertyListForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='decodeRect'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='decodeRectForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='decodeSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='decodeSizeForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='decodeValueOfObjCType:at:'>
<arg const='true' index='0' name='type' type='*' declared_type='char*'/>
<arg index='1' name='data' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method variadic='true' selector='decodeValuesOfObjCTypes:'>
<arg const='true' index='0' name='types' type='*' declared_type='char*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeArrayOfObjCType:count:at:'>
<arg const='true' index='0' name='type' type='*' declared_type='char*'/>
<arg index='1' name='count' type64='Q' type='I' declared_type='NSUInteger'/>
<arg const='true' index='2' name='array' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeBool:forKey:'>
<arg index='0' name='boolv' type='B' declared_type='BOOL'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeBycopyObject:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeByrefObject:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeBytes:length:'>
<arg const='true' index='0' name='byteaddr' type='^v' declared_type='void*'/>
<arg index='1' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeBytes:length:forKey:'>
<arg const='true' index='0' name='bytesp' type='*' declared_type='uint8_t*'/>
<arg index='1' name='lenv' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeConditionalObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeConditionalObject:forKey:'>
<arg index='0' name='objv' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeDataObject:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeDouble:forKey:'>
<arg index='0' name='realv' type='d' declared_type='double'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeFloat:forKey:'>
<arg index='0' name='realv' type='f' declared_type='float'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeInt32:forKey:'>
<arg index='0' name='intv' type='i' declared_type='int32_t'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeInt64:forKey:'>
<arg index='0' name='intv' type='q' declared_type='int64_t'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeInt:forKey:'>
<arg index='0' name='intv' type='i' declared_type='int'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeInteger:forKey:'>
<arg index='0' name='intv' type64='q' type='i' declared_type='NSInteger'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeNXObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeObject:forKey:'>
<arg index='0' name='objv' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodePoint:'>
<arg index='0' name='point' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodePoint:forKey:'>
<arg index='0' name='point' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodePropertyList:'>
<arg index='0' name='aPropertyList' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeRect:'>
<arg index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeRect:forKey:'>
<arg index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeRootObject:'>
<arg index='0' name='rootObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeSize:'>
<arg index='0' name='size' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeSize:forKey:'>
<arg index='0' name='size' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeValueOfObjCType:at:'>
<arg const='true' index='0' name='type' type='*' declared_type='char*'/>
<arg const='true' index='1' name='addr' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method variadic='true' selector='encodeValuesOfObjCTypes:'>
<arg const='true' index='0' name='types' type='*' declared_type='char*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='objectZone'>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</method>
<method selector='requiresSecureCoding'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setObjectZone:'>
<arg index='0' name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='systemVersion'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='versionForClassName:'>
<arg index='0' name='className' type='@' declared_type='NSString*'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='NSComparisonPredicate'>
<method selector='comparisonPredicateModifier'>
<retval type64='Q' type='I' declared_type='NSComparisonPredicateModifier'/>
</method>
<method selector='customSelector'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='initWithLeftExpression:rightExpression:customSelector:'>
<arg index='0' name='lhs' type='@' declared_type='NSExpression*'/>
<arg index='1' name='rhs' type='@' declared_type='NSExpression*'/>
<arg index='2' name='selector' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithLeftExpression:rightExpression:modifier:type:options:'>
<arg index='0' name='lhs' type='@' declared_type='NSExpression*'/>
<arg index='1' name='rhs' type='@' declared_type='NSExpression*'/>
<arg index='2' name='modifier' type64='Q' type='I' declared_type='NSComparisonPredicateModifier'/>
<arg index='3' name='type' type64='Q' type='I' declared_type='NSPredicateOperatorType'/>
<arg index='4' name='options' type64='Q' type='I' declared_type='NSComparisonPredicateOptions'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='leftExpression'>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='options'>
<retval type64='Q' type='I' declared_type='NSComparisonPredicateOptions'/>
</method>
<method selector='predicateOperatorType'>
<retval type64='Q' type='I' declared_type='NSPredicateOperatorType'/>
</method>
<method class_method='true' selector='predicateWithLeftExpression:rightExpression:customSelector:'>
<arg index='0' name='lhs' type='@' declared_type='NSExpression*'/>
<arg index='1' name='rhs' type='@' declared_type='NSExpression*'/>
<arg index='2' name='selector' type=':' declared_type='SEL'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method class_method='true' selector='predicateWithLeftExpression:rightExpression:modifier:type:options:'>
<arg index='0' name='lhs' type='@' declared_type='NSExpression*'/>
<arg index='1' name='rhs' type='@' declared_type='NSExpression*'/>
<arg index='2' name='modifier' type64='Q' type='I' declared_type='NSComparisonPredicateModifier'/>
<arg index='3' name='type' type64='Q' type='I' declared_type='NSPredicateOperatorType'/>
<arg index='4' name='options' type64='Q' type='I' declared_type='NSComparisonPredicateOptions'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='rightExpression'>
<retval type='@' declared_type='NSExpression*'/>
</method>
</class>
<class name='NSCompoundPredicate'>
<method class_method='true' selector='andPredicateWithSubpredicates:'>
<arg index='0' name='subpredicates' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='compoundPredicateType'>
<retval type64='Q' type='I' declared_type='NSCompoundPredicateType'/>
</method>
<method selector='initWithType:subpredicates:'>
<arg index='0' name='type' type64='Q' type='I' declared_type='NSCompoundPredicateType'/>
<arg index='1' name='subpredicates' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='notPredicateWithSubpredicate:'>
<arg index='0' name='predicate' type='@' declared_type='NSPredicate*'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method class_method='true' selector='orPredicateWithSubpredicates:'>
<arg index='0' name='subpredicates' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='subpredicates'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSCondition'>
<method selector='broadcast'>
<retval type='v' declared_type='void'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setName:'>
<arg index='0' name='n' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='signal'>
<retval type='v' declared_type='void'/>
</method>
<method selector='wait'>
<retval type='v' declared_type='void'/>
</method>
<method selector='waitUntilDate:'>
<arg index='0' name='limit' type='@' declared_type='NSDate*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSConditionLock'>
<method selector='condition'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='initWithCondition:'>
<arg index='0' name='condition' type64='q' type='i' declared_type='NSInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lockBeforeDate:'>
<arg index='0' name='limit' type='@' declared_type='NSDate*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lockWhenCondition:'>
<arg index='0' name='condition' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='lockWhenCondition:beforeDate:'>
<arg index='0' name='condition' type64='q' type='i' declared_type='NSInteger'/>
<arg index='1' name='limit' type='@' declared_type='NSDate*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setName:'>
<arg index='0' name='n' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tryLock'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tryLockWhenCondition:'>
<arg index='0' name='condition' type64='q' type='i' declared_type='NSInteger'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='unlockWithCondition:'>
<arg index='0' name='condition' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSConnection'>
<method selector='addRequestMode:'>
<arg index='0' name='rmode' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addRunLoop:'>
<arg index='0' name='runloop' type='@' declared_type='NSRunLoop*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='allConnections'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='connectionWithReceivePort:sendPort:'>
<arg index='0' name='receivePort' type='@' declared_type='NSPort*'/>
<arg index='1' name='sendPort' type='@' declared_type='NSPort*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='connectionWithRegisteredName:host:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='hostName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='connectionWithRegisteredName:host:usingNameServer:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='hostName' type='@' declared_type='NSString*'/>
<arg index='2' name='server' type='@' declared_type='NSPortNameServer*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='currentConversation'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='defaultConnection'>
<retval type='@' declared_type='NSConnection*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dispatchWithComponents:'>
<arg index='0' name='components' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='enableMultipleThreads'>
<retval type='v' declared_type='void'/>
</method>
<method selector='independentConversationQueueing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithReceivePort:sendPort:'>
<arg index='0' name='receivePort' type='@' declared_type='NSPort*'/>
<arg index='1' name='sendPort' type='@' declared_type='NSPort*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='invalidate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isValid'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='localObjects'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='multipleThreadsEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='receivePort'>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='registerName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='registerName:withNameServer:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='server' type='@' declared_type='NSPortNameServer*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='remoteObjects'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removeRequestMode:'>
<arg index='0' name='rmode' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeRunLoop:'>
<arg index='0' name='runloop' type='@' declared_type='NSRunLoop*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replyTimeout'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='requestModes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='requestTimeout'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='rootObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='rootProxy'>
<retval type='@' declared_type='NSDistantObject*'/>
</method>
<method class_method='true' selector='rootProxyForConnectionWithRegisteredName:host:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='hostName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDistantObject*'/>
</method>
<method class_method='true' selector='rootProxyForConnectionWithRegisteredName:host:usingNameServer:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='hostName' type='@' declared_type='NSString*'/>
<arg index='2' name='server' type='@' declared_type='NSPortNameServer*'/>
<retval type='@' declared_type='NSDistantObject*'/>
</method>
<method selector='runInNewThread'>
<retval type='v' declared_type='void'/>
</method>
<method selector='sendPort'>
<retval type='@' declared_type='NSPort*'/>
</method>
<method class_method='true' selector='serviceConnectionWithName:rootObject:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='root' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='serviceConnectionWithName:rootObject:usingNameServer:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='root' type='@' declared_type='id'/>
<arg index='2' name='server' type='@' declared_type='NSPortNameServer*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDelegate:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIndependentConversationQueueing:'>
<arg index='0' name='yorn' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReplyTimeout:'>
<arg index='0' name='ti' type='d' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRequestTimeout:'>
<arg index='0' name='ti' type='d' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRootObject:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='statistics'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSCountedSet'>
<method selector='addObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='countForObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='initWithArray:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCapacity:'>
<arg index='0' name='numItems' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSet:'>
<arg index='0' name='set' type='@' declared_type='NSSet*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='removeObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSCreateCommand'>
<method selector='createClassDescription'>
<retval type='@' declared_type='NSScriptClassDescription*'/>
</method>
<method selector='resolvedKeyDictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSData'>
<method selector='bytes'>
<retval const='true' type='^v' declared_type='void*'/>
</method>
<method class_method='true' selector='data'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dataWithBytes:length:'>
<arg const='true' index='0' name='bytes' type='^v' declared_type='void*'/>
<arg index='1' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dataWithBytesNoCopy:length:'>
<arg index='0' name='bytes' type='^v' declared_type='void*'/>
<arg index='1' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dataWithBytesNoCopy:length:freeWhenDone:'>
<arg index='0' name='bytes' type='^v' declared_type='void*'/>
<arg index='1' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='b' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dataWithContentsOfFile:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dataWithContentsOfFile:options:error:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='readOptionsMask' type64='Q' type='I' declared_type='NSDataReadingOptions'/>
<arg index='2' name='errorPtr' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dataWithContentsOfMappedFile:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dataWithContentsOfURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dataWithContentsOfURL:options:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='readOptionsMask' type64='Q' type='I' declared_type='NSDataReadingOptions'/>
<arg index='2' name='errorPtr' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dataWithData:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='getBytes:'>
<arg index='0' name='buffer' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getBytes:length:'>
<arg index='0' name='buffer' type='^v' declared_type='void*'/>
<arg index='1' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getBytes:range:'>
<arg index='0' name='buffer' type='^v' declared_type='void*'/>
<arg index='1' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBytes:length:'>
<arg const='true' index='0' name='bytes' type='^v' declared_type='void*'/>
<arg index='1' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithBytesNoCopy:length:'>
<arg index='0' name='bytes' type='^v' declared_type='void*'/>
<arg index='1' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithBytesNoCopy:length:freeWhenDone:'>
<arg index='0' name='bytes' type='^v' declared_type='void*'/>
<arg index='1' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='b' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfFile:options:error:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='readOptionsMask' type64='Q' type='I' declared_type='NSDataReadingOptions'/>
<arg index='2' name='errorPtr' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfMappedFile:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:options:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='readOptionsMask' type64='Q' type='I' declared_type='NSDataReadingOptions'/>
<arg index='2' name='errorPtr' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToData:'>
<arg index='0' name='other' type='@' declared_type='NSData*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='length'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='rangeOfData:options:range:'>
<arg index='0' name='dataToFind' type='@' declared_type='NSData*'/>
<arg index='1' name='mask' type64='Q' type='I' declared_type='NSDataSearchOptions'/>
<arg index='2' name='searchRange' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='subdataWithRange:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='writeToFile:atomically:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='useAuxiliaryFile' type='B' declared_type='BOOL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToFile:options:error:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='writeOptionsMask' type64='Q' type='I' declared_type='NSDataWritingOptions'/>
<arg index='2' name='errorPtr' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:atomically:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='atomically' type='B' declared_type='BOOL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:options:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='writeOptionsMask' type64='Q' type='I' declared_type='NSDataWritingOptions'/>
<arg index='2' name='errorPtr' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSDataDetector'>
<method selector='checkingTypes'>
<retval type='Q' declared_type='NSTextCheckingTypes'/>
</method>
<method class_method='true' selector='dataDetectorWithTypes:error:'>
<arg index='0' name='checkingTypes' type='Q' declared_type='NSTextCheckingTypes'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSDataDetector*'/>
</method>
<method selector='initWithTypes:error:'>
<arg index='0' name='checkingTypes' type='Q' declared_type='NSTextCheckingTypes'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSDate'>
<method selector='addTimeInterval:'>
<arg index='0' name='seconds' type='d' declared_type='NSTimeInterval'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='compare:'>
<arg index='0' name='other' type='@' declared_type='NSDate*'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</method>
<method class_method='true' selector='date'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dateByAddingTimeInterval:'>
<arg index='0' name='ti' type='d' declared_type='NSTimeInterval'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dateWithCalendarFormat:timeZone:'>
<arg index='0' name='format' type='@' declared_type='NSString*'/>
<arg index='1' name='aTimeZone' type='@' declared_type='NSTimeZone*'/>
<retval type='@' declared_type='NSCalendarDate*'/>
</method>
<method class_method='true' selector='dateWithNaturalLanguageString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dateWithNaturalLanguageString:locale:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='locale' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dateWithString:'>
<arg index='0' name='aString' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dateWithTimeInterval:sinceDate:'>
<arg index='0' name='ti' type='d' declared_type='NSTimeInterval'/>
<arg index='1' name='date' type='@' declared_type='NSDate*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dateWithTimeIntervalSince1970:'>
<arg index='0' name='secs' type='d' declared_type='NSTimeInterval'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dateWithTimeIntervalSinceNow:'>
<arg index='0' name='secs' type='d' declared_type='NSTimeInterval'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dateWithTimeIntervalSinceReferenceDate:'>
<arg index='0' name='secs' type='d' declared_type='NSTimeInterval'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithCalendarFormat:timeZone:locale:'>
<arg index='0' name='format' type='@' declared_type='NSString*'/>
<arg index='1' name='aTimeZone' type='@' declared_type='NSTimeZone*'/>
<arg index='2' name='locale' type='@' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:'>
<arg index='0' name='locale' type='@' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='distantFuture'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='distantPast'>
<retval type='@' declared_type='id'/>
</method>
<method selector='earlierDate:'>
<arg index='0' name='anotherDate' type='@' declared_type='NSDate*'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:'>
<arg index='0' name='description' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTimeInterval:sinceDate:'>
<arg index='0' name='secsToBeAdded' type='d' declared_type='NSTimeInterval'/>
<arg index='1' name='anotherDate' type='@' declared_type='NSDate*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTimeIntervalSince1970:'>
<arg index='0' name='ti' type='d' declared_type='NSTimeInterval'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTimeIntervalSinceNow:'>
<arg index='0' name='secs' type='d' declared_type='NSTimeInterval'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTimeIntervalSinceReferenceDate:'>
<arg index='0' name='secsToBeAdded' type='d' declared_type='NSTimeInterval'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToDate:'>
<arg index='0' name='otherDate' type='@' declared_type='NSDate*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='laterDate:'>
<arg index='0' name='anotherDate' type='@' declared_type='NSDate*'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='timeIntervalSince1970'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='timeIntervalSinceDate:'>
<arg index='0' name='anotherDate' type='@' declared_type='NSDate*'/>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='timeIntervalSinceNow'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method class_method='true' selector='timeIntervalSinceReferenceDate'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='timeIntervalSinceReferenceDate'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
</class>
<class name='NSDateComponents'>
<method selector='calendar'>
<retval type='@' declared_type='NSCalendar*'/>
</method>
<method selector='date'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='day'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='era'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='hour'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='isLeapMonth'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='minute'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='month'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='quarter'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='second'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='setCalendar:'>
<arg index='0' name='cal' type='@' declared_type='NSCalendar*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDay:'>
<arg index='0' name='v' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEra:'>
<arg index='0' name='v' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHour:'>
<arg index='0' name='v' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLeapMonth:'>
<arg index='0' name='lm' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinute:'>
<arg index='0' name='v' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMonth:'>
<arg index='0' name='v' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setQuarter:'>
<arg index='0' name='v' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSecond:'>
<arg index='0' name='v' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeZone:'>
<arg index='0' name='tz' type='@' declared_type='NSTimeZone*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWeek:'>
<arg index='0' name='v' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWeekOfMonth:'>
<arg index='0' name='w' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWeekOfYear:'>
<arg index='0' name='w' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWeekday:'>
<arg index='0' name='v' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWeekdayOrdinal:'>
<arg index='0' name='v' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setYear:'>
<arg index='0' name='v' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setYearForWeekOfYear:'>
<arg index='0' name='y' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='timeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method selector='week'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='weekOfMonth'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='weekOfYear'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='weekday'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='weekdayOrdinal'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='year'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='yearForWeekOfYear'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='NSDateFormatter'>
<method selector='AMSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='PMSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='allowsNaturalLanguage'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='calendar'>
<retval type='@' declared_type='NSCalendar*'/>
</method>
<method selector='dateFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='dateFormatFromTemplate:options:locale:'>
<arg index='0' name='tmplate' type='@' declared_type='NSString*'/>
<arg index='1' name='opts' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='locale' type='@' declared_type='NSLocale*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dateFromString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='dateStyle'>
<retval type64='Q' type='I' declared_type='NSDateFormatterStyle'/>
</method>
<method selector='defaultDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method class_method='true' selector='defaultFormatterBehavior'>
<retval type64='Q' type='I' declared_type='NSDateFormatterBehavior'/>
</method>
<method selector='doesRelativeDateFormatting'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='eraSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='formatterBehavior'>
<retval type64='Q' type='I' declared_type='NSDateFormatterBehavior'/>
</method>
<method selector='generatesCalendarDates'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getObjectValue:forString:range:error:'>
<arg index='0' name='obj' type_modifier='o' type='^@' declared_type='id*'/>
<arg index='1' name='string' type='@' declared_type='NSString*'/>
<arg index='2' name='rangep' type64='^{_NSRange=QQ}' type_modifier='N' type='^{_NSRange=II}' declared_type='NSRange*'/>
<arg index='3' name='error' type_modifier='o' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='gregorianStartDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='initWithDateFormat:allowNaturalLanguage:'>
<arg index='0' name='format' type='@' declared_type='NSString*'/>
<arg index='1' name='flag' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isLenient'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='locale'>
<retval type='@' declared_type='NSLocale*'/>
</method>
<method class_method='true' selector='localizedStringFromDate:dateStyle:timeStyle:'>
<arg index='0' name='date' type='@' declared_type='NSDate*'/>
<arg index='1' name='dstyle' type64='Q' type='I' declared_type='NSDateFormatterStyle'/>
<arg index='2' name='tstyle' type64='Q' type='I' declared_type='NSDateFormatterStyle'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='longEraSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='monthSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='quarterSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setAMSymbol:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCalendar:'>
<arg index='0' name='calendar' type='@' declared_type='NSCalendar*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDateFormat:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDateStyle:'>
<arg index='0' name='style' type64='Q' type='I' declared_type='NSDateFormatterStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultDate:'>
<arg index='0' name='date' type='@' declared_type='NSDate*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setDefaultFormatterBehavior:'>
<arg index='0' name='behavior' type64='Q' type='I' declared_type='NSDateFormatterBehavior'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDoesRelativeDateFormatting:'>
<arg index='0' name='b' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEraSymbols:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFormatterBehavior:'>
<arg index='0' name='behavior' type64='Q' type='I' declared_type='NSDateFormatterBehavior'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGeneratesCalendarDates:'>
<arg index='0' name='b' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGregorianStartDate:'>
<arg index='0' name='date' type='@' declared_type='NSDate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLenient:'>
<arg index='0' name='b' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocale:'>
<arg index='0' name='locale' type='@' declared_type='NSLocale*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLongEraSymbols:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMonthSymbols:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPMSymbol:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setQuarterSymbols:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShortMonthSymbols:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShortQuarterSymbols:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShortStandaloneMonthSymbols:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShortStandaloneQuarterSymbols:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShortStandaloneWeekdaySymbols:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShortWeekdaySymbols:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandaloneMonthSymbols:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandaloneQuarterSymbols:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandaloneWeekdaySymbols:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeStyle:'>
<arg index='0' name='style' type64='Q' type='I' declared_type='NSDateFormatterStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeZone:'>
<arg index='0' name='tz' type='@' declared_type='NSTimeZone*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTwoDigitStartDate:'>
<arg index='0' name='date' type='@' declared_type='NSDate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVeryShortMonthSymbols:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVeryShortStandaloneMonthSymbols:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVeryShortStandaloneWeekdaySymbols:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVeryShortWeekdaySymbols:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWeekdaySymbols:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shortMonthSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='shortQuarterSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='shortStandaloneMonthSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='shortStandaloneQuarterSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='shortStandaloneWeekdaySymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='shortWeekdaySymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='standaloneMonthSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='standaloneQuarterSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='standaloneWeekdaySymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='stringFromDate:'>
<arg index='0' name='date' type='@' declared_type='NSDate*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='timeStyle'>
<retval type64='Q' type='I' declared_type='NSDateFormatterStyle'/>
</method>
<method selector='timeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method selector='twoDigitStartDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='veryShortMonthSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='veryShortStandaloneMonthSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='veryShortStandaloneWeekdaySymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='veryShortWeekdaySymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='weekdaySymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSDecimalNumber'>
<method selector='compare:'>
<arg index='0' name='decimalNumber' type='@' declared_type='NSNumber*'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='decimalNumberByAdding:'>
<arg index='0' name='decimalNumber' type='@' declared_type='NSDecimalNumber*'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByAdding:withBehavior:'>
<arg index='0' name='decimalNumber' type='@' declared_type='NSDecimalNumber*'/>
<arg index='1' name='behavior' type='@' declared_type='id'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByDividingBy:'>
<arg index='0' name='decimalNumber' type='@' declared_type='NSDecimalNumber*'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByDividingBy:withBehavior:'>
<arg index='0' name='decimalNumber' type='@' declared_type='NSDecimalNumber*'/>
<arg index='1' name='behavior' type='@' declared_type='id'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByMultiplyingBy:'>
<arg index='0' name='decimalNumber' type='@' declared_type='NSDecimalNumber*'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByMultiplyingBy:withBehavior:'>
<arg index='0' name='decimalNumber' type='@' declared_type='NSDecimalNumber*'/>
<arg index='1' name='behavior' type='@' declared_type='id'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByMultiplyingByPowerOf10:'>
<arg index='0' name='power' type='s' declared_type='short'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByMultiplyingByPowerOf10:withBehavior:'>
<arg index='0' name='power' type='s' declared_type='short'/>
<arg index='1' name='behavior' type='@' declared_type='id'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByRaisingToPower:'>
<arg index='0' name='power' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByRaisingToPower:withBehavior:'>
<arg index='0' name='power' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='behavior' type='@' declared_type='id'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberByRoundingAccordingToBehavior:'>
<arg index='0' name='behavior' type='@' declared_type='id'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberBySubtracting:'>
<arg index='0' name='decimalNumber' type='@' declared_type='NSDecimalNumber*'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalNumberBySubtracting:withBehavior:'>
<arg index='0' name='decimalNumber' type='@' declared_type='NSDecimalNumber*'/>
<arg index='1' name='behavior' type='@' declared_type='id'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method class_method='true' selector='decimalNumberWithDecimal:'>
<arg index='0' name='dcm' type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method class_method='true' selector='decimalNumberWithMantissa:exponent:isNegative:'>
<arg index='0' name='mantissa' type='Q' declared_type='unsigned long long'/>
<arg index='1' name='exponent' type='s' declared_type='short'/>
<arg index='2' name='flag' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method class_method='true' selector='decimalNumberWithString:'>
<arg index='0' name='numberValue' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method class_method='true' selector='decimalNumberWithString:locale:'>
<arg index='0' name='numberValue' type='@' declared_type='NSString*'/>
<arg index='1' name='locale' type='@' declared_type='id'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='decimalValue'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method class_method='true' selector='defaultBehavior'>
<retval type='@' declared_type='id'/>
</method>
<method selector='descriptionWithLocale:'>
<arg index='0' name='locale' type='@' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='doubleValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='initWithDecimal:'>
<arg index='0' name='dcm' type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithMantissa:exponent:isNegative:'>
<arg index='0' name='mantissa' type='Q' declared_type='unsigned long long'/>
<arg index='1' name='exponent' type='s' declared_type='short'/>
<arg index='2' name='flag' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:'>
<arg index='0' name='numberValue' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:locale:'>
<arg index='0' name='numberValue' type='@' declared_type='NSString*'/>
<arg index='1' name='locale' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='maximumDecimalNumber'>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method class_method='true' selector='minimumDecimalNumber'>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method class_method='true' selector='notANumber'>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='objCType'>
<retval const='true' type='*' declared_type='char*'/>
</method>
<method class_method='true' selector='one'>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method class_method='true' selector='setDefaultBehavior:'>
<arg index='0' name='behavior' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='zero'>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
</class>
<class name='NSDecimalNumberHandler'>
<method class_method='true' selector='decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:'>
<arg index='0' name='roundingMode' type64='Q' type='I' declared_type='NSRoundingMode'/>
<arg index='1' name='scale' type='s' declared_type='short'/>
<arg index='2' name='exact' type='B' declared_type='BOOL'/>
<arg index='3' name='overflow' type='B' declared_type='BOOL'/>
<arg index='4' name='underflow' type='B' declared_type='BOOL'/>
<arg index='5' name='divideByZero' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='defaultDecimalNumberHandler'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:'>
<arg index='0' name='roundingMode' type64='Q' type='I' declared_type='NSRoundingMode'/>
<arg index='1' name='scale' type='s' declared_type='short'/>
<arg index='2' name='exact' type='B' declared_type='BOOL'/>
<arg index='3' name='overflow' type='B' declared_type='BOOL'/>
<arg index='4' name='underflow' type='B' declared_type='BOOL'/>
<arg index='5' name='divideByZero' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSDeleteCommand'>
<method selector='keySpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='setReceiversSpecifier:'>
<arg index='0' name='receiversRef' type='@' declared_type='NSScriptObjectSpecifier*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSDictionary'>
<method selector='allKeys'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='allKeysForObject:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='allValues'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='count'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionInStringsFileFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:'>
<arg index='0' name='locale' type='@' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:indent:'>
<arg index='0' name='locale' type='@' declared_type='id'/>
<arg index='1' name='level' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='dictionary'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dictionaryWithContentsOfFile:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dictionaryWithContentsOfURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dictionaryWithDictionary:'>
<arg index='0' name='dict' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dictionaryWithObject:forKey:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dictionaryWithObjects:forKeys:'>
<arg index='0' name='objects' type='@' declared_type='NSArray*'/>
<arg index='1' name='keys' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dictionaryWithObjects:forKeys:count:'>
<arg const='true' index='0' name='objects' type='^@' declared_type='id*'/>
<arg const='true' index='1' name='keys' type='^@' declared_type='id*'/>
<arg index='2' name='cnt' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' variadic='true' selector='dictionaryWithObjectsAndKeys:' sentinel='0'>
<arg index='0' name='firstObject' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='enumerateKeysAndObjectsUsingBlock:'>
<arg function_pointer='true' index='0' name='block' type='@?' declared_type='void (^)(id, id, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateKeysAndObjectsWithOptions:usingBlock:'>
<arg index='0' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='1' name='block' type='@?' declared_type='void (^)(id, id, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='fileCreationDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='fileExtensionHidden'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileGroupOwnerAccountID'>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='fileGroupOwnerAccountName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fileHFSCreatorCode'>
<retval type64='I' type='L' declared_type='OSType'/>
</method>
<method selector='fileHFSTypeCode'>
<retval type64='I' type='L' declared_type='OSType'/>
</method>
<method selector='fileIsAppendOnly'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileIsImmutable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileModificationDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='fileOwnerAccountID'>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='fileOwnerAccountName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='filePosixPermissions'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='fileSize'>
<retval type='Q' declared_type='unsigned long long'/>
</method>
<method selector='fileSystemFileNumber'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='fileSystemNumber'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='fileType'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='getObjects:andKeys:'>
<arg index='0' name='objects' type='^@' declared_type='id*'/>
<arg index='1' name='keys' type='^@' declared_type='id*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDictionary:'>
<arg index='0' name='otherDictionary' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDictionary:copyItems:'>
<arg index='0' name='otherDictionary' type='@' declared_type='NSDictionary*'/>
<arg index='1' name='flag' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithObjects:forKeys:'>
<arg index='0' name='objects' type='@' declared_type='NSArray*'/>
<arg index='1' name='keys' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithObjects:forKeys:count:'>
<arg const='true' index='0' name='objects' type='^@' declared_type='id*'/>
<arg const='true' index='1' name='keys' type='^@' declared_type='id*'/>
<arg index='2' name='cnt' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method variadic='true' selector='initWithObjectsAndKeys:' sentinel='0'>
<arg index='0' name='firstObject' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToDictionary:'>
<arg index='0' name='otherDictionary' type='@' declared_type='NSDictionary*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='keysOfEntriesPassingTest:'>
<arg function_pointer='true' index='0' name='predicate' type='@?' declared_type='BOOL (^)(id, id, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='keysOfEntriesWithOptions:passingTest:'>
<arg index='0' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='1' name='predicate' type='@?' declared_type='BOOL (^)(id, id, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='keysSortedByValueUsingComparator:'>
<arg function_pointer='true' index='0' name='cmptr' type='@?' declared_type='NSComparator'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='keysSortedByValueUsingSelector:'>
<arg index='0' name='comparator' type=':' declared_type='SEL'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='keysSortedByValueWithOptions:usingComparator:'>
<arg index='0' name='opts' type64='Q' type='I' declared_type='NSSortOptions'/>
<arg function_pointer='true' index='1' name='cmptr' type='@?' declared_type='NSComparator'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='objectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='objectForKey:'>
<arg index='0' name='aKey' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectForKeyedSubscript:'>
<arg index='0' name='key' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectsForKeys:notFoundMarker:'>
<arg index='0' name='keys' type='@' declared_type='NSArray*'/>
<arg index='1' name='marker' type='@' declared_type='id'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='sharedKeySetForKeys:'>
<arg index='0' name='keys' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='valueForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='writeToFile:atomically:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='useAuxiliaryFile' type='B' declared_type='BOOL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:atomically:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='atomically' type='B' declared_type='BOOL'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSDirectoryEnumerator'>
<method selector='directoryAttributes'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='fileAttributes'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='level'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='skipDescendants'>
<retval type='v' declared_type='void'/>
</method>
<method selector='skipDescendents'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSDistantObject'>
<method selector='connectionForProxy'>
<retval type='@' declared_type='NSConnection*'/>
</method>
<method selector='initWithLocal:connection:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<arg index='1' name='connection' type='@' declared_type='NSConnection*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:connection:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<arg index='1' name='connection' type='@' declared_type='NSConnection*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='proxyWithLocal:connection:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<arg index='1' name='connection' type='@' declared_type='NSConnection*'/>
<retval type='@' declared_type='NSDistantObject*'/>
</method>
<method class_method='true' selector='proxyWithTarget:connection:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<arg index='1' name='connection' type='@' declared_type='NSConnection*'/>
<retval type='@' declared_type='NSDistantObject*'/>
</method>
<method selector='setProtocolForProxy:'>
<arg index='0' name='proto' type='@' declared_type='Protocol*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSDistantObjectRequest'>
<method selector='connection'>
<retval type='@' declared_type='NSConnection*'/>
</method>
<method selector='conversation'>
<retval type='@' declared_type='id'/>
</method>
<method selector='invocation'>
<retval type='@' declared_type='NSInvocation*'/>
</method>
<method selector='replyWithException:'>
<arg index='0' name='exception' type='@' declared_type='NSException*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSDistributedLock'>
<method selector='breakLock'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lockDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method class_method='true' selector='lockWithPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDistributedLock*'/>
</method>
<method selector='tryLock'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='unlock'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSDistributedNotificationCenter'>
<method selector='addObserver:selector:name:object:'>
<arg index='0' name='observer' type='@' declared_type='id'/>
<arg index='1' name='aSelector' type=':' declared_type='SEL'/>
<arg index='2' name='aName' type='@' declared_type='NSString*'/>
<arg index='3' name='anObject' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObserver:selector:name:object:suspensionBehavior:'>
<arg index='0' name='observer' type='@' declared_type='id'/>
<arg index='1' name='selector' type=':' declared_type='SEL'/>
<arg index='2' name='name' type='@' declared_type='NSString*'/>
<arg index='3' name='object' type='@' declared_type='NSString*'/>
<arg index='4' name='suspensionBehavior' type64='Q' type='I' declared_type='NSNotificationSuspensionBehavior'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='defaultCenter'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='notificationCenterForType:'>
<arg index='0' name='notificationCenterType' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDistributedNotificationCenter*'/>
</method>
<method selector='postNotificationName:object:'>
<arg index='0' name='aName' type='@' declared_type='NSString*'/>
<arg index='1' name='anObject' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='postNotificationName:object:userInfo:'>
<arg index='0' name='aName' type='@' declared_type='NSString*'/>
<arg index='1' name='anObject' type='@' declared_type='NSString*'/>
<arg index='2' name='aUserInfo' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='postNotificationName:object:userInfo:deliverImmediately:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='object' type='@' declared_type='NSString*'/>
<arg index='2' name='userInfo' type='@' declared_type='NSDictionary*'/>
<arg index='3' name='deliverImmediately' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='postNotificationName:object:userInfo:options:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='object' type='@' declared_type='NSString*'/>
<arg index='2' name='userInfo' type='@' declared_type='NSDictionary*'/>
<arg index='3' name='options' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:name:object:'>
<arg index='0' name='observer' type='@' declared_type='id'/>
<arg index='1' name='aName' type='@' declared_type='NSString*'/>
<arg index='2' name='anObject' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSuspended:'>
<arg index='0' name='suspended' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='suspended'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSEnumerator'>
<method selector='allObjects'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='nextObject'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSError'>
<method selector='code'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='domain'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='errorWithDomain:code:userInfo:'>
<arg index='0' name='domain' type='@' declared_type='NSString*'/>
<arg index='1' name='code' type64='q' type='i' declared_type='NSInteger'/>
<arg index='2' name='dict' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='helpAnchor'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithDomain:code:userInfo:'>
<arg index='0' name='domain' type='@' declared_type='NSString*'/>
<arg index='1' name='code' type64='q' type='i' declared_type='NSInteger'/>
<arg index='2' name='dict' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='localizedDescription'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='localizedFailureReason'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='localizedRecoveryOptions'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='localizedRecoverySuggestion'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='recoveryAttempter'>
<retval type='@' declared_type='id'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSException'>
<method selector='callStackReturnAddresses'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='callStackSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='exceptionWithName:reason:userInfo:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='reason' type='@' declared_type='NSString*'/>
<arg index='2' name='userInfo' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSException*'/>
</method>
<method selector='initWithName:reason:userInfo:'>
<arg index='0' name='aName' type='@' declared_type='NSString*'/>
<arg index='1' name='aReason' type='@' declared_type='NSString*'/>
<arg index='2' name='aUserInfo' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='raise'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' variadic='true' selector='raise:format:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='format' printf_format='true' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='raise:format:arguments:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='format' printf_format='true' type='@' declared_type='NSString*'/>
<arg index='2' name='argList' declared_type64='__va_list_tag*' type64='^{__va_list_tag=II^v^v}' type='*' declared_type='va_list'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reason'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSExpression'>
<method selector='arguments'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='collection'>
<retval type='@' declared_type='id'/>
</method>
<method selector='constantValue'>
<retval type='@' declared_type='id'/>
</method>
<method selector='expressionBlock'>
<retval function_pointer='true' type='@?' declared_type='id (^)(id, NSArray *, NSMutableDictionary *)'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='NSArray*'/>
<arg type='@' declared_type='NSMutableDictionary*'/>
<retval type='@' declared_type='id'/>
</retval>
</method>
<method class_method='true' selector='expressionForAggregate:'>
<arg index='0' name='subexpressions' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionForBlock:arguments:'>
<arg function_pointer='true' index='0' name='block' type='@?' declared_type='id (^)(id, NSArray *, NSMutableDictionary *)'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='NSArray*'/>
<arg type='@' declared_type='NSMutableDictionary*'/>
<retval type='@' declared_type='id'/>
</arg>
<arg index='1' name='arguments' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionForConstantValue:'>
<arg index='0' name='obj' type='@' declared_type='id'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionForEvaluatedObject'>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionForFunction:arguments:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='parameters' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionForFunction:selectorName:arguments:'>
<arg index='0' name='target' type='@' declared_type='NSExpression*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='parameters' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionForIntersectSet:with:'>
<arg index='0' name='left' type='@' declared_type='NSExpression*'/>
<arg index='1' name='right' type='@' declared_type='NSExpression*'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionForKeyPath:'>
<arg index='0' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionForMinusSet:with:'>
<arg index='0' name='left' type='@' declared_type='NSExpression*'/>
<arg index='1' name='right' type='@' declared_type='NSExpression*'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionForSubquery:usingIteratorVariable:predicate:'>
<arg index='0' name='expression' type='@' declared_type='NSExpression*'/>
<arg index='1' name='variable' type='@' declared_type='NSString*'/>
<arg index='2' name='predicate' type='@' declared_type='id'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionForUnionSet:with:'>
<arg index='0' name='left' type='@' declared_type='NSExpression*'/>
<arg index='1' name='right' type='@' declared_type='NSExpression*'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionForVariable:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='expressionType'>
<retval type64='Q' type='I' declared_type='NSExpressionType'/>
</method>
<method selector='expressionValueWithObject:context:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='context' type='@' declared_type='NSMutableDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' variadic='true' selector='expressionWithFormat:'>
<arg index='0' name='expressionFormat' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionWithFormat:argumentArray:'>
<arg index='0' name='expressionFormat' type='@' declared_type='NSString*'/>
<arg index='1' name='arguments' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method class_method='true' selector='expressionWithFormat:arguments:'>
<arg index='0' name='expressionFormat' type='@' declared_type='NSString*'/>
<arg index='1' name='argList' declared_type64='__va_list_tag*' type64='^{__va_list_tag=II^v^v}' type='*' declared_type='va_list'/>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='function'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithExpressionType:'>
<arg index='0' name='type' type64='Q' type='I' declared_type='NSExpressionType'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='keyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='leftExpression'>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='operand'>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='predicate'>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='rightExpression'>
<retval type='@' declared_type='NSExpression*'/>
</method>
<method selector='variable'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSFileCoordinator'>
<method class_method='true' selector='addFilePresenter:'>
<arg index='0' name='filePresenter' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='coordinateReadingItemAtURL:options:error:byAccessor:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='options' type64='Q' type='I' declared_type='NSFileCoordinatorReadingOptions'/>
<arg index='2' name='outError' type='^@' declared_type='NSError**'/>
<arg function_pointer='true' index='3' name='reader' type='@?' declared_type='void (^)(NSURL *)'>
<arg type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='coordinateReadingItemAtURL:options:writingItemAtURL:options:error:byAccessor:'>
<arg index='0' name='readingURL' type='@' declared_type='NSURL*'/>
<arg index='1' name='readingOptions' type64='Q' type='I' declared_type='NSFileCoordinatorReadingOptions'/>
<arg index='2' name='writingURL' type='@' declared_type='NSURL*'/>
<arg index='3' name='writingOptions' type64='Q' type='I' declared_type='NSFileCoordinatorWritingOptions'/>
<arg index='4' name='outError' type='^@' declared_type='NSError**'/>
<arg function_pointer='true' index='5' name='readerWriter' type='@?' declared_type='void (^)(NSURL *, NSURL *)'>
<arg type='@' declared_type='NSURL*'/>
<arg type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='coordinateWritingItemAtURL:options:error:byAccessor:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='options' type64='Q' type='I' declared_type='NSFileCoordinatorWritingOptions'/>
<arg index='2' name='outError' type='^@' declared_type='NSError**'/>
<arg function_pointer='true' index='3' name='writer' type='@?' declared_type='void (^)(NSURL *)'>
<arg type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='coordinateWritingItemAtURL:options:writingItemAtURL:options:error:byAccessor:'>
<arg index='0' name='url1' type='@' declared_type='NSURL*'/>
<arg index='1' name='options1' type64='Q' type='I' declared_type='NSFileCoordinatorWritingOptions'/>
<arg index='2' name='url2' type='@' declared_type='NSURL*'/>
<arg index='3' name='options2' type64='Q' type='I' declared_type='NSFileCoordinatorWritingOptions'/>
<arg index='4' name='outError' type='^@' declared_type='NSError**'/>
<arg function_pointer='true' index='5' name='writer' type='@?' declared_type='void (^)(NSURL *, NSURL *)'>
<arg type='@' declared_type='NSURL*'/>
<arg type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='filePresenters'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='initWithFilePresenter:'>
<arg index='0' name='filePresenterOrNil' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemAtURL:didMoveToURL:'>
<arg index='0' name='oldURL' type='@' declared_type='NSURL*'/>
<arg index='1' name='newURL' type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='itemAtURL:willMoveToURL:'>
<arg index='0' name='oldURL' type='@' declared_type='NSURL*'/>
<arg index='1' name='newURL' type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='prepareForReadingItemsAtURLs:options:writingItemsAtURLs:options:error:byAccessor:'>
<arg index='0' name='readingURLs' type='@' declared_type='NSArray*'/>
<arg index='1' name='readingOptions' type64='Q' type='I' declared_type='NSFileCoordinatorReadingOptions'/>
<arg index='2' name='writingURLs' type='@' declared_type='NSArray*'/>
<arg index='3' name='writingOptions' type64='Q' type='I' declared_type='NSFileCoordinatorWritingOptions'/>
<arg index='4' name='outError' type='^@' declared_type='NSError**'/>
<arg function_pointer='true' index='5' name='batchAccessor' type='@?' declared_type='void (^)(void (^)(void))'>
<arg type='@?' declared_type='void (^)(void)'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='removeFilePresenter:'>
<arg index='0' name='filePresenter' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSFileHandle'>
<method selector='acceptConnectionInBackgroundAndNotify'>
<retval type='v' declared_type='void'/>
</method>
<method selector='acceptConnectionInBackgroundAndNotifyForModes:'>
<arg index='0' name='modes' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='availableData'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='closeFile'>
<retval type='v' declared_type='void'/>
</method>
<method selector='fileDescriptor'>
<retval type='i' declared_type='int'/>
</method>
<method class_method='true' selector='fileHandleForReadingAtPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fileHandleForReadingFromURL:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fileHandleForUpdatingAtPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fileHandleForUpdatingURL:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fileHandleForWritingAtPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fileHandleForWritingToURL:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fileHandleWithNullDevice'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fileHandleWithStandardError'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fileHandleWithStandardInput'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fileHandleWithStandardOutput'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFileDescriptor:'>
<arg index='0' name='fd' type='i' declared_type='int'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFileDescriptor:closeOnDealloc:'>
<arg index='0' name='fd' type='i' declared_type='int'/>
<arg index='1' name='closeopt' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='offsetInFile'>
<retval type='Q' declared_type='unsigned long long'/>
</method>
<method selector='readDataOfLength:'>
<arg index='0' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='readDataToEndOfFile'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='readInBackgroundAndNotify'>
<retval type='v' declared_type='void'/>
</method>
<method selector='readInBackgroundAndNotifyForModes:'>
<arg index='0' name='modes' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='readToEndOfFileInBackgroundAndNotify'>
<retval type='v' declared_type='void'/>
</method>
<method selector='readToEndOfFileInBackgroundAndNotifyForModes:'>
<arg index='0' name='modes' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='readabilityHandler'>
<retval function_pointer='true' type='@?' declared_type='void (^)(NSFileHandle *)'>
<arg type='@' declared_type='NSFileHandle*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='seekToEndOfFile'>
<retval type='Q' declared_type='unsigned long long'/>
</method>
<method selector='seekToFileOffset:'>
<arg index='0' name='offset' type='Q' declared_type='unsigned long long'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReadabilityHandler:'>
<arg function_pointer='true' index='0' name='readabilityHandler' type='@?' declared_type='void (^)(NSFileHandle *)'>
<arg type='@' declared_type='NSFileHandle*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWriteabilityHandler:'>
<arg function_pointer='true' index='0' name='writeabilityHandler' type='@?' declared_type='void (^)(NSFileHandle *)'>
<arg type='@' declared_type='NSFileHandle*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='synchronizeFile'>
<retval type='v' declared_type='void'/>
</method>
<method selector='truncateFileAtOffset:'>
<arg index='0' name='offset' type='Q' declared_type='unsigned long long'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='waitForDataInBackgroundAndNotify'>
<retval type='v' declared_type='void'/>
</method>
<method selector='waitForDataInBackgroundAndNotifyForModes:'>
<arg index='0' name='modes' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='writeData:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='writeabilityHandler'>
<retval function_pointer='true' type='@?' declared_type='void (^)(NSFileHandle *)'>
<arg type='@' declared_type='NSFileHandle*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
</class>
<class name='NSFileManager'>
<method selector='URLForDirectory:inDomain:appropriateForURL:create:error:'>
<arg index='0' name='directory' type64='Q' type='I' declared_type='NSSearchPathDirectory'/>
<arg index='1' name='domain' type64='Q' type='I' declared_type='NSSearchPathDomainMask'/>
<arg index='2' name='url' type='@' declared_type='NSURL*'/>
<arg index='3' name='shouldCreate' type='B' declared_type='BOOL'/>
<arg index='4' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForPublishingUbiquitousItemAtURL:expirationDate:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='outDate' type='^@' declared_type='NSDate**'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForUbiquityContainerIdentifier:'>
<arg index='0' name='containerIdentifier' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLsForDirectory:inDomains:'>
<arg index='0' name='directory' type64='Q' type='I' declared_type='NSSearchPathDirectory'/>
<arg index='1' name='domainMask' type64='Q' type='I' declared_type='NSSearchPathDomainMask'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='attributesOfFileSystemForPath:error:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='attributesOfItemAtPath:error:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='changeCurrentDirectoryPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='changeFileAttributes:atPath:'>
<arg index='0' name='attributes' type='@' declared_type='NSDictionary*'/>
<arg index='1' name='path' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='componentsToDisplayForPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='contentsAtPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='contentsEqualAtPath:andPath:'>
<arg index='0' name='path1' type='@' declared_type='NSString*'/>
<arg index='1' name='path2' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='contentsOfDirectoryAtPath:error:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='keys' type='@' declared_type='NSArray*'/>
<arg index='2' name='mask' type64='Q' type='I' declared_type='NSDirectoryEnumerationOptions'/>
<arg index='3' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='copyItemAtPath:toPath:error:'>
<arg index='0' name='srcPath' type='@' declared_type='NSString*'/>
<arg index='1' name='dstPath' type='@' declared_type='NSString*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='copyItemAtURL:toURL:error:'>
<arg index='0' name='srcURL' type='@' declared_type='NSURL*'/>
<arg index='1' name='dstURL' type='@' declared_type='NSURL*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='copyPath:toPath:handler:'>
<arg index='0' name='src' type='@' declared_type='NSString*'/>
<arg index='1' name='dest' type='@' declared_type='NSString*'/>
<arg index='2' name='handler' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createDirectoryAtPath:attributes:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='attributes' type='@' declared_type='NSDictionary*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createDirectoryAtPath:withIntermediateDirectories:attributes:error:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='createIntermediates' type='B' declared_type='BOOL'/>
<arg index='2' name='attributes' type='@' declared_type='NSDictionary*'/>
<arg index='3' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createDirectoryAtURL:withIntermediateDirectories:attributes:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='createIntermediates' type='B' declared_type='BOOL'/>
<arg index='2' name='attributes' type='@' declared_type='NSDictionary*'/>
<arg index='3' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createFileAtPath:contents:attributes:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='data' type='@' declared_type='NSData*'/>
<arg index='2' name='attr' type='@' declared_type='NSDictionary*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createSymbolicLinkAtPath:pathContent:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='otherpath' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createSymbolicLinkAtPath:withDestinationPath:error:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='destPath' type='@' declared_type='NSString*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createSymbolicLinkAtURL:withDestinationURL:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='destURL' type='@' declared_type='NSURL*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='currentDirectoryPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='defaultManager'>
<retval type='@' declared_type='NSFileManager*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='destinationOfSymbolicLinkAtPath:error:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='directoryContentsAtPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='displayNameAtPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='enumeratorAtPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDirectoryEnumerator*'/>
</method>
<method selector='enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='keys' type='@' declared_type='NSArray*'/>
<arg index='2' name='mask' type64='Q' type='I' declared_type='NSDirectoryEnumerationOptions'/>
<arg function_pointer='true' index='3' name='handler' type='@?' declared_type='BOOL (^)(NSURL *, NSError *)'>
<arg type='@' declared_type='NSURL*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSDirectoryEnumerator*'/>
</method>
<method selector='evictUbiquitousItemAtURL:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileAttributesAtPath:traverseLink:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='yorn' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='fileExistsAtPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileExistsAtPath:isDirectory:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='isDirectory' type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileSystemAttributesAtPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='fileSystemRepresentationWithPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval const='true' type='*' declared_type='char*'/>
</method>
<method selector='isDeletableFileAtPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isExecutableFileAtPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isReadableFileAtPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isUbiquitousItemAtURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isWritableFileAtPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='linkItemAtPath:toPath:error:'>
<arg index='0' name='srcPath' type='@' declared_type='NSString*'/>
<arg index='1' name='dstPath' type='@' declared_type='NSString*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='linkItemAtURL:toURL:error:'>
<arg index='0' name='srcURL' type='@' declared_type='NSURL*'/>
<arg index='1' name='dstURL' type='@' declared_type='NSURL*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='linkPath:toPath:handler:'>
<arg index='0' name='src' type='@' declared_type='NSString*'/>
<arg index='1' name='dest' type='@' declared_type='NSString*'/>
<arg index='2' name='handler' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mountedVolumeURLsIncludingResourceValuesForKeys:options:'>
<arg index='0' name='propertyKeys' type='@' declared_type='NSArray*'/>
<arg index='1' name='options' type64='Q' type='I' declared_type='NSVolumeEnumerationOptions'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='moveItemAtPath:toPath:error:'>
<arg index='0' name='srcPath' type='@' declared_type='NSString*'/>
<arg index='1' name='dstPath' type='@' declared_type='NSString*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='moveItemAtURL:toURL:error:'>
<arg index='0' name='srcURL' type='@' declared_type='NSURL*'/>
<arg index='1' name='dstURL' type='@' declared_type='NSURL*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='movePath:toPath:handler:'>
<arg index='0' name='src' type='@' declared_type='NSString*'/>
<arg index='1' name='dest' type='@' declared_type='NSString*'/>
<arg index='2' name='handler' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pathContentOfSymbolicLinkAtPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='removeFileAtPath:handler:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='handler' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeItemAtPath:error:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeItemAtURL:error:'>
<arg index='0' name='URL' type='@' declared_type='NSURL*'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:'>
<arg index='0' name='originalItemURL' type='@' declared_type='NSURL*'/>
<arg index='1' name='newItemURL' type='@' declared_type='NSURL*'/>
<arg index='2' name='backupItemName' type='@' declared_type='NSString*'/>
<arg index='3' name='options' type64='Q' type='I' declared_type='NSFileManagerItemReplacementOptions'/>
<arg index='4' name='resultingURL' type='^@' declared_type='NSURL**'/>
<arg index='5' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAttributes:ofItemAtPath:error:'>
<arg index='0' name='attributes' type='@' declared_type='NSDictionary*'/>
<arg index='1' name='path' type='@' declared_type='NSString*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDelegate:'>
<arg index='0' name='delegate' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUbiquitous:itemAtURL:destinationURL:error:'>
<arg index='0' name='flag' type='B' declared_type='BOOL'/>
<arg index='1' name='url' type='@' declared_type='NSURL*'/>
<arg index='2' name='destinationURL' type='@' declared_type='NSURL*'/>
<arg index='3' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='startDownloadingUbiquitousItemAtURL:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='stringWithFileSystemRepresentation:length:'>
<arg const='true' index='0' name='str' type='*' declared_type='char*'/>
<arg index='1' name='len' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='subpathsAtPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='subpathsOfDirectoryAtPath:error:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='trashItemAtURL:resultingItemURL:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='outResultingURL' type='^@' declared_type='NSURL**'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ubiquityIdentityToken'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSFileVersion'>
<method selector='URL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method class_method='true' selector='addVersionOfItemAtURL:withContentsOfURL:options:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='contentsURL' type='@' declared_type='NSURL*'/>
<arg index='2' name='options' type64='Q' type='I' declared_type='NSFileVersionAddingOptions'/>
<arg index='3' name='outError' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSFileVersion*'/>
</method>
<method class_method='true' selector='currentVersionOfItemAtURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='NSFileVersion*'/>
</method>
<method selector='isConflict'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isDiscardable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isResolved'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='localizedName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='localizedNameOfSavingComputer'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='modificationDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method class_method='true' selector='otherVersionsOfItemAtURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='persistentIdentifier'>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeAndReturnError:'>
<arg index='0' name='outError' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='removeOtherVersionsOfItemAtURL:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='outError' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='replaceItemAtURL:options:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='options' type64='Q' type='I' declared_type='NSFileVersionReplacingOptions'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='setDiscardable:'>
<arg index='0' name='discardable' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResolved:'>
<arg index='0' name='resolved' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='temporaryDirectoryURLForNewVersionOfItemAtURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method class_method='true' selector='unresolvedConflictVersionsOfItemAtURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='versionOfItemAtURL:forPersistentIdentifier:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='persistentIdentifier' type='@' declared_type='id'/>
<retval type='@' declared_type='NSFileVersion*'/>
</method>
</class>
<class name='NSFileWrapper'>
<method selector='addFileWithPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='addFileWrapper:'>
<arg index='0' name='child' type='@' declared_type='NSFileWrapper*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='addRegularFileWithContents:preferredFilename:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<arg index='1' name='fileName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='addSymbolicLinkWithDestination:preferredFilename:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='filename' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fileAttributes'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='fileWrappers'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='filename'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initDirectoryWithFileWrappers:'>
<arg index='0' name='childrenByPreferredName' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initRegularFileWithContents:'>
<arg index='0' name='contents' type='@' declared_type='NSData*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initSymbolicLinkWithDestination:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initSymbolicLinkWithDestinationURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSerializedRepresentation:'>
<arg index='0' name='serializeRepresentation' type='@' declared_type='NSData*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithURL:options:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='options' type64='Q' type='I' declared_type='NSFileWrapperReadingOptions'/>
<arg index='2' name='outError' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isDirectory'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRegularFile'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSymbolicLink'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyForFileWrapper:'>
<arg index='0' name='child' type='@' declared_type='NSFileWrapper*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='matchesContentsOfURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='needsToBeUpdatedFromPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='preferredFilename'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='readFromURL:options:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='options' type64='Q' type='I' declared_type='NSFileWrapperReadingOptions'/>
<arg index='2' name='outError' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='regularFileContents'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='removeFileWrapper:'>
<arg index='0' name='child' type='@' declared_type='NSFileWrapper*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='serializedRepresentation'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='setFileAttributes:'>
<arg index='0' name='fileAttributes' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFilename:'>
<arg index='0' name='fileName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreferredFilename:'>
<arg index='0' name='fileName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='symbolicLinkDestination'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='symbolicLinkDestinationURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='updateFromPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToFile:atomically:updateFilenames:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='atomicFlag' type='B' declared_type='BOOL'/>
<arg index='2' name='updateFilenamesFlag' type='B' declared_type='BOOL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:options:originalContentsURL:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='options' type64='Q' type='I' declared_type='NSFileWrapperWritingOptions'/>
<arg index='2' name='originalContentsURL' type='@' declared_type='NSURL*'/>
<arg index='3' name='outError' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSFormatter'>
<method selector='attributedStringForObjectValue:withDefaultAttributes:'>
<arg index='0' name='obj' type='@' declared_type='id'/>
<arg index='1' name='attrs' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='editingStringForObjectValue:'>
<arg index='0' name='obj' type='@' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='getObjectValue:forString:errorDescription:'>
<arg index='0' name='obj' type_modifier='o' type='^@' declared_type='id*'/>
<arg index='1' name='string' type='@' declared_type='NSString*'/>
<arg index='2' name='error' type_modifier='o' type='^@' declared_type='NSString**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isPartialStringValid:newEditingString:errorDescription:'>
<arg index='0' name='partialString' type='@' declared_type='NSString*'/>
<arg index='1' name='newString' type='^@' declared_type='NSString**'/>
<arg index='2' name='error' type='^@' declared_type='NSString**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:'>
<arg index='0' name='partialStringPtr' type='^@' declared_type='NSString**'/>
<arg index='1' name='proposedSelRangePtr' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer'/>
<arg index='2' name='origString' type='@' declared_type='NSString*'/>
<arg index='3' name='origSelRange' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='4' name='error' type='^@' declared_type='NSString**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='stringForObjectValue:'>
<arg index='0' name='obj' type='@' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSGarbageCollector'>
<method selector='collectExhaustively'>
<retval type='v' declared_type='void'/>
</method>
<method selector='collectIfNeeded'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='defaultCollector'>
<retval type='@' declared_type='id'/>
</method>
<method selector='disable'>
<retval type='v' declared_type='void'/>
</method>
<method selector='disableCollectorForPointer:'>
<arg const='true' index='0' name='ptr' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='enable'>
<retval type='v' declared_type='void'/>
</method>
<method selector='enableCollectorForPointer:'>
<arg const='true' index='0' name='ptr' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isCollecting'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='zone'>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</method>
</class>
<class name='NSHTTPCookie'>
<method selector='comment'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='commentURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method class_method='true' selector='cookieWithProperties:'>
<arg index='0' name='properties' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='cookiesWithResponseHeaderFields:forURL:'>
<arg index='0' name='headerFields' type='@' declared_type='NSDictionary*'/>
<arg index='1' name='URL' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='domain'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='expiresDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='initWithProperties:'>
<arg index='0' name='properties' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isHTTPOnly'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSecure'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSessionOnly'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='path'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='portList'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='properties'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method class_method='true' selector='requestHeaderFieldsWithCookies:'>
<arg index='0' name='cookies' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='value'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='version'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
</class>
<class name='NSHTTPCookieStorage'>
<method selector='cookieAcceptPolicy'>
<retval type64='Q' type='I' declared_type='NSHTTPCookieAcceptPolicy'/>
</method>
<method selector='cookies'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='cookiesForURL:'>
<arg index='0' name='URL' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='deleteCookie:'>
<arg index='0' name='cookie' type='@' declared_type='NSHTTPCookie*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCookie:'>
<arg index='0' name='cookie' type='@' declared_type='NSHTTPCookie*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCookieAcceptPolicy:'>
<arg index='0' name='cookieAcceptPolicy' type64='Q' type='I' declared_type='NSHTTPCookieAcceptPolicy'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCookies:forURL:mainDocumentURL:'>
<arg index='0' name='cookies' type='@' declared_type='NSArray*'/>
<arg index='1' name='URL' type='@' declared_type='NSURL*'/>
<arg index='2' name='mainDocumentURL' type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedHTTPCookieStorage'>
<retval type='@' declared_type='NSHTTPCookieStorage*'/>
</method>
<method selector='sortedCookiesUsingDescriptors:'>
<arg index='0' name='sortOrder' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSHTTPURLResponse'>
<method selector='allHeaderFields'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='initWithURL:statusCode:HTTPVersion:headerFields:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='statusCode' type64='q' type='i' declared_type='NSInteger'/>
<arg index='2' name='HTTPVersion' type='@' declared_type='NSString*'/>
<arg index='3' name='headerFields' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='localizedStringForStatusCode:'>
<arg index='0' name='statusCode' type64='q' type='i' declared_type='NSInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='statusCode'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='NSHashTable'>
<method selector='addObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allObjects'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='anyObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='containsObject:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='count'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method class_method='true' selector='hashTableWithOptions:'>
<arg index='0' name='options' type64='Q' type='I' declared_type='NSPointerFunctionsOptions'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='hashTableWithWeakObjects'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithOptions:capacity:'>
<arg index='0' name='options' type64='Q' type='I' declared_type='NSPointerFunctionsOptions'/>
<arg index='1' name='initialCapacity' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPointerFunctions:capacity:'>
<arg index='0' name='functions' type='@' declared_type='NSPointerFunctions*'/>
<arg index='1' name='initialCapacity' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intersectHashTable:'>
<arg index='0' name='other' type='@' declared_type='NSHashTable*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='intersectsHashTable:'>
<arg index='0' name='other' type='@' declared_type='NSHashTable*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualToHashTable:'>
<arg index='0' name='other' type='@' declared_type='NSHashTable*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSubsetOfHashTable:'>
<arg index='0' name='other' type='@' declared_type='NSHashTable*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='member:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='minusHashTable:'>
<arg index='0' name='other' type='@' declared_type='NSHashTable*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='objectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='pointerFunctions'>
<retval type='@' declared_type='NSPointerFunctions*'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRepresentation'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='unionHashTable:'>
<arg index='0' name='other' type='@' declared_type='NSHashTable*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='weakObjectsHashTable'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSHost'>
<method selector='address'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='addresses'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='currentHost'>
<retval type='@' declared_type='NSHost*'/>
</method>
<method class_method='true' selector='flushHostCache'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='hostWithAddress:'>
<arg index='0' name='address' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSHost*'/>
</method>
<method class_method='true' selector='hostWithName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSHost*'/>
</method>
<method selector='isEqualToHost:'>
<arg index='0' name='aHost' type='@' declared_type='NSHost*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='isHostCacheEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='localizedName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='names'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='setHostCacheEnabled:'>
<arg index='0' name='flag' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSIndexPath'>
<method selector='compare:'>
<arg index='0' name='otherObject' type='@' declared_type='NSIndexPath*'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='getIndexes:'>
<arg index='0' name='indexes' type64='^Q' type='^I' declared_type='NSUInteger*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='indexAtPosition:'>
<arg index='0' name='position' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexPathByAddingIndex:'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSIndexPath*'/>
</method>
<method selector='indexPathByRemovingLastIndex'>
<retval type='@' declared_type='NSIndexPath*'/>
</method>
<method class_method='true' selector='indexPathWithIndex:'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='indexPathWithIndexes:length:'>
<arg const='true' index='0' name='indexes' type64='^Q' type='^I' declared_type='NSUInteger*'/>
<arg index='1' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithIndex:'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithIndexes:length:'>
<arg const='true' index='0' name='indexes' type64='^Q' type='^I' declared_type='NSUInteger*'/>
<arg index='1' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='length'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
</class>
<class name='NSIndexSet'>
<method selector='containsIndex:'>
<arg index='0' name='value' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='containsIndexes:'>
<arg index='0' name='indexSet' type='@' declared_type='NSIndexSet*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='containsIndexesInRange:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='count'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='countOfIndexesInRange:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='enumerateIndexesInRange:options:usingBlock:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='2' name='block' type='@?' declared_type='void (^)(NSUInteger, BOOL *)'>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateIndexesUsingBlock:'>
<arg function_pointer='true' index='0' name='block' type='@?' declared_type='void (^)(NSUInteger, BOOL *)'>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateIndexesWithOptions:usingBlock:'>
<arg index='0' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='1' name='block' type='@?' declared_type='void (^)(NSUInteger, BOOL *)'>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateRangesInRange:options:usingBlock:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='2' name='block' type='@?' declared_type='void (^)(NSRange, BOOL *)'>
<arg type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateRangesUsingBlock:'>
<arg function_pointer='true' index='0' name='block' type='@?' declared_type='void (^)(NSRange, BOOL *)'>
<arg type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateRangesWithOptions:usingBlock:'>
<arg index='0' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='1' name='block' type='@?' declared_type='void (^)(NSRange, BOOL *)'>
<arg type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='firstIndex'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='getIndexes:maxCount:inIndexRange:'>
<arg index='0' name='indexBuffer' type64='^Q' type='^I' declared_type='NSUInteger*'/>
<arg index='1' name='bufferSize' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='range' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexGreaterThanIndex:'>
<arg index='0' name='value' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexGreaterThanOrEqualToIndex:'>
<arg index='0' name='value' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexInRange:options:passingTest:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='2' name='predicate' type='@?' declared_type='BOOL (^)(NSUInteger, BOOL *)'>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexLessThanIndex:'>
<arg index='0' name='value' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexLessThanOrEqualToIndex:'>
<arg index='0' name='value' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexPassingTest:'>
<arg function_pointer='true' index='0' name='predicate' type='@?' declared_type='BOOL (^)(NSUInteger, BOOL *)'>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method class_method='true' selector='indexSet'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='indexSetWithIndex:'>
<arg index='0' name='value' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='indexSetWithIndexesInRange:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='indexWithOptions:passingTest:'>
<arg index='0' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='1' name='predicate' type='@?' declared_type='BOOL (^)(NSUInteger, BOOL *)'>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexesInRange:options:passingTest:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='2' name='predicate' type='@?' declared_type='BOOL (^)(NSUInteger, BOOL *)'>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='indexesPassingTest:'>
<arg function_pointer='true' index='0' name='predicate' type='@?' declared_type='BOOL (^)(NSUInteger, BOOL *)'>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='indexesWithOptions:passingTest:'>
<arg index='0' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='1' name='predicate' type='@?' declared_type='BOOL (^)(NSUInteger, BOOL *)'>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithIndex:'>
<arg index='0' name='value' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithIndexSet:'>
<arg index='0' name='indexSet' type='@' declared_type='NSIndexSet*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithIndexesInRange:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intersectsIndexesInRange:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualToIndexSet:'>
<arg index='0' name='indexSet' type='@' declared_type='NSIndexSet*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lastIndex'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
</class>
<class name='NSIndexSpecifier'>
<method selector='index'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='initWithContainerClassDescription:containerSpecifier:key:index:'>
<arg index='0' name='classDesc' type='@' declared_type='NSScriptClassDescription*'/>
<arg index='1' name='container' type='@' declared_type='NSScriptObjectSpecifier*'/>
<arg index='2' name='property' type='@' declared_type='NSString*'/>
<arg index='3' name='index' type64='q' type='i' declared_type='NSInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setIndex:'>
<arg index='0' name='index' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSInputStream'>
<method selector='getBuffer:length:'>
<arg index='0' name='buffer' type='^*' declared_type='uint8_t**'/>
<arg index='1' name='len' type64='^Q' type='^I' declared_type='NSUInteger*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasBytesAvailable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithData:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFileAtPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='inputStreamWithData:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='inputStreamWithFileAtPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='inputStreamWithURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='read:maxLength:'>
<arg index='0' name='buffer' type='*' declared_type='uint8_t*'/>
<arg index='1' name='len' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='NSInvocation'>
<method selector='argumentsRetained'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getArgument:atIndex:'>
<arg index='0' name='argumentLocation' type='^v' declared_type='void*'/>
<arg index='1' name='idx' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getReturnValue:'>
<arg index='0' name='retLoc' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='invocationWithMethodSignature:'>
<arg index='0' name='sig' type='@' declared_type='NSMethodSignature*'/>
<retval type='@' declared_type='NSInvocation*'/>
</method>
<method selector='invoke'>
<retval type='v' declared_type='void'/>
</method>
<method selector='invokeWithTarget:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='methodSignature'>
<retval type='@' declared_type='NSMethodSignature*'/>
</method>
<method selector='retainArguments'>
<retval type='v' declared_type='void'/>
</method>
<method selector='selector'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='setArgument:atIndex:'>
<arg index='0' name='argumentLocation' type='^v' declared_type='void*'/>
<arg index='1' name='idx' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReturnValue:'>
<arg index='0' name='retLoc' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelector:'>
<arg index='0' name='selector' type=':' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTarget:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='target'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSInvocationOperation'>
<method selector='initWithInvocation:'>
<arg index='0' name='inv' type='@' declared_type='NSInvocation*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:selector:object:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<arg index='1' name='sel' type=':' declared_type='SEL'/>
<arg index='2' name='arg' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='invocation'>
<retval type='@' declared_type='NSInvocation*'/>
</method>
<method selector='result'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSJSONSerialization'>
<method class_method='true' selector='JSONObjectWithData:options:error:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<arg index='1' name='opt' type64='Q' type='I' declared_type='NSJSONReadingOptions'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='JSONObjectWithStream:options:error:'>
<arg index='0' name='stream' type='@' declared_type='NSInputStream*'/>
<arg index='1' name='opt' type64='Q' type='I' declared_type='NSJSONReadingOptions'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dataWithJSONObject:options:error:'>
<arg index='0' name='obj' type='@' declared_type='id'/>
<arg index='1' name='opt' type64='Q' type='I' declared_type='NSJSONWritingOptions'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method class_method='true' selector='isValidJSONObject:'>
<arg index='0' name='obj' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='writeJSONObject:toStream:options:error:'>
<arg index='0' name='obj' type='@' declared_type='id'/>
<arg index='1' name='stream' type='@' declared_type='NSOutputStream*'/>
<arg index='2' name='opt' type64='Q' type='I' declared_type='NSJSONWritingOptions'/>
<arg index='3' name='error' type='^@' declared_type='NSError**'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='NSKeyedArchiver'>
<method class_method='true' selector='archiveRootObject:toFile:'>
<arg index='0' name='rootObject' type='@' declared_type='id'/>
<arg index='1' name='path' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='archivedDataWithRootObject:'>
<arg index='0' name='rootObject' type='@' declared_type='id'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method class_method='true' selector='classNameForClass:'>
<arg index='0' name='cls' type='#' declared_type='Class'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='classNameForClass:'>
<arg index='0' name='cls' type='#' declared_type='Class'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='encodeBool:forKey:'>
<arg index='0' name='boolv' type='B' declared_type='BOOL'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeBytes:length:forKey:'>
<arg const='true' index='0' name='bytesp' type='*' declared_type='uint8_t*'/>
<arg index='1' name='lenv' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeConditionalObject:forKey:'>
<arg index='0' name='objv' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeDouble:forKey:'>
<arg index='0' name='realv' type='d' declared_type='double'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeFloat:forKey:'>
<arg index='0' name='realv' type='f' declared_type='float'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeInt32:forKey:'>
<arg index='0' name='intv' type='i' declared_type='int32_t'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeInt64:forKey:'>
<arg index='0' name='intv' type='q' declared_type='int64_t'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeInt:forKey:'>
<arg index='0' name='intv' type='i' declared_type='int'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeObject:forKey:'>
<arg index='0' name='objv' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='finishEncoding'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initForWritingWithMutableData:'>
<arg index='0' name='data' type='@' declared_type='NSMutableData*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='outputFormat'>
<retval type64='Q' type='I' declared_type='NSPropertyListFormat'/>
</method>
<method class_method='true' selector='setClassName:forClass:'>
<arg index='0' name='codedName' type='@' declared_type='NSString*'/>
<arg index='1' name='cls' type='#' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setClassName:forClass:'>
<arg index='0' name='codedName' type='@' declared_type='NSString*'/>
<arg index='1' name='cls' type='#' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' name='delegate' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOutputFormat:'>
<arg index='0' name='format' type64='Q' type='I' declared_type='NSPropertyListFormat'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSKeyedUnarchiver'>
<method class_method='true' selector='classForClassName:'>
<arg index='0' name='codedName' type='@' declared_type='NSString*'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='classForClassName:'>
<arg index='0' name='codedName' type='@' declared_type='NSString*'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='containsValueForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='decodeBoolForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='decodeBytesForKey:returnedLength:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<arg index='1' name='lengthp' type64='^Q' type='^I' declared_type='NSUInteger*'/>
<retval const='true' type='*' declared_type='uint8_t*'/>
</method>
<method selector='decodeDoubleForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='decodeFloatForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='f' declared_type='float'/>
</method>
<method selector='decodeInt32ForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='i' declared_type='int32_t'/>
</method>
<method selector='decodeInt64ForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='q' declared_type='int64_t'/>
</method>
<method selector='decodeIntForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='i' declared_type='int'/>
</method>
<method selector='decodeObjectForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='finishDecoding'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initForReadingWithData:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='setClass:forClassName:'>
<arg index='0' name='cls' type='#' declared_type='Class'/>
<arg index='1' name='codedName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setClass:forClassName:'>
<arg index='0' name='cls' type='#' declared_type='Class'/>
<arg index='1' name='codedName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' name='delegate' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='unarchiveObjectWithData:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='unarchiveObjectWithFile:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSLinguisticTagger'>
<method class_method='true' selector='availableTagSchemesForLanguage:'>
<arg index='0' name='language' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='enumerateTagsInRange:scheme:options:usingBlock:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='tagScheme' type='@' declared_type='NSString*'/>
<arg index='2' name='opts' type64='Q' type='I' declared_type='NSLinguisticTaggerOptions'/>
<arg function_pointer='true' index='3' name='block' type='@?' declared_type='void (^)(NSString *, NSRange, NSRange, BOOL *)'>
<arg type='@' declared_type='NSString*'/>
<arg type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithTagSchemes:options:'>
<arg index='0' name='tagSchemes' type='@' declared_type='NSArray*'/>
<arg index='1' name='opts' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='orthographyAtIndex:effectiveRange:'>
<arg index='0' name='charIndex' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='effectiveRange' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer'/>
<retval type='@' declared_type='NSOrthography*'/>
</method>
<method selector='possibleTagsAtIndex:scheme:tokenRange:sentenceRange:scores:'>
<arg index='0' name='charIndex' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='tagScheme' type='@' declared_type='NSString*'/>
<arg index='2' name='tokenRange' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer'/>
<arg index='3' name='sentenceRange' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer'/>
<arg index='4' name='scores' type='^@' declared_type='NSArray**'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sentenceRangeForRange:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='setOrthography:range:'>
<arg index='0' name='orthography' type='@' declared_type='NSOrthography*'/>
<arg index='1' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='string'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringEditedInRange:changeInLength:'>
<arg index='0' name='newRange' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='delta' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tagAtIndex:scheme:tokenRange:sentenceRange:'>
<arg index='0' name='charIndex' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='tagScheme' type='@' declared_type='NSString*'/>
<arg index='2' name='tokenRange' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer'/>
<arg index='3' name='sentenceRange' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='tagSchemes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='tagsInRange:scheme:options:tokenRanges:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='tagScheme' type='@' declared_type='NSString*'/>
<arg index='2' name='opts' type64='Q' type='I' declared_type='NSLinguisticTaggerOptions'/>
<arg index='3' name='tokenRanges' type='^@' declared_type='NSArray**'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSLocale'>
<method class_method='true' selector='ISOCountryCodes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='ISOCurrencyCodes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='ISOLanguageCodes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='autoupdatingCurrentLocale'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='availableLocaleIdentifiers'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='canonicalLanguageIdentifierFromString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='canonicalLocaleIdentifierFromString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='characterDirectionForLanguage:'>
<arg index='0' name='isoLangCode' type='@' declared_type='NSString*'/>
<retval type64='Q' type='I' declared_type='NSLocaleLanguageDirection'/>
</method>
<method class_method='true' selector='commonISOCurrencyCodes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='componentsFromLocaleIdentifier:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method class_method='true' selector='currentLocale'>
<retval type='@' declared_type='id'/>
</method>
<method selector='displayNameForKey:value:'>
<arg index='0' name='key' type='@' declared_type='id'/>
<arg index='1' name='value' type='@' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithLocaleIdentifier:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='lineDirectionForLanguage:'>
<arg index='0' name='isoLangCode' type='@' declared_type='NSString*'/>
<retval type64='Q' type='I' declared_type='NSLocaleLanguageDirection'/>
</method>
<method selector='localeIdentifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='localeIdentifierFromComponents:'>
<arg index='0' name='dict' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='localeIdentifierFromWindowsLocaleCode:'>
<arg index='0' name='lcid' type='I' declared_type='uint32_t'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='objectForKey:'>
<arg index='0' name='key' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='preferredLanguages'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='systemLocale'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='windowsLocaleCodeFromLocaleIdentifier:'>
<arg index='0' name='localeIdentifier' type='@' declared_type='NSString*'/>
<retval type='I' declared_type='uint32_t'/>
</method>
</class>
<class name='NSLock'>
<method selector='lockBeforeDate:'>
<arg index='0' name='limit' type='@' declared_type='NSDate*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setName:'>
<arg index='0' name='n' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tryLock'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSLogicalTest'>
<method selector='initAndTestWithTests:'>
<arg index='0' name='subTests' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initNotTestWithTest:'>
<arg index='0' name='subTest' type='@' declared_type='NSScriptWhoseTest*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initOrTestWithTests:'>
<arg index='0' name='subTests' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSMachBootstrapServer'>
<method selector='portForName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='portForName:host:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='host' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='registerPort:name:'>
<arg index='0' name='port' type='@' declared_type='NSPort*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='servicePortWithName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method class_method='true' selector='sharedInstance'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSMachPort'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithMachPort:'>
<arg index='0' name='machPort' type='I' declared_type='uint32_t'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithMachPort:options:'>
<arg index='0' name='machPort' type='I' declared_type='uint32_t'/>
<arg index='1' name='f' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='machPort'>
<retval type='I' declared_type='uint32_t'/>
</method>
<method class_method='true' selector='portWithMachPort:'>
<arg index='0' name='machPort' type='I' declared_type='uint32_t'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method class_method='true' selector='portWithMachPort:options:'>
<arg index='0' name='machPort' type='I' declared_type='uint32_t'/>
<arg index='1' name='f' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='removeFromRunLoop:forMode:'>
<arg index='0' name='runLoop' type='@' declared_type='NSRunLoop*'/>
<arg index='1' name='mode' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg index='0' name='runLoop' type='@' declared_type='NSRunLoop*'/>
<arg index='1' name='mode' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMapTable'>
<method selector='count'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='dictionaryRepresentation'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='initWithKeyOptions:valueOptions:capacity:'>
<arg index='0' name='keyOptions' type64='Q' type='I' declared_type='NSPointerFunctionsOptions'/>
<arg index='1' name='valueOptions' type64='Q' type='I' declared_type='NSPointerFunctionsOptions'/>
<arg index='2' name='initialCapacity' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithKeyPointerFunctions:valuePointerFunctions:capacity:'>
<arg index='0' name='keyFunctions' type='@' declared_type='NSPointerFunctions*'/>
<arg index='1' name='valueFunctions' type='@' declared_type='NSPointerFunctions*'/>
<arg index='2' name='initialCapacity' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='keyEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='keyPointerFunctions'>
<retval type='@' declared_type='NSPointerFunctions*'/>
</method>
<method class_method='true' selector='mapTableWithKeyOptions:valueOptions:'>
<arg index='0' name='keyOptions' type64='Q' type='I' declared_type='NSPointerFunctionsOptions'/>
<arg index='1' name='valueOptions' type64='Q' type='I' declared_type='NSPointerFunctionsOptions'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='mapTableWithStrongToStrongObjects'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='mapTableWithStrongToWeakObjects'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='mapTableWithWeakToStrongObjects'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='mapTableWithWeakToWeakObjects'>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='objectForKey:'>
<arg index='0' name='aKey' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectForKey:'>
<arg index='0' name='aKey' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:forKey:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<arg index='1' name='aKey' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='strongToStrongObjectsMapTable'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='strongToWeakObjectsMapTable'>
<retval type='@' declared_type='id'/>
</method>
<method selector='valuePointerFunctions'>
<retval type='@' declared_type='NSPointerFunctions*'/>
</method>
<method class_method='true' selector='weakToStrongObjectsMapTable'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='weakToWeakObjectsMapTable'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSMessagePortNameServer'>
<method selector='portForName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='portForName:host:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='host' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method class_method='true' selector='sharedInstance'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSMetadataItem'>
<method selector='attributes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='valueForAttribute:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='valuesForAttributes:'>
<arg index='0' name='keys' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSMetadataQuery'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='disableUpdates'>
<retval type='v' declared_type='void'/>
</method>
<method selector='enableUpdates'>
<retval type='v' declared_type='void'/>
</method>
<method selector='groupedResults'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='groupingAttributes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='indexOfResult:'>
<arg index='0' name='result' type='@' declared_type='id'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isGathering'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isStarted'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isStopped'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='notificationBatchingInterval'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='predicate'>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='resultAtIndex:'>
<arg index='0' name='idx' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='resultCount'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='results'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='searchScopes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setDelegate:'>
<arg index='0' name='delegate' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGroupingAttributes:'>
<arg index='0' name='attrs' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNotificationBatchingInterval:'>
<arg index='0' name='ti' type='d' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPredicate:'>
<arg index='0' name='predicate' type='@' declared_type='NSPredicate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSearchScopes:'>
<arg index='0' name='scopes' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSortDescriptors:'>
<arg index='0' name='descriptors' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValueListAttributes:'>
<arg index='0' name='attrs' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='startQuery'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='stopQuery'>
<retval type='v' declared_type='void'/>
</method>
<method selector='valueListAttributes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='valueLists'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='valueOfAttribute:forResultAtIndex:'>
<arg index='0' name='attrName' type='@' declared_type='NSString*'/>
<arg index='1' name='idx' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSMetadataQueryAttributeValueTuple'>
<method selector='attribute'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='count'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='value'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSMetadataQueryResultGroup'>
<method selector='attribute'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='resultAtIndex:'>
<arg index='0' name='idx' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='resultCount'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='results'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='subgroups'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='value'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSMethodSignature'>
<method selector='frameLength'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='getArgumentTypeAtIndex:'>
<arg index='0' name='idx' type64='Q' type='I' declared_type='NSUInteger'/>
<retval const='true' type='*' declared_type='char*'/>
</method>
<method selector='isOneway'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='methodReturnLength'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='methodReturnType'>
<retval const='true' type='*' declared_type='char*'/>
</method>
<method selector='numberOfArguments'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method class_method='true' selector='signatureWithObjCTypes:'>
<arg const='true' index='0' name='types' type='*' declared_type='char*'/>
<retval type='@' declared_type='NSMethodSignature*'/>
</method>
</class>
<class name='NSMoveCommand'>
<method selector='keySpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='setReceiversSpecifier:'>
<arg index='0' name='receiversRef' type='@' declared_type='NSScriptObjectSpecifier*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableArray'>
<method selector='addObject:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjectsFromArray:'>
<arg index='0' name='otherArray' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='arrayWithCapacity:'>
<arg index='0' name='numItems' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='exchangeObjectAtIndex:withObjectAtIndex:'>
<arg index='0' name='idx1' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='idx2' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='filterUsingPredicate:'>
<arg index='0' name='predicate' type='@' declared_type='NSPredicate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithCapacity:'>
<arg index='0' name='numItems' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertObject:atIndex:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<arg index='1' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertObjects:atIndexes:'>
<arg index='0' name='objects' type='@' declared_type='NSArray*'/>
<arg index='1' name='indexes' type='@' declared_type='NSIndexSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeLastObject'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObject:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObject:inRange:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<arg index='1' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectAtIndex:'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectIdenticalTo:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectIdenticalTo:inRange:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<arg index='1' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsAtIndexes:'>
<arg index='0' name='indexes' type='@' declared_type='NSIndexSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsFromIndices:numIndices:'>
<arg index='0' name='indices' type64='^Q' type='^I' declared_type='NSUInteger*'/>
<arg index='1' name='cnt' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsInArray:'>
<arg index='0' name='otherArray' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsInRange:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectAtIndex:withObject:'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='anObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectsAtIndexes:withObjects:'>
<arg index='0' name='indexes' type='@' declared_type='NSIndexSet*'/>
<arg index='1' name='objects' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectsInRange:withObjectsFromArray:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='otherArray' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectsInRange:withObjectsFromArray:range:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='otherArray' type='@' declared_type='NSArray*'/>
<arg index='2' name='otherRange' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setArray:'>
<arg index='0' name='otherArray' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:atIndexedSubscript:'>
<arg index='0' name='obj' type='@' declared_type='id'/>
<arg index='1' name='idx' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortUsingComparator:'>
<arg function_pointer='true' index='0' name='cmptr' type='@?' declared_type='NSComparator'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortUsingDescriptors:'>
<arg index='0' name='sortDescriptors' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortUsingFunction:context:'>
<arg function_pointer='true' index='0' name='compare' type='^?' declared_type='NSInteger (*)(id, id, void *)'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^v' declared_type='void*'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</arg>
<arg index='1' name='context' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortUsingSelector:'>
<arg index='0' name='comparator' type=':' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortWithOptions:usingComparator:'>
<arg index='0' name='opts' type64='Q' type='I' declared_type='NSSortOptions'/>
<arg function_pointer='true' index='1' name='cmptr' type='@?' declared_type='NSComparator'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableAttributedString'>
<method selector='addAttribute:value:range:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='value' type='@' declared_type='id'/>
<arg index='2' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addAttributes:range:'>
<arg index='0' name='attrs' type='@' declared_type='NSDictionary*'/>
<arg index='1' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendAttributedString:'>
<arg index='0' name='attrString' type='@' declared_type='NSAttributedString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginEditing'>
<retval type='v' declared_type='void'/>
</method>
<method selector='deleteCharactersInRange:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='endEditing'>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertAttributedString:atIndex:'>
<arg index='0' name='attrString' type='@' declared_type='NSAttributedString*'/>
<arg index='1' name='loc' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mutableString'>
<retval type='@' declared_type='NSMutableString*'/>
</method>
<method selector='removeAttribute:range:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceCharactersInRange:withAttributedString:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='attrString' type='@' declared_type='NSAttributedString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceCharactersInRange:withString:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='str' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributedString:'>
<arg index='0' name='attrString' type='@' declared_type='NSAttributedString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributes:range:'>
<arg index='0' name='attrs' type='@' declared_type='NSDictionary*'/>
<arg index='1' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableCharacterSet'>
<method selector='addCharactersInRange:'>
<arg index='0' name='aRange' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addCharactersInString:'>
<arg index='0' name='aString' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='formIntersectionWithCharacterSet:'>
<arg index='0' name='otherSet' type='@' declared_type='NSCharacterSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='formUnionWithCharacterSet:'>
<arg index='0' name='otherSet' type='@' declared_type='NSCharacterSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='invert'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeCharactersInRange:'>
<arg index='0' name='aRange' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeCharactersInString:'>
<arg index='0' name='aString' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableData'>
<method selector='appendBytes:length:'>
<arg const='true' index='0' name='bytes' type='^v' declared_type='void*'/>
<arg index='1' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendData:'>
<arg index='0' name='other' type='@' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='dataWithCapacity:'>
<arg index='0' name='aNumItems' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dataWithLength:'>
<arg index='0' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='increaseLengthBy:'>
<arg index='0' name='extraLength' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithCapacity:'>
<arg index='0' name='capacity' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithLength:'>
<arg index='0' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mutableBytes'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='replaceBytesInRange:withBytes:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg const='true' index='1' name='bytes' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceBytesInRange:withBytes:length:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg const='true' index='1' name='replacementBytes' type='^v' declared_type='void*'/>
<arg index='2' name='replacementLength' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resetBytesInRange:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setData:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLength:'>
<arg index='0' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableDictionary'>
<method selector='addEntriesFromDictionary:'>
<arg index='0' name='otherDictionary' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='dictionaryWithCapacity:'>
<arg index='0' name='numItems' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dictionaryWithSharedKeySet:'>
<arg index='0' name='keyset' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCapacity:'>
<arg index='0' name='numItems' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectForKey:'>
<arg index='0' name='aKey' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsForKeys:'>
<arg index='0' name='keyArray' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDictionary:'>
<arg index='0' name='otherDictionary' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:forKey:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<arg index='1' name='aKey' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:forKeyedSubscript:'>
<arg index='0' name='obj' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:forKey:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableIndexSet'>
<method selector='addIndex:'>
<arg index='0' name='value' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addIndexes:'>
<arg index='0' name='indexSet' type='@' declared_type='NSIndexSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addIndexesInRange:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllIndexes'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeIndex:'>
<arg index='0' name='value' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeIndexes:'>
<arg index='0' name='indexSet' type='@' declared_type='NSIndexSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeIndexesInRange:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shiftIndexesStartingAtIndex:by:'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='delta' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableOrderedSet'>
<method selector='addObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjects:count:'>
<arg const='true' index='0' name='objects' type='^@' declared_type='id*'/>
<arg index='1' name='count' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjectsFromArray:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='exchangeObjectAtIndex:withObjectAtIndex:'>
<arg index='0' name='idx1' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='idx2' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithCapacity:'>
<arg index='0' name='numItems' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertObject:atIndex:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='idx' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertObjects:atIndexes:'>
<arg index='0' name='objects' type='@' declared_type='NSArray*'/>
<arg index='1' name='indexes' type='@' declared_type='NSIndexSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='intersectOrderedSet:'>
<arg index='0' name='other' type='@' declared_type='NSOrderedSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='intersectSet:'>
<arg index='0' name='other' type='@' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='minusOrderedSet:'>
<arg index='0' name='other' type='@' declared_type='NSOrderedSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='minusSet:'>
<arg index='0' name='other' type='@' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveObjectsAtIndexes:toIndex:'>
<arg index='0' name='indexes' type='@' declared_type='NSIndexSet*'/>
<arg index='1' name='idx' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='orderedSetWithCapacity:'>
<arg index='0' name='numItems' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectAtIndex:'>
<arg index='0' name='idx' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsAtIndexes:'>
<arg index='0' name='indexes' type='@' declared_type='NSIndexSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsInArray:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsInRange:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectAtIndex:withObject:'>
<arg index='0' name='idx' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectsAtIndexes:withObjects:'>
<arg index='0' name='indexes' type='@' declared_type='NSIndexSet*'/>
<arg index='1' name='objects' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceObjectsInRange:withObjects:count:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg const='true' index='1' name='objects' type='^@' declared_type='id*'/>
<arg index='2' name='count' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:atIndex:'>
<arg index='0' name='obj' type='@' declared_type='id'/>
<arg index='1' name='idx' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:atIndexedSubscript:'>
<arg index='0' name='obj' type='@' declared_type='id'/>
<arg index='1' name='idx' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortRange:options:usingComparator:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='opts' type64='Q' type='I' declared_type='NSSortOptions'/>
<arg function_pointer='true' index='2' name='cmptr' type='@?' declared_type='NSComparator'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortUsingComparator:'>
<arg function_pointer='true' index='0' name='cmptr' type='@?' declared_type='NSComparator'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortWithOptions:usingComparator:'>
<arg index='0' name='opts' type64='Q' type='I' declared_type='NSSortOptions'/>
<arg function_pointer='true' index='1' name='cmptr' type='@?' declared_type='NSComparator'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='unionOrderedSet:'>
<arg index='0' name='other' type='@' declared_type='NSOrderedSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unionSet:'>
<arg index='0' name='other' type='@' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableSet'>
<method selector='addObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjectsFromArray:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='filterUsingPredicate:'>
<arg index='0' name='predicate' type='@' declared_type='NSPredicate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithCapacity:'>
<arg index='0' name='numItems' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intersectSet:'>
<arg index='0' name='otherSet' type='@' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='minusSet:'>
<arg index='0' name='otherSet' type='@' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSet:'>
<arg index='0' name='otherSet' type='@' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setWithCapacity:'>
<arg index='0' name='numItems' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='unionSet:'>
<arg index='0' name='otherSet' type='@' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableString'>
<method variadic='true' selector='appendFormat:'>
<arg index='0' name='format' printf_format='true' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendString:'>
<arg index='0' name='aString' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='deleteCharactersInRange:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithCapacity:'>
<arg index='0' name='capacity' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertString:atIndex:'>
<arg index='0' name='aString' type='@' declared_type='NSString*'/>
<arg index='1' name='loc' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceCharactersInRange:withString:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='aString' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceOccurrencesOfString:withString:options:range:'>
<arg index='0' name='target' type='@' declared_type='NSString*'/>
<arg index='1' name='replacement' type='@' declared_type='NSString*'/>
<arg index='2' name='options' type64='Q' type='I' declared_type='NSStringCompareOptions'/>
<arg index='3' name='searchRange' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='setString:'>
<arg index='0' name='aString' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='stringWithCapacity:'>
<arg index='0' name='capacity' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSMutableURLRequest'>
<method selector='addValue:forHTTPHeaderField:'>
<arg index='0' name='value' type='@' declared_type='NSString*'/>
<arg index='1' name='field' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllHTTPHeaderFields:'>
<arg index='0' name='headerFields' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsCellularAccess:'>
<arg index='0' name='allow' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCachePolicy:'>
<arg index='0' name='policy' type64='Q' type='I' declared_type='NSURLRequestCachePolicy'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTTPBody:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTTPBodyStream:'>
<arg index='0' name='inputStream' type='@' declared_type='NSInputStream*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTTPMethod:'>
<arg index='0' name='method' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTTPShouldHandleCookies:'>
<arg index='0' name='should' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHTTPShouldUsePipelining:'>
<arg index='0' name='shouldUsePipelining' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMainDocumentURL:'>
<arg index='0' name='URL' type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNetworkServiceType:'>
<arg index='0' name='networkServiceType' type64='Q' type='I' declared_type='NSURLRequestNetworkServiceType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeoutInterval:'>
<arg index='0' name='seconds' type='d' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setURL:'>
<arg index='0' name='URL' type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:forHTTPHeaderField:'>
<arg index='0' name='value' type='@' declared_type='NSString*'/>
<arg index='1' name='field' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSNameSpecifier'>
<method selector='initWithContainerClassDescription:containerSpecifier:key:name:'>
<arg index='0' name='classDesc' type='@' declared_type='NSScriptClassDescription*'/>
<arg index='1' name='container' type='@' declared_type='NSScriptObjectSpecifier*'/>
<arg index='2' name='property' type='@' declared_type='NSString*'/>
<arg index='3' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSNetService'>
<method selector='TXTRecordData'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='addresses'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='dataFromTXTRecordDictionary:'>
<arg index='0' name='txtDictionary' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='dictionaryFromTXTRecordData:'>
<arg index='0' name='txtData' type='@' declared_type='NSData*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='domain'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='getInputStream:outputStream:'>
<arg index='0' name='inputStream' type_modifier='o' type='^@' declared_type='NSInputStream**'/>
<arg index='1' name='outputStream' type_modifier='o' type='^@' declared_type='NSOutputStream**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hostName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithDomain:type:name:'>
<arg index='0' name='domain' type='@' declared_type='NSString*'/>
<arg index='1' name='type' type='@' declared_type='NSString*'/>
<arg index='2' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDomain:type:name:port:'>
<arg index='0' name='domain' type='@' declared_type='NSString*'/>
<arg index='1' name='type' type='@' declared_type='NSString*'/>
<arg index='2' name='name' type='@' declared_type='NSString*'/>
<arg index='3' name='port' type='i' declared_type='int'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='port'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='protocolSpecificInformation'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='publish'>
<retval type='v' declared_type='void'/>
</method>
<method selector='publishWithOptions:'>
<arg index='0' name='options' type64='Q' type='I' declared_type='NSNetServiceOptions'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeFromRunLoop:forMode:'>
<arg index='0' name='aRunLoop' type='@' declared_type='NSRunLoop*'/>
<arg index='1' name='mode' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resolve'>
<retval type='v' declared_type='void'/>
</method>
<method selector='resolveWithTimeout:'>
<arg index='0' name='timeout' type='d' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg index='0' name='aRunLoop' type='@' declared_type='NSRunLoop*'/>
<arg index='1' name='mode' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' name='delegate' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProtocolSpecificInformation:'>
<arg index='0' name='specificInformation' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTXTRecordData:'>
<arg index='0' name='recordData' type='@' declared_type='NSData*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='startMonitoring'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stop'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopMonitoring'>
<retval type='v' declared_type='void'/>
</method>
<method selector='type'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSNetServiceBrowser'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeFromRunLoop:forMode:'>
<arg index='0' name='aRunLoop' type='@' declared_type='NSRunLoop*'/>
<arg index='1' name='mode' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg index='0' name='aRunLoop' type='@' declared_type='NSRunLoop*'/>
<arg index='1' name='mode' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchForAllDomains'>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchForBrowsableDomains'>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchForRegistrationDomains'>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchForServicesOfType:inDomain:'>
<arg index='0' name='type' type='@' declared_type='NSString*'/>
<arg index='1' name='domainString' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' name='delegate' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stop'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSNotification'>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='notificationWithName:object:'>
<arg index='0' name='aName' type='@' declared_type='NSString*'/>
<arg index='1' name='anObject' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='notificationWithName:object:userInfo:'>
<arg index='0' name='aName' type='@' declared_type='NSString*'/>
<arg index='1' name='anObject' type='@' declared_type='id'/>
<arg index='2' name='aUserInfo' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='object'>
<retval type='@' declared_type='id'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSNotificationCenter'>
<method selector='addObserver:selector:name:object:'>
<arg index='0' name='observer' type='@' declared_type='id'/>
<arg index='1' name='aSelector' type=':' declared_type='SEL'/>
<arg index='2' name='aName' type='@' declared_type='NSString*'/>
<arg index='3' name='anObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObserverForName:object:queue:usingBlock:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='obj' type='@' declared_type='id'/>
<arg index='2' name='queue' type='@' declared_type='NSOperationQueue*'/>
<arg function_pointer='true' index='3' name='block' type='@?' declared_type='void (^)(NSNotification *)'>
<arg type='@' declared_type='NSNotification*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='defaultCenter'>
<retval type='@' declared_type='id'/>
</method>
<method selector='postNotification:'>
<arg index='0' name='notification' type='@' declared_type='NSNotification*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='postNotificationName:object:'>
<arg index='0' name='aName' type='@' declared_type='NSString*'/>
<arg index='1' name='anObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='postNotificationName:object:userInfo:'>
<arg index='0' name='aName' type='@' declared_type='NSString*'/>
<arg index='1' name='anObject' type='@' declared_type='id'/>
<arg index='2' name='aUserInfo' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:'>
<arg index='0' name='observer' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:name:object:'>
<arg index='0' name='observer' type='@' declared_type='id'/>
<arg index='1' name='aName' type='@' declared_type='NSString*'/>
<arg index='2' name='anObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSNotificationQueue'>
<method class_method='true' selector='defaultQueue'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dequeueNotificationsMatching:coalesceMask:'>
<arg index='0' name='notification' type='@' declared_type='NSNotification*'/>
<arg index='1' name='coalesceMask' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueNotification:postingStyle:'>
<arg index='0' name='notification' type='@' declared_type='NSNotification*'/>
<arg index='1' name='postingStyle' type64='Q' type='I' declared_type='NSPostingStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='enqueueNotification:postingStyle:coalesceMask:forModes:'>
<arg index='0' name='notification' type='@' declared_type='NSNotification*'/>
<arg index='1' name='postingStyle' type64='Q' type='I' declared_type='NSPostingStyle'/>
<arg index='2' name='coalesceMask' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='3' name='modes' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithNotificationCenter:'>
<arg index='0' name='notificationCenter' type='@' declared_type='NSNotificationCenter*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSNull'>
<method class_method='true' selector='null'>
<retval type='@' declared_type='NSNull*'/>
</method>
</class>
<class name='NSNumber'>
<method selector='boolValue'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='charValue'>
<retval type='c' declared_type='char'/>
</method>
<method selector='compare:'>
<arg index='0' name='otherNumber' type='@' declared_type='NSNumber*'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='decimalValue'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='descriptionWithLocale:'>
<arg index='0' name='locale' type='@' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='doubleValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='floatValue'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithBool:'>
<arg index='0' name='value' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithChar:'>
<arg index='0' name='value' type='c' declared_type='char'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDouble:'>
<arg index='0' name='value' type='d' declared_type='double'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFloat:'>
<arg index='0' name='value' type='f' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithInt:'>
<arg index='0' name='value' type='i' declared_type='int'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithInteger:'>
<arg index='0' name='value' type64='q' type='i' declared_type='NSInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithLong:'>
<arg index='0' name='value' type64='q' type='l' declared_type='long'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithLongLong:'>
<arg index='0' name='value' type='q' declared_type='long long'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithShort:'>
<arg index='0' name='value' type='s' declared_type='short'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUnsignedChar:'>
<arg index='0' name='value' type='C' declared_type='unsigned char'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUnsignedInt:'>
<arg index='0' name='value' type='I' declared_type='unsigned int'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUnsignedInteger:'>
<arg index='0' name='value' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUnsignedLong:'>
<arg index='0' name='value' type64='Q' type='L' declared_type='unsigned long'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUnsignedLongLong:'>
<arg index='0' name='value' type='Q' declared_type='unsigned long long'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUnsignedShort:'>
<arg index='0' name='value' type='S' declared_type='unsigned short'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intValue'>
<retval type='i' declared_type='int'/>
</method>
<method selector='integerValue'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='isEqualToNumber:'>
<arg index='0' name='number' type='@' declared_type='NSNumber*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='longLongValue'>
<retval type='q' declared_type='long long'/>
</method>
<method selector='longValue'>
<retval type64='q' type='l' declared_type='long'/>
</method>
<method class_method='true' selector='numberWithBool:'>
<arg index='0' name='value' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithChar:'>
<arg index='0' name='value' type='c' declared_type='char'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithDouble:'>
<arg index='0' name='value' type='d' declared_type='double'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithFloat:'>
<arg index='0' name='value' type='f' declared_type='float'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithInt:'>
<arg index='0' name='value' type='i' declared_type='int'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithInteger:'>
<arg index='0' name='value' type64='q' type='i' declared_type='NSInteger'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithLong:'>
<arg index='0' name='value' type64='q' type='l' declared_type='long'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithLongLong:'>
<arg index='0' name='value' type='q' declared_type='long long'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithShort:'>
<arg index='0' name='value' type='s' declared_type='short'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithUnsignedChar:'>
<arg index='0' name='value' type='C' declared_type='unsigned char'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithUnsignedInt:'>
<arg index='0' name='value' type='I' declared_type='unsigned int'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithUnsignedInteger:'>
<arg index='0' name='value' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithUnsignedLong:'>
<arg index='0' name='value' type64='Q' type='L' declared_type='unsigned long'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithUnsignedLongLong:'>
<arg index='0' name='value' type='Q' declared_type='unsigned long long'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method class_method='true' selector='numberWithUnsignedShort:'>
<arg index='0' name='value' type='S' declared_type='unsigned short'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='shortValue'>
<retval type='s' declared_type='short'/>
</method>
<method selector='stringValue'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='unsignedCharValue'>
<retval type='C' declared_type='unsigned char'/>
</method>
<method selector='unsignedIntValue'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='unsignedIntegerValue'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='unsignedLongLongValue'>
<retval type='Q' declared_type='unsigned long long'/>
</method>
<method selector='unsignedLongValue'>
<retval type64='Q' type='L' declared_type='unsigned long'/>
</method>
<method selector='unsignedShortValue'>
<retval type='S' declared_type='unsigned short'/>
</method>
</class>
<class name='NSNumberFormatter'>
<method selector='allowsFloats'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='alwaysShowsDecimalSeparator'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='attributedStringForNil'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='attributedStringForNotANumber'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='attributedStringForZero'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='currencyCode'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='currencyDecimalSeparator'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='currencyGroupingSeparator'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='currencySymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='decimalSeparator'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='defaultFormatterBehavior'>
<retval type64='Q' type='I' declared_type='NSNumberFormatterBehavior'/>
</method>
<method selector='exponentSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='format'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='formatWidth'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='formatterBehavior'>
<retval type64='Q' type='I' declared_type='NSNumberFormatterBehavior'/>
</method>
<method selector='generatesDecimalNumbers'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getObjectValue:forString:range:error:'>
<arg index='0' name='obj' type_modifier='o' type='^@' declared_type='id*'/>
<arg index='1' name='string' type='@' declared_type='NSString*'/>
<arg index='2' name='rangep' type64='^{_NSRange=QQ}' type_modifier='N' type='^{_NSRange=II}' declared_type='NSRange*'/>
<arg index='3' name='error' type_modifier='o' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='groupingSeparator'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='groupingSize'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='hasThousandSeparators'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='internationalCurrencySymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='isLenient'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isPartialStringValidationEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='locale'>
<retval type='@' declared_type='NSLocale*'/>
</method>
<method class_method='true' selector='localizedStringFromNumber:numberStyle:'>
<arg index='0' name='num' type='@' declared_type='NSNumber*'/>
<arg index='1' name='nstyle' type64='Q' type='I' declared_type='NSNumberFormatterStyle'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='localizesFormat'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='maximum'>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='maximumFractionDigits'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='maximumIntegerDigits'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='maximumSignificantDigits'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='minimum'>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='minimumFractionDigits'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='minimumIntegerDigits'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='minimumSignificantDigits'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='minusSign'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='multiplier'>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='negativeFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='negativeInfinitySymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='negativePrefix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='negativeSuffix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='nilSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='notANumberSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='numberFromString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='numberStyle'>
<retval type64='Q' type='I' declared_type='NSNumberFormatterStyle'/>
</method>
<method selector='paddingCharacter'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='paddingPosition'>
<retval type64='Q' type='I' declared_type='NSNumberFormatterPadPosition'/>
</method>
<method selector='perMillSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='percentSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='plusSign'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='positiveFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='positiveInfinitySymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='positivePrefix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='positiveSuffix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='roundingBehavior'>
<retval type='@' declared_type='NSDecimalNumberHandler*'/>
</method>
<method selector='roundingIncrement'>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='roundingMode'>
<retval type64='Q' type='I' declared_type='NSNumberFormatterRoundingMode'/>
</method>
<method selector='secondaryGroupingSize'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='setAllowsFloats:'>
<arg index='0' name='flag' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlwaysShowsDecimalSeparator:'>
<arg index='0' name='b' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributedStringForNil:'>
<arg index='0' name='newAttributedString' type='@' declared_type='NSAttributedString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributedStringForNotANumber:'>
<arg index='0' name='newAttributedString' type='@' declared_type='NSAttributedString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributedStringForZero:'>
<arg index='0' name='newAttributedString' type='@' declared_type='NSAttributedString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCurrencyCode:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCurrencyDecimalSeparator:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCurrencyGroupingSeparator:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCurrencySymbol:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDecimalSeparator:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setDefaultFormatterBehavior:'>
<arg index='0' name='behavior' type64='Q' type='I' declared_type='NSNumberFormatterBehavior'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setExponentSymbol:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFormat:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFormatWidth:'>
<arg index='0' name='number' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFormatterBehavior:'>
<arg index='0' name='behavior' type64='Q' type='I' declared_type='NSNumberFormatterBehavior'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGeneratesDecimalNumbers:'>
<arg index='0' name='b' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGroupingSeparator:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGroupingSize:'>
<arg index='0' name='number' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHasThousandSeparators:'>
<arg index='0' name='flag' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInternationalCurrencySymbol:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLenient:'>
<arg index='0' name='b' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocale:'>
<arg index='0' name='locale' type='@' declared_type='NSLocale*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocalizesFormat:'>
<arg index='0' name='flag' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximum:'>
<arg index='0' name='number' type='@' declared_type='NSNumber*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximumFractionDigits:'>
<arg index='0' name='number' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximumIntegerDigits:'>
<arg index='0' name='number' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximumSignificantDigits:'>
<arg index='0' name='number' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimum:'>
<arg index='0' name='number' type='@' declared_type='NSNumber*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumFractionDigits:'>
<arg index='0' name='number' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumIntegerDigits:'>
<arg index='0' name='number' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumSignificantDigits:'>
<arg index='0' name='number' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinusSign:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMultiplier:'>
<arg index='0' name='number' type='@' declared_type='NSNumber*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNegativeFormat:'>
<arg index='0' name='format' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNegativeInfinitySymbol:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNegativePrefix:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNegativeSuffix:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNilSymbol:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNotANumberSymbol:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberStyle:'>
<arg index='0' name='style' type64='Q' type='I' declared_type='NSNumberFormatterStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPaddingCharacter:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPaddingPosition:'>
<arg index='0' name='position' type64='Q' type='I' declared_type='NSNumberFormatterPadPosition'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPartialStringValidationEnabled:'>
<arg index='0' name='b' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPerMillSymbol:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPercentSymbol:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlusSign:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPositiveFormat:'>
<arg index='0' name='format' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPositiveInfinitySymbol:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPositivePrefix:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPositiveSuffix:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRoundingBehavior:'>
<arg index='0' name='newRoundingBehavior' type='@' declared_type='NSDecimalNumberHandler*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRoundingIncrement:'>
<arg index='0' name='number' type='@' declared_type='NSNumber*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRoundingMode:'>
<arg index='0' name='mode' type64='Q' type='I' declared_type='NSNumberFormatterRoundingMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSecondaryGroupingSize:'>
<arg index='0' name='number' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAttributesForNegativeInfinity:'>
<arg index='0' name='newAttributes' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAttributesForNegativeValues:'>
<arg index='0' name='newAttributes' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAttributesForNil:'>
<arg index='0' name='newAttributes' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAttributesForNotANumber:'>
<arg index='0' name='newAttributes' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAttributesForPositiveInfinity:'>
<arg index='0' name='newAttributes' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAttributesForPositiveValues:'>
<arg index='0' name='newAttributes' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAttributesForZero:'>
<arg index='0' name='newAttributes' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setThousandSeparator:'>
<arg index='0' name='newSeparator' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesGroupingSeparator:'>
<arg index='0' name='b' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesSignificantDigits:'>
<arg index='0' name='b' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setZeroSymbol:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringFromNumber:'>
<arg index='0' name='number' type='@' declared_type='NSNumber*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='textAttributesForNegativeInfinity'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='textAttributesForNegativeValues'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='textAttributesForNil'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='textAttributesForNotANumber'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='textAttributesForPositiveInfinity'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='textAttributesForPositiveValues'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='textAttributesForZero'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='thousandSeparator'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='usesGroupingSeparator'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='usesSignificantDigits'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='zeroSymbol'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSObject'>
<method selector='URL:resourceDataDidBecomeAvailable:'>
<arg index='0' name='sender' type='@' declared_type='NSURL*'/>
<arg index='1' name='newBytes' type='@' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URL:resourceDidFailLoadingWithReason:'>
<arg index='0' name='sender' type='@' declared_type='NSURL*'/>
<arg index='1' name='reason' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLHandle:resourceDataDidBecomeAvailable:'>
<arg index='0' name='sender' type='@' declared_type='NSURLHandle*'/>
<arg index='1' name='newBytes' type='@' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLHandle:resourceDidFailLoadingWithReason:'>
<arg index='0' name='sender' type='@' declared_type='NSURLHandle*'/>
<arg index='1' name='reason' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLHandleResourceDidBeginLoading:'>
<arg index='0' name='sender' type='@' declared_type='NSURLHandle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLHandleResourceDidCancelLoading:'>
<arg index='0' name='sender' type='@' declared_type='NSURLHandle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLHandleResourceDidFinishLoading:'>
<arg index='0' name='sender' type='@' declared_type='NSURLHandle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:cachedResponseIsValid:'>
<arg index='0' name='protocol' type='@' declared_type='NSURLProtocol*'/>
<arg index='1' name='cachedResponse' type='@' declared_type='NSCachedURLResponse*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:didCancelAuthenticationChallenge:'>
<arg index='0' name='protocol' type='@' declared_type='NSURLProtocol*'/>
<arg index='1' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:didFailWithError:'>
<arg index='0' name='protocol' type='@' declared_type='NSURLProtocol*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:didLoadData:'>
<arg index='0' name='protocol' type='@' declared_type='NSURLProtocol*'/>
<arg index='1' name='data' type='@' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:didReceiveAuthenticationChallenge:'>
<arg index='0' name='protocol' type='@' declared_type='NSURLProtocol*'/>
<arg index='1' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:didReceiveResponse:cacheStoragePolicy:'>
<arg index='0' name='protocol' type='@' declared_type='NSURLProtocol*'/>
<arg index='1' name='response' type='@' declared_type='NSURLResponse*'/>
<arg index='2' name='policy' type64='Q' type='I' declared_type='NSURLCacheStoragePolicy'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocol:wasRedirectedToRequest:redirectResponse:'>
<arg index='0' name='protocol' type='@' declared_type='NSURLProtocol*'/>
<arg index='1' name='request' type='@' declared_type='NSURLRequest*'/>
<arg index='2' name='redirectResponse' type='@' declared_type='NSURLResponse*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLProtocolDidFinishLoading:'>
<arg index='0' name='protocol' type='@' declared_type='NSURLProtocol*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLResourceDidCancelLoading:'>
<arg index='0' name='sender' type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='URLResourceDidFinishLoading:'>
<arg index='0' name='sender' type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='accessInstanceVariablesDirectly'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='accommodatePresentedItemDeletionWithCompletionHandler:'>
<arg function_pointer='true' index='0' name='completionHandler' type='@?' declared_type='void (^)(NSError *)'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='accommodatePresentedSubitemDeletionAtURL:completionHandler:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg function_pointer='true' index='1' name='completionHandler' type='@?' declared_type='void (^)(NSError *)'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObserver:forKeyPath:options:context:'>
<arg index='0' name='observer' type='@' declared_type='NSObject*'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='2' name='options' type64='Q' type='I' declared_type='NSKeyValueObservingOptions'/>
<arg index='3' name='context' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='alloc'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='allocWithZone:'>
<arg index='0' name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='archiver:didEncodeObject:'>
<arg index='0' name='archiver' type='@' declared_type='NSKeyedArchiver*'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='archiver:willEncodeObject:'>
<arg index='0' name='archiver' type='@' declared_type='NSKeyedArchiver*'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='archiver:willReplaceObject:withObject:'>
<arg index='0' name='archiver' type='@' declared_type='NSKeyedArchiver*'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<arg index='2' name='newObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='archiverDidFinish:'>
<arg index='0' name='archiver' type='@' declared_type='NSKeyedArchiver*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='archiverWillFinish:'>
<arg index='0' name='archiver' type='@' declared_type='NSKeyedArchiver*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='attemptRecoveryFromError:optionIndex:'>
<arg index='0' name='error' type='@' declared_type='NSError*'/>
<arg index='1' name='recoveryOptionIndex' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:'>
<arg index='0' name='error' type='@' declared_type='NSError*'/>
<arg index='1' name='recoveryOptionIndex' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='delegate' type='@' declared_type='id'/>
<arg index='3' name='didRecoverSelector' type=':' declared_type='SEL'/>
<arg index='4' name='contextInfo' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='attributeKeys'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='authenticateComponents:withData:'>
<arg index='0' name='components' type='@' declared_type='NSArray*'/>
<arg index='1' name='signature' type='@' declared_type='NSData*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='authenticationDataForComponents:'>
<arg index='0' name='components' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='autoContentAccessingProxy'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='automaticallyNotifiesObserversForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='autorelease'>
<retval type='@' declared_type='id'/>
</method>
<method selector='awakeAfterUsingCoder:'>
<arg index='0' name='aDecoder' type='@' declared_type='NSCoder*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='beginContentAccess'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cache:willEvictObject:'>
<arg index='0' name='cache' type='@' declared_type='NSCache*'/>
<arg index='1' name='obj' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancelAuthenticationChallenge:'>
<arg index='0' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='cancelPreviousPerformRequestsWithTarget:'>
<arg index='0' name='aTarget' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='cancelPreviousPerformRequestsWithTarget:selector:object:'>
<arg index='0' name='aTarget' type='@' declared_type='id'/>
<arg index='1' name='aSelector' type=':' declared_type='SEL'/>
<arg index='2' name='anArgument' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='class'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='class'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='classCode'>
<retval type64='I' type='L' declared_type='FourCharCode'/>
</method>
<method selector='classDescription'>
<retval type='@' declared_type='NSClassDescription*'/>
</method>
<method class_method='true' selector='classFallbacksForKeyedArchiver'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='classForArchiver'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='classForCoder'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='classForKeyedArchiver'>
<retval type='#' declared_type='Class'/>
</method>
<method class_method='true' selector='classForKeyedUnarchiver'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='classForPortCoder'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='className'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='coerceValue:forKey:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='conformsToProtocol:'>
<arg index='0' name='protocol' type='@' declared_type='Protocol*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='conformsToProtocol:'>
<arg index='0' name='aProtocol' type='@' declared_type='Protocol*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='connection:canAuthenticateAgainstProtectionSpace:'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='protectionSpace' type='@' declared_type='NSURLProtectionSpace*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='connection:didCancelAuthenticationChallenge:'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:didFailWithError:'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:didReceiveAuthenticationChallenge:'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:didReceiveData:'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='data' type='@' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:didReceiveResponse:'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='response' type='@' declared_type='NSURLResponse*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='bytesWritten' type64='q' type='i' declared_type='NSInteger'/>
<arg index='2' name='totalBytesWritten' type64='q' type='i' declared_type='NSInteger'/>
<arg index='3' name='totalBytesExpectedToWrite' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:didWriteData:totalBytesWritten:expectedTotalBytes:'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='bytesWritten' type='q' declared_type='long long'/>
<arg index='2' name='totalBytesWritten' type='q' declared_type='long long'/>
<arg index='3' name='expectedTotalBytes' type='q' declared_type='long long'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connection:handleRequest:'>
<arg index='0' name='connection' type='@' declared_type='NSConnection*'/>
<arg index='1' name='doreq' type='@' declared_type='NSDistantObjectRequest*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='connection:needNewBodyStream:'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='request' type='@' declared_type='NSURLRequest*'/>
<retval type='@' declared_type='NSInputStream*'/>
</method>
<method selector='connection:shouldMakeNewConnection:'>
<arg index='0' name='ancestor' type='@' declared_type='NSConnection*'/>
<arg index='1' name='conn' type='@' declared_type='NSConnection*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='connection:willCacheResponse:'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='cachedResponse' type='@' declared_type='NSCachedURLResponse*'/>
<retval type='@' declared_type='NSCachedURLResponse*'/>
</method>
<method selector='connection:willSendRequest:redirectResponse:'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='request' type='@' declared_type='NSURLRequest*'/>
<arg index='2' name='response' type='@' declared_type='NSURLResponse*'/>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method selector='connection:willSendRequestForAuthenticationChallenge:'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connectionDidFinishDownloading:destinationURL:'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='destinationURL' type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connectionDidFinishLoading:'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connectionDidResumeDownloading:totalBytesWritten:expectedTotalBytes:'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='totalBytesWritten' type='q' declared_type='long long'/>
<arg index='2' name='expectedTotalBytes' type='q' declared_type='long long'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='connectionShouldUseCredentialStorage:'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='continueWithoutCredentialForAuthenticationChallenge:'>
<arg index='0' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='copy'>
<retval type='@' declared_type='id'/>
</method>
<method selector='copyScriptingValue:forKey:withProperties:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<arg index='2' name='properties' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='copyWithZone:'>
<arg index='0' name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='copyWithZone:'>
<arg index='0' name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='countByEnumeratingWithState:objects:count:'>
<arg index='0' name='state' type64='^{_NSFastEnumerationState=Q^@^Q[5Q]}' type='^{_NSFastEnumerationState=L^@^L[5L]}' declared_type='NSFastEnumerationState*'/>
<arg index='1' name='buffer' type='^@' declared_type='id*'/>
<arg index='2' name='len' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='createConversationForConnection:'>
<arg index='0' name='conn' type='@' declared_type='NSConnection*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dealloc'>
<retval type='v' declared_type='void'/>
</method>
<method selector='debugDescription'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dictionaryWithValuesForKeys:'>
<arg index='0' name='keys' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='didChange:valuesAtIndexes:forKey:'>
<arg index='0' name='changeKind' type64='Q' type='I' declared_type='NSKeyValueChange'/>
<arg index='1' name='indexes' type='@' declared_type='NSIndexSet*'/>
<arg index='2' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='didChangeValueForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='didChangeValueForKey:withSetMutation:usingObjects:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<arg index='1' name='mutationKind' type64='Q' type='I' declared_type='NSKeyValueSetMutationKind'/>
<arg index='2' name='objects' type='@' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='discardContentIfPossible'>
<retval type='v' declared_type='void'/>
</method>
<method selector='doesContain:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='doesNotRecognizeSelector:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='download:canAuthenticateAgainstProtectionSpace:'>
<arg index='0' name='connection' type='@' declared_type='NSURLDownload*'/>
<arg index='1' name='protectionSpace' type='@' declared_type='NSURLProtectionSpace*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='download:decideDestinationWithSuggestedFilename:'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<arg index='1' name='filename' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='download:didCancelAuthenticationChallenge:'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<arg index='1' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='download:didCreateDestination:'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<arg index='1' name='path' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='download:didFailWithError:'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='download:didReceiveAuthenticationChallenge:'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<arg index='1' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='download:didReceiveDataOfLength:'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<arg index='1' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='download:didReceiveResponse:'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<arg index='1' name='response' type='@' declared_type='NSURLResponse*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='download:shouldDecodeSourceDataOfMIMEType:'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<arg index='1' name='encodingType' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='download:willResumeWithResponse:fromByte:'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<arg index='1' name='response' type='@' declared_type='NSURLResponse*'/>
<arg index='2' name='startingByte' type='q' declared_type='long long'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='download:willSendRequest:redirectResponse:'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<arg index='1' name='request' type='@' declared_type='NSURLRequest*'/>
<arg index='2' name='redirectResponse' type='@' declared_type='NSURLResponse*'/>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method selector='downloadDidBegin:'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='downloadDidFinish:'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='downloadShouldUseCredentialStorage:'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='encodeWithCoder:'>
<arg index='0' name='aCoder' type='@' declared_type='NSCoder*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='endContentAccess'>
<retval type='v' declared_type='void'/>
</method>
<method selector='exceptionDuringOperation:error:leftOperand:rightOperand:'>
<arg index='0' name='operation' type=':' declared_type='SEL'/>
<arg index='1' name='error' type64='Q' type='I' declared_type='NSCalculationError'/>
<arg index='2' name='leftOperand' type='@' declared_type='NSDecimalNumber*'/>
<arg index='3' name='rightOperand' type='@' declared_type='NSDecimalNumber*'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='fileManager:shouldCopyItemAtPath:toPath:'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='srcPath' type='@' declared_type='NSString*'/>
<arg index='2' name='dstPath' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldCopyItemAtURL:toURL:'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='srcURL' type='@' declared_type='NSURL*'/>
<arg index='2' name='dstURL' type='@' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldLinkItemAtPath:toPath:'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='srcPath' type='@' declared_type='NSString*'/>
<arg index='2' name='dstPath' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldLinkItemAtURL:toURL:'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='srcURL' type='@' declared_type='NSURL*'/>
<arg index='2' name='dstURL' type='@' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldMoveItemAtPath:toPath:'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='srcPath' type='@' declared_type='NSString*'/>
<arg index='2' name='dstPath' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldMoveItemAtURL:toURL:'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='srcURL' type='@' declared_type='NSURL*'/>
<arg index='2' name='dstURL' type='@' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:'>
<arg index='0' name='fm' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='errorInfo' type='@' declared_type='NSDictionary*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<arg index='2' name='srcPath' type='@' declared_type='NSString*'/>
<arg index='3' name='dstPath' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<arg index='2' name='srcURL' type='@' declared_type='NSURL*'/>
<arg index='3' name='dstURL' type='@' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<arg index='2' name='srcPath' type='@' declared_type='NSString*'/>
<arg index='3' name='dstPath' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<arg index='2' name='srcURL' type='@' declared_type='NSURL*'/>
<arg index='3' name='dstURL' type='@' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:movingItemAtPath:toPath:'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<arg index='2' name='srcPath' type='@' declared_type='NSString*'/>
<arg index='3' name='dstPath' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:movingItemAtURL:toURL:'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<arg index='2' name='srcURL' type='@' declared_type='NSURL*'/>
<arg index='3' name='dstURL' type='@' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:removingItemAtPath:'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<arg index='2' name='path' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldProceedAfterError:removingItemAtURL:'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<arg index='2' name='URL' type='@' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldRemoveItemAtPath:'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='path' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:shouldRemoveItemAtURL:'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='URL' type='@' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileManager:willProcessPath:'>
<arg index='0' name='fm' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='path' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='finalize'>
<retval type='v' declared_type='void'/>
</method>
<method selector='forwardInvocation:'>
<arg index='0' name='anInvocation' type='@' declared_type='NSInvocation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='forwardingTargetForSelector:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='handleMachMessage:'>
<arg index='0' name='msg' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='handlePortMessage:'>
<arg index='0' name='message' type='@' declared_type='NSPortMessage*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='handleQueryWithUnboundKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='handleTakeValue:forUnboundKey:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='hash'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='indicesOfObjectsByEvaluatingObjectSpecifier:'>
<arg index='0' name='specifier' type='@' declared_type='NSScriptObjectSpecifier*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCoder:'>
<arg index='0' name='aDecoder' type='@' declared_type='NSCoder*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='initialize'>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertValue:atIndex:inPropertyWithKey:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertValue:inPropertyWithKey:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='instanceMethodForSelector:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<retval function_pointer='true' type='^?' declared_type='IMP'>
<arg type='@' declared_type='id'/>
<arg type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</retval>
</method>
<method class_method='true' selector='instanceMethodSignatureForSelector:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<retval type='@' declared_type='NSMethodSignature*'/>
</method>
<method class_method='true' selector='instancesRespondToSelector:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='inverseForRelationshipKey:'>
<arg index='0' name='relationshipKey' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='isCaseInsensitiveLike:'>
<arg index='0' name='object' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isContentDiscarded'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqual:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualTo:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isGreaterThan:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isGreaterThanOrEqualTo:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isKindOfClass:'>
<arg index='0' name='aClass' type='#' declared_type='Class'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isLessThan:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isLessThanOrEqualTo:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isLike:'>
<arg index='0' name='object' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMemberOfClass:'>
<arg index='0' name='aClass' type='#' declared_type='Class'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isNotEqualTo:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isProxy'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='isSubclassOfClass:'>
<arg index='0' name='aClass' type='#' declared_type='Class'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='keyPathsForValuesAffectingValueForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='listener:shouldAcceptNewConnection:'>
<arg index='0' name='listener' type='@' declared_type='NSXPCListener*'/>
<arg index='1' name='newConnection' type='@' declared_type='NSXPCConnection*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='load'>
<retval type='v' declared_type='void'/>
</method>
<method selector='lock'>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeNewConnection:sender:'>
<arg index='0' name='conn' type='@' declared_type='NSConnection*'/>
<arg index='1' name='ancestor' type='@' declared_type='NSConnection*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='metadataQuery:replacementObjectForResultObject:'>
<arg index='0' name='query' type='@' declared_type='NSMetadataQuery*'/>
<arg index='1' name='result' type='@' declared_type='NSMetadataItem*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='metadataQuery:replacementValueForAttribute:value:'>
<arg index='0' name='query' type='@' declared_type='NSMetadataQuery*'/>
<arg index='1' name='attrName' type='@' declared_type='NSString*'/>
<arg index='2' name='attrValue' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='methodForSelector:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<retval function_pointer='true' type='^?' declared_type='IMP'>
<arg type='@' declared_type='id'/>
<arg type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</retval>
</method>
<method selector='methodSignatureForSelector:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<retval type='@' declared_type='NSMethodSignature*'/>
</method>
<method selector='mutableArrayValueForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='mutableArrayValueForKeyPath:'>
<arg index='0' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='mutableCopy'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='mutableCopyWithZone:'>
<arg index='0' name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mutableCopyWithZone:'>
<arg index='0' name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mutableOrderedSetValueForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSMutableOrderedSet*'/>
</method>
<method selector='mutableOrderedSetValueForKeyPath:'>
<arg index='0' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSMutableOrderedSet*'/>
</method>
<method selector='mutableSetValueForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSMutableSet*'/>
</method>
<method selector='mutableSetValueForKeyPath:'>
<arg index='0' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSMutableSet*'/>
</method>
<method selector='netService:didNotPublish:'>
<arg index='0' name='sender' type='@' declared_type='NSNetService*'/>
<arg index='1' name='errorDict' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netService:didNotResolve:'>
<arg index='0' name='sender' type='@' declared_type='NSNetService*'/>
<arg index='1' name='errorDict' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netService:didUpdateTXTRecordData:'>
<arg index='0' name='sender' type='@' declared_type='NSNetService*'/>
<arg index='1' name='data' type='@' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowser:didFindDomain:moreComing:'>
<arg index='0' name='aNetServiceBrowser' type='@' declared_type='NSNetServiceBrowser*'/>
<arg index='1' name='domainString' type='@' declared_type='NSString*'/>
<arg index='2' name='moreComing' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowser:didFindService:moreComing:'>
<arg index='0' name='aNetServiceBrowser' type='@' declared_type='NSNetServiceBrowser*'/>
<arg index='1' name='aNetService' type='@' declared_type='NSNetService*'/>
<arg index='2' name='moreComing' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowser:didNotSearch:'>
<arg index='0' name='aNetServiceBrowser' type='@' declared_type='NSNetServiceBrowser*'/>
<arg index='1' name='errorDict' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowser:didRemoveDomain:moreComing:'>
<arg index='0' name='aNetServiceBrowser' type='@' declared_type='NSNetServiceBrowser*'/>
<arg index='1' name='domainString' type='@' declared_type='NSString*'/>
<arg index='2' name='moreComing' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowser:didRemoveService:moreComing:'>
<arg index='0' name='aNetServiceBrowser' type='@' declared_type='NSNetServiceBrowser*'/>
<arg index='1' name='aNetService' type='@' declared_type='NSNetService*'/>
<arg index='2' name='moreComing' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowserDidStopSearch:'>
<arg index='0' name='aNetServiceBrowser' type='@' declared_type='NSNetServiceBrowser*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceBrowserWillSearch:'>
<arg index='0' name='aNetServiceBrowser' type='@' declared_type='NSNetServiceBrowser*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceDidPublish:'>
<arg index='0' name='sender' type='@' declared_type='NSNetService*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceDidResolveAddress:'>
<arg index='0' name='sender' type='@' declared_type='NSNetService*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceDidStop:'>
<arg index='0' name='sender' type='@' declared_type='NSNetService*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceWillPublish:'>
<arg index='0' name='sender' type='@' declared_type='NSNetService*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='netServiceWillResolve:'>
<arg index='0' name='sender' type='@' declared_type='NSNetService*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='new'>
<retval type='@' declared_type='id'/>
</method>
<method selector='newScriptingObjectOfClass:forValueForKey:withContentsValue:properties:'>
<arg index='0' name='objectClass' type='#' declared_type='Class'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<arg index='2' name='contentsValue' type='@' declared_type='id'/>
<arg index='3' name='properties' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectSpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='observationInfo'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='observeValueForKeyPath:ofObject:change:context:'>
<arg index='0' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<arg index='2' name='change' type='@' declared_type='NSDictionary*'/>
<arg index='3' name='context' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:didEndElement:namespaceURI:qualifiedName:'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='elementName' type='@' declared_type='NSString*'/>
<arg index='2' name='namespaceURI' type='@' declared_type='NSString*'/>
<arg index='3' name='qName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:didEndMappingPrefix:'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='prefix' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:didStartElement:namespaceURI:qualifiedName:attributes:'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='elementName' type='@' declared_type='NSString*'/>
<arg index='2' name='namespaceURI' type='@' declared_type='NSString*'/>
<arg index='3' name='qName' type='@' declared_type='NSString*'/>
<arg index='4' name='attributeDict' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:didStartMappingPrefix:toURI:'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='prefix' type='@' declared_type='NSString*'/>
<arg index='2' name='namespaceURI' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='attributeName' type='@' declared_type='NSString*'/>
<arg index='2' name='elementName' type='@' declared_type='NSString*'/>
<arg index='3' name='type' type='@' declared_type='NSString*'/>
<arg index='4' name='defaultValue' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundCDATA:'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='CDATABlock' type='@' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundCharacters:'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundComment:'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='comment' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundElementDeclarationWithName:model:'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='elementName' type='@' declared_type='NSString*'/>
<arg index='2' name='model' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundExternalEntityDeclarationWithName:publicID:systemID:'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='publicID' type='@' declared_type='NSString*'/>
<arg index='3' name='systemID' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundIgnorableWhitespace:'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='whitespaceString' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundInternalEntityDeclarationWithName:value:'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='value' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundNotationDeclarationWithName:publicID:systemID:'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='publicID' type='@' declared_type='NSString*'/>
<arg index='3' name='systemID' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundProcessingInstructionWithTarget:data:'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='target' type='@' declared_type='NSString*'/>
<arg index='2' name='data' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='publicID' type='@' declared_type='NSString*'/>
<arg index='3' name='systemID' type='@' declared_type='NSString*'/>
<arg index='4' name='notationName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:parseErrorOccurred:'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='parseError' type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parser:resolveExternalEntityName:systemID:'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='systemID' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='parser:validationErrorOccurred:'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='validationError' type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parserDidEndDocument:'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parserDidStartDocument:'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performDefaultHandlingForAuthenticationChallenge:'>
<arg index='0' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelector:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='performSelector:onThread:withObject:waitUntilDone:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<arg index='1' name='thr' type='@' declared_type='NSThread*'/>
<arg index='2' name='arg' type='@' declared_type='id'/>
<arg index='3' name='wait' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelector:onThread:withObject:waitUntilDone:modes:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<arg index='1' name='thr' type='@' declared_type='NSThread*'/>
<arg index='2' name='arg' type='@' declared_type='id'/>
<arg index='3' name='wait' type='B' declared_type='BOOL'/>
<arg index='4' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelector:withObject:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='performSelector:withObject:afterDelay:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<arg index='1' name='anArgument' type='@' declared_type='id'/>
<arg index='2' name='delay' type='d' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelector:withObject:afterDelay:inModes:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<arg index='1' name='anArgument' type='@' declared_type='id'/>
<arg index='2' name='delay' type='d' declared_type='NSTimeInterval'/>
<arg index='3' name='modes' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelector:withObject:withObject:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<arg index='1' name='object1' type='@' declared_type='id'/>
<arg index='2' name='object2' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='performSelectorInBackground:withObject:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<arg index='1' name='arg' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelectorOnMainThread:withObject:waitUntilDone:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<arg index='1' name='arg' type='@' declared_type='id'/>
<arg index='2' name='wait' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSelectorOnMainThread:withObject:waitUntilDone:modes:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<arg index='1' name='arg' type='@' declared_type='id'/>
<arg index='2' name='wait' type='B' declared_type='BOOL'/>
<arg index='3' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemDidChange'>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemDidGainVersion:'>
<arg index='0' name='version' type='@' declared_type='NSFileVersion*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemDidLoseVersion:'>
<arg index='0' name='version' type='@' declared_type='NSFileVersion*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemDidMoveToURL:'>
<arg index='0' name='newURL' type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemDidResolveConflictVersion:'>
<arg index='0' name='version' type='@' declared_type='NSFileVersion*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedItemOperationQueue'>
<retval type='@' declared_type='NSOperationQueue*'/>
</method>
<method selector='presentedItemURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='presentedSubitemAtURL:didGainVersion:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='version' type='@' declared_type='NSFileVersion*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedSubitemAtURL:didLoseVersion:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='version' type='@' declared_type='NSFileVersion*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedSubitemAtURL:didMoveToURL:'>
<arg index='0' name='oldURL' type='@' declared_type='NSURL*'/>
<arg index='1' name='newURL' type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedSubitemAtURL:didResolveConflictVersion:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='version' type='@' declared_type='NSFileVersion*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedSubitemDidAppearAtURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentedSubitemDidChangeAtURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='primaryPresentedItemURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='rejectProtectionSpaceAndContinueWithChallenge:'>
<arg index='0' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='release'>
<retval type='v' declared_type='void'/>
</method>
<method selector='relinquishPresentedItemToReader:'>
<arg function_pointer='true' index='0' name='reader' type='@?' declared_type='void (^)(void (^)(void))'>
<arg type='@?' declared_type='void (^)(void)'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='relinquishPresentedItemToWriter:'>
<arg function_pointer='true' index='0' name='writer' type='@?' declared_type='void (^)(void (^)(void))'>
<arg type='@?' declared_type='void (^)(void)'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='remoteObjectProxy'>
<retval type='@' declared_type='id'/>
</method>
<method selector='remoteObjectProxyWithErrorHandler:'>
<arg function_pointer='true' index='0' name='handler' type='@?' declared_type='void (^)(NSError *)'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeObserver:forKeyPath:'>
<arg index='0' name='observer' type='@' declared_type='NSObject*'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:forKeyPath:context:'>
<arg index='0' name='observer' type='@' declared_type='NSObject*'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='2' name='context' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeValueAtIndex:fromPropertyWithKey:'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceValueAtIndex:inPropertyWithKey:withValue:'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<arg index='2' name='value' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replacementObjectForArchiver:'>
<arg index='0' name='archiver' type='@' declared_type='NSArchiver*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='replacementObjectForCoder:'>
<arg index='0' name='aCoder' type='@' declared_type='NSCoder*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='replacementObjectForKeyedArchiver:'>
<arg index='0' name='archiver' type='@' declared_type='NSKeyedArchiver*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='replacementObjectForPortCoder:'>
<arg index='0' name='coder' type='@' declared_type='NSPortCoder*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='resolveClassMethod:'>
<arg index='0' name='sel' type=':' declared_type='SEL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='resolveInstanceMethod:'>
<arg index='0' name='sel' type=':' declared_type='SEL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='respondsToSelector:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='retain'>
<retval type='@' declared_type='id'/>
</method>
<method selector='retainCount'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='roundingMode'>
<retval type64='Q' type='I' declared_type='NSRoundingMode'/>
</method>
<method selector='savePresentedItemChangesWithCompletionHandler:'>
<arg function_pointer='true' index='0' name='completionHandler' type='@?' declared_type='void (^)(NSError *)'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='scale'>
<retval type='s' declared_type='short'/>
</method>
<method selector='scriptingBeginsWith:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scriptingContains:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scriptingEndsWith:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scriptingIsEqualTo:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scriptingIsGreaterThan:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scriptingIsGreaterThanOrEqualTo:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scriptingIsLessThan:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scriptingIsLessThanOrEqualTo:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scriptingProperties'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='scriptingValueForSpecifier:'>
<arg index='0' name='objectSpecifier' type='@' declared_type='NSScriptObjectSpecifier*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='self'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='setKeys:triggerChangeNotificationsForDependentKey:'>
<arg index='0' name='keys' type='@' declared_type='NSArray*'/>
<arg index='1' name='dependentKey' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNilValueForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObservationInfo:'>
<arg index='0' name='observationInfo' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScriptingProperties:'>
<arg index='0' name='properties' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:forKey:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:forKeyPath:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:forUndefinedKey:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValuesForKeysWithDictionary:'>
<arg index='0' name='keyedValues' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setVersion:'>
<arg index='0' name='aVersion' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='spellServer:checkGrammarInString:language:details:'>
<arg index='0' name='sender' type='@' declared_type='NSSpellServer*'/>
<arg index='1' name='stringToCheck' type='@' declared_type='NSString*'/>
<arg index='2' name='language' type='@' declared_type='NSString*'/>
<arg index='3' name='details' type='^@' declared_type='NSArray**'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='spellServer:checkString:offset:types:options:orthography:wordCount:'>
<arg index='0' name='sender' type='@' declared_type='NSSpellServer*'/>
<arg index='1' name='stringToCheck' type='@' declared_type='NSString*'/>
<arg index='2' name='offset' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='3' name='checkingTypes' type='Q' declared_type='NSTextCheckingTypes'/>
<arg index='4' name='options' type='@' declared_type='NSDictionary*'/>
<arg index='5' name='orthography' type='@' declared_type='NSOrthography*'/>
<arg index='6' name='wordCount' type64='^q' type='^i' declared_type='NSInteger*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='spellServer:didForgetWord:inLanguage:'>
<arg index='0' name='sender' type='@' declared_type='NSSpellServer*'/>
<arg index='1' name='word' type='@' declared_type='NSString*'/>
<arg index='2' name='language' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='spellServer:didLearnWord:inLanguage:'>
<arg index='0' name='sender' type='@' declared_type='NSSpellServer*'/>
<arg index='1' name='word' type='@' declared_type='NSString*'/>
<arg index='2' name='language' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='spellServer:findMisspelledWordInString:language:wordCount:countOnly:'>
<arg index='0' name='sender' type='@' declared_type='NSSpellServer*'/>
<arg index='1' name='stringToCheck' type='@' declared_type='NSString*'/>
<arg index='2' name='language' type='@' declared_type='NSString*'/>
<arg index='3' name='wordCount' type64='^q' type='^i' declared_type='NSInteger*'/>
<arg index='4' name='countOnly' type='B' declared_type='BOOL'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='spellServer:recordResponse:toCorrection:forWord:language:'>
<arg index='0' name='sender' type='@' declared_type='NSSpellServer*'/>
<arg index='1' name='response' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='correction' type='@' declared_type='NSString*'/>
<arg index='3' name='word' type='@' declared_type='NSString*'/>
<arg index='4' name='language' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='spellServer:suggestCompletionsForPartialWordRange:inString:language:'>
<arg index='0' name='sender' type='@' declared_type='NSSpellServer*'/>
<arg index='1' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='2' name='string' type='@' declared_type='NSString*'/>
<arg index='3' name='language' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='spellServer:suggestGuessesForWord:inLanguage:'>
<arg index='0' name='sender' type='@' declared_type='NSSpellServer*'/>
<arg index='1' name='word' type='@' declared_type='NSString*'/>
<arg index='2' name='language' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='storedValueForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='stream:handleEvent:'>
<arg index='0' name='aStream' type='@' declared_type='NSStream*'/>
<arg index='1' name='eventCode' type64='Q' type='I' declared_type='NSStreamEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='superclass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='superclass'>
<retval type='#' declared_type='Class'/>
</method>
<method class_method='true' selector='supportsSecureCoding'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='takeStoredValue:forKey:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='takeValue:forKey:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='takeValue:forKeyPath:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='takeValuesFromDictionary:'>
<arg index='0' name='properties' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='toManyRelationshipKeys'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='toOneRelationshipKeys'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='unableToSetNilForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unarchiver:cannotDecodeObjectOfClassName:originalClasses:'>
<arg index='0' name='unarchiver' type='@' declared_type='NSKeyedUnarchiver*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='classNames' type='@' declared_type='NSArray*'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='unarchiver:didDecodeObject:'>
<arg index='0' name='unarchiver' type='@' declared_type='NSKeyedUnarchiver*'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='unarchiver:willReplaceObject:withObject:'>
<arg index='0' name='unarchiver' type='@' declared_type='NSKeyedUnarchiver*'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<arg index='2' name='newObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unarchiverDidFinish:'>
<arg index='0' name='unarchiver' type='@' declared_type='NSKeyedUnarchiver*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unarchiverWillFinish:'>
<arg index='0' name='unarchiver' type='@' declared_type='NSKeyedUnarchiver*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unlock'>
<retval type='v' declared_type='void'/>
</method>
<method selector='useCredential:forAuthenticationChallenge:'>
<arg index='0' name='credential' type='@' declared_type='NSURLCredential*'/>
<arg index='1' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='useStoredAccessor'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='userNotificationCenter:didActivateNotification:'>
<arg index='0' name='center' type='@' declared_type='NSUserNotificationCenter*'/>
<arg index='1' name='notification' type='@' declared_type='NSUserNotification*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='userNotificationCenter:didDeliverNotification:'>
<arg index='0' name='center' type='@' declared_type='NSUserNotificationCenter*'/>
<arg index='1' name='notification' type='@' declared_type='NSUserNotification*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='userNotificationCenter:shouldPresentNotification:'>
<arg index='0' name='center' type='@' declared_type='NSUserNotificationCenter*'/>
<arg index='1' name='notification' type='@' declared_type='NSUserNotification*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='validateValue:forKey:error:'>
<arg index='0' name='ioValue' type_modifier='N' type='^@' declared_type='id*'/>
<arg index='1' name='inKey' type='@' declared_type='NSString*'/>
<arg index='2' name='outError' type_modifier='o' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='validateValue:forKeyPath:error:'>
<arg index='0' name='ioValue' type_modifier='N' type='^@' declared_type='id*'/>
<arg index='1' name='inKeyPath' type='@' declared_type='NSString*'/>
<arg index='2' name='outError' type_modifier='o' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='valueAtIndex:inPropertyWithKey:'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='valueForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='valueForKeyPath:'>
<arg index='0' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='valueForUndefinedKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='valueWithName:inPropertyWithKey:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='valueWithUniqueID:inPropertyWithKey:'>
<arg index='0' name='uniqueID' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='valuesForKeys:'>
<arg index='0' name='keys' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method class_method='true' selector='version'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='willChange:valuesAtIndexes:forKey:'>
<arg index='0' name='changeKind' type64='Q' type='I' declared_type='NSKeyValueChange'/>
<arg index='1' name='indexes' type='@' declared_type='NSIndexSet*'/>
<arg index='2' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='willChangeValueForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='willChangeValueForKey:withSetMutation:usingObjects:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<arg index='1' name='mutationKind' type64='Q' type='I' declared_type='NSKeyValueSetMutationKind'/>
<arg index='2' name='objects' type='@' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='zone'>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</method>
</class>
<class name='NSOperation'>
<method selector='addDependency:'>
<arg index='0' name='op' type='@' declared_type='NSOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='completionBlock'>
<retval function_pointer='true' type='@?' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='dependencies'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isCancelled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isConcurrent'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isExecuting'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFinished'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isReady'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='main'>
<retval type='v' declared_type='void'/>
</method>
<method selector='queuePriority'>
<retval type64='q' type='i' declared_type='NSOperationQueuePriority'/>
</method>
<method selector='removeDependency:'>
<arg index='0' name='op' type='@' declared_type='NSOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCompletionBlock:'>
<arg function_pointer='true' index='0' name='block' type='@?' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setQueuePriority:'>
<arg index='0' name='p' type64='q' type='i' declared_type='NSOperationQueuePriority'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setThreadPriority:'>
<arg index='0' name='p' type='d' declared_type='double'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='start'>
<retval type='v' declared_type='void'/>
</method>
<method selector='threadPriority'>
<retval type='d' declared_type='double'/>
</method>
<method selector='waitUntilFinished'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSOperationQueue'>
<method selector='addOperation:'>
<arg index='0' name='op' type='@' declared_type='NSOperation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addOperationWithBlock:'>
<arg function_pointer='true' index='0' name='block' type='@?' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='addOperations:waitUntilFinished:'>
<arg index='0' name='ops' type='@' declared_type='NSArray*'/>
<arg index='1' name='wait' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancelAllOperations'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='currentQueue'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isSuspended'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='mainQueue'>
<retval type='@' declared_type='id'/>
</method>
<method selector='maxConcurrentOperationCount'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='operationCount'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='operations'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setMaxConcurrentOperationCount:'>
<arg index='0' name='cnt' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setName:'>
<arg index='0' name='n' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSuspended:'>
<arg index='0' name='b' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='waitUntilAllOperationsAreFinished'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSOrderedSet'>
<method selector='addObserver:forKeyPath:options:context:'>
<arg index='0' name='observer' type='@' declared_type='NSObject*'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='2' name='options' type64='Q' type='I' declared_type='NSKeyValueObservingOptions'/>
<arg index='3' name='context' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='array'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='containsObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='count'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:'>
<arg index='0' name='locale' type='@' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:indent:'>
<arg index='0' name='locale' type='@' declared_type='id'/>
<arg index='1' name='level' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='enumerateObjectsAtIndexes:options:usingBlock:'>
<arg index='0' name='s' type='@' declared_type='NSIndexSet*'/>
<arg index='1' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='2' name='block' type='@?' declared_type='void (^)(id, NSUInteger, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateObjectsUsingBlock:'>
<arg function_pointer='true' index='0' name='block' type='@?' declared_type='void (^)(id, NSUInteger, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateObjectsWithOptions:usingBlock:'>
<arg index='0' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='1' name='block' type='@?' declared_type='void (^)(id, NSUInteger, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='firstObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='getObjects:range:'>
<arg index='0' name='objects' type='^@' declared_type='id*'/>
<arg index='1' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='indexOfObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObject:inSortedRange:options:usingComparator:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='2' name='opts' type64='Q' type='I' declared_type='NSBinarySearchingOptions'/>
<arg function_pointer='true' index='3' name='cmp' type='@?' declared_type='NSComparator'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectAtIndexes:options:passingTest:'>
<arg index='0' name='s' type='@' declared_type='NSIndexSet*'/>
<arg index='1' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='2' name='predicate' type='@?' declared_type='BOOL (^)(id, NSUInteger, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectPassingTest:'>
<arg function_pointer='true' index='0' name='predicate' type='@?' declared_type='BOOL (^)(id, NSUInteger, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexOfObjectWithOptions:passingTest:'>
<arg index='0' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='1' name='predicate' type='@?' declared_type='BOOL (^)(id, NSUInteger, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='indexesOfObjectsAtIndexes:options:passingTest:'>
<arg index='0' name='s' type='@' declared_type='NSIndexSet*'/>
<arg index='1' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='2' name='predicate' type='@?' declared_type='BOOL (^)(id, NSUInteger, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='indexesOfObjectsPassingTest:'>
<arg function_pointer='true' index='0' name='predicate' type='@?' declared_type='BOOL (^)(id, NSUInteger, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='indexesOfObjectsWithOptions:passingTest:'>
<arg index='0' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='1' name='predicate' type='@?' declared_type='BOOL (^)(id, NSUInteger, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type64='Q' type='I' declared_type='NSUInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='initWithArray:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithArray:copyItems:'>
<arg index='0' name='set' type='@' declared_type='NSArray*'/>
<arg index='1' name='flag' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithArray:range:copyItems:'>
<arg index='0' name='set' type='@' declared_type='NSArray*'/>
<arg index='1' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='2' name='flag' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method variadic='true' selector='initWithObjects:' sentinel='0'>
<arg index='0' name='firstObj' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithObjects:count:'>
<arg const='true' index='0' name='objects' type='^@' declared_type='id*'/>
<arg index='1' name='cnt' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithOrderedSet:'>
<arg index='0' name='set' type='@' declared_type='NSOrderedSet*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithOrderedSet:copyItems:'>
<arg index='0' name='set' type='@' declared_type='NSOrderedSet*'/>
<arg index='1' name='flag' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithOrderedSet:range:copyItems:'>
<arg index='0' name='set' type='@' declared_type='NSOrderedSet*'/>
<arg index='1' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='2' name='flag' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSet:'>
<arg index='0' name='set' type='@' declared_type='NSSet*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSet:copyItems:'>
<arg index='0' name='set' type='@' declared_type='NSSet*'/>
<arg index='1' name='flag' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intersectsOrderedSet:'>
<arg index='0' name='other' type='@' declared_type='NSOrderedSet*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='intersectsSet:'>
<arg index='0' name='set' type='@' declared_type='NSSet*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualToOrderedSet:'>
<arg index='0' name='other' type='@' declared_type='NSOrderedSet*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSubsetOfOrderedSet:'>
<arg index='0' name='other' type='@' declared_type='NSOrderedSet*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSubsetOfSet:'>
<arg index='0' name='set' type='@' declared_type='NSSet*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lastObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectAtIndex:'>
<arg index='0' name='idx' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectAtIndexedSubscript:'>
<arg index='0' name='idx' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='objectsAtIndexes:'>
<arg index='0' name='indexes' type='@' declared_type='NSIndexSet*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='orderedSet'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='orderedSetWithArray:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='orderedSetWithArray:range:copyItems:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<arg index='1' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='2' name='flag' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='orderedSetWithObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' variadic='true' selector='orderedSetWithObjects:' sentinel='0'>
<arg index='0' name='firstObj' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='orderedSetWithObjects:count:'>
<arg const='true' index='0' name='objects' type='^@' declared_type='id*'/>
<arg index='1' name='cnt' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='orderedSetWithOrderedSet:'>
<arg index='0' name='set' type='@' declared_type='NSOrderedSet*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='orderedSetWithOrderedSet:range:copyItems:'>
<arg index='0' name='set' type='@' declared_type='NSOrderedSet*'/>
<arg index='1' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='2' name='flag' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='orderedSetWithSet:'>
<arg index='0' name='set' type='@' declared_type='NSSet*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='orderedSetWithSet:copyItems:'>
<arg index='0' name='set' type='@' declared_type='NSSet*'/>
<arg index='1' name='flag' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeObserver:forKeyPath:'>
<arg index='0' name='observer' type='@' declared_type='NSObject*'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:forKeyPath:context:'>
<arg index='0' name='observer' type='@' declared_type='NSObject*'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='2' name='context' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reverseObjectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='reversedOrderedSet'>
<retval type='@' declared_type='NSOrderedSet*'/>
</method>
<method selector='set'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='setValue:forKey:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortedArrayUsingComparator:'>
<arg function_pointer='true' index='0' name='cmptr' type='@?' declared_type='NSComparator'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sortedArrayWithOptions:usingComparator:'>
<arg index='0' name='opts' type64='Q' type='I' declared_type='NSSortOptions'/>
<arg function_pointer='true' index='1' name='cmptr' type='@?' declared_type='NSComparator'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='valueForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSOrthography'>
<method selector='allLanguages'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='allScripts'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='dominantLanguage'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dominantLanguageForScript:'>
<arg index='0' name='script' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dominantScript'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithDominantScript:languageMap:'>
<arg index='0' name='script' type='@' declared_type='NSString*'/>
<arg index='1' name='map' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='languageMap'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='languagesForScript:'>
<arg index='0' name='script' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='orthographyWithDominantScript:languageMap:'>
<arg index='0' name='script' type='@' declared_type='NSString*'/>
<arg index='1' name='map' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSOutputStream'>
<method selector='hasSpaceAvailable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initToBuffer:capacity:'>
<arg index='0' name='buffer' type='*' declared_type='uint8_t*'/>
<arg index='1' name='capacity' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initToFileAtPath:append:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='shouldAppend' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initToMemory'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithURL:append:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='shouldAppend' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='outputStreamToBuffer:capacity:'>
<arg index='0' name='buffer' type='*' declared_type='uint8_t*'/>
<arg index='1' name='capacity' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='outputStreamToFileAtPath:append:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='shouldAppend' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='outputStreamToMemory'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='outputStreamWithURL:append:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='shouldAppend' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='write:maxLength:'>
<arg const='true' index='0' name='buffer' type='*' declared_type='uint8_t*'/>
<arg index='1' name='len' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='NSPipe'>
<method selector='fileHandleForReading'>
<retval type='@' declared_type='NSFileHandle*'/>
</method>
<method selector='fileHandleForWriting'>
<retval type='@' declared_type='NSFileHandle*'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='pipe'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSPointerArray'>
<method selector='addPointer:'>
<arg index='0' name='pointer' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allObjects'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='compact'>
<retval type='v' declared_type='void'/>
</method>
<method selector='count'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='initWithOptions:'>
<arg index='0' name='options' type64='Q' type='I' declared_type='NSPointerFunctionsOptions'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPointerFunctions:'>
<arg index='0' name='functions' type='@' declared_type='NSPointerFunctions*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertPointer:atIndex:'>
<arg index='0' name='item' type='^v' declared_type='void*'/>
<arg index='1' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='pointerArrayWithOptions:'>
<arg index='0' name='options' type64='Q' type='I' declared_type='NSPointerFunctionsOptions'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='pointerArrayWithPointerFunctions:'>
<arg index='0' name='functions' type='@' declared_type='NSPointerFunctions*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='pointerArrayWithStrongObjects'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='pointerArrayWithWeakObjects'>
<retval type='@' declared_type='id'/>
</method>
<method selector='pointerAtIndex:'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='pointerFunctions'>
<retval type='@' declared_type='NSPointerFunctions*'/>
</method>
<method selector='removePointerAtIndex:'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replacePointerAtIndex:withPointer:'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='item' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCount:'>
<arg index='0' name='count' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='strongObjectsPointerArray'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='weakObjectsPointerArray'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSPointerFunctions'>
<method selector='acquireFunction'>
<retval function_pointer='true' type='^?' declared_type='void *(*)(void *, NSUInteger (*)(void *), BOOL)'>
<arg const='true' type='^v' declared_type='void*'/>
<arg type='^?' declared_type='NSUInteger (*)(void *)'/>
<arg type='B' declared_type='BOOL'/>
<retval type='^v' declared_type='void*'/>
</retval>
</method>
<method selector='descriptionFunction'>
<retval function_pointer='true' type='^?' declared_type='NSString *(*)(void *)'>
<arg const='true' type='^v' declared_type='void*'/>
<retval type='@' declared_type='NSString*'/>
</retval>
</method>
<method selector='hashFunction'>
<retval function_pointer='true' type='^?' declared_type='NSUInteger (*)(void *, NSUInteger (*)(void *))'>
<arg const='true' type='^v' declared_type='void*'/>
<arg type='^?' declared_type='NSUInteger (*)(void *)'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</retval>
</method>
<method selector='initWithOptions:'>
<arg index='0' name='options' type64='Q' type='I' declared_type='NSPointerFunctionsOptions'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualFunction'>
<retval function_pointer='true' type='^?' declared_type='BOOL (*)(void *, void *, NSUInteger (*)(void *))'>
<arg const='true' type='^v' declared_type='void*'/>
<arg const='true' type='^v' declared_type='void*'/>
<arg type='^?' declared_type='NSUInteger (*)(void *)'/>
<retval type='B' declared_type='BOOL'/>
</retval>
</method>
<method class_method='true' selector='pointerFunctionsWithOptions:'>
<arg index='0' name='options' type64='Q' type='I' declared_type='NSPointerFunctionsOptions'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='relinquishFunction'>
<retval function_pointer='true' type='^?' declared_type='void (*)(void *, NSUInteger (*)(void *))'>
<arg const='true' type='^v' declared_type='void*'/>
<arg type='^?' declared_type='NSUInteger (*)(void *)'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='setAcquireFunction:'>
<arg function_pointer='true' index='0' name='acquireFunction' type='^?' declared_type='void *(*)(void *, NSUInteger (*)(void *), BOOL)'>
<arg const='true' type='^v' declared_type='void*'/>
<arg type='^?' declared_type='NSUInteger (*)(void *)'/>
<arg type='B' declared_type='BOOL'/>
<retval type='^v' declared_type='void*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDescriptionFunction:'>
<arg function_pointer='true' index='0' name='descriptionFunction' type='^?' declared_type='NSString *(*)(void *)'>
<arg const='true' type='^v' declared_type='void*'/>
<retval type='@' declared_type='NSString*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHashFunction:'>
<arg function_pointer='true' index='0' name='hashFunction' type='^?' declared_type='NSUInteger (*)(void *, NSUInteger (*)(void *))'>
<arg const='true' type='^v' declared_type='void*'/>
<arg type='^?' declared_type='NSUInteger (*)(void *)'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsEqualFunction:'>
<arg function_pointer='true' index='0' name='isEqualFunction' type='^?' declared_type='BOOL (*)(void *, void *, NSUInteger (*)(void *))'>
<arg const='true' type='^v' declared_type='void*'/>
<arg const='true' type='^v' declared_type='void*'/>
<arg type='^?' declared_type='NSUInteger (*)(void *)'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRelinquishFunction:'>
<arg function_pointer='true' index='0' name='relinquishFunction' type='^?' declared_type='void (*)(void *, NSUInteger (*)(void *))'>
<arg const='true' type='^v' declared_type='void*'/>
<arg type='^?' declared_type='NSUInteger (*)(void *)'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSizeFunction:'>
<arg function_pointer='true' index='0' name='sizeFunction' type='^?' declared_type='NSUInteger (*)(void *)'>
<arg const='true' type='^v' declared_type='void*'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesStrongWriteBarrier:'>
<arg index='0' name='usesStrongWriteBarrier' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesWeakReadAndWriteBarriers:'>
<arg index='0' name='usesWeakReadAndWriteBarriers' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sizeFunction'>
<retval function_pointer='true' type='^?' declared_type='NSUInteger (*)(void *)'>
<arg const='true' type='^v' declared_type='void*'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</retval>
</method>
<method selector='usesStrongWriteBarrier'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='usesWeakReadAndWriteBarriers'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSPort'>
<method selector='addConnection:toRunLoop:forMode:'>
<arg index='0' name='conn' type='@' declared_type='NSConnection*'/>
<arg index='1' name='runLoop' type='@' declared_type='NSRunLoop*'/>
<arg index='2' name='mode' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='invalidate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isValid'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='port'>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='removeConnection:fromRunLoop:forMode:'>
<arg index='0' name='conn' type='@' declared_type='NSConnection*'/>
<arg index='1' name='runLoop' type='@' declared_type='NSRunLoop*'/>
<arg index='2' name='mode' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeFromRunLoop:forMode:'>
<arg index='0' name='runLoop' type='@' declared_type='NSRunLoop*'/>
<arg index='1' name='mode' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reservedSpaceLength'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg index='0' name='runLoop' type='@' declared_type='NSRunLoop*'/>
<arg index='1' name='mode' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sendBeforeDate:components:from:reserved:'>
<arg index='0' name='limitDate' type='@' declared_type='NSDate*'/>
<arg index='1' name='components' type='@' declared_type='NSMutableArray*'/>
<arg index='2' name='receivePort' type='@' declared_type='NSPort*'/>
<arg index='3' name='headerSpaceReserved' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='sendBeforeDate:msgid:components:from:reserved:'>
<arg index='0' name='limitDate' type='@' declared_type='NSDate*'/>
<arg index='1' name='msgID' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='components' type='@' declared_type='NSMutableArray*'/>
<arg index='3' name='receivePort' type='@' declared_type='NSPort*'/>
<arg index='4' name='headerSpaceReserved' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDelegate:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSPortCoder'>
<method selector='connection'>
<retval type='@' declared_type='NSConnection*'/>
</method>
<method selector='decodePortObject'>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='dispatch'>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodePortObject:'>
<arg index='0' name='aport' type='@' declared_type='NSPort*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithReceivePort:sendPort:components:'>
<arg index='0' name='rcvPort' type='@' declared_type='NSPort*'/>
<arg index='1' name='sndPort' type='@' declared_type='NSPort*'/>
<arg index='2' name='comps' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isBycopy'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isByref'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='portCoderWithReceivePort:sendPort:components:'>
<arg index='0' name='rcvPort' type='@' declared_type='NSPort*'/>
<arg index='1' name='sndPort' type='@' declared_type='NSPort*'/>
<arg index='2' name='comps' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSPortMessage'>
<method selector='components'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='initWithSendPort:receivePort:components:'>
<arg index='0' name='sendPort' type='@' declared_type='NSPort*'/>
<arg index='1' name='replyPort' type='@' declared_type='NSPort*'/>
<arg index='2' name='components' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='msgid'>
<retval type='I' declared_type='uint32_t'/>
</method>
<method selector='receivePort'>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='sendBeforeDate:'>
<arg index='0' name='date' type='@' declared_type='NSDate*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='sendPort'>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='setMsgid:'>
<arg index='0' name='msgid' type='I' declared_type='uint32_t'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSPortNameServer'>
<method selector='portForName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='portForName:host:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='host' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='registerPort:name:'>
<arg index='0' name='port' type='@' declared_type='NSPort*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removePortForName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='systemDefaultPortNameServer'>
<retval type='@' declared_type='NSPortNameServer*'/>
</method>
</class>
<class name='NSPositionalSpecifier'>
<method selector='evaluate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithPosition:objectSpecifier:'>
<arg index='0' name='position' type64='Q' type='I' declared_type='NSInsertionPosition'/>
<arg index='1' name='specifier' type='@' declared_type='NSScriptObjectSpecifier*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertionContainer'>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertionIndex'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='insertionKey'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='insertionReplaces'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='objectSpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='position'>
<retval type64='Q' type='I' declared_type='NSInsertionPosition'/>
</method>
<method selector='setInsertionClassDescription:'>
<arg index='0' name='classDescription' type='@' declared_type='NSScriptClassDescription*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSPredicate'>
<method selector='evaluateWithObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='evaluateWithObject:substitutionVariables:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='bindings' type='@' declared_type='NSDictionary*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='predicateFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='predicateWithBlock:'>
<arg function_pointer='true' index='0' name='block' type='@?' declared_type='BOOL (^)(id, NSDictionary *)'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='NSDictionary*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method class_method='true' variadic='true' selector='predicateWithFormat:'>
<arg index='0' name='predicateFormat' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method class_method='true' selector='predicateWithFormat:argumentArray:'>
<arg index='0' name='predicateFormat' type='@' declared_type='NSString*'/>
<arg index='1' name='arguments' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method class_method='true' selector='predicateWithFormat:arguments:'>
<arg index='0' name='predicateFormat' type='@' declared_type='NSString*'/>
<arg index='1' name='argList' declared_type64='__va_list_tag*' type64='^{__va_list_tag=II^v^v}' type='*' declared_type='va_list'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='predicateWithSubstitutionVariables:'>
<arg index='0' name='variables' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method class_method='true' selector='predicateWithValue:'>
<arg index='0' name='value' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
</class>
<class name='NSProcessInfo'>
<method selector='activeProcessorCount'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='arguments'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='automaticTerminationSupportEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='disableAutomaticTermination:'>
<arg index='0' name='reason' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='disableSuddenTermination'>
<retval type='v' declared_type='void'/>
</method>
<method selector='enableAutomaticTermination:'>
<arg index='0' name='reason' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='enableSuddenTermination'>
<retval type='v' declared_type='void'/>
</method>
<method selector='environment'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='globallyUniqueString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='hostName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='operatingSystem'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='operatingSystemName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='operatingSystemVersionString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='physicalMemory'>
<retval type='Q' declared_type='unsigned long long'/>
</method>
<method selector='processIdentifier'>
<retval type='i' declared_type='int'/>
</method>
<method class_method='true' selector='processInfo'>
<retval type='@' declared_type='NSProcessInfo*'/>
</method>
<method selector='processName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='processorCount'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='setAutomaticTerminationSupportEnabled:'>
<arg index='0' name='flag' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProcessName:'>
<arg index='0' name='newName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='systemUptime'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
</class>
<class name='NSPropertyListSerialization'>
<method class_method='true' selector='dataFromPropertyList:format:errorDescription:'>
<arg index='0' name='plist' type='@' declared_type='id'/>
<arg index='1' name='format' type64='Q' type='I' declared_type='NSPropertyListFormat'/>
<arg index='2' name='errorString' type_modifier='o' type='^@' declared_type='NSString**'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method class_method='true' selector='dataWithPropertyList:format:options:error:'>
<arg index='0' name='plist' type='@' declared_type='id'/>
<arg index='1' name='format' type64='Q' type='I' declared_type='NSPropertyListFormat'/>
<arg index='2' name='opt' type64='Q' type='I' declared_type='NSPropertyListWriteOptions'/>
<arg index='3' name='error' type_modifier='o' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method class_method='true' selector='propertyList:isValidForFormat:'>
<arg index='0' name='plist' type='@' declared_type='id'/>
<arg index='1' name='format' type64='Q' type='I' declared_type='NSPropertyListFormat'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='propertyListFromData:mutabilityOption:format:errorDescription:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<arg index='1' name='opt' type64='Q' type='I' declared_type='NSPropertyListMutabilityOptions'/>
<arg index='2' name='format' type64='^Q' type='^I' declared_type='NSPropertyListFormat*'/>
<arg index='3' name='errorString' type_modifier='o' type='^@' declared_type='NSString**'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='propertyListWithData:options:format:error:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<arg index='1' name='opt' type64='Q' type='I' declared_type='NSPropertyListReadOptions'/>
<arg index='2' name='format' type64='^Q' type='^I' declared_type='NSPropertyListFormat*'/>
<arg index='3' name='error' type_modifier='o' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='propertyListWithStream:options:format:error:'>
<arg index='0' name='stream' type='@' declared_type='NSInputStream*'/>
<arg index='1' name='opt' type64='Q' type='I' declared_type='NSPropertyListReadOptions'/>
<arg index='2' name='format' type64='^Q' type='^I' declared_type='NSPropertyListFormat*'/>
<arg index='3' name='error' type_modifier='o' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='writePropertyList:toStream:format:options:error:'>
<arg index='0' name='plist' type='@' declared_type='id'/>
<arg index='1' name='stream' type='@' declared_type='NSOutputStream*'/>
<arg index='2' name='format' type64='Q' type='I' declared_type='NSPropertyListFormat'/>
<arg index='3' name='opt' type64='Q' type='I' declared_type='NSPropertyListWriteOptions'/>
<arg index='4' name='error' type_modifier='o' type='^@' declared_type='NSError**'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='NSProtocolChecker'>
<method selector='initWithTarget:protocol:'>
<arg index='0' name='anObject' type='@' declared_type='NSObject*'/>
<arg index='1' name='aProtocol' type='@' declared_type='Protocol*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='protocol'>
<retval type='@' declared_type='Protocol*'/>
</method>
<method class_method='true' selector='protocolCheckerWithTarget:protocol:'>
<arg index='0' name='anObject' type='@' declared_type='NSObject*'/>
<arg index='1' name='aProtocol' type='@' declared_type='Protocol*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='target'>
<retval type='@' declared_type='NSObject*'/>
</method>
</class>
<class name='NSProxy'>
<method class_method='true' selector='alloc'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='allocWithZone:'>
<arg index='0' name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='class'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='dealloc'>
<retval type='v' declared_type='void'/>
</method>
<method selector='debugDescription'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='finalize'>
<retval type='v' declared_type='void'/>
</method>
<method selector='forwardInvocation:'>
<arg index='0' name='invocation' type='@' declared_type='NSInvocation*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='methodSignatureForSelector:'>
<arg index='0' name='sel' type=':' declared_type='SEL'/>
<retval type='@' declared_type='NSMethodSignature*'/>
</method>
<method class_method='true' selector='respondsToSelector:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSQuitCommand'>
<method selector='saveOptions'>
<retval type64='Q' type='I' declared_type='NSSaveOptions'/>
</method>
</class>
<class name='NSRangeSpecifier'>
<method selector='endSpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='initWithContainerClassDescription:containerSpecifier:key:startSpecifier:endSpecifier:'>
<arg index='0' name='classDesc' type='@' declared_type='NSScriptClassDescription*'/>
<arg index='1' name='container' type='@' declared_type='NSScriptObjectSpecifier*'/>
<arg index='2' name='property' type='@' declared_type='NSString*'/>
<arg index='3' name='startSpec' type='@' declared_type='NSScriptObjectSpecifier*'/>
<arg index='4' name='endSpec' type='@' declared_type='NSScriptObjectSpecifier*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setEndSpecifier:'>
<arg index='0' name='endSpec' type='@' declared_type='NSScriptObjectSpecifier*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartSpecifier:'>
<arg index='0' name='startSpec' type='@' declared_type='NSScriptObjectSpecifier*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startSpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
</class>
<class name='NSRecursiveLock'>
<method selector='lockBeforeDate:'>
<arg index='0' name='limit' type='@' declared_type='NSDate*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setName:'>
<arg index='0' name='n' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tryLock'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSRegularExpression'>
<method selector='enumerateMatchesInString:options:range:usingBlock:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='options' type64='Q' type='I' declared_type='NSMatchingOptions'/>
<arg index='2' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg function_pointer='true' index='3' name='block' type='@?' declared_type='void (^)(NSTextCheckingResult *, NSMatchingFlags, BOOL *)'>
<arg type='@' declared_type='NSTextCheckingResult*'/>
<arg type64='Q' type='I' declared_type='NSMatchingFlags'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='escapedPatternForString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='escapedTemplateForString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='firstMatchInString:options:range:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='options' type64='Q' type='I' declared_type='NSMatchingOptions'/>
<arg index='2' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='initWithPattern:options:error:'>
<arg index='0' name='pattern' type='@' declared_type='NSString*'/>
<arg index='1' name='options' type64='Q' type='I' declared_type='NSRegularExpressionOptions'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='matchesInString:options:range:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='options' type64='Q' type='I' declared_type='NSMatchingOptions'/>
<arg index='2' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='numberOfCaptureGroups'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='numberOfMatchesInString:options:range:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='options' type64='Q' type='I' declared_type='NSMatchingOptions'/>
<arg index='2' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='options'>
<retval type64='Q' type='I' declared_type='NSRegularExpressionOptions'/>
</method>
<method selector='pattern'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='rangeOfFirstMatchInString:options:range:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='options' type64='Q' type='I' declared_type='NSMatchingOptions'/>
<arg index='2' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method class_method='true' selector='regularExpressionWithPattern:options:error:'>
<arg index='0' name='pattern' type='@' declared_type='NSString*'/>
<arg index='1' name='options' type64='Q' type='I' declared_type='NSRegularExpressionOptions'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSRegularExpression*'/>
</method>
<method selector='replaceMatchesInString:options:range:withTemplate:'>
<arg index='0' name='string' type='@' declared_type='NSMutableString*'/>
<arg index='1' name='options' type64='Q' type='I' declared_type='NSMatchingOptions'/>
<arg index='2' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='3' name='templ' type='@' declared_type='NSString*'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='replacementStringForResult:inString:offset:template:'>
<arg index='0' name='result' type='@' declared_type='NSTextCheckingResult*'/>
<arg index='1' name='string' type='@' declared_type='NSString*'/>
<arg index='2' name='offset' type64='q' type='i' declared_type='NSInteger'/>
<arg index='3' name='templ' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByReplacingMatchesInString:options:range:withTemplate:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='options' type64='Q' type='I' declared_type='NSMatchingOptions'/>
<arg index='2' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='3' name='templ' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSRelativeSpecifier'>
<method selector='baseSpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='initWithContainerClassDescription:containerSpecifier:key:relativePosition:baseSpecifier:'>
<arg index='0' name='classDesc' type='@' declared_type='NSScriptClassDescription*'/>
<arg index='1' name='container' type='@' declared_type='NSScriptObjectSpecifier*'/>
<arg index='2' name='property' type='@' declared_type='NSString*'/>
<arg index='3' name='relPos' type64='Q' type='I' declared_type='NSRelativePosition'/>
<arg index='4' name='baseSpecifier' type='@' declared_type='NSScriptObjectSpecifier*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='relativePosition'>
<retval type64='Q' type='I' declared_type='NSRelativePosition'/>
</method>
<method selector='setBaseSpecifier:'>
<arg index='0' name='baseSpecifier' type='@' declared_type='NSScriptObjectSpecifier*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRelativePosition:'>
<arg index='0' name='relPos' type64='Q' type='I' declared_type='NSRelativePosition'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSRunLoop'>
<method selector='acceptInputForMode:beforeDate:'>
<arg index='0' name='mode' type='@' declared_type='NSString*'/>
<arg index='1' name='limitDate' type='@' declared_type='NSDate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addPort:forMode:'>
<arg index='0' name='aPort' type='@' declared_type='NSPort*'/>
<arg index='1' name='mode' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addTimer:forMode:'>
<arg index='0' name='timer' type='@' declared_type='NSTimer*'/>
<arg index='1' name='mode' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancelPerformSelector:target:argument:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<arg index='1' name='target' type='@' declared_type='id'/>
<arg index='2' name='arg' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancelPerformSelectorsWithTarget:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='configureAsServer'>
<retval type='v' declared_type='void'/>
</method>
<method selector='currentMode'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='currentRunLoop'>
<retval type='@' declared_type='NSRunLoop*'/>
</method>
<method selector='getCFRunLoop'>
<retval type='^{__CFRunLoop=}' declared_type='CFRunLoopRef'/>
</method>
<method selector='limitDateForMode:'>
<arg index='0' name='mode' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method class_method='true' selector='mainRunLoop'>
<retval type='@' declared_type='NSRunLoop*'/>
</method>
<method selector='performSelector:target:argument:order:modes:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<arg index='1' name='target' type='@' declared_type='id'/>
<arg index='2' name='arg' type='@' declared_type='id'/>
<arg index='3' name='order' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='4' name='modes' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removePort:forMode:'>
<arg index='0' name='aPort' type='@' declared_type='NSPort*'/>
<arg index='1' name='mode' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='run'>
<retval type='v' declared_type='void'/>
</method>
<method selector='runMode:beforeDate:'>
<arg index='0' name='mode' type='@' declared_type='NSString*'/>
<arg index='1' name='limitDate' type='@' declared_type='NSDate*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='runUntilDate:'>
<arg index='0' name='limitDate' type='@' declared_type='NSDate*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSScanner'>
<method selector='caseSensitive'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='charactersToBeSkipped'>
<retval type='@' declared_type='NSCharacterSet*'/>
</method>
<method selector='initWithString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isAtEnd'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='locale'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='localizedScannerWithString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='scanCharactersFromSet:intoString:'>
<arg index='0' name='set' type='@' declared_type='NSCharacterSet*'/>
<arg index='1' name='value' type='^@' declared_type='NSString**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanDecimal:'>
<arg index='0' name='dcm' type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanDouble:'>
<arg index='0' name='value' type='^d' declared_type='double*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanFloat:'>
<arg index='0' name='value' type='^f' declared_type='float*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanHexDouble:'>
<arg index='0' name='result' type='^d' declared_type='double*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanHexFloat:'>
<arg index='0' name='result' type='^f' declared_type='float*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanHexInt:'>
<arg index='0' name='value' type='^I' declared_type='unsigned int*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanHexLongLong:'>
<arg index='0' name='result' type='^Q' declared_type='unsigned long long*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanInt:'>
<arg index='0' name='value' type='^i' declared_type='int*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanInteger:'>
<arg index='0' name='value' type64='^q' type='^i' declared_type='NSInteger*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanLocation'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='scanLongLong:'>
<arg index='0' name='value' type='^q' declared_type='long long*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanString:intoString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='value' type='^@' declared_type='NSString**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanUpToCharactersFromSet:intoString:'>
<arg index='0' name='set' type='@' declared_type='NSCharacterSet*'/>
<arg index='1' name='value' type='^@' declared_type='NSString**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scanUpToString:intoString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='value' type='^@' declared_type='NSString**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='scannerWithString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setCaseSensitive:'>
<arg index='0' name='flag' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCharactersToBeSkipped:'>
<arg index='0' name='set' type='@' declared_type='NSCharacterSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocale:'>
<arg index='0' name='locale' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScanLocation:'>
<arg index='0' name='pos' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='string'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSScriptClassDescription'>
<method selector='appleEventCode'>
<retval type64='I' type='L' declared_type='FourCharCode'/>
</method>
<method selector='appleEventCodeForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type64='I' type='L' declared_type='FourCharCode'/>
</method>
<method class_method='true' selector='classDescriptionForClass:'>
<arg index='0' name='aClass' type='#' declared_type='Class'/>
<retval type='@' declared_type='NSScriptClassDescription*'/>
</method>
<method selector='classDescriptionForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSScriptClassDescription*'/>
</method>
<method selector='className'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='defaultSubcontainerAttributeKey'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='hasOrderedToManyRelationshipForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasPropertyForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasReadablePropertyForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasWritablePropertyForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='implementationClassName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithSuiteName:className:dictionary:'>
<arg index='0' name='suiteName' type='@' declared_type='NSString*'/>
<arg index='1' name='className' type='@' declared_type='NSString*'/>
<arg index='2' name='classDeclaration' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isLocationRequiredToCreateForKey:'>
<arg index='0' name='toManyRelationshipKey' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isReadOnlyKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyWithAppleEventCode:'>
<arg index='0' name='appleEventCode' type64='I' type='L' declared_type='FourCharCode'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='matchesAppleEventCode:'>
<arg index='0' name='appleEventCode' type64='I' type='L' declared_type='FourCharCode'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='selectorForCommand:'>
<arg index='0' name='commandDescription' type='@' declared_type='NSScriptCommandDescription*'/>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='suiteName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='superclassDescription'>
<retval type='@' declared_type='NSScriptClassDescription*'/>
</method>
<method selector='supportsCommand:'>
<arg index='0' name='commandDescription' type='@' declared_type='NSScriptCommandDescription*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='typeForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSScriptCoercionHandler'>
<method selector='coerceValue:toClass:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='toClass' type='#' declared_type='Class'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='registerCoercer:selector:toConvertFromClass:toClass:'>
<arg index='0' name='coercer' type='@' declared_type='id'/>
<arg index='1' name='selector' type=':' declared_type='SEL'/>
<arg index='2' name='fromClass' type='#' declared_type='Class'/>
<arg index='3' name='toClass' type='#' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedCoercionHandler'>
<retval type='@' declared_type='NSScriptCoercionHandler*'/>
</method>
</class>
<class name='NSScriptCommand'>
<method selector='appleEvent'>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='arguments'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='commandDescription'>
<retval type='@' declared_type='NSScriptCommandDescription*'/>
</method>
<method class_method='true' selector='currentCommand'>
<retval type='@' declared_type='NSScriptCommand*'/>
</method>
<method selector='directParameter'>
<retval type='@' declared_type='id'/>
</method>
<method selector='evaluatedArguments'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='evaluatedReceivers'>
<retval type='@' declared_type='id'/>
</method>
<method selector='executeCommand'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCommandDescription:'>
<arg index='0' name='commandDef' type='@' declared_type='NSScriptCommandDescription*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isWellFormed'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='performDefaultImplementation'>
<retval type='@' declared_type='id'/>
</method>
<method selector='receiversSpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='resumeExecutionWithResult:'>
<arg index='0' name='result' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scriptErrorExpectedTypeDescriptor'>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='scriptErrorNumber'>
<retval type='i' declared_type='int'/>
</method>
<method selector='scriptErrorOffendingObjectDescriptor'>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='scriptErrorString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setArguments:'>
<arg index='0' name='args' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDirectParameter:'>
<arg index='0' name='directParameter' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReceiversSpecifier:'>
<arg index='0' name='receiversRef' type='@' declared_type='NSScriptObjectSpecifier*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScriptErrorExpectedTypeDescriptor:'>
<arg index='0' name='errorExpectedTypeDescriptor' type='@' declared_type='NSAppleEventDescriptor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScriptErrorNumber:'>
<arg index='0' name='errorNumber' type='i' declared_type='int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScriptErrorOffendingObjectDescriptor:'>
<arg index='0' name='errorOffendingObjectDescriptor' type='@' declared_type='NSAppleEventDescriptor*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScriptErrorString:'>
<arg index='0' name='errorString' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='suspendExecution'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSScriptCommandDescription'>
<method selector='appleEventClassCode'>
<retval type64='I' type='L' declared_type='FourCharCode'/>
</method>
<method selector='appleEventCode'>
<retval type64='I' type='L' declared_type='FourCharCode'/>
</method>
<method selector='appleEventCodeForArgumentWithName:'>
<arg index='0' name='argumentName' type='@' declared_type='NSString*'/>
<retval type64='I' type='L' declared_type='FourCharCode'/>
</method>
<method selector='appleEventCodeForReturnType'>
<retval type64='I' type='L' declared_type='FourCharCode'/>
</method>
<method selector='argumentNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='commandClassName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='commandName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='createCommandInstance'>
<retval type='@' declared_type='NSScriptCommand*'/>
</method>
<method selector='createCommandInstanceWithZone:'>
<arg index='0' name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<retval type='@' declared_type='NSScriptCommand*'/>
</method>
<method selector='initWithSuiteName:commandName:dictionary:'>
<arg index='0' name='suiteName' type='@' declared_type='NSString*'/>
<arg index='1' name='commandName' type='@' declared_type='NSString*'/>
<arg index='2' name='commandDeclaration' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isOptionalArgumentWithName:'>
<arg index='0' name='argumentName' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='returnType'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='suiteName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='typeForArgumentWithName:'>
<arg index='0' name='argumentName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSScriptExecutionContext'>
<method selector='objectBeingTested'>
<retval type='@' declared_type='id'/>
</method>
<method selector='rangeContainerObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setObjectBeingTested:'>
<arg index='0' name='obj' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRangeContainerObject:'>
<arg index='0' name='obj' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTopLevelObject:'>
<arg index='0' name='obj' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedScriptExecutionContext'>
<retval type='@' declared_type='NSScriptExecutionContext*'/>
</method>
<method selector='topLevelObject'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSScriptObjectSpecifier'>
<method selector='childSpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='containerClassDescription'>
<retval type='@' declared_type='NSScriptClassDescription*'/>
</method>
<method selector='containerIsObjectBeingTested'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='containerIsRangeContainerObject'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='containerSpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='descriptor'>
<retval type='@' declared_type='NSAppleEventDescriptor*'/>
</method>
<method selector='evaluationErrorNumber'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='evaluationErrorSpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='indicesOfObjectsByEvaluatingWithContainer:count:'>
<arg index='0' name='container' type='@' declared_type='id'/>
<arg index='1' name='count' type64='^q' type='^i' declared_type='NSInteger*'/>
<retval type64='^q' type='^i' declared_type='NSInteger*'/>
</method>
<method selector='initWithContainerClassDescription:containerSpecifier:key:'>
<arg index='0' name='classDesc' type='@' declared_type='NSScriptClassDescription*'/>
<arg index='1' name='container' type='@' declared_type='NSScriptObjectSpecifier*'/>
<arg index='2' name='property' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContainerSpecifier:key:'>
<arg index='0' name='container' type='@' declared_type='NSScriptObjectSpecifier*'/>
<arg index='1' name='property' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='key'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='keyClassDescription'>
<retval type='@' declared_type='NSScriptClassDescription*'/>
</method>
<method class_method='true' selector='objectSpecifierWithDescriptor:'>
<arg index='0' name='descriptor' type='@' declared_type='NSAppleEventDescriptor*'/>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='objectsByEvaluatingSpecifier'>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectsByEvaluatingWithContainers:'>
<arg index='0' name='containers' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setChildSpecifier:'>
<arg index='0' name='child' type='@' declared_type='NSScriptObjectSpecifier*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContainerClassDescription:'>
<arg index='0' name='classDesc' type='@' declared_type='NSScriptClassDescription*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContainerIsObjectBeingTested:'>
<arg index='0' name='flag' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContainerIsRangeContainerObject:'>
<arg index='0' name='flag' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContainerSpecifier:'>
<arg index='0' name='subRef' type='@' declared_type='NSScriptObjectSpecifier*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEvaluationErrorNumber:'>
<arg index='0' name='error' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSScriptSuiteRegistry'>
<method selector='aeteResource:'>
<arg index='0' name='languageName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='appleEventCodeForSuite:'>
<arg index='0' name='suiteName' type='@' declared_type='NSString*'/>
<retval type64='I' type='L' declared_type='FourCharCode'/>
</method>
<method selector='bundleForSuite:'>
<arg index='0' name='suiteName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSBundle*'/>
</method>
<method selector='classDescriptionWithAppleEventCode:'>
<arg index='0' name='appleEventCode' type64='I' type='L' declared_type='FourCharCode'/>
<retval type='@' declared_type='NSScriptClassDescription*'/>
</method>
<method selector='classDescriptionsInSuite:'>
<arg index='0' name='suiteName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='commandDescriptionWithAppleEventClass:andAppleEventCode:'>
<arg index='0' name='appleEventClassCode' type64='I' type='L' declared_type='FourCharCode'/>
<arg index='1' name='appleEventIDCode' type64='I' type='L' declared_type='FourCharCode'/>
<retval type='@' declared_type='NSScriptCommandDescription*'/>
</method>
<method selector='commandDescriptionsInSuite:'>
<arg index='0' name='suiteName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='loadSuiteWithDictionary:fromBundle:'>
<arg index='0' name='suiteDeclaration' type='@' declared_type='NSDictionary*'/>
<arg index='1' name='bundle' type='@' declared_type='NSBundle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='loadSuitesFromBundle:'>
<arg index='0' name='bundle' type='@' declared_type='NSBundle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='registerClassDescription:'>
<arg index='0' name='classDescription' type='@' declared_type='NSScriptClassDescription*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='registerCommandDescription:'>
<arg index='0' name='commandDescription' type='@' declared_type='NSScriptCommandDescription*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setSharedScriptSuiteRegistry:'>
<arg index='0' name='registry' type='@' declared_type='NSScriptSuiteRegistry*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedScriptSuiteRegistry'>
<retval type='@' declared_type='NSScriptSuiteRegistry*'/>
</method>
<method selector='suiteForAppleEventCode:'>
<arg index='0' name='appleEventCode' type64='I' type='L' declared_type='FourCharCode'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='suiteNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSScriptWhoseTest'>
<method selector='isTrue'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSSet'>
<method selector='addObserver:forKeyPath:options:context:'>
<arg index='0' name='observer' type='@' declared_type='NSObject*'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='2' name='options' type64='Q' type='I' declared_type='NSKeyValueObservingOptions'/>
<arg index='3' name='context' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allObjects'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='anyObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='containsObject:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='count'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='descriptionWithLocale:'>
<arg index='0' name='locale' type='@' declared_type='id'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='enumerateObjectsUsingBlock:'>
<arg function_pointer='true' index='0' name='block' type='@?' declared_type='void (^)(id, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateObjectsWithOptions:usingBlock:'>
<arg index='0' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='1' name='block' type='@?' declared_type='void (^)(id, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='filteredSetUsingPredicate:'>
<arg index='0' name='predicate' type='@' declared_type='NSPredicate*'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='initWithArray:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method variadic='true' selector='initWithObjects:' sentinel='0'>
<arg index='0' name='firstObj' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithObjects:count:'>
<arg const='true' index='0' name='objects' type='^@' declared_type='id*'/>
<arg index='1' name='cnt' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSet:'>
<arg index='0' name='set' type='@' declared_type='NSSet*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSet:copyItems:'>
<arg index='0' name='set' type='@' declared_type='NSSet*'/>
<arg index='1' name='flag' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intersectsSet:'>
<arg index='0' name='otherSet' type='@' declared_type='NSSet*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualToSet:'>
<arg index='0' name='otherSet' type='@' declared_type='NSSet*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSubsetOfSet:'>
<arg index='0' name='otherSet' type='@' declared_type='NSSet*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='makeObjectsPerformSelector:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeObjectsPerformSelector:withObject:'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<arg index='1' name='argument' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='member:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='objectsPassingTest:'>
<arg function_pointer='true' index='0' name='predicate' type='@?' declared_type='BOOL (^)(id, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='objectsWithOptions:passingTest:'>
<arg index='0' name='opts' type64='Q' type='I' declared_type='NSEnumerationOptions'/>
<arg function_pointer='true' index='1' name='predicate' type='@?' declared_type='BOOL (^)(id, BOOL *)'>
<arg type='@' declared_type='id'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='removeObserver:forKeyPath:'>
<arg index='0' name='observer' type='@' declared_type='NSObject*'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObserver:forKeyPath:context:'>
<arg index='0' name='observer' type='@' declared_type='NSObject*'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='2' name='context' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='set'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setByAddingObject:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='setByAddingObjectsFromArray:'>
<arg index='0' name='other' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='setByAddingObjectsFromSet:'>
<arg index='0' name='other' type='@' declared_type='NSSet*'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='setValue:forKey:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setWithArray:'>
<arg index='0' name='array' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='setWithObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' variadic='true' selector='setWithObjects:' sentinel='0'>
<arg index='0' name='firstObj' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='setWithObjects:count:'>
<arg const='true' index='0' name='objects' type='^@' declared_type='id*'/>
<arg index='1' name='cnt' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='setWithSet:'>
<arg index='0' name='set' type='@' declared_type='NSSet*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='sortedArrayUsingDescriptors:'>
<arg index='0' name='sortDescriptors' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='valueForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSSetCommand'>
<method selector='keySpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='setReceiversSpecifier:'>
<arg index='0' name='receiversRef' type='@' declared_type='NSScriptObjectSpecifier*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSSocketPort'>
<method selector='address'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initRemoteWithProtocolFamily:socketType:protocol:address:'>
<arg index='0' name='family' type='i' declared_type='int'/>
<arg index='1' name='type' type='i' declared_type='int'/>
<arg index='2' name='protocol' type='i' declared_type='int'/>
<arg index='3' name='address' type='@' declared_type='NSData*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initRemoteWithTCPPort:host:'>
<arg index='0' name='port' type='S' declared_type='unsigned short'/>
<arg index='1' name='hostName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithProtocolFamily:socketType:protocol:address:'>
<arg index='0' name='family' type='i' declared_type='int'/>
<arg index='1' name='type' type='i' declared_type='int'/>
<arg index='2' name='protocol' type='i' declared_type='int'/>
<arg index='3' name='address' type='@' declared_type='NSData*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithProtocolFamily:socketType:protocol:socket:'>
<arg index='0' name='family' type='i' declared_type='int'/>
<arg index='1' name='type' type='i' declared_type='int'/>
<arg index='2' name='protocol' type='i' declared_type='int'/>
<arg index='3' name='sock' type='i' declared_type='NSSocketNativeHandle'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTCPPort:'>
<arg index='0' name='port' type='S' declared_type='unsigned short'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='protocol'>
<retval type='i' declared_type='int'/>
</method>
<method selector='protocolFamily'>
<retval type='i' declared_type='int'/>
</method>
<method selector='socket'>
<retval type='i' declared_type='NSSocketNativeHandle'/>
</method>
<method selector='socketType'>
<retval type='i' declared_type='int'/>
</method>
</class>
<class name='NSSocketPortNameServer'>
<method selector='defaultNameServerPortNumber'>
<retval type='S' declared_type='uint16_t'/>
</method>
<method selector='portForName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='portForName:host:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='host' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='portForName:host:nameServerPortNumber:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='host' type='@' declared_type='NSString*'/>
<arg index='2' name='portNumber' type='S' declared_type='uint16_t'/>
<retval type='@' declared_type='NSPort*'/>
</method>
<method selector='registerPort:name:'>
<arg index='0' name='port' type='@' declared_type='NSPort*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='registerPort:name:nameServerPortNumber:'>
<arg index='0' name='port' type='@' declared_type='NSPort*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='portNumber' type='S' declared_type='uint16_t'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removePortForName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDefaultNameServerPortNumber:'>
<arg index='0' name='portNumber' type='S' declared_type='uint16_t'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedInstance'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSSortDescriptor'>
<method selector='ascending'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='comparator'>
<retval function_pointer='true' type='@?' declared_type='NSComparator'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</retval>
</method>
<method selector='compareObject:toObject:'>
<arg index='0' name='object1' type='@' declared_type='id'/>
<arg index='1' name='object2' type='@' declared_type='id'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='initWithKey:ascending:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<arg index='1' name='ascending' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithKey:ascending:comparator:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<arg index='1' name='ascending' type='B' declared_type='BOOL'/>
<arg function_pointer='true' index='2' name='cmptr' type='@?' declared_type='NSComparator'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithKey:ascending:selector:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<arg index='1' name='ascending' type='B' declared_type='BOOL'/>
<arg index='2' name='selector' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='key'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='reversedSortDescriptor'>
<retval type='@' declared_type='id'/>
</method>
<method selector='selector'>
<retval type=':' declared_type='SEL'/>
</method>
<method class_method='true' selector='sortDescriptorWithKey:ascending:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<arg index='1' name='ascending' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='sortDescriptorWithKey:ascending:comparator:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<arg index='1' name='ascending' type='B' declared_type='BOOL'/>
<arg function_pointer='true' index='2' name='cmptr' type='@?' declared_type='NSComparator'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='sortDescriptorWithKey:ascending:selector:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<arg index='1' name='ascending' type='B' declared_type='BOOL'/>
<arg index='2' name='selector' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSSpecifierTest'>
<method selector='initWithObjectSpecifier:comparisonOperator:testObject:'>
<arg index='0' name='obj1' type='@' declared_type='NSScriptObjectSpecifier*'/>
<arg index='1' name='compOp' type64='Q' type='I' declared_type='NSTestComparisonOperation'/>
<arg index='2' name='obj2' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSSpellServer'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isWordInUserDictionaries:caseSensitive:'>
<arg index='0' name='word' type='@' declared_type='NSString*'/>
<arg index='1' name='flag' type='B' declared_type='BOOL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='registerLanguage:byVendor:'>
<arg index='0' name='language' type='@' declared_type='NSString*'/>
<arg index='1' name='vendor' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='run'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSStream'>
<method selector='close'>
<retval type='v' declared_type='void'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='getStreamsToHost:port:inputStream:outputStream:'>
<arg index='0' name='host' type='@' declared_type='NSHost*'/>
<arg index='1' name='port' type64='q' type='i' declared_type='NSInteger'/>
<arg index='2' name='inputStream' type='^@' declared_type='NSInputStream**'/>
<arg index='3' name='outputStream' type='^@' declared_type='NSOutputStream**'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='open'>
<retval type='v' declared_type='void'/>
</method>
<method selector='propertyForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeFromRunLoop:forMode:'>
<arg index='0' name='aRunLoop' type='@' declared_type='NSRunLoop*'/>
<arg index='1' name='mode' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg index='0' name='aRunLoop' type='@' declared_type='NSRunLoop*'/>
<arg index='1' name='mode' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' name='delegate' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperty:forKey:'>
<arg index='0' name='property' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='streamError'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='streamStatus'>
<retval type64='Q' type='I' declared_type='NSStreamStatus'/>
</method>
</class>
<class name='NSString'>
<method selector='UTF8String'>
<retval const='true' type='*' declared_type='char*'/>
</method>
<method class_method='true' selector='availableStringEncodings'>
<retval const='true' type64='^Q' type='^I' declared_type='NSStringEncoding*'/>
</method>
<method selector='boolValue'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cString'>
<retval const='true' type='*' declared_type='char*'/>
</method>
<method selector='cStringLength'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='cStringUsingEncoding:'>
<arg index='0' name='encoding' type64='Q' type='I' declared_type='NSStringEncoding'/>
<retval const='true' type='*' declared_type='char*'/>
</method>
<method selector='canBeConvertedToEncoding:'>
<arg index='0' name='encoding' type64='Q' type='I' declared_type='NSStringEncoding'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='capitalizedString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='capitalizedStringWithLocale:'>
<arg index='0' name='locale' type='@' declared_type='NSLocale*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='caseInsensitiveCompare:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='characterAtIndex:'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='S' declared_type='unichar'/>
</method>
<method selector='commonPrefixWithString:options:'>
<arg index='0' name='aString' type='@' declared_type='NSString*'/>
<arg index='1' name='mask' type64='Q' type='I' declared_type='NSStringCompareOptions'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='compare:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='compare:options:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='mask' type64='Q' type='I' declared_type='NSStringCompareOptions'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='compare:options:range:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='mask' type64='Q' type='I' declared_type='NSStringCompareOptions'/>
<arg index='2' name='compareRange' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='compare:options:range:locale:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='mask' type64='Q' type='I' declared_type='NSStringCompareOptions'/>
<arg index='2' name='compareRange' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='3' name='locale' type='@' declared_type='id'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:'>
<arg index='0' name='outputName' type='^@' declared_type='NSString**'/>
<arg index='1' name='flag' type='B' declared_type='BOOL'/>
<arg index='2' name='outputArray' type='^@' declared_type='NSArray**'/>
<arg index='3' name='filterTypes' type='@' declared_type='NSArray*'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='componentsSeparatedByCharactersInSet:'>
<arg index='0' name='separator' type='@' declared_type='NSCharacterSet*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='componentsSeparatedByString:'>
<arg index='0' name='separator' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='dataUsingEncoding:'>
<arg index='0' name='encoding' type64='Q' type='I' declared_type='NSStringEncoding'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='dataUsingEncoding:allowLossyConversion:'>
<arg index='0' name='encoding' type64='Q' type='I' declared_type='NSStringEncoding'/>
<arg index='1' name='lossy' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='decomposedStringWithCanonicalMapping'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='decomposedStringWithCompatibilityMapping'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='defaultCStringEncoding'>
<retval type64='Q' type='I' declared_type='NSStringEncoding'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='doubleValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='enumerateLinesUsingBlock:'>
<arg function_pointer='true' index='0' name='block' type='@?' declared_type='void (^)(NSString *, BOOL *)'>
<arg type='@' declared_type='NSString*'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='tagScheme' type='@' declared_type='NSString*'/>
<arg index='2' name='opts' type64='Q' type='I' declared_type='NSLinguisticTaggerOptions'/>
<arg index='3' name='orthography' type='@' declared_type='NSOrthography*'/>
<arg function_pointer='true' index='4' name='block' type='@?' declared_type='void (^)(NSString *, NSRange, NSRange, BOOL *)'>
<arg type='@' declared_type='NSString*'/>
<arg type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateSubstringsInRange:options:usingBlock:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='opts' type64='Q' type='I' declared_type='NSStringEnumerationOptions'/>
<arg function_pointer='true' index='2' name='block' type='@?' declared_type='void (^)(NSString *, NSRange, NSRange, BOOL *)'>
<arg type='@' declared_type='NSString*'/>
<arg type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='fastestEncoding'>
<retval type64='Q' type='I' declared_type='NSStringEncoding'/>
</method>
<method selector='fileSystemRepresentation'>
<retval const='true' type='*' declared_type='char*'/>
</method>
<method selector='floatValue'>
<retval type='f' declared_type='float'/>
</method>
<method selector='getBytes:maxLength:usedLength:encoding:options:range:remainingRange:'>
<arg index='0' name='buffer' type='^v' declared_type='void*'/>
<arg index='1' name='maxBufferCount' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='usedBufferCount' type64='^Q' type='^I' declared_type='NSUInteger*'/>
<arg index='3' name='encoding' type64='Q' type='I' declared_type='NSStringEncoding'/>
<arg index='4' name='options' type64='Q' type='I' declared_type='NSStringEncodingConversionOptions'/>
<arg index='5' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='6' name='leftover' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getCString:'>
<arg index='0' name='bytes' type='*' declared_type='char*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getCString:maxLength:'>
<arg index='0' name='bytes' type='*' declared_type='char*'/>
<arg index='1' name='maxLength' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getCString:maxLength:encoding:'>
<arg index='0' name='buffer' type='*' declared_type='char*'/>
<arg index='1' name='maxBufferCount' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='encoding' type64='Q' type='I' declared_type='NSStringEncoding'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getCString:maxLength:range:remainingRange:'>
<arg index='0' name='bytes' type='*' declared_type='char*'/>
<arg index='1' name='maxLength' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='aRange' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='3' name='leftoverRange' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getCharacters:'>
<arg index='0' name='buffer' type='^S' declared_type='unichar*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getCharacters:range:'>
<arg index='0' name='buffer' type='^S' declared_type='unichar*'/>
<arg index='1' name='aRange' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getFileSystemRepresentation:maxLength:'>
<arg index='0' name='cname' type='*' declared_type='char*'/>
<arg index='1' name='max' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getLineStart:end:contentsEnd:forRange:'>
<arg index='0' name='startPtr' type64='^Q' type='^I' declared_type='NSUInteger*'/>
<arg index='1' name='lineEndPtr' type64='^Q' type='^I' declared_type='NSUInteger*'/>
<arg index='2' name='contentsEndPtr' type64='^Q' type='^I' declared_type='NSUInteger*'/>
<arg index='3' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getParagraphStart:end:contentsEnd:forRange:'>
<arg index='0' name='startPtr' type64='^Q' type='^I' declared_type='NSUInteger*'/>
<arg index='1' name='parEndPtr' type64='^Q' type='^I' declared_type='NSUInteger*'/>
<arg index='2' name='contentsEndPtr' type64='^Q' type='^I' declared_type='NSUInteger*'/>
<arg index='3' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='hasPrefix:'>
<arg index='0' name='aString' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasSuffix:'>
<arg index='0' name='aString' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hash'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithBytes:length:encoding:'>
<arg const='true' index='0' name='bytes' type='^v' declared_type='void*'/>
<arg index='1' name='len' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='encoding' type64='Q' type='I' declared_type='NSStringEncoding'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithBytesNoCopy:length:encoding:freeWhenDone:'>
<arg index='0' name='bytes' type='^v' declared_type='void*'/>
<arg index='1' name='len' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='encoding' type64='Q' type='I' declared_type='NSStringEncoding'/>
<arg index='3' name='freeBuffer' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCString:'>
<arg const='true' index='0' name='bytes' type='*' declared_type='char*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCString:encoding:'>
<arg const='true' index='0' name='nullTerminatedCString' type='*' declared_type='char*'/>
<arg index='1' name='encoding' type64='Q' type='I' declared_type='NSStringEncoding'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCString:length:'>
<arg const='true' index='0' name='bytes' type='*' declared_type='char*'/>
<arg index='1' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCStringNoCopy:length:freeWhenDone:'>
<arg index='0' name='bytes' type='*' declared_type='char*'/>
<arg index='1' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='freeBuffer' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCharacters:length:'>
<arg const='true' index='0' name='characters' type='^S' declared_type='unichar*'/>
<arg index='1' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCharactersNoCopy:length:freeWhenDone:'>
<arg index='0' name='characters' type='^S' declared_type='unichar*'/>
<arg index='1' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='freeBuffer' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfFile:encoding:error:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='enc' type64='Q' type='I' declared_type='NSStringEncoding'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfFile:usedEncoding:error:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='enc' type64='^Q' type='^I' declared_type='NSStringEncoding*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:encoding:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='enc' type64='Q' type='I' declared_type='NSStringEncoding'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:usedEncoding:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='enc' type64='^Q' type='^I' declared_type='NSStringEncoding*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:encoding:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<arg index='1' name='encoding' type64='Q' type='I' declared_type='NSStringEncoding'/>
<retval type='@' declared_type='id'/>
</method>
<method variadic='true' selector='initWithFormat:'>
<arg index='0' name='format' printf_format='true' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFormat:arguments:'>
<arg index='0' name='format' printf_format='true' type='@' declared_type='NSString*'/>
<arg index='1' name='argList' declared_type64='__va_list_tag*' type64='^{__va_list_tag=II^v^v}' type='*' declared_type='va_list'/>
<retval type='@' declared_type='id'/>
</method>
<method variadic='true' selector='initWithFormat:locale:'>
<arg index='0' name='format' printf_format='true' type='@' declared_type='NSString*'/>
<arg index='1' name='locale' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFormat:locale:arguments:'>
<arg index='0' name='format' printf_format='true' type='@' declared_type='NSString*'/>
<arg index='1' name='locale' type='@' declared_type='id'/>
<arg index='2' name='argList' declared_type64='__va_list_tag*' type64='^{__va_list_tag=II^v^v}' type='*' declared_type='va_list'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:'>
<arg index='0' name='aString' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUTF8String:'>
<arg const='true' index='0' name='nullTerminatedCString' type='*' declared_type='char*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intValue'>
<retval type='i' declared_type='int'/>
</method>
<method selector='integerValue'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='isAbsolutePath'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualToString:'>
<arg index='0' name='aString' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lastPathComponent'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='length'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='lengthOfBytesUsingEncoding:'>
<arg index='0' name='enc' type64='Q' type='I' declared_type='NSStringEncoding'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='lineRangeForRange:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='linguisticTagsInRange:scheme:options:orthography:tokenRanges:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='tagScheme' type='@' declared_type='NSString*'/>
<arg index='2' name='opts' type64='Q' type='I' declared_type='NSLinguisticTaggerOptions'/>
<arg index='3' name='orthography' type='@' declared_type='NSOrthography*'/>
<arg index='4' name='tokenRanges' type='^@' declared_type='NSArray**'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='localizedCaseInsensitiveCompare:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='localizedCompare:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</method>
<method class_method='true' selector='localizedNameOfStringEncoding:'>
<arg index='0' name='encoding' type64='Q' type='I' declared_type='NSStringEncoding'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='localizedStandardCompare:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</method>
<method class_method='true' variadic='true' selector='localizedStringWithFormat:'>
<arg index='0' name='format' printf_format='true' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='longLongValue'>
<retval type='q' declared_type='long long'/>
</method>
<method selector='lossyCString'>
<retval const='true' type='*' declared_type='char*'/>
</method>
<method selector='lowercaseString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='lowercaseStringWithLocale:'>
<arg index='0' name='locale' type='@' declared_type='NSLocale*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='maximumLengthOfBytesUsingEncoding:'>
<arg index='0' name='enc' type64='Q' type='I' declared_type='NSStringEncoding'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='paragraphRangeForRange:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='pathComponents'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='pathExtension'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='pathWithComponents:'>
<arg index='0' name='components' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='precomposedStringWithCanonicalMapping'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='precomposedStringWithCompatibilityMapping'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='propertyList'>
<retval type='@' declared_type='id'/>
</method>
<method selector='propertyListFromStringsFileFormat'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='rangeOfCharacterFromSet:'>
<arg index='0' name='aSet' type='@' declared_type='NSCharacterSet*'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeOfCharacterFromSet:options:'>
<arg index='0' name='aSet' type='@' declared_type='NSCharacterSet*'/>
<arg index='1' name='mask' type64='Q' type='I' declared_type='NSStringCompareOptions'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeOfCharacterFromSet:options:range:'>
<arg index='0' name='aSet' type='@' declared_type='NSCharacterSet*'/>
<arg index='1' name='mask' type64='Q' type='I' declared_type='NSStringCompareOptions'/>
<arg index='2' name='searchRange' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeOfComposedCharacterSequenceAtIndex:'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeOfComposedCharacterSequencesForRange:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeOfString:'>
<arg index='0' name='aString' type='@' declared_type='NSString*'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeOfString:options:'>
<arg index='0' name='aString' type='@' declared_type='NSString*'/>
<arg index='1' name='mask' type64='Q' type='I' declared_type='NSStringCompareOptions'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeOfString:options:range:'>
<arg index='0' name='aString' type='@' declared_type='NSString*'/>
<arg index='1' name='mask' type64='Q' type='I' declared_type='NSStringCompareOptions'/>
<arg index='2' name='searchRange' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeOfString:options:range:locale:'>
<arg index='0' name='aString' type='@' declared_type='NSString*'/>
<arg index='1' name='mask' type64='Q' type='I' declared_type='NSStringCompareOptions'/>
<arg index='2' name='searchRange' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='3' name='locale' type='@' declared_type='NSLocale*'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='smallestEncoding'>
<retval type64='Q' type='I' declared_type='NSStringEncoding'/>
</method>
<method class_method='true' selector='string'>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringByAbbreviatingWithTildeInPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByAddingPercentEscapesUsingEncoding:'>
<arg index='0' name='enc' type64='Q' type='I' declared_type='NSStringEncoding'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method variadic='true' selector='stringByAppendingFormat:'>
<arg index='0' name='format' printf_format='true' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByAppendingPathComponent:'>
<arg index='0' name='str' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByAppendingPathExtension:'>
<arg index='0' name='str' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByAppendingString:'>
<arg index='0' name='aString' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByDeletingLastPathComponent'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByDeletingPathExtension'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByExpandingTildeInPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByFoldingWithOptions:locale:'>
<arg index='0' name='options' type64='Q' type='I' declared_type='NSStringCompareOptions'/>
<arg index='1' name='locale' type='@' declared_type='NSLocale*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByPaddingToLength:withString:startingAtIndex:'>
<arg index='0' name='newLength' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='padString' type='@' declared_type='NSString*'/>
<arg index='2' name='padIndex' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByReplacingCharactersInRange:withString:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='replacement' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByReplacingOccurrencesOfString:withString:'>
<arg index='0' name='target' type='@' declared_type='NSString*'/>
<arg index='1' name='replacement' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByReplacingOccurrencesOfString:withString:options:range:'>
<arg index='0' name='target' type='@' declared_type='NSString*'/>
<arg index='1' name='replacement' type='@' declared_type='NSString*'/>
<arg index='2' name='options' type64='Q' type='I' declared_type='NSStringCompareOptions'/>
<arg index='3' name='searchRange' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByReplacingPercentEscapesUsingEncoding:'>
<arg index='0' name='enc' type64='Q' type='I' declared_type='NSStringEncoding'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByResolvingSymlinksInPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByStandardizingPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringByTrimmingCharactersInSet:'>
<arg index='0' name='set' type='@' declared_type='NSCharacterSet*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='stringWithCString:'>
<arg const='true' index='0' name='bytes' type='*' declared_type='char*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithCString:encoding:'>
<arg const='true' index='0' name='cString' type='*' declared_type='char*'/>
<arg index='1' name='enc' type64='Q' type='I' declared_type='NSStringEncoding'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithCString:length:'>
<arg const='true' index='0' name='bytes' type='*' declared_type='char*'/>
<arg index='1' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithCharacters:length:'>
<arg const='true' index='0' name='characters' type='^S' declared_type='unichar*'/>
<arg index='1' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithContentsOfFile:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithContentsOfFile:encoding:error:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='enc' type64='Q' type='I' declared_type='NSStringEncoding'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithContentsOfFile:usedEncoding:error:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='enc' type64='^Q' type='^I' declared_type='NSStringEncoding*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithContentsOfURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithContentsOfURL:encoding:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='enc' type64='Q' type='I' declared_type='NSStringEncoding'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithContentsOfURL:usedEncoding:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='enc' type64='^Q' type='^I' declared_type='NSStringEncoding*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' variadic='true' selector='stringWithFormat:'>
<arg index='0' name='format' printf_format='true' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='stringWithUTF8String:'>
<arg const='true' index='0' name='nullTerminatedCString' type='*' declared_type='char*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='stringsByAppendingPaths:'>
<arg index='0' name='paths' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='substringFromIndex:'>
<arg index='0' name='from' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='substringToIndex:'>
<arg index='0' name='to' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='substringWithRange:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='uppercaseString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='uppercaseStringWithLocale:'>
<arg index='0' name='locale' type='@' declared_type='NSLocale*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='writeToFile:atomically:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='useAuxiliaryFile' type='B' declared_type='BOOL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToFile:atomically:encoding:error:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='useAuxiliaryFile' type='B' declared_type='BOOL'/>
<arg index='2' name='enc' type64='Q' type='I' declared_type='NSStringEncoding'/>
<arg index='3' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:atomically:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='atomically' type='B' declared_type='BOOL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:atomically:encoding:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='useAuxiliaryFile' type='B' declared_type='BOOL'/>
<arg index='2' name='enc' type64='Q' type='I' declared_type='NSStringEncoding'/>
<arg index='3' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSTask'>
<method selector='arguments'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='currentDirectoryPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='environment'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='interrupt'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isRunning'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='launch'>
<retval type='v' declared_type='void'/>
</method>
<method selector='launchPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='launchedTaskWithLaunchPath:arguments:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='arguments' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSTask*'/>
</method>
<method selector='processIdentifier'>
<retval type='i' declared_type='int'/>
</method>
<method selector='resume'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setArguments:'>
<arg index='0' name='arguments' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCurrentDirectoryPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnvironment:'>
<arg index='0' name='dict' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLaunchPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandardError:'>
<arg index='0' name='error' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandardInput:'>
<arg index='0' name='input' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandardOutput:'>
<arg index='0' name='output' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTerminationHandler:'>
<arg function_pointer='true' index='0' name='terminationHandler' type='@?' declared_type='void (^)(NSTask *)'>
<arg type='@' declared_type='NSTask*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='standardError'>
<retval type='@' declared_type='id'/>
</method>
<method selector='standardInput'>
<retval type='@' declared_type='id'/>
</method>
<method selector='standardOutput'>
<retval type='@' declared_type='id'/>
</method>
<method selector='suspend'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='terminate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='terminationHandler'>
<retval function_pointer='true' type='@?' declared_type='void (^)(NSTask *)'>
<arg type='@' declared_type='NSTask*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='terminationReason'>
<retval type64='q' type='i' declared_type='NSTaskTerminationReason'/>
</method>
<method selector='terminationStatus'>
<retval type='i' declared_type='int'/>
</method>
<method selector='waitUntilExit'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSTextCheckingResult'>
<method selector='URL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method class_method='true' selector='addressCheckingResultWithRange:components:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='components' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='addressComponents'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='components'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method class_method='true' selector='correctionCheckingResultWithRange:replacementString:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='replacementString' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method class_method='true' selector='dashCheckingResultWithRange:replacementString:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='replacementString' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='date'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method class_method='true' selector='dateCheckingResultWithRange:date:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='date' type='@' declared_type='NSDate*'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method class_method='true' selector='dateCheckingResultWithRange:date:timeZone:duration:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='date' type='@' declared_type='NSDate*'/>
<arg index='2' name='timeZone' type='@' declared_type='NSTimeZone*'/>
<arg index='3' name='duration' type='d' declared_type='NSTimeInterval'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='duration'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method class_method='true' selector='grammarCheckingResultWithRange:details:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='details' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='grammarDetails'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='linkCheckingResultWithRange:URL:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='numberOfRanges'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='orthography'>
<retval type='@' declared_type='NSOrthography*'/>
</method>
<method class_method='true' selector='orthographyCheckingResultWithRange:orthography:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='orthography' type='@' declared_type='NSOrthography*'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='phoneNumber'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='phoneNumberCheckingResultWithRange:phoneNumber:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='phoneNumber' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method class_method='true' selector='quoteCheckingResultWithRange:replacementString:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='replacementString' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='range'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeAtIndex:'>
<arg index='0' name='idx' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='regularExpression'>
<retval type='@' declared_type='NSRegularExpression*'/>
</method>
<method class_method='true' selector='regularExpressionCheckingResultWithRanges:count:regularExpression:'>
<arg index='0' name='ranges' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer'/>
<arg index='1' name='count' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='regularExpression' type='@' declared_type='NSRegularExpression*'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method class_method='true' selector='replacementCheckingResultWithRange:replacementString:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='replacementString' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='replacementString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='resultByAdjustingRangesWithOffset:'>
<arg index='0' name='offset' type64='q' type='i' declared_type='NSInteger'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='resultType'>
<retval type='Q' declared_type='NSTextCheckingType'/>
</method>
<method class_method='true' selector='spellCheckingResultWithRange:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
<method selector='timeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method class_method='true' selector='transitInformationCheckingResultWithRange:components:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='1' name='components' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='NSTextCheckingResult*'/>
</method>
</class>
<class name='NSThread'>
<method class_method='true' selector='callStackReturnAddresses'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='callStackSymbols'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='cancel'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='currentThread'>
<retval type='@' declared_type='NSThread*'/>
</method>
<method class_method='true' selector='detachNewThreadSelector:toTarget:withObject:'>
<arg index='0' name='selector' type=':' declared_type='SEL'/>
<arg index='1' name='target' type='@' declared_type='id'/>
<arg index='2' name='argument' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='exit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTarget:selector:object:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<arg index='1' name='selector' type=':' declared_type='SEL'/>
<arg index='2' name='argument' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isCancelled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isExecuting'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFinished'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='isMainThread'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMainThread'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='isMultiThreaded'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='main'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='mainThread'>
<retval type='@' declared_type='NSThread*'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setName:'>
<arg index='0' name='n' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStackSize:'>
<arg index='0' name='s' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setThreadPriority:'>
<arg index='0' name='p' type='d' declared_type='double'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setThreadPriority:'>
<arg index='0' name='p' type='d' declared_type='double'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sleepForTimeInterval:'>
<arg index='0' name='ti' type='d' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sleepUntilDate:'>
<arg index='0' name='date' type='@' declared_type='NSDate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stackSize'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='start'>
<retval type='v' declared_type='void'/>
</method>
<method selector='threadDictionary'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method class_method='true' selector='threadPriority'>
<retval type='d' declared_type='double'/>
</method>
<method selector='threadPriority'>
<retval type='d' declared_type='double'/>
</method>
</class>
<class name='NSTimeZone'>
<method selector='abbreviation'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='abbreviationDictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='abbreviationForDate:'>
<arg index='0' name='aDate' type='@' declared_type='NSDate*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='data'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='daylightSavingTimeOffset'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='daylightSavingTimeOffsetForDate:'>
<arg index='0' name='aDate' type='@' declared_type='NSDate*'/>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method class_method='true' selector='defaultTimeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithName:'>
<arg index='0' name='tzName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithName:data:'>
<arg index='0' name='tzName' type='@' declared_type='NSString*'/>
<arg index='1' name='aData' type='@' declared_type='NSData*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isDaylightSavingTime'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isDaylightSavingTimeForDate:'>
<arg index='0' name='aDate' type='@' declared_type='NSDate*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualToTimeZone:'>
<arg index='0' name='aTimeZone' type='@' declared_type='NSTimeZone*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='knownTimeZoneNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='localTimeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method selector='localizedName:locale:'>
<arg index='0' name='style' type64='q' type='i' declared_type='NSTimeZoneNameStyle'/>
<arg index='1' name='locale' type='@' declared_type='NSLocale*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='nextDaylightSavingTimeTransition'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='nextDaylightSavingTimeTransitionAfterDate:'>
<arg index='0' name='aDate' type='@' declared_type='NSDate*'/>
<retval type='@' declared_type='NSDate*'/>
</method>
<method class_method='true' selector='resetSystemTimeZone'>
<retval type='v' declared_type='void'/>
</method>
<method selector='secondsFromGMT'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='secondsFromGMTForDate:'>
<arg index='0' name='aDate' type='@' declared_type='NSDate*'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method class_method='true' selector='setAbbreviationDictionary:'>
<arg index='0' name='dict' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setDefaultTimeZone:'>
<arg index='0' name='aTimeZone' type='@' declared_type='NSTimeZone*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='systemTimeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method class_method='true' selector='timeZoneDataVersion'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='timeZoneForSecondsFromGMT:'>
<arg index='0' name='seconds' type64='q' type='i' declared_type='NSInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='timeZoneWithAbbreviation:'>
<arg index='0' name='abbreviation' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='timeZoneWithName:'>
<arg index='0' name='tzName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='timeZoneWithName:data:'>
<arg index='0' name='tzName' type='@' declared_type='NSString*'/>
<arg index='1' name='aData' type='@' declared_type='NSData*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSTimer'>
<method selector='fire'>
<retval type='v' declared_type='void'/>
</method>
<method selector='fireDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='initWithFireDate:interval:target:selector:userInfo:repeats:'>
<arg index='0' name='date' type='@' declared_type='NSDate*'/>
<arg index='1' name='ti' type='d' declared_type='NSTimeInterval'/>
<arg index='2' name='t' type='@' declared_type='id'/>
<arg index='3' name='s' type=':' declared_type='SEL'/>
<arg index='4' name='ui' type='@' declared_type='id'/>
<arg index='5' name='rep' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='invalidate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isValid'>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='scheduledTimerWithTimeInterval:invocation:repeats:'>
<arg index='0' name='ti' type='d' declared_type='NSTimeInterval'/>
<arg index='1' name='invocation' type='@' declared_type='NSInvocation*'/>
<arg index='2' name='yesOrNo' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='NSTimer*'/>
</method>
<method class_method='true' selector='scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:'>
<arg index='0' name='ti' type='d' declared_type='NSTimeInterval'/>
<arg index='1' name='aTarget' type='@' declared_type='id'/>
<arg index='2' name='aSelector' type=':' declared_type='SEL'/>
<arg index='3' name='userInfo' type='@' declared_type='id'/>
<arg index='4' name='yesOrNo' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='NSTimer*'/>
</method>
<method selector='setFireDate:'>
<arg index='0' name='date' type='@' declared_type='NSDate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='timeInterval'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method class_method='true' selector='timerWithTimeInterval:invocation:repeats:'>
<arg index='0' name='ti' type='d' declared_type='NSTimeInterval'/>
<arg index='1' name='invocation' type='@' declared_type='NSInvocation*'/>
<arg index='2' name='yesOrNo' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='NSTimer*'/>
</method>
<method class_method='true' selector='timerWithTimeInterval:target:selector:userInfo:repeats:'>
<arg index='0' name='ti' type='d' declared_type='NSTimeInterval'/>
<arg index='1' name='aTarget' type='@' declared_type='id'/>
<arg index='2' name='aSelector' type=':' declared_type='SEL'/>
<arg index='3' name='userInfo' type='@' declared_type='id'/>
<arg index='4' name='yesOrNo' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='NSTimer*'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSURL'>
<method selector='URLByAppendingPathComponent:'>
<arg index='0' name='pathComponent' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLByAppendingPathComponent:isDirectory:'>
<arg index='0' name='pathComponent' type='@' declared_type='NSString*'/>
<arg index='1' name='isDirectory' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLByAppendingPathExtension:'>
<arg index='0' name='pathExtension' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLByDeletingLastPathComponent'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLByDeletingPathExtension'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method class_method='true' selector='URLByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:'>
<arg index='0' name='bookmarkData' type='@' declared_type='NSData*'/>
<arg index='1' name='options' type64='Q' type='I' declared_type='NSURLBookmarkResolutionOptions'/>
<arg index='2' name='relativeURL' type='@' declared_type='NSURL*'/>
<arg index='3' name='isStale' type='^B' declared_type='BOOL*'/>
<arg index='4' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='URLByResolvingSymlinksInPath'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLByStandardizingPath'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLHandleUsingCache:'>
<arg index='0' name='shouldUseCache' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='NSURLHandle*'/>
</method>
<method class_method='true' selector='URLWithString:'>
<arg index='0' name='URLString' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='URLWithString:relativeToURL:'>
<arg index='0' name='URLString' type='@' declared_type='NSString*'/>
<arg index='1' name='baseURL' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='absoluteString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='absoluteURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='baseURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method class_method='true' selector='bookmarkDataWithContentsOfURL:error:'>
<arg index='0' name='bookmarkFileURL' type='@' declared_type='NSURL*'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:'>
<arg index='0' name='options' type64='Q' type='I' declared_type='NSURLBookmarkCreationOptions'/>
<arg index='1' name='keys' type='@' declared_type='NSArray*'/>
<arg index='2' name='relativeURL' type='@' declared_type='NSURL*'/>
<arg index='3' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='checkResourceIsReachableAndReturnError:'>
<arg index='0' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='filePathURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='fileReferenceURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method class_method='true' selector='fileURLWithPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fileURLWithPath:isDirectory:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='isDir' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fileURLWithPathComponents:'>
<arg index='0' name='components' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='fragment'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='getResourceValue:forKey:error:'>
<arg index='0' name='value' type_modifier='o' type='^@' declared_type='id*'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<arg index='2' name='error' type_modifier='o' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='host'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:'>
<arg index='0' name='bookmarkData' type='@' declared_type='NSData*'/>
<arg index='1' name='options' type64='Q' type='I' declared_type='NSURLBookmarkResolutionOptions'/>
<arg index='2' name='relativeURL' type='@' declared_type='NSURL*'/>
<arg index='3' name='isStale' type='^B' declared_type='BOOL*'/>
<arg index='4' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initFileURLWithPath:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initFileURLWithPath:isDirectory:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='isDir' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithScheme:host:path:'>
<arg index='0' name='scheme' type='@' declared_type='NSString*'/>
<arg index='1' name='host' type='@' declared_type='NSString*'/>
<arg index='2' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:'>
<arg index='0' name='URLString' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithString:relativeToURL:'>
<arg index='0' name='URLString' type='@' declared_type='NSString*'/>
<arg index='1' name='baseURL' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isFileReferenceURL'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFileURL'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lastPathComponent'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='loadResourceDataNotifyingClient:usingCache:'>
<arg index='0' name='client' type='@' declared_type='id'/>
<arg index='1' name='shouldUseCache' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parameterString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='password'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='path'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pathComponents'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='pathExtension'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='port'>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='propertyForKey:'>
<arg index='0' name='propertyKey' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='query'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='relativePath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='relativeString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='resourceDataUsingCache:'>
<arg index='0' name='shouldUseCache' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='resourceSpecifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='resourceValuesForKeys:error:'>
<arg index='0' name='keys' type='@' declared_type='NSArray*'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method class_method='true' selector='resourceValuesForKeys:fromBookmarkData:'>
<arg index='0' name='keys' type='@' declared_type='NSArray*'/>
<arg index='1' name='bookmarkData' type='@' declared_type='NSData*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='scheme'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setProperty:forKey:'>
<arg index='0' name='property' type='@' declared_type='id'/>
<arg index='1' name='propertyKey' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setResourceData:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setResourceValue:forKey:error:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setResourceValues:error:'>
<arg index='0' name='keyedValues' type='@' declared_type='NSDictionary*'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='standardizedURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='startAccessingSecurityScopedResource'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='stopAccessingSecurityScopedResource'>
<retval type='v' declared_type='void'/>
</method>
<method selector='user'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='writeBookmarkData:toURL:options:error:'>
<arg index='0' name='bookmarkData' type='@' declared_type='NSData*'/>
<arg index='1' name='bookmarkFileURL' type='@' declared_type='NSURL*'/>
<arg index='2' name='options' type64='Q' type='I' declared_type='NSURLBookmarkFileCreationOptions'/>
<arg index='3' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSURLAuthenticationChallenge'>
<method selector='error'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='failureResponse'>
<retval type='@' declared_type='NSURLResponse*'/>
</method>
<method selector='initWithAuthenticationChallenge:sender:'>
<arg index='0' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<arg index='1' name='sender' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:'>
<arg index='0' name='space' type='@' declared_type='NSURLProtectionSpace*'/>
<arg index='1' name='credential' type='@' declared_type='NSURLCredential*'/>
<arg index='2' name='previousFailureCount' type64='q' type='i' declared_type='NSInteger'/>
<arg index='3' name='response' type='@' declared_type='NSURLResponse*'/>
<arg index='4' name='error' type='@' declared_type='NSError*'/>
<arg index='5' name='sender' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='previousFailureCount'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='proposedCredential'>
<retval type='@' declared_type='NSURLCredential*'/>
</method>
<method selector='protectionSpace'>
<retval type='@' declared_type='NSURLProtectionSpace*'/>
</method>
<method selector='sender'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSURLCache'>
<method selector='cachedResponseForRequest:'>
<arg index='0' name='request' type='@' declared_type='NSURLRequest*'/>
<retval type='@' declared_type='NSCachedURLResponse*'/>
</method>
<method selector='currentDiskUsage'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='currentMemoryUsage'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='diskCapacity'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='initWithMemoryCapacity:diskCapacity:diskPath:'>
<arg index='0' name='memoryCapacity' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='diskCapacity' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='memoryCapacity'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='removeAllCachedResponses'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeCachedResponseForRequest:'>
<arg index='0' name='request' type='@' declared_type='NSURLRequest*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDiskCapacity:'>
<arg index='0' name='diskCapacity' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMemoryCapacity:'>
<arg index='0' name='memoryCapacity' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setSharedURLCache:'>
<arg index='0' name='cache' type='@' declared_type='NSURLCache*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedURLCache'>
<retval type='@' declared_type='NSURLCache*'/>
</method>
<method selector='storeCachedResponse:forRequest:'>
<arg index='0' name='cachedResponse' type='@' declared_type='NSCachedURLResponse*'/>
<arg index='1' name='request' type='@' declared_type='NSURLRequest*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSURLConnection'>
<method class_method='true' selector='canHandleRequest:'>
<arg index='0' name='request' type='@' declared_type='NSURLRequest*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cancel'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='connectionWithRequest:delegate:'>
<arg index='0' name='request' type='@' declared_type='NSURLRequest*'/>
<arg index='1' name='delegate' type='@' declared_type='id'/>
<retval type='@' declared_type='NSURLConnection*'/>
</method>
<method selector='initWithRequest:delegate:'>
<arg index='0' name='request' type='@' declared_type='NSURLRequest*'/>
<arg index='1' name='delegate' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRequest:delegate:startImmediately:'>
<arg index='0' name='request' type='@' declared_type='NSURLRequest*'/>
<arg index='1' name='delegate' type='@' declared_type='id'/>
<arg index='2' name='startImmediately' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='scheduleInRunLoop:forMode:'>
<arg index='0' name='aRunLoop' type='@' declared_type='NSRunLoop*'/>
<arg index='1' name='mode' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sendAsynchronousRequest:queue:completionHandler:'>
<arg index='0' name='request' type='@' declared_type='NSURLRequest*'/>
<arg index='1' name='queue' type='@' declared_type='NSOperationQueue*'/>
<arg function_pointer='true' index='2' name='handler' type='@?' declared_type='void (^)(NSURLResponse *, NSData *, NSError *)'>
<arg type='@' declared_type='NSURLResponse*'/>
<arg type='@' declared_type='NSData*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sendSynchronousRequest:returningResponse:error:'>
<arg index='0' name='request' type='@' declared_type='NSURLRequest*'/>
<arg index='1' name='response' type='^@' declared_type='NSURLResponse**'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='setDelegateQueue:'>
<arg index='0' name='queue' type='@' declared_type='NSOperationQueue*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='start'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscheduleFromRunLoop:forMode:'>
<arg index='0' name='aRunLoop' type='@' declared_type='NSRunLoop*'/>
<arg index='1' name='mode' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSURLCredential'>
<method selector='certificates'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='credentialForTrust:'>
<arg index='0' name='trust' type='^{OpaqueSecTrustRef=}' declared_type='SecTrustRef'/>
<retval type='@' declared_type='NSURLCredential*'/>
</method>
<method class_method='true' selector='credentialWithIdentity:certificates:persistence:'>
<arg index='0' name='identity' type='^{OpaqueSecIdentityRef=}' declared_type='SecIdentityRef'/>
<arg index='1' name='certArray' type='@' declared_type='NSArray*'/>
<arg index='2' name='persistence' type64='Q' type='I' declared_type='NSURLCredentialPersistence'/>
<retval type='@' declared_type='NSURLCredential*'/>
</method>
<method class_method='true' selector='credentialWithUser:password:persistence:'>
<arg index='0' name='user' type='@' declared_type='NSString*'/>
<arg index='1' name='password' type='@' declared_type='NSString*'/>
<arg index='2' name='persistence' type64='Q' type='I' declared_type='NSURLCredentialPersistence'/>
<retval type='@' declared_type='NSURLCredential*'/>
</method>
<method selector='hasPassword'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='identity'>
<retval type='^{OpaqueSecIdentityRef=}' declared_type='SecIdentityRef'/>
</method>
<method selector='initWithIdentity:certificates:persistence:'>
<arg index='0' name='identity' type='^{OpaqueSecIdentityRef=}' declared_type='SecIdentityRef'/>
<arg index='1' name='certArray' type='@' declared_type='NSArray*'/>
<arg index='2' name='persistence' type64='Q' type='I' declared_type='NSURLCredentialPersistence'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTrust:'>
<arg index='0' name='trust' type='^{OpaqueSecTrustRef=}' declared_type='SecTrustRef'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUser:password:persistence:'>
<arg index='0' name='user' type='@' declared_type='NSString*'/>
<arg index='1' name='password' type='@' declared_type='NSString*'/>
<arg index='2' name='persistence' type64='Q' type='I' declared_type='NSURLCredentialPersistence'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='password'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='persistence'>
<retval type64='Q' type='I' declared_type='NSURLCredentialPersistence'/>
</method>
<method selector='user'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSURLCredentialStorage'>
<method selector='allCredentials'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='credentialsForProtectionSpace:'>
<arg index='0' name='space' type='@' declared_type='NSURLProtectionSpace*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='defaultCredentialForProtectionSpace:'>
<arg index='0' name='space' type='@' declared_type='NSURLProtectionSpace*'/>
<retval type='@' declared_type='NSURLCredential*'/>
</method>
<method selector='removeCredential:forProtectionSpace:'>
<arg index='0' name='credential' type='@' declared_type='NSURLCredential*'/>
<arg index='1' name='space' type='@' declared_type='NSURLProtectionSpace*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCredential:forProtectionSpace:'>
<arg index='0' name='credential' type='@' declared_type='NSURLCredential*'/>
<arg index='1' name='space' type='@' declared_type='NSURLProtectionSpace*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultCredential:forProtectionSpace:'>
<arg index='0' name='credential' type='@' declared_type='NSURLCredential*'/>
<arg index='1' name='space' type='@' declared_type='NSURLProtectionSpace*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedCredentialStorage'>
<retval type='@' declared_type='NSURLCredentialStorage*'/>
</method>
</class>
<class name='NSURLDownload'>
<method class_method='true' selector='canResumeDownloadDecodedWithEncodingMIMEType:'>
<arg index='0' name='MIMEType' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cancel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='deletesFileUponFailure'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithRequest:delegate:'>
<arg index='0' name='request' type='@' declared_type='NSURLRequest*'/>
<arg index='1' name='delegate' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithResumeData:delegate:path:'>
<arg index='0' name='resumeData' type='@' declared_type='NSData*'/>
<arg index='1' name='delegate' type='@' declared_type='id'/>
<arg index='2' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='request'>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method selector='resumeData'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='setDeletesFileUponFailure:'>
<arg index='0' name='deletesFileUponFailure' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDestination:allowOverwrite:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<arg index='1' name='allowOverwrite' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSURLHandle'>
<method class_method='true' selector='URLHandleClassForURL:'>
<arg index='0' name='anURL' type='@' declared_type='NSURL*'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='addClient:'>
<arg index='0' name='client' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='availableResourceData'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='backgroundLoadDidFailWithReason:'>
<arg index='0' name='reason' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginLoadInBackground'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='cachedHandleForURL:'>
<arg index='0' name='anURL' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='NSURLHandle*'/>
</method>
<method class_method='true' selector='canInitWithURL:'>
<arg index='0' name='anURL' type='@' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cancelLoadInBackground'>
<retval type='v' declared_type='void'/>
</method>
<method selector='didLoadBytes:loadComplete:'>
<arg index='0' name='newBytes' type='@' declared_type='NSData*'/>
<arg index='1' name='yorn' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='endLoadInBackground'>
<retval type='v' declared_type='void'/>
</method>
<method selector='expectedResourceDataSize'>
<retval type='q' declared_type='long long'/>
</method>
<method selector='failureReason'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='flushCachedData'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithURL:cached:'>
<arg index='0' name='anURL' type='@' declared_type='NSURL*'/>
<arg index='1' name='willCache' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='loadInBackground'>
<retval type='v' declared_type='void'/>
</method>
<method selector='loadInForeground'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='propertyForKey:'>
<arg index='0' name='propertyKey' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='propertyForKeyIfAvailable:'>
<arg index='0' name='propertyKey' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='registerURLHandleClass:'>
<arg index='0' name='anURLHandleSubclass' type='#' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeClient:'>
<arg index='0' name='client' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resourceData'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='status'>
<retval type64='Q' type='I' declared_type='NSURLHandleStatus'/>
</method>
<method selector='writeData:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeProperty:forKey:'>
<arg index='0' name='propertyValue' type='@' declared_type='id'/>
<arg index='1' name='propertyKey' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSURLProtectionSpace'>
<method selector='authenticationMethod'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='distinguishedNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='host'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithHost:port:protocol:realm:authenticationMethod:'>
<arg index='0' name='host' type='@' declared_type='NSString*'/>
<arg index='1' name='port' type64='q' type='i' declared_type='NSInteger'/>
<arg index='2' name='protocol' type='@' declared_type='NSString*'/>
<arg index='3' name='realm' type='@' declared_type='NSString*'/>
<arg index='4' name='authenticationMethod' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithProxyHost:port:type:realm:authenticationMethod:'>
<arg index='0' name='host' type='@' declared_type='NSString*'/>
<arg index='1' name='port' type64='q' type='i' declared_type='NSInteger'/>
<arg index='2' name='type' type='@' declared_type='NSString*'/>
<arg index='3' name='realm' type='@' declared_type='NSString*'/>
<arg index='4' name='authenticationMethod' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isProxy'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='port'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='protocol'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='proxyType'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='realm'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='receivesCredentialSecurely'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='serverTrust'>
<retval type='^{OpaqueSecTrustRef=}' declared_type='SecTrustRef'/>
</method>
</class>
<class name='NSURLProtocol'>
<method selector='cachedResponse'>
<retval type='@' declared_type='NSCachedURLResponse*'/>
</method>
<method class_method='true' selector='canInitWithRequest:'>
<arg index='0' name='request' type='@' declared_type='NSURLRequest*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='canonicalRequestForRequest:'>
<arg index='0' name='request' type='@' declared_type='NSURLRequest*'/>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method selector='client'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRequest:cachedResponse:client:'>
<arg index='0' name='request' type='@' declared_type='NSURLRequest*'/>
<arg index='1' name='cachedResponse' type='@' declared_type='NSCachedURLResponse*'/>
<arg index='2' name='client' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='propertyForKey:inRequest:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<arg index='1' name='request' type='@' declared_type='NSURLRequest*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='registerClass:'>
<arg index='0' name='protocolClass' type='#' declared_type='Class'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='removePropertyForKey:inRequest:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<arg index='1' name='request' type='@' declared_type='NSMutableURLRequest*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='request'>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method class_method='true' selector='requestIsCacheEquivalent:toRequest:'>
<arg index='0' name='a' type='@' declared_type='NSURLRequest*'/>
<arg index='1' name='b' type='@' declared_type='NSURLRequest*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='setProperty:forKey:inRequest:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<arg index='2' name='request' type='@' declared_type='NSMutableURLRequest*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startLoading'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopLoading'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='unregisterClass:'>
<arg index='0' name='protocolClass' type='#' declared_type='Class'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSURLRequest'>
<method selector='HTTPBody'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='HTTPBodyStream'>
<retval type='@' declared_type='NSInputStream*'/>
</method>
<method selector='HTTPMethod'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='HTTPShouldHandleCookies'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='HTTPShouldUsePipelining'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='URL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='allHTTPHeaderFields'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='allowsCellularAccess'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cachePolicy'>
<retval type64='Q' type='I' declared_type='NSURLRequestCachePolicy'/>
</method>
<method selector='initWithURL:'>
<arg index='0' name='URL' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithURL:cachePolicy:timeoutInterval:'>
<arg index='0' name='URL' type='@' declared_type='NSURL*'/>
<arg index='1' name='cachePolicy' type64='Q' type='I' declared_type='NSURLRequestCachePolicy'/>
<arg index='2' name='timeoutInterval' type='d' declared_type='NSTimeInterval'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mainDocumentURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='networkServiceType'>
<retval type64='Q' type='I' declared_type='NSURLRequestNetworkServiceType'/>
</method>
<method class_method='true' selector='requestWithURL:'>
<arg index='0' name='URL' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='requestWithURL:cachePolicy:timeoutInterval:'>
<arg index='0' name='URL' type='@' declared_type='NSURL*'/>
<arg index='1' name='cachePolicy' type64='Q' type='I' declared_type='NSURLRequestCachePolicy'/>
<arg index='2' name='timeoutInterval' type='d' declared_type='NSTimeInterval'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='timeoutInterval'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='valueForHTTPHeaderField:'>
<arg index='0' name='field' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSURLResponse'>
<method selector='MIMEType'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='URL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='expectedContentLength'>
<retval type='q' declared_type='long long'/>
</method>
<method selector='initWithURL:MIMEType:expectedContentLength:textEncodingName:'>
<arg index='0' name='URL' type='@' declared_type='NSURL*'/>
<arg index='1' name='MIMEType' type='@' declared_type='NSString*'/>
<arg index='2' name='length' type64='q' type='i' declared_type='NSInteger'/>
<arg index='3' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='suggestedFilename'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='textEncodingName'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSUUID'>
<method class_method='true' selector='UUID'>
<retval type='@' declared_type='id'/>
</method>
<method selector='UUIDString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='getUUIDBytes:'>
<arg index='0' name='uuid' type='*' declared_type='unsigned char*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUUIDBytes:'>
<arg const='true' index='0' name='bytes' type='*' declared_type='unsigned char*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUUIDString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSUbiquitousKeyValueStore'>
<method selector='arrayForKey:'>
<arg index='0' name='aKey' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='boolForKey:'>
<arg index='0' name='aKey' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='dataForKey:'>
<arg index='0' name='aKey' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method class_method='true' selector='defaultStore'>
<retval type='@' declared_type='NSUbiquitousKeyValueStore*'/>
</method>
<method selector='dictionaryForKey:'>
<arg index='0' name='aKey' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='dictionaryRepresentation'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='doubleForKey:'>
<arg index='0' name='aKey' type='@' declared_type='NSString*'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='longLongForKey:'>
<arg index='0' name='aKey' type='@' declared_type='NSString*'/>
<retval type='q' declared_type='long long'/>
</method>
<method selector='objectForKey:'>
<arg index='0' name='aKey' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeObjectForKey:'>
<arg index='0' name='aKey' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setArray:forKey:'>
<arg index='0' name='anArray' type='@' declared_type='NSArray*'/>
<arg index='1' name='aKey' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBool:forKey:'>
<arg index='0' name='value' type='B' declared_type='BOOL'/>
<arg index='1' name='aKey' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setData:forKey:'>
<arg index='0' name='aData' type='@' declared_type='NSData*'/>
<arg index='1' name='aKey' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDictionary:forKey:'>
<arg index='0' name='aDictionary' type='@' declared_type='NSDictionary*'/>
<arg index='1' name='aKey' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDouble:forKey:'>
<arg index='0' name='value' type='d' declared_type='double'/>
<arg index='1' name='aKey' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLongLong:forKey:'>
<arg index='0' name='value' type='q' declared_type='long long'/>
<arg index='1' name='aKey' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:forKey:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<arg index='1' name='aKey' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:forKey:'>
<arg index='0' name='aString' type='@' declared_type='NSString*'/>
<arg index='1' name='aKey' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringForKey:'>
<arg index='0' name='aKey' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='synchronize'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSUnarchiver'>
<method class_method='true' selector='classNameDecodedForArchiveClassName:'>
<arg index='0' name='inArchiveName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='classNameDecodedForArchiveClassName:'>
<arg index='0' name='inArchiveName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='decodeClassName:asClassName:'>
<arg index='0' name='inArchiveName' type='@' declared_type='NSString*'/>
<arg index='1' name='trueName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='decodeClassName:asClassName:'>
<arg index='0' name='inArchiveName' type='@' declared_type='NSString*'/>
<arg index='1' name='trueName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initForReadingWithData:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isAtEnd'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='objectZone'>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</method>
<method selector='replaceObject:withObject:'>
<arg index='0' name='object' type='@' declared_type='id'/>
<arg index='1' name='newObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectZone:'>
<arg index='0' name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='systemVersion'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method class_method='true' selector='unarchiveObjectWithData:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='unarchiveObjectWithFile:'>
<arg index='0' name='path' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSUndoManager'>
<method selector='beginUndoGrouping'>
<retval type='v' declared_type='void'/>
</method>
<method selector='canRedo'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canUndo'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='disableUndoRegistration'>
<retval type='v' declared_type='void'/>
</method>
<method selector='enableUndoRegistration'>
<retval type='v' declared_type='void'/>
</method>
<method selector='endUndoGrouping'>
<retval type='v' declared_type='void'/>
</method>
<method selector='groupingLevel'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='groupsByEvent'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRedoing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isUndoRegistrationEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isUndoing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='levelsOfUndo'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='prepareWithInvocationTarget:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='redo'>
<retval type='v' declared_type='void'/>
</method>
<method selector='redoActionIsDiscardable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='redoActionName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='redoMenuItemTitle'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='redoMenuTitleForUndoActionName:'>
<arg index='0' name='actionName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='registerUndoWithTarget:selector:object:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<arg index='1' name='selector' type=':' declared_type='SEL'/>
<arg index='2' name='anObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllActions'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllActionsWithTarget:'>
<arg index='0' name='target' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='runLoopModes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setActionIsDiscardable:'>
<arg index='0' name='discardable' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setActionName:'>
<arg index='0' name='actionName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGroupsByEvent:'>
<arg index='0' name='groupsByEvent' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLevelsOfUndo:'>
<arg index='0' name='levels' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRunLoopModes:'>
<arg index='0' name='runLoopModes' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='undo'>
<retval type='v' declared_type='void'/>
</method>
<method selector='undoActionIsDiscardable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='undoActionName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='undoMenuItemTitle'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='undoMenuTitleForUndoActionName:'>
<arg index='0' name='actionName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='undoNestedGroup'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSUniqueIDSpecifier'>
<method selector='initWithContainerClassDescription:containerSpecifier:key:uniqueID:'>
<arg index='0' name='classDesc' type='@' declared_type='NSScriptClassDescription*'/>
<arg index='1' name='container' type='@' declared_type='NSScriptObjectSpecifier*'/>
<arg index='2' name='property' type='@' declared_type='NSString*'/>
<arg index='3' name='uniqueID' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setUniqueID:'>
<arg index='0' name='uniqueID' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='uniqueID'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSUserAppleScriptTask'>
<method selector='executeWithAppleEvent:completionHandler:'>
<arg index='0' name='event' type='@' declared_type='NSAppleEventDescriptor*'/>
<arg function_pointer='true' index='1' name='handler' type='@?' declared_type='NSUserAppleScriptTaskCompletionHandler'>
<arg type='@' declared_type='NSAppleEventDescriptor*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSUserAutomatorTask'>
<method selector='executeWithInput:completionHandler:'>
<arg index='0' name='input' type='@' declared_type='id'/>
<arg function_pointer='true' index='1' name='handler' type='@?' declared_type='NSUserAutomatorTaskCompletionHandler'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVariables:'>
<arg index='0' name='variables' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='variables'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSUserDefaults'>
<method selector='URLForKey:'>
<arg index='0' name='defaultName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='addSuiteNamed:'>
<arg index='0' name='suiteName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='arrayForKey:'>
<arg index='0' name='defaultName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='boolForKey:'>
<arg index='0' name='defaultName' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='dataForKey:'>
<arg index='0' name='defaultName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='dictionaryForKey:'>
<arg index='0' name='defaultName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='dictionaryRepresentation'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='doubleForKey:'>
<arg index='0' name='defaultName' type='@' declared_type='NSString*'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='floatForKey:'>
<arg index='0' name='defaultName' type='@' declared_type='NSString*'/>
<retval type='f' declared_type='float'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUser:'>
<arg index='0' name='username' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='integerForKey:'>
<arg index='0' name='defaultName' type='@' declared_type='NSString*'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='objectForKey:'>
<arg index='0' name='defaultName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectIsForcedForKey:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='objectIsForcedForKey:inDomain:'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<arg index='1' name='domain' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='persistentDomainForName:'>
<arg index='0' name='domainName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='persistentDomainNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='registerDefaults:'>
<arg index='0' name='registrationDictionary' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectForKey:'>
<arg index='0' name='defaultName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removePersistentDomainForName:'>
<arg index='0' name='domainName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSuiteNamed:'>
<arg index='0' name='suiteName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeVolatileDomainForName:'>
<arg index='0' name='domainName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='resetStandardUserDefaults'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBool:forKey:'>
<arg index='0' name='value' type='B' declared_type='BOOL'/>
<arg index='1' name='defaultName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDouble:forKey:'>
<arg index='0' name='value' type='d' declared_type='double'/>
<arg index='1' name='defaultName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFloat:forKey:'>
<arg index='0' name='value' type='f' declared_type='float'/>
<arg index='1' name='defaultName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInteger:forKey:'>
<arg index='0' name='value' type64='q' type='i' declared_type='NSInteger'/>
<arg index='1' name='defaultName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:forKey:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='defaultName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPersistentDomain:forName:'>
<arg index='0' name='domain' type='@' declared_type='NSDictionary*'/>
<arg index='1' name='domainName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setURL:forKey:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='defaultName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVolatileDomain:forName:'>
<arg index='0' name='domain' type='@' declared_type='NSDictionary*'/>
<arg index='1' name='domainName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='standardUserDefaults'>
<retval type='@' declared_type='NSUserDefaults*'/>
</method>
<method selector='stringArrayForKey:'>
<arg index='0' name='defaultName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='stringForKey:'>
<arg index='0' name='defaultName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='synchronize'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='volatileDomainForName:'>
<arg index='0' name='domainName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='volatileDomainNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSUserNotification'>
<method selector='actionButtonTitle'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='activationType'>
<retval type64='q' type='i' declared_type='NSUserNotificationActivationType'/>
</method>
<method selector='actualDeliveryDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='deliveryDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='deliveryRepeatInterval'>
<retval type='@' declared_type='NSDateComponents*'/>
</method>
<method selector='deliveryTimeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
<method selector='hasActionButton'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='informativeText'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='isPresented'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRemote'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='otherButtonTitle'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setActionButtonTitle:'>
<arg index='0' name='actionButtonTitle' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDeliveryDate:'>
<arg index='0' name='deliveryDate' type='@' declared_type='NSDate*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDeliveryRepeatInterval:'>
<arg index='0' name='deliveryRepeatInterval' type='@' declared_type='NSDateComponents*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDeliveryTimeZone:'>
<arg index='0' name='deliveryTimeZone' type='@' declared_type='NSTimeZone*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHasActionButton:'>
<arg index='0' name='hasActionButton' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInformativeText:'>
<arg index='0' name='informativeText' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOtherButtonTitle:'>
<arg index='0' name='otherButtonTitle' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSoundName:'>
<arg index='0' name='soundName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubtitle:'>
<arg index='0' name='subtitle' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg index='0' name='title' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserInfo:'>
<arg index='0' name='userInfo' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='soundName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='subtitle'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSUserNotificationCenter'>
<method class_method='true' selector='defaultUserNotificationCenter'>
<retval type='@' declared_type='NSUserNotificationCenter*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='deliverNotification:'>
<arg index='0' name='notification' type='@' declared_type='NSUserNotification*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='deliveredNotifications'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removeAllDeliveredNotifications'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeDeliveredNotification:'>
<arg index='0' name='notification' type='@' declared_type='NSUserNotification*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeScheduledNotification:'>
<arg index='0' name='notification' type='@' declared_type='NSUserNotification*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduleNotification:'>
<arg index='0' name='notification' type='@' declared_type='NSUserNotification*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scheduledNotifications'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setDelegate:'>
<arg index='0' name='delegate' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScheduledNotifications:'>
<arg index='0' name='scheduledNotifications' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSUserScriptTask'>
<method selector='executeWithCompletionHandler:'>
<arg function_pointer='true' index='0' name='handler' type='@?' declared_type='NSUserScriptTaskCompletionHandler'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithURL:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='scriptURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
</class>
<class name='NSUserUnixTask'>
<method selector='executeWithArguments:completionHandler:'>
<arg index='0' name='arguments' type='@' declared_type='NSArray*'/>
<arg function_pointer='true' index='1' name='handler' type='@?' declared_type='NSUserUnixTaskCompletionHandler'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandardError:'>
<arg index='0' name='standardError' type='@' declared_type='NSFileHandle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandardInput:'>
<arg index='0' name='standardInput' type='@' declared_type='NSFileHandle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandardOutput:'>
<arg index='0' name='standardOutput' type='@' declared_type='NSFileHandle*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='standardError'>
<retval type='@' declared_type='NSFileHandle*'/>
</method>
<method selector='standardInput'>
<retval type='@' declared_type='NSFileHandle*'/>
</method>
<method selector='standardOutput'>
<retval type='@' declared_type='NSFileHandle*'/>
</method>
</class>
<class name='NSValue'>
<method selector='getValue:'>
<arg index='0' name='value' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBytes:objCType:'>
<arg const='true' index='0' name='value' type='^v' declared_type='void*'/>
<arg const='true' index='1' name='type' type='*' declared_type='char*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToValue:'>
<arg index='0' name='value' type='@' declared_type='NSValue*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='nonretainedObjectValue'>
<retval type='@' declared_type='id'/>
</method>
<method selector='objCType'>
<retval const='true' type='*' declared_type='char*'/>
</method>
<method selector='pointValue'>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='pointerValue'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='rangeValue'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rectValue'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='sizeValue'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method class_method='true' selector='value:withObjCType:'>
<arg const='true' index='0' name='value' type='^v' declared_type='void*'/>
<arg const='true' index='1' name='type' type='*' declared_type='char*'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method class_method='true' selector='valueWithBytes:objCType:'>
<arg const='true' index='0' name='value' type='^v' declared_type='void*'/>
<arg const='true' index='1' name='type' type='*' declared_type='char*'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method class_method='true' selector='valueWithNonretainedObject:'>
<arg index='0' name='anObject' type='@' declared_type='id'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method class_method='true' selector='valueWithPoint:'>
<arg index='0' name='point' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method class_method='true' selector='valueWithPointer:'>
<arg const='true' index='0' name='pointer' type='^v' declared_type='void*'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method class_method='true' selector='valueWithRange:'>
<arg index='0' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method class_method='true' selector='valueWithRect:'>
<arg index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type='@' declared_type='NSValue*'/>
</method>
<method class_method='true' selector='valueWithSize:'>
<arg index='0' name='size' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
<retval type='@' declared_type='NSValue*'/>
</method>
</class>
<class name='NSValueTransformer'>
<method class_method='true' selector='allowsReverseTransformation'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='reverseTransformedValue:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='setValueTransformer:forName:'>
<arg index='0' name='transformer' type='@' declared_type='NSValueTransformer*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='transformedValue:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='transformedValueClass'>
<retval type='#' declared_type='Class'/>
</method>
<method class_method='true' selector='valueTransformerForName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSValueTransformer*'/>
</method>
<method class_method='true' selector='valueTransformerNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSWhoseSpecifier'>
<method selector='endSubelementIdentifier'>
<retval type64='Q' type='I' declared_type='NSWhoseSubelementIdentifier'/>
</method>
<method selector='endSubelementIndex'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='initWithContainerClassDescription:containerSpecifier:key:test:'>
<arg index='0' name='classDesc' type='@' declared_type='NSScriptClassDescription*'/>
<arg index='1' name='container' type='@' declared_type='NSScriptObjectSpecifier*'/>
<arg index='2' name='property' type='@' declared_type='NSString*'/>
<arg index='3' name='test' type='@' declared_type='NSScriptWhoseTest*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setEndSubelementIdentifier:'>
<arg index='0' name='subelement' type64='Q' type='I' declared_type='NSWhoseSubelementIdentifier'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndSubelementIndex:'>
<arg index='0' name='index' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartSubelementIdentifier:'>
<arg index='0' name='subelement' type64='Q' type='I' declared_type='NSWhoseSubelementIdentifier'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartSubelementIndex:'>
<arg index='0' name='index' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTest:'>
<arg index='0' name='test' type='@' declared_type='NSScriptWhoseTest*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startSubelementIdentifier'>
<retval type64='Q' type='I' declared_type='NSWhoseSubelementIdentifier'/>
</method>
<method selector='startSubelementIndex'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='test'>
<retval type='@' declared_type='NSScriptWhoseTest*'/>
</method>
</class>
<class name='NSXMLDTD'>
<method selector='addChild:'>
<arg index='0' name='child' type='@' declared_type='NSXMLNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='attributeDeclarationForName:elementName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='elementName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSXMLDTDNode*'/>
</method>
<method selector='elementDeclarationForName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSXMLDTDNode*'/>
</method>
<method selector='entityDeclarationForName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSXMLDTDNode*'/>
</method>
<method selector='initWithContentsOfURL:options:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='mask' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:options:error:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<arg index='1' name='mask' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertChild:atIndex:'>
<arg index='0' name='child' type='@' declared_type='NSXMLNode*'/>
<arg index='1' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertChildren:atIndex:'>
<arg index='0' name='children' type='@' declared_type='NSArray*'/>
<arg index='1' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='notationDeclarationForName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSXMLDTDNode*'/>
</method>
<method class_method='true' selector='predefinedEntityDeclarationForName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSXMLDTDNode*'/>
</method>
<method selector='publicID'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='removeChildAtIndex:'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceChildAtIndex:withNode:'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='node' type='@' declared_type='NSXMLNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setChildren:'>
<arg index='0' name='children' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPublicID:'>
<arg index='0' name='publicID' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSystemID:'>
<arg index='0' name='systemID' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='systemID'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSXMLDTDNode'>
<method selector='DTDKind'>
<retval type64='Q' type='I' declared_type='NSXMLDTDNodeKind'/>
</method>
<method selector='initWithXMLString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isExternal'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='notationName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='publicID'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setDTDKind:'>
<arg index='0' name='kind' type64='Q' type='I' declared_type='NSXMLDTDNodeKind'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNotationName:'>
<arg index='0' name='notationName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPublicID:'>
<arg index='0' name='publicID' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSystemID:'>
<arg index='0' name='systemID' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='systemID'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSXMLDocument'>
<method selector='DTD'>
<retval type='@' declared_type='NSXMLDTD*'/>
</method>
<method selector='MIMEType'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='XMLData'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='XMLDataWithOptions:'>
<arg index='0' name='options' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='addChild:'>
<arg index='0' name='child' type='@' declared_type='NSXMLNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='characterEncoding'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='documentContentKind'>
<retval type64='Q' type='I' declared_type='NSXMLDocumentContentKind'/>
</method>
<method selector='initWithContentsOfURL:options:error:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='mask' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:options:error:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<arg index='1' name='mask' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRootElement:'>
<arg index='0' name='element' type='@' declared_type='NSXMLElement*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithXMLString:options:error:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='mask' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertChild:atIndex:'>
<arg index='0' name='child' type='@' declared_type='NSXMLNode*'/>
<arg index='1' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertChildren:atIndex:'>
<arg index='0' name='children' type='@' declared_type='NSArray*'/>
<arg index='1' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isStandalone'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='objectByApplyingXSLT:arguments:error:'>
<arg index='0' name='xslt' type='@' declared_type='NSData*'/>
<arg index='1' name='arguments' type='@' declared_type='NSDictionary*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectByApplyingXSLTAtURL:arguments:error:'>
<arg index='0' name='xsltURL' type='@' declared_type='NSURL*'/>
<arg index='1' name='argument' type='@' declared_type='NSDictionary*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectByApplyingXSLTString:arguments:error:'>
<arg index='0' name='xslt' type='@' declared_type='NSString*'/>
<arg index='1' name='arguments' type='@' declared_type='NSDictionary*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='removeChildAtIndex:'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceChildAtIndex:withNode:'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='node' type='@' declared_type='NSXMLNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='replacementClassForClass:'>
<arg index='0' name='cls' type='#' declared_type='Class'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='rootElement'>
<retval type='@' declared_type='NSXMLElement*'/>
</method>
<method selector='setCharacterEncoding:'>
<arg index='0' name='encoding' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setChildren:'>
<arg index='0' name='children' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDTD:'>
<arg index='0' name='documentTypeDeclaration' type='@' declared_type='NSXMLDTD*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDocumentContentKind:'>
<arg index='0' name='kind' type64='Q' type='I' declared_type='NSXMLDocumentContentKind'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMIMEType:'>
<arg index='0' name='MIMEType' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRootElement:'>
<arg index='0' name='root' type='@' declared_type='NSXMLNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStandalone:'>
<arg index='0' name='standalone' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVersion:'>
<arg index='0' name='version' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='validateAndReturnError:'>
<arg index='0' name='error' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='version'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSXMLElement'>
<method selector='addAttribute:'>
<arg index='0' name='attribute' type='@' declared_type='NSXMLNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addChild:'>
<arg index='0' name='child' type='@' declared_type='NSXMLNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addNamespace:'>
<arg index='0' name='aNamespace' type='@' declared_type='NSXMLNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='attributeForLocalName:URI:'>
<arg index='0' name='localName' type='@' declared_type='NSString*'/>
<arg index='1' name='URI' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSXMLNode*'/>
</method>
<method selector='attributeForName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSXMLNode*'/>
</method>
<method selector='attributes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='elementsForLocalName:URI:'>
<arg index='0' name='localName' type='@' declared_type='NSString*'/>
<arg index='1' name='URI' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='elementsForName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='initWithName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithName:URI:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='URI' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithName:stringValue:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithXMLString:error:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertChild:atIndex:'>
<arg index='0' name='child' type='@' declared_type='NSXMLNode*'/>
<arg index='1' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertChildren:atIndex:'>
<arg index='0' name='children' type='@' declared_type='NSArray*'/>
<arg index='1' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='namespaceForPrefix:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSXMLNode*'/>
</method>
<method selector='namespaces'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='normalizeAdjacentTextNodesPreservingCDATA:'>
<arg index='0' name='preserve' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAttributeForName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeChildAtIndex:'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeNamespaceForPrefix:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceChildAtIndex:withNode:'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='node' type='@' declared_type='NSXMLNode*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resolveNamespaceForName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSXMLNode*'/>
</method>
<method selector='resolvePrefixForNamespaceURI:'>
<arg index='0' name='namespaceURI' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setAttributes:'>
<arg index='0' name='attributes' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributesAsDictionary:'>
<arg index='0' name='attributes' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributesWithDictionary:'>
<arg index='0' name='attributes' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setChildren:'>
<arg index='0' name='children' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNamespaces:'>
<arg index='0' name='namespaces' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSXMLNode'>
<method class_method='true' selector='DTDNodeWithXMLString:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='URI'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='XMLString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='XMLStringWithOptions:'>
<arg index='0' name='options' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='XPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='attributeWithName:URI:stringValue:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='URI' type='@' declared_type='NSString*'/>
<arg index='2' name='stringValue' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='attributeWithName:stringValue:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='stringValue' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='canonicalXMLStringPreservingComments:'>
<arg index='0' name='comments' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='childAtIndex:'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='NSXMLNode*'/>
</method>
<method selector='childCount'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='children'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method class_method='true' selector='commentWithStringValue:'>
<arg index='0' name='stringValue' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='description'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='detach'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='document'>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='documentWithRootElement:'>
<arg index='0' name='element' type='@' declared_type='NSXMLElement*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='elementWithName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='elementWithName:URI:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='URI' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='elementWithName:children:attributes:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='children' type='@' declared_type='NSArray*'/>
<arg index='2' name='attributes' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='elementWithName:stringValue:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='string' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='index'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='initWithKind:'>
<arg index='0' name='kind' type64='Q' type='I' declared_type='NSXMLNodeKind'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithKind:options:'>
<arg index='0' name='kind' type64='Q' type='I' declared_type='NSXMLNodeKind'/>
<arg index='1' name='options' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='kind'>
<retval type64='Q' type='I' declared_type='NSXMLNodeKind'/>
</method>
<method selector='level'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='localName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='localNameForName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='namespaceWithName:stringValue:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='stringValue' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='nextNode'>
<retval type='@' declared_type='NSXMLNode*'/>
</method>
<method selector='nextSibling'>
<retval type='@' declared_type='NSXMLNode*'/>
</method>
<method selector='nodesForXPath:error:'>
<arg index='0' name='xpath' type='@' declared_type='NSString*'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='objectValue'>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectsForXQuery:constants:error:'>
<arg index='0' name='xquery' type='@' declared_type='NSString*'/>
<arg index='1' name='constants' type='@' declared_type='NSDictionary*'/>
<arg index='2' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='objectsForXQuery:error:'>
<arg index='0' name='xquery' type='@' declared_type='NSString*'/>
<arg index='1' name='error' type='^@' declared_type='NSError**'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='parent'>
<retval type='@' declared_type='NSXMLNode*'/>
</method>
<method class_method='true' selector='predefinedNamespaceForPrefix:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSXMLNode*'/>
</method>
<method selector='prefix'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='prefixForName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='previousNode'>
<retval type='@' declared_type='NSXMLNode*'/>
</method>
<method selector='previousSibling'>
<retval type='@' declared_type='NSXMLNode*'/>
</method>
<method class_method='true' selector='processingInstructionWithName:stringValue:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='stringValue' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rootDocument'>
<retval type='@' declared_type='NSXMLDocument*'/>
</method>
<method selector='setName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectValue:'>
<arg index='0' name='value' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStringValue:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStringValue:resolvingEntities:'>
<arg index='0' name='string' type='@' declared_type='NSString*'/>
<arg index='1' name='resolve' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setURI:'>
<arg index='0' name='URI' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringValue'>
<retval type='@' declared_type='NSString*'/>
</method>
<method class_method='true' selector='textWithStringValue:'>
<arg index='0' name='stringValue' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSXMLParser'>
<method selector='abortParsing'>
<retval type='v' declared_type='void'/>
</method>
<method selector='columnNumber'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:'>
<arg index='0' name='data' type='@' declared_type='NSData*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithStream:'>
<arg index='0' name='stream' type='@' declared_type='NSInputStream*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lineNumber'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='parse'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='parserError'>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='publicID'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setDelegate:'>
<arg index='0' name='delegate' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldProcessNamespaces:'>
<arg index='0' name='shouldProcessNamespaces' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldReportNamespacePrefixes:'>
<arg index='0' name='shouldReportNamespacePrefixes' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldResolveExternalEntities:'>
<arg index='0' name='shouldResolveExternalEntities' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldProcessNamespaces'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='shouldReportNamespacePrefixes'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='shouldResolveExternalEntities'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='systemID'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSXPCConnection'>
<method selector='auditSessionIdentifier'>
<retval type='i' declared_type='au_asid_t'/>
</method>
<method selector='effectiveGroupIdentifier'>
<retval type='I' declared_type='gid_t'/>
</method>
<method selector='effectiveUserIdentifier'>
<retval type='I' declared_type='uid_t'/>
</method>
<method selector='endpoint'>
<retval type='@' declared_type='NSXPCListenerEndpoint*'/>
</method>
<method selector='exportedInterface'>
<retval type='@' declared_type='NSXPCInterface*'/>
</method>
<method selector='exportedObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithListenerEndpoint:'>
<arg index='0' name='endpoint' type='@' declared_type='NSXPCListenerEndpoint*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithMachServiceName:options:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='options' type64='Q' type='I' declared_type='NSXPCConnectionOptions'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithServiceName:'>
<arg index='0' name='serviceName' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='interruptionHandler'>
<retval function_pointer='true' type='@?' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='invalidate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='invalidationHandler'>
<retval function_pointer='true' type='@?' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='processIdentifier'>
<retval type='i' declared_type='pid_t'/>
</method>
<method selector='remoteObjectInterface'>
<retval type='@' declared_type='NSXPCInterface*'/>
</method>
<method selector='remoteObjectProxy'>
<retval type='@' declared_type='id'/>
</method>
<method selector='remoteObjectProxyWithErrorHandler:'>
<arg function_pointer='true' index='0' name='handler' type='@?' declared_type='void (^)(NSError *)'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='resume'>
<retval type='v' declared_type='void'/>
</method>
<method selector='serviceName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setExportedInterface:'>
<arg index='0' name='exportedInterface' type='@' declared_type='NSXPCInterface*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setExportedObject:'>
<arg index='0' name='exportedObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInterruptionHandler:'>
<arg function_pointer='true' index='0' name='interruptionHandler' type='@?' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInvalidationHandler:'>
<arg function_pointer='true' index='0' name='invalidationHandler' type='@?' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRemoteObjectInterface:'>
<arg index='0' name='remoteObjectInterface' type='@' declared_type='NSXPCInterface*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='suspend'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSXPCInterface'>
<method selector='classesForSelector:argumentIndex:ofReply:'>
<arg index='0' name='sel' type=':' declared_type='SEL'/>
<arg index='1' name='arg' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='ofReply' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='interfaceForSelector:argumentIndex:ofReply:'>
<arg index='0' name='sel' type=':' declared_type='SEL'/>
<arg index='1' name='arg' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='ofReply' type='B' declared_type='BOOL'/>
<retval type='@' declared_type='NSXPCInterface*'/>
</method>
<method class_method='true' selector='interfaceWithProtocol:'>
<arg index='0' name='protocol' type='@' declared_type='Protocol*'/>
<retval type='@' declared_type='NSXPCInterface*'/>
</method>
<method selector='protocol'>
<retval type='@' declared_type='Protocol*'/>
</method>
<method selector='setClasses:forSelector:argumentIndex:ofReply:'>
<arg index='0' name='classes' type='@' declared_type='NSSet*'/>
<arg index='1' name='sel' type=':' declared_type='SEL'/>
<arg index='2' name='arg' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='3' name='ofReply' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInterface:forSelector:argumentIndex:ofReply:'>
<arg index='0' name='ifc' type='@' declared_type='NSXPCInterface*'/>
<arg index='1' name='sel' type=':' declared_type='SEL'/>
<arg index='2' name='arg' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='3' name='ofReply' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProtocol:'>
<arg index='0' name='protocol' type='@' declared_type='Protocol*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSXPCListener'>
<method class_method='true' selector='anonymousListener'>
<retval type='@' declared_type='id'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='endpoint'>
<retval type='@' declared_type='NSXPCListenerEndpoint*'/>
</method>
<method selector='initWithMachServiceName:'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='invalidate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='resume'>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='serviceListener'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDelegate:'>
<arg index='0' name='delegate' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='suspend'>
<retval type='v' declared_type='void'/>
</method>
</class>
<informal_protocol name='NSArchiverCallback'>
<method type64='#16@0:8' selector='classForArchiver' type='#8@0:4'>
<retval type='#' declared_type='Class'/>
</method>
<method type64='@24@0:8@16' selector='replacementObjectForArchiver:' type='@12@0:4@8'>
<arg index='0' name='archiver' type='@' declared_type='NSArchiver*'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSCacheDelegate'>
<method type64='v32@0:8@16@24' selector='cache:willEvictObject:' type='v16@0:4@8@12'>
<arg index='0' name='cache' type='@' declared_type='NSCache*'/>
<arg index='1' name='obj' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSClassDescriptionPrimitives'>
<method type64='@16@0:8' selector='attributeKeys' type='@8@0:4'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='@16@0:8' selector='classDescription' type='@8@0:4'>
<retval type='@' declared_type='NSClassDescription*'/>
</method>
<method type64='@24@0:8@16' selector='inverseForRelationshipKey:' type='@12@0:4@8'>
<arg index='0' name='relationshipKey' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='@16@0:8' selector='toManyRelationshipKeys' type='@8@0:4'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='@16@0:8' selector='toOneRelationshipKeys' type='@8@0:4'>
<retval type='@' declared_type='NSArray*'/>
</method>
</informal_protocol>
<informal_protocol name='NSCoderMethods'>
<method type64='@24@0:8@16' selector='awakeAfterUsingCoder:' type='@12@0:4@8'>
<arg index='0' name='aDecoder' type='@' declared_type='NSCoder*'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='#16@0:8' selector='classForCoder' type='#8@0:4'>
<retval type='#' declared_type='Class'/>
</method>
<method type64='@24@0:8@16' selector='replacementObjectForCoder:' type='@12@0:4@8'>
<arg index='0' name='aCoder' type='@' declared_type='NSCoder*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' type64='v24@0:8q16' selector='setVersion:' type='v12@0:4i8'>
<arg index='0' name='aVersion' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' type64='q16@0:8' selector='version' type='i8@0:4'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
</informal_protocol>
<informal_protocol name='NSCoding'>
<method type64='v24@0:8@16' selector='encodeWithCoder:' type='v12@0:4@8'>
<arg index='0' name='aCoder' type='@' declared_type='NSCoder*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@24@0:8@16' selector='initWithCoder:' type='@12@0:4@8'>
<arg index='0' name='aDecoder' type='@' declared_type='NSCoder*'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSComparisonMethods'>
<method type64='B24@0:8@16' selector='doesContain:' type='B12@0:4@8'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B24@0:8@16' selector='isCaseInsensitiveLike:' type='B12@0:4@8'>
<arg index='0' name='object' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B24@0:8@16' selector='isEqualTo:' type='B12@0:4@8'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B24@0:8@16' selector='isGreaterThan:' type='B12@0:4@8'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B24@0:8@16' selector='isGreaterThanOrEqualTo:' type='B12@0:4@8'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B24@0:8@16' selector='isLessThan:' type='B12@0:4@8'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B24@0:8@16' selector='isLessThanOrEqualTo:' type='B12@0:4@8'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B24@0:8@16' selector='isLike:' type='B12@0:4@8'>
<arg index='0' name='object' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B24@0:8@16' selector='isNotEqualTo:' type='B12@0:4@8'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSConnectionDelegate'>
<method type64='B32@0:8@16@24' selector='authenticateComponents:withData:' type='B16@0:4@8@12'>
<arg index='0' name='components' type='@' declared_type='NSArray*'/>
<arg index='1' name='signature' type='@' declared_type='NSData*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@24@0:8@16' selector='authenticationDataForComponents:' type='@12@0:4@8'>
<arg index='0' name='components' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method type64='B32@0:8@16@24' selector='connection:handleRequest:' type='B16@0:4@8@12'>
<arg index='0' name='connection' type='@' declared_type='NSConnection*'/>
<arg index='1' name='doreq' type='@' declared_type='NSDistantObjectRequest*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B32@0:8@16@24' selector='connection:shouldMakeNewConnection:' type='B16@0:4@8@12'>
<arg index='0' name='ancestor' type='@' declared_type='NSConnection*'/>
<arg index='1' name='conn' type='@' declared_type='NSConnection*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@24@0:8@16' selector='createConversationForConnection:' type='@12@0:4@8'>
<arg index='0' name='conn' type='@' declared_type='NSConnection*'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='B32@0:8@16@24' selector='makeNewConnection:sender:' type='B16@0:4@8@12'>
<arg index='0' name='conn' type='@' declared_type='NSConnection*'/>
<arg index='1' name='ancestor' type='@' declared_type='NSConnection*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSCopyLinkMoveHandler'>
<method type64='B32@0:8@16@24' selector='fileManager:shouldProceedAfterError:' type='B16@0:4@8@12'>
<arg index='0' name='fm' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='errorInfo' type='@' declared_type='NSDictionary*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v32@0:8@16@24' selector='fileManager:willProcessPath:' type='v16@0:4@8@12'>
<arg index='0' name='fm' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='path' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSCopying'>
<method type64='@24@0:8^{_NSZone=}16' selector='copyWithZone:' type='@12@0:4^{_NSZone=}8'>
<arg index='0' name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSDecimalNumberBehaviors'>
<method type64='@48@0:8:16Q24@32@40' selector='exceptionDuringOperation:error:leftOperand:rightOperand:' type='@24@0:4:8I12@16@20'>
<arg index='0' name='operation' type=':' declared_type='SEL'/>
<arg index='1' name='error' type64='Q' type='I' declared_type='NSCalculationError'/>
<arg index='2' name='leftOperand' type='@' declared_type='NSDecimalNumber*'/>
<arg index='3' name='rightOperand' type='@' declared_type='NSDecimalNumber*'/>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method type64='Q16@0:8' selector='roundingMode' type='I8@0:4'>
<retval type64='Q' type='I' declared_type='NSRoundingMode'/>
</method>
<method type64='s16@0:8' selector='scale' type='s8@0:4'>
<retval type='s' declared_type='short'/>
</method>
</informal_protocol>
<informal_protocol name='NSDelayedPerforming'>
<method class_method='true' type64='v24@0:8@16' selector='cancelPreviousPerformRequestsWithTarget:' type='v12@0:4@8'>
<arg index='0' name='aTarget' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' type64='v40@0:8@16:24@32' selector='cancelPreviousPerformRequestsWithTarget:selector:object:' type='v20@0:4@8:12@16'>
<arg index='0' name='aTarget' type='@' declared_type='id'/>
<arg index='1' name='aSelector' type=':' declared_type='SEL'/>
<arg index='2' name='anArgument' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8:16@24d32' selector='performSelector:withObject:afterDelay:' type='v24@0:4:8@12d16'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<arg index='1' name='anArgument' type='@' declared_type='id'/>
<arg index='2' name='delay' type='d' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v48@0:8:16@24d32@40' selector='performSelector:withObject:afterDelay:inModes:' type='v28@0:4:8@12d16@24'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<arg index='1' name='anArgument' type='@' declared_type='id'/>
<arg index='2' name='delay' type='d' declared_type='NSTimeInterval'/>
<arg index='3' name='modes' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSDeprecatedKeyValueCoding'>
<method type64='@24@0:8@16' selector='handleQueryWithUnboundKey:' type='@12@0:4@8'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='v32@0:8@16@24' selector='handleTakeValue:forUnboundKey:' type='v16@0:4@8@12'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@24@0:8@16' selector='storedValueForKey:' type='@12@0:4@8'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='v32@0:8@16@24' selector='takeStoredValue:forKey:' type='v16@0:4@8@12'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='takeValue:forKey:' type='v16@0:4@8@12'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='takeValue:forKeyPath:' type='v16@0:4@8@12'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='takeValuesFromDictionary:' type='v12@0:4@8'>
<arg index='0' name='properties' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='unableToSetNilForKey:' type='v12@0:4@8'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' type64='B16@0:8' selector='useStoredAccessor' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@24@0:8@16' selector='valuesForKeys:' type='@12@0:4@8'>
<arg index='0' name='keys' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</informal_protocol>
<informal_protocol name='NSDeprecatedKeyValueObservingCustomization'>
<method class_method='true' type64='v32@0:8@16@24' selector='setKeys:triggerChangeNotificationsForDependentKey:' type='v16@0:4@8@12'>
<arg index='0' name='keys' type='@' declared_type='NSArray*'/>
<arg index='1' name='dependentKey' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSDiscardableContent'>
<method type64='B16@0:8' selector='beginContentAccess' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v16@0:8' selector='discardContentIfPossible' type='v8@0:4'>
<retval type='v' declared_type='void'/>
</method>
<method type64='v16@0:8' selector='endContentAccess' type='v8@0:4'>
<retval type='v' declared_type='void'/>
</method>
<method type64='B16@0:8' selector='isContentDiscarded' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSDiscardableContentProxy'>
<method type64='@16@0:8' selector='autoContentAccessingProxy' type='@8@0:4'>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSDistributedObjects'>
<method type64='#16@0:8' selector='classForPortCoder' type='#8@0:4'>
<retval type='#' declared_type='Class'/>
</method>
<method type64='@24@0:8@16' selector='replacementObjectForPortCoder:' type='@12@0:4@8'>
<arg index='0' name='coder' type='@' declared_type='NSPortCoder*'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSErrorRecoveryAttempting'>
<method type64='B32@0:8@16Q24' selector='attemptRecoveryFromError:optionIndex:' type='B16@0:4@8I12'>
<arg index='0' name='error' type='@' declared_type='NSError*'/>
<arg index='1' name='recoveryOptionIndex' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v56@0:8@16Q24@32:40^v48' selector='attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:' type='v28@0:4@8I12@16:20^v24'>
<arg index='0' name='error' type='@' declared_type='NSError*'/>
<arg index='1' name='recoveryOptionIndex' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='delegate' type='@' declared_type='id'/>
<arg index='3' name='didRecoverSelector' type=':' declared_type='SEL'/>
<arg index='4' name='contextInfo' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSFastEnumeration'>
<method type64='Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32' selector='countByEnumeratingWithState:objects:count:' type='I20@0:4^{?=L^@^L[5L]}8^@12I16'>
<arg index='0' name='state' type64='^{_NSFastEnumerationState=Q^@^Q[5Q]}' type='^{_NSFastEnumerationState=L^@^L[5L]}' declared_type='NSFastEnumerationState*'/>
<arg index='1' name='buffer' type='^@' declared_type='id*'/>
<arg index='2' name='len' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
</informal_protocol>
<informal_protocol name='NSFileManagerDelegate'>
<method type64='B40@0:8@16@24@32' selector='fileManager:shouldCopyItemAtPath:toPath:' type='B20@0:4@8@12@16'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='srcPath' type='@' declared_type='NSString*'/>
<arg index='2' name='dstPath' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B40@0:8@16@24@32' selector='fileManager:shouldCopyItemAtURL:toURL:' type='B20@0:4@8@12@16'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='srcURL' type='@' declared_type='NSURL*'/>
<arg index='2' name='dstURL' type='@' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B40@0:8@16@24@32' selector='fileManager:shouldLinkItemAtPath:toPath:' type='B20@0:4@8@12@16'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='srcPath' type='@' declared_type='NSString*'/>
<arg index='2' name='dstPath' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B40@0:8@16@24@32' selector='fileManager:shouldLinkItemAtURL:toURL:' type='B20@0:4@8@12@16'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='srcURL' type='@' declared_type='NSURL*'/>
<arg index='2' name='dstURL' type='@' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B40@0:8@16@24@32' selector='fileManager:shouldMoveItemAtPath:toPath:' type='B20@0:4@8@12@16'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='srcPath' type='@' declared_type='NSString*'/>
<arg index='2' name='dstPath' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B40@0:8@16@24@32' selector='fileManager:shouldMoveItemAtURL:toURL:' type='B20@0:4@8@12@16'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='srcURL' type='@' declared_type='NSURL*'/>
<arg index='2' name='dstURL' type='@' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B48@0:8@16@24@32@40' selector='fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:' type='B24@0:4@8@12@16@20'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<arg index='2' name='srcPath' type='@' declared_type='NSString*'/>
<arg index='3' name='dstPath' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B48@0:8@16@24@32@40' selector='fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:' type='B24@0:4@8@12@16@20'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<arg index='2' name='srcURL' type='@' declared_type='NSURL*'/>
<arg index='3' name='dstURL' type='@' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B48@0:8@16@24@32@40' selector='fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:' type='B24@0:4@8@12@16@20'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<arg index='2' name='srcPath' type='@' declared_type='NSString*'/>
<arg index='3' name='dstPath' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B48@0:8@16@24@32@40' selector='fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:' type='B24@0:4@8@12@16@20'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<arg index='2' name='srcURL' type='@' declared_type='NSURL*'/>
<arg index='3' name='dstURL' type='@' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B48@0:8@16@24@32@40' selector='fileManager:shouldProceedAfterError:movingItemAtPath:toPath:' type='B24@0:4@8@12@16@20'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<arg index='2' name='srcPath' type='@' declared_type='NSString*'/>
<arg index='3' name='dstPath' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B48@0:8@16@24@32@40' selector='fileManager:shouldProceedAfterError:movingItemAtURL:toURL:' type='B24@0:4@8@12@16@20'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<arg index='2' name='srcURL' type='@' declared_type='NSURL*'/>
<arg index='3' name='dstURL' type='@' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B40@0:8@16@24@32' selector='fileManager:shouldProceedAfterError:removingItemAtPath:' type='B20@0:4@8@12@16'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<arg index='2' name='path' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B40@0:8@16@24@32' selector='fileManager:shouldProceedAfterError:removingItemAtURL:' type='B20@0:4@8@12@16'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<arg index='2' name='URL' type='@' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B32@0:8@16@24' selector='fileManager:shouldRemoveItemAtPath:' type='B16@0:4@8@12'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='path' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B32@0:8@16@24' selector='fileManager:shouldRemoveItemAtURL:' type='B16@0:4@8@12'>
<arg index='0' name='fileManager' type='@' declared_type='NSFileManager*'/>
<arg index='1' name='URL' type='@' declared_type='NSURL*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSFilePresenter'>
<method type64='v24@0:8@?16' selector='accommodatePresentedItemDeletionWithCompletionHandler:' type='v12@0:4@?8'>
<arg function_pointer='true' index='0' name='completionHandler' type='@?' declared_type='void (^)(NSError *)'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@?24' selector='accommodatePresentedSubitemDeletionAtURL:completionHandler:' type='v16@0:4@8@?12'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg function_pointer='true' index='1' name='completionHandler' type='@?' declared_type='void (^)(NSError *)'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method type64='v16@0:8' selector='presentedItemDidChange' type='v8@0:4'>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='presentedItemDidGainVersion:' type='v12@0:4@8'>
<arg index='0' name='version' type='@' declared_type='NSFileVersion*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='presentedItemDidLoseVersion:' type='v12@0:4@8'>
<arg index='0' name='version' type='@' declared_type='NSFileVersion*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='presentedItemDidMoveToURL:' type='v12@0:4@8'>
<arg index='0' name='newURL' type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='presentedItemDidResolveConflictVersion:' type='v12@0:4@8'>
<arg index='0' name='version' type='@' declared_type='NSFileVersion*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@16@0:8' selector='presentedItemOperationQueue' type='@8@0:4'>
<retval type='@' declared_type='NSOperationQueue*'/>
</method>
<method type64='@16@0:8' selector='presentedItemURL' type='@8@0:4'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method type64='v32@0:8@16@24' selector='presentedSubitemAtURL:didGainVersion:' type='v16@0:4@8@12'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='version' type='@' declared_type='NSFileVersion*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='presentedSubitemAtURL:didLoseVersion:' type='v16@0:4@8@12'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='version' type='@' declared_type='NSFileVersion*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='presentedSubitemAtURL:didMoveToURL:' type='v16@0:4@8@12'>
<arg index='0' name='oldURL' type='@' declared_type='NSURL*'/>
<arg index='1' name='newURL' type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='presentedSubitemAtURL:didResolveConflictVersion:' type='v16@0:4@8@12'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<arg index='1' name='version' type='@' declared_type='NSFileVersion*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='presentedSubitemDidAppearAtURL:' type='v12@0:4@8'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='presentedSubitemDidChangeAtURL:' type='v12@0:4@8'>
<arg index='0' name='url' type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@16@0:8' selector='primaryPresentedItemURL' type='@8@0:4'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method type64='v24@0:8@?16' selector='relinquishPresentedItemToReader:' type='v12@0:4@?8'>
<arg function_pointer='true' index='0' name='reader' type='@?' declared_type='void (^)(void (^)(void))'>
<arg type='@?' declared_type='void (^)(void)'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@?16' selector='relinquishPresentedItemToWriter:' type='v12@0:4@?8'>
<arg function_pointer='true' index='0' name='writer' type='@?' declared_type='void (^)(void (^)(void))'>
<arg type='@?' declared_type='void (^)(void)'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@?16' selector='savePresentedItemChangesWithCompletionHandler:' type='v12@0:4@?8'>
<arg function_pointer='true' index='0' name='completionHandler' type='@?' declared_type='void (^)(NSError *)'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueCoding'>
<method class_method='true' type64='B16@0:8' selector='accessInstanceVariablesDirectly' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@24@0:8@16' selector='dictionaryWithValuesForKeys:' type='@12@0:4@8'>
<arg index='0' name='keys' type='@' declared_type='NSArray*'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method type64='@24@0:8@16' selector='mutableArrayValueForKey:' type='@12@0:4@8'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method type64='@24@0:8@16' selector='mutableArrayValueForKeyPath:' type='@12@0:4@8'>
<arg index='0' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method type64='@24@0:8@16' selector='mutableOrderedSetValueForKey:' type='@12@0:4@8'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSMutableOrderedSet*'/>
</method>
<method type64='@24@0:8@16' selector='mutableOrderedSetValueForKeyPath:' type='@12@0:4@8'>
<arg index='0' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSMutableOrderedSet*'/>
</method>
<method type64='@24@0:8@16' selector='mutableSetValueForKey:' type='@12@0:4@8'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSMutableSet*'/>
</method>
<method type64='@24@0:8@16' selector='mutableSetValueForKeyPath:' type='@12@0:4@8'>
<arg index='0' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSMutableSet*'/>
</method>
<method type64='v24@0:8@16' selector='setNilValueForKey:' type='v12@0:4@8'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='setValue:forKey:' type='v16@0:4@8@12'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='setValue:forKeyPath:' type='v16@0:4@8@12'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='setValue:forUndefinedKey:' type='v16@0:4@8@12'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='setValuesForKeysWithDictionary:' type='v12@0:4@8'>
<arg index='0' name='keyedValues' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B40@0:8N^@16@24o^@32' selector='validateValue:forKey:error:' type='B20@0:4N^@8@12o^@16'>
<arg index='0' name='ioValue' type_modifier='N' type='^@' declared_type='id*'/>
<arg index='1' name='inKey' type='@' declared_type='NSString*'/>
<arg index='2' name='outError' type_modifier='o' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B40@0:8N^@16@24o^@32' selector='validateValue:forKeyPath:error:' type='B20@0:4N^@8@12o^@16'>
<arg index='0' name='ioValue' type_modifier='N' type='^@' declared_type='id*'/>
<arg index='1' name='inKeyPath' type='@' declared_type='NSString*'/>
<arg index='2' name='outError' type_modifier='o' type='^@' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@24@0:8@16' selector='valueForKey:' type='@12@0:4@8'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@24@0:8@16' selector='valueForKeyPath:' type='@12@0:4@8'>
<arg index='0' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@24@0:8@16' selector='valueForUndefinedKey:' type='@12@0:4@8'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueObserverNotification'>
<method type64='v40@0:8Q16@24@32' selector='didChange:valuesAtIndexes:forKey:' type='v20@0:4I8@12@16'>
<arg index='0' name='changeKind' type64='Q' type='I' declared_type='NSKeyValueChange'/>
<arg index='1' name='indexes' type='@' declared_type='NSIndexSet*'/>
<arg index='2' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='didChangeValueForKey:' type='v12@0:4@8'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8@16Q24@32' selector='didChangeValueForKey:withSetMutation:usingObjects:' type='v20@0:4@8I12@16'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<arg index='1' name='mutationKind' type64='Q' type='I' declared_type='NSKeyValueSetMutationKind'/>
<arg index='2' name='objects' type='@' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8Q16@24@32' selector='willChange:valuesAtIndexes:forKey:' type='v20@0:4I8@12@16'>
<arg index='0' name='changeKind' type64='Q' type='I' declared_type='NSKeyValueChange'/>
<arg index='1' name='indexes' type='@' declared_type='NSIndexSet*'/>
<arg index='2' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='willChangeValueForKey:' type='v12@0:4@8'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8@16Q24@32' selector='willChangeValueForKey:withSetMutation:usingObjects:' type='v20@0:4@8I12@16'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<arg index='1' name='mutationKind' type64='Q' type='I' declared_type='NSKeyValueSetMutationKind'/>
<arg index='2' name='objects' type='@' declared_type='NSSet*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueObserverRegistration'>
<method type64='v48@0:8@16@24Q32^v40' selector='addObserver:forKeyPath:options:context:' type='v24@0:4@8@12I16^v20'>
<arg index='0' name='observer' type='@' declared_type='NSObject*'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='2' name='options' type64='Q' type='I' declared_type='NSKeyValueObservingOptions'/>
<arg index='3' name='context' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='removeObserver:forKeyPath:' type='v16@0:4@8@12'>
<arg index='0' name='observer' type='@' declared_type='NSObject*'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8@16@24^v32' selector='removeObserver:forKeyPath:context:' type='v20@0:4@8@12^v16'>
<arg index='0' name='observer' type='@' declared_type='NSObject*'/>
<arg index='1' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='2' name='context' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueObserving'>
<method type64='v48@0:8@16@24@32^v40' selector='observeValueForKeyPath:ofObject:change:context:' type='v24@0:4@8@12@16^v20'>
<arg index='0' name='keyPath' type='@' declared_type='NSString*'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<arg index='2' name='change' type='@' declared_type='NSDictionary*'/>
<arg index='3' name='context' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueObservingCustomization'>
<method class_method='true' type64='B24@0:8@16' selector='automaticallyNotifiesObserversForKey:' type='B12@0:4@8'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' type64='@24@0:8@16' selector='keyPathsForValuesAffectingValueForKey:' type='@12@0:4@8'>
<arg index='0' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method type64='^v16@0:8' selector='observationInfo' type='^v8@0:4'>
<retval type='^v' declared_type='void*'/>
</method>
<method type64='v24@0:8^v16' selector='setObservationInfo:' type='v12@0:4^v8'>
<arg index='0' name='observationInfo' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyedArchiverDelegate'>
<method type64='v32@0:8@16@24' selector='archiver:didEncodeObject:' type='v16@0:4@8@12'>
<arg index='0' name='archiver' type='@' declared_type='NSKeyedArchiver*'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@32@0:8@16@24' selector='archiver:willEncodeObject:' type='@16@0:4@8@12'>
<arg index='0' name='archiver' type='@' declared_type='NSKeyedArchiver*'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='v40@0:8@16@24@32' selector='archiver:willReplaceObject:withObject:' type='v20@0:4@8@12@16'>
<arg index='0' name='archiver' type='@' declared_type='NSKeyedArchiver*'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<arg index='2' name='newObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='archiverDidFinish:' type='v12@0:4@8'>
<arg index='0' name='archiver' type='@' declared_type='NSKeyedArchiver*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='archiverWillFinish:' type='v12@0:4@8'>
<arg index='0' name='archiver' type='@' declared_type='NSKeyedArchiver*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyedArchiverObjectSubstitution'>
<method class_method='true' type64='@16@0:8' selector='classFallbacksForKeyedArchiver' type='@8@0:4'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='#16@0:8' selector='classForKeyedArchiver' type='#8@0:4'>
<retval type='#' declared_type='Class'/>
</method>
<method type64='@24@0:8@16' selector='replacementObjectForKeyedArchiver:' type='@12@0:4@8'>
<arg index='0' name='archiver' type='@' declared_type='NSKeyedArchiver*'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyedUnarchiverDelegate'>
<method type64='#40@0:8@16@24@32' selector='unarchiver:cannotDecodeObjectOfClassName:originalClasses:' type='#20@0:4@8@12@16'>
<arg index='0' name='unarchiver' type='@' declared_type='NSKeyedUnarchiver*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='classNames' type='@' declared_type='NSArray*'/>
<retval type='#' declared_type='Class'/>
</method>
<method type64='@32@0:8@16@24' selector='unarchiver:didDecodeObject:' type='@16@0:4@8@12'>
<arg index='0' name='unarchiver' type='@' declared_type='NSKeyedUnarchiver*'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='v40@0:8@16@24@32' selector='unarchiver:willReplaceObject:withObject:' type='v20@0:4@8@12@16'>
<arg index='0' name='unarchiver' type='@' declared_type='NSKeyedUnarchiver*'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<arg index='2' name='newObject' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='unarchiverDidFinish:' type='v12@0:4@8'>
<arg index='0' name='unarchiver' type='@' declared_type='NSKeyedUnarchiver*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='unarchiverWillFinish:' type='v12@0:4@8'>
<arg index='0' name='unarchiver' type='@' declared_type='NSKeyedUnarchiver*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyedUnarchiverObjectSubstitution'>
<method class_method='true' type64='#16@0:8' selector='classForKeyedUnarchiver' type='#8@0:4'>
<retval type='#' declared_type='Class'/>
</method>
</informal_protocol>
<informal_protocol name='NSLocking'>
<method type64='v16@0:8' selector='lock' type='v8@0:4'>
<retval type='v' declared_type='void'/>
</method>
<method type64='v16@0:8' selector='unlock' type='v8@0:4'>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSMachPortDelegate'>
<method type64='v24@0:8^v16' selector='handleMachMessage:' type='v12@0:4^v8'>
<arg index='0' name='msg' type='^v' declared_type='void*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSMetadataQueryDelegate'>
<method type64='@32@0:8@16@24' selector='metadataQuery:replacementObjectForResultObject:' type='@16@0:4@8@12'>
<arg index='0' name='query' type='@' declared_type='NSMetadataQuery*'/>
<arg index='1' name='result' type='@' declared_type='NSMetadataItem*'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@40@0:8@16@24@32' selector='metadataQuery:replacementValueForAttribute:value:' type='@20@0:4@8@12@16'>
<arg index='0' name='query' type='@' declared_type='NSMetadataQuery*'/>
<arg index='1' name='attrName' type='@' declared_type='NSString*'/>
<arg index='2' name='attrValue' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSMutableCopying'>
<method type64='@24@0:8^{_NSZone=}16' selector='mutableCopyWithZone:' type='@12@0:4^{_NSZone=}8'>
<arg index='0' name='zone' type='^{_NSZone=}' declared_type='NSZone*'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSNetServiceBrowserDelegate'>
<method type64='v36@0:8@16@24B32' selector='netServiceBrowser:didFindDomain:moreComing:' type='v20@0:4@8@12B16'>
<arg index='0' name='aNetServiceBrowser' type='@' declared_type='NSNetServiceBrowser*'/>
<arg index='1' name='domainString' type='@' declared_type='NSString*'/>
<arg index='2' name='moreComing' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v36@0:8@16@24B32' selector='netServiceBrowser:didFindService:moreComing:' type='v20@0:4@8@12B16'>
<arg index='0' name='aNetServiceBrowser' type='@' declared_type='NSNetServiceBrowser*'/>
<arg index='1' name='aNetService' type='@' declared_type='NSNetService*'/>
<arg index='2' name='moreComing' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='netServiceBrowser:didNotSearch:' type='v16@0:4@8@12'>
<arg index='0' name='aNetServiceBrowser' type='@' declared_type='NSNetServiceBrowser*'/>
<arg index='1' name='errorDict' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v36@0:8@16@24B32' selector='netServiceBrowser:didRemoveDomain:moreComing:' type='v20@0:4@8@12B16'>
<arg index='0' name='aNetServiceBrowser' type='@' declared_type='NSNetServiceBrowser*'/>
<arg index='1' name='domainString' type='@' declared_type='NSString*'/>
<arg index='2' name='moreComing' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v36@0:8@16@24B32' selector='netServiceBrowser:didRemoveService:moreComing:' type='v20@0:4@8@12B16'>
<arg index='0' name='aNetServiceBrowser' type='@' declared_type='NSNetServiceBrowser*'/>
<arg index='1' name='aNetService' type='@' declared_type='NSNetService*'/>
<arg index='2' name='moreComing' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='netServiceBrowserDidStopSearch:' type='v12@0:4@8'>
<arg index='0' name='aNetServiceBrowser' type='@' declared_type='NSNetServiceBrowser*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='netServiceBrowserWillSearch:' type='v12@0:4@8'>
<arg index='0' name='aNetServiceBrowser' type='@' declared_type='NSNetServiceBrowser*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSNetServiceDelegate'>
<method type64='v32@0:8@16@24' selector='netService:didNotPublish:' type='v16@0:4@8@12'>
<arg index='0' name='sender' type='@' declared_type='NSNetService*'/>
<arg index='1' name='errorDict' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='netService:didNotResolve:' type='v16@0:4@8@12'>
<arg index='0' name='sender' type='@' declared_type='NSNetService*'/>
<arg index='1' name='errorDict' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='netService:didUpdateTXTRecordData:' type='v16@0:4@8@12'>
<arg index='0' name='sender' type='@' declared_type='NSNetService*'/>
<arg index='1' name='data' type='@' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='netServiceDidPublish:' type='v12@0:4@8'>
<arg index='0' name='sender' type='@' declared_type='NSNetService*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='netServiceDidResolveAddress:' type='v12@0:4@8'>
<arg index='0' name='sender' type='@' declared_type='NSNetService*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='netServiceDidStop:' type='v12@0:4@8'>
<arg index='0' name='sender' type='@' declared_type='NSNetService*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='netServiceWillPublish:' type='v12@0:4@8'>
<arg index='0' name='sender' type='@' declared_type='NSNetService*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='netServiceWillResolve:' type='v12@0:4@8'>
<arg index='0' name='sender' type='@' declared_type='NSNetService*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSObject'>
<method type64='@16@0:8' selector='autorelease' type='@8@0:4'>
<retval type='@' declared_type='id'/>
</method>
<method type64='#16@0:8' selector='class' type='#8@0:4'>
<retval type='#' declared_type='Class'/>
</method>
<method type64='B24@0:8@16' selector='conformsToProtocol:' type='B12@0:4@8'>
<arg index='0' name='aProtocol' type='@' declared_type='Protocol*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@16@0:8' selector='debugDescription' type='@8@0:4'>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='@16@0:8' selector='description' type='@8@0:4'>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='Q16@0:8' selector='hash' type='I8@0:4'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method type64='B24@0:8@16' selector='isEqual:' type='B12@0:4@8'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B24@0:8#16' selector='isKindOfClass:' type='B12@0:4#8'>
<arg index='0' name='aClass' type='#' declared_type='Class'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B24@0:8#16' selector='isMemberOfClass:' type='B12@0:4#8'>
<arg index='0' name='aClass' type='#' declared_type='Class'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B16@0:8' selector='isProxy' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@24@0:8:16' selector='performSelector:' type='@12@0:4:8'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@32@0:8:16@24' selector='performSelector:withObject:' type='@16@0:4:8@12'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<arg index='1' name='object' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@40@0:8:16@24@32' selector='performSelector:withObject:withObject:' type='@20@0:4:8@12@16'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<arg index='1' name='object1' type='@' declared_type='id'/>
<arg index='2' name='object2' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='Vv16@0:8' selector='release' type='Vv8@0:4'>
<retval type='v' declared_type='void'/>
</method>
<method type64='B24@0:8:16' selector='respondsToSelector:' type='B12@0:4:8'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@16@0:8' selector='retain' type='@8@0:4'>
<retval type='@' declared_type='id'/>
</method>
<method type64='Q16@0:8' selector='retainCount' type='I8@0:4'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method type64='@16@0:8' selector='self' type='@8@0:4'>
<retval type='@' declared_type='id'/>
</method>
<method type64='#16@0:8' selector='superclass' type='#8@0:4'>
<retval type='#' declared_type='Class'/>
</method>
<method type64='^{_NSZone=}16@0:8' selector='zone' type='^{_NSZone=}8@0:4'>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</method>
</informal_protocol>
<informal_protocol name='NSPortDelegate'>
<method type64='v24@0:8@16' selector='handlePortMessage:' type='v12@0:4@8'>
<arg index='0' name='message' type='@' declared_type='NSPortMessage*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSScriptClassDescription'>
<method type64='I16@0:8' selector='classCode' type='L8@0:4'>
<retval type64='I' type='L' declared_type='FourCharCode'/>
</method>
<method type64='@16@0:8' selector='className' type='@8@0:4'>
<retval type='@' declared_type='NSString*'/>
</method>
</informal_protocol>
<informal_protocol name='NSScriptKeyValueCoding'>
<method type64='@32@0:8@16@24' selector='coerceValue:forKey:' type='@16@0:4@8@12'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='v40@0:8@16Q24@32' selector='insertValue:atIndex:inPropertyWithKey:' type='v20@0:4@8I12@16'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='insertValue:inPropertyWithKey:' type='v16@0:4@8@12'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8Q16@24' selector='removeValueAtIndex:fromPropertyWithKey:' type='v16@0:4I8@12'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8Q16@24@32' selector='replaceValueAtIndex:inPropertyWithKey:withValue:' type='v20@0:4I8@12@16'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<arg index='2' name='value' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@32@0:8Q16@24' selector='valueAtIndex:inPropertyWithKey:' type='@16@0:4I8@12'>
<arg index='0' name='index' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@32@0:8@16@24' selector='valueWithName:inPropertyWithKey:' type='@16@0:4@8@12'>
<arg index='0' name='name' type='@' declared_type='NSString*'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@32@0:8@16@24' selector='valueWithUniqueID:inPropertyWithKey:' type='@16@0:4@8@12'>
<arg index='0' name='uniqueID' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSScriptObjectSpecifiers'>
<method type64='@24@0:8@16' selector='indicesOfObjectsByEvaluatingObjectSpecifier:' type='@12@0:4@8'>
<arg index='0' name='specifier' type='@' declared_type='NSScriptObjectSpecifier*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='@16@0:8' selector='objectSpecifier' type='@8@0:4'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
</informal_protocol>
<informal_protocol name='NSScripting'>
<method type64='@40@0:8@16@24@32' selector='copyScriptingValue:forKey:withProperties:' type='@20@0:4@8@12@16'>
<arg index='0' name='value' type='@' declared_type='id'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<arg index='2' name='properties' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@48@0:8#16@24@32@40' selector='newScriptingObjectOfClass:forValueForKey:withContentsValue:properties:' type='@24@0:4#8@12@16@20'>
<arg index='0' name='objectClass' type='#' declared_type='Class'/>
<arg index='1' name='key' type='@' declared_type='NSString*'/>
<arg index='2' name='contentsValue' type='@' declared_type='id'/>
<arg index='3' name='properties' type='@' declared_type='NSDictionary*'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@16@0:8' selector='scriptingProperties' type='@8@0:4'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method type64='@24@0:8@16' selector='scriptingValueForSpecifier:' type='@12@0:4@8'>
<arg index='0' name='objectSpecifier' type='@' declared_type='NSScriptObjectSpecifier*'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='v24@0:8@16' selector='setScriptingProperties:' type='v12@0:4@8'>
<arg index='0' name='properties' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSScriptingComparisonMethods'>
<method type64='B24@0:8@16' selector='scriptingBeginsWith:' type='B12@0:4@8'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B24@0:8@16' selector='scriptingContains:' type='B12@0:4@8'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B24@0:8@16' selector='scriptingEndsWith:' type='B12@0:4@8'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B24@0:8@16' selector='scriptingIsEqualTo:' type='B12@0:4@8'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B24@0:8@16' selector='scriptingIsGreaterThan:' type='B12@0:4@8'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B24@0:8@16' selector='scriptingIsGreaterThanOrEqualTo:' type='B12@0:4@8'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B24@0:8@16' selector='scriptingIsLessThan:' type='B12@0:4@8'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B24@0:8@16' selector='scriptingIsLessThanOrEqualTo:' type='B12@0:4@8'>
<arg index='0' name='object' type='@' declared_type='id'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSSecureCoding'>
<method class_method='true' type64='B16@0:8' selector='supportsSecureCoding' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSSpellServerDelegate'>
<method type64='{_NSRange=QQ}48@0:8@16@24@32^@40' selector='spellServer:checkGrammarInString:language:details:' type='{_NSRange=II}24@0:4@8@12@16^@20'>
<arg index='0' name='sender' type='@' declared_type='NSSpellServer*'/>
<arg index='1' name='stringToCheck' type='@' declared_type='NSString*'/>
<arg index='2' name='language' type='@' declared_type='NSString*'/>
<arg index='3' name='details' type='^@' declared_type='NSArray**'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method type64='@72@0:8@16@24Q32Q40@48@56^q64' selector='spellServer:checkString:offset:types:options:orthography:wordCount:' type='@40@0:4@8@12I16Q20@28@32^i36'>
<arg index='0' name='sender' type='@' declared_type='NSSpellServer*'/>
<arg index='1' name='stringToCheck' type='@' declared_type='NSString*'/>
<arg index='2' name='offset' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='3' name='checkingTypes' type='Q' declared_type='NSTextCheckingTypes'/>
<arg index='4' name='options' type='@' declared_type='NSDictionary*'/>
<arg index='5' name='orthography' type='@' declared_type='NSOrthography*'/>
<arg index='6' name='wordCount' type64='^q' type='^i' declared_type='NSInteger*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='v40@0:8@16@24@32' selector='spellServer:didForgetWord:inLanguage:' type='v20@0:4@8@12@16'>
<arg index='0' name='sender' type='@' declared_type='NSSpellServer*'/>
<arg index='1' name='word' type='@' declared_type='NSString*'/>
<arg index='2' name='language' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8@16@24@32' selector='spellServer:didLearnWord:inLanguage:' type='v20@0:4@8@12@16'>
<arg index='0' name='sender' type='@' declared_type='NSSpellServer*'/>
<arg index='1' name='word' type='@' declared_type='NSString*'/>
<arg index='2' name='language' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='{_NSRange=QQ}52@0:8@16@24@32^q40B48' selector='spellServer:findMisspelledWordInString:language:wordCount:countOnly:' type='{_NSRange=II}28@0:4@8@12@16^i20B24'>
<arg index='0' name='sender' type='@' declared_type='NSSpellServer*'/>
<arg index='1' name='stringToCheck' type='@' declared_type='NSString*'/>
<arg index='2' name='language' type='@' declared_type='NSString*'/>
<arg index='3' name='wordCount' type64='^q' type='^i' declared_type='NSInteger*'/>
<arg index='4' name='countOnly' type='B' declared_type='BOOL'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method type64='v56@0:8@16Q24@32@40@48' selector='spellServer:recordResponse:toCorrection:forWord:language:' type='v28@0:4@8I12@16@20@24'>
<arg index='0' name='sender' type='@' declared_type='NSSpellServer*'/>
<arg index='1' name='response' type64='Q' type='I' declared_type='NSUInteger'/>
<arg index='2' name='correction' type='@' declared_type='NSString*'/>
<arg index='3' name='word' type='@' declared_type='NSString*'/>
<arg index='4' name='language' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@56@0:8@16{_NSRange=QQ}24@40@48' selector='spellServer:suggestCompletionsForPartialWordRange:inString:language:' type='@28@0:4@8{_NSRange=II}12@20@24'>
<arg index='0' name='sender' type='@' declared_type='NSSpellServer*'/>
<arg index='1' name='range' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<arg index='2' name='string' type='@' declared_type='NSString*'/>
<arg index='3' name='language' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='@40@0:8@16@24@32' selector='spellServer:suggestGuessesForWord:inLanguage:' type='@20@0:4@8@12@16'>
<arg index='0' name='sender' type='@' declared_type='NSSpellServer*'/>
<arg index='1' name='word' type='@' declared_type='NSString*'/>
<arg index='2' name='language' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</informal_protocol>
<informal_protocol name='NSStreamDelegate'>
<method type64='v32@0:8@16Q24' selector='stream:handleEvent:' type='v16@0:4@8I12'>
<arg index='0' name='aStream' type='@' declared_type='NSStream*'/>
<arg index='1' name='eventCode' type64='Q' type='I' declared_type='NSStreamEvent'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSThreadPerformAdditions'>
<method type64='v44@0:8:16@24@32B40' selector='performSelector:onThread:withObject:waitUntilDone:' type='v24@0:4:8@12@16B20'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<arg index='1' name='thr' type='@' declared_type='NSThread*'/>
<arg index='2' name='arg' type='@' declared_type='id'/>
<arg index='3' name='wait' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v52@0:8:16@24@32B40@44' selector='performSelector:onThread:withObject:waitUntilDone:modes:' type='v28@0:4:8@12@16B20@24'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<arg index='1' name='thr' type='@' declared_type='NSThread*'/>
<arg index='2' name='arg' type='@' declared_type='id'/>
<arg index='3' name='wait' type='B' declared_type='BOOL'/>
<arg index='4' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8:16@24' selector='performSelectorInBackground:withObject:' type='v16@0:4:8@12'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<arg index='1' name='arg' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v36@0:8:16@24B32' selector='performSelectorOnMainThread:withObject:waitUntilDone:' type='v20@0:4:8@12B16'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<arg index='1' name='arg' type='@' declared_type='id'/>
<arg index='2' name='wait' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v44@0:8:16@24B32@36' selector='performSelectorOnMainThread:withObject:waitUntilDone:modes:' type='v24@0:4:8@12B16@20'>
<arg index='0' name='aSelector' type=':' declared_type='SEL'/>
<arg index='1' name='arg' type='@' declared_type='id'/>
<arg index='2' name='wait' type='B' declared_type='BOOL'/>
<arg index='3' name='array' type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLAuthenticationChallengeSender'>
<method type64='v24@0:8@16' selector='cancelAuthenticationChallenge:' type='v12@0:4@8'>
<arg index='0' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='continueWithoutCredentialForAuthenticationChallenge:' type='v12@0:4@8'>
<arg index='0' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='performDefaultHandlingForAuthenticationChallenge:' type='v12@0:4@8'>
<arg index='0' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='rejectProtectionSpaceAndContinueWithChallenge:' type='v12@0:4@8'>
<arg index='0' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='useCredential:forAuthenticationChallenge:' type='v16@0:4@8@12'>
<arg index='0' name='credential' type='@' declared_type='NSURLCredential*'/>
<arg index='1' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLClient'>
<method type64='v32@0:8@16@24' selector='URL:resourceDataDidBecomeAvailable:' type='v16@0:4@8@12'>
<arg index='0' name='sender' type='@' declared_type='NSURL*'/>
<arg index='1' name='newBytes' type='@' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='URL:resourceDidFailLoadingWithReason:' type='v16@0:4@8@12'>
<arg index='0' name='sender' type='@' declared_type='NSURL*'/>
<arg index='1' name='reason' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='URLResourceDidCancelLoading:' type='v12@0:4@8'>
<arg index='0' name='sender' type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='URLResourceDidFinishLoading:' type='v12@0:4@8'>
<arg index='0' name='sender' type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLConnectionDataDelegate'>
<method type64='v32@0:8@16@24' selector='connection:didReceiveData:' type='v16@0:4@8@12'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='data' type='@' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='connection:didReceiveResponse:' type='v16@0:4@8@12'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='response' type='@' declared_type='NSURLResponse*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v48@0:8@16q24q32q40' selector='connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:' type='v24@0:4@8i12i16i20'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='bytesWritten' type64='q' type='i' declared_type='NSInteger'/>
<arg index='2' name='totalBytesWritten' type64='q' type='i' declared_type='NSInteger'/>
<arg index='3' name='totalBytesExpectedToWrite' type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@32@0:8@16@24' selector='connection:needNewBodyStream:' type='@16@0:4@8@12'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='request' type='@' declared_type='NSURLRequest*'/>
<retval type='@' declared_type='NSInputStream*'/>
</method>
<method type64='@32@0:8@16@24' selector='connection:willCacheResponse:' type='@16@0:4@8@12'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='cachedResponse' type='@' declared_type='NSCachedURLResponse*'/>
<retval type='@' declared_type='NSCachedURLResponse*'/>
</method>
<method type64='@40@0:8@16@24@32' selector='connection:willSendRequest:redirectResponse:' type='@20@0:4@8@12@16'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='request' type='@' declared_type='NSURLRequest*'/>
<arg index='2' name='response' type='@' declared_type='NSURLResponse*'/>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method type64='v24@0:8@16' selector='connectionDidFinishLoading:' type='v12@0:4@8'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLConnectionDelegate'>
<method type64='B32@0:8@16@24' selector='connection:canAuthenticateAgainstProtectionSpace:' type='B16@0:4@8@12'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='protectionSpace' type='@' declared_type='NSURLProtectionSpace*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v32@0:8@16@24' selector='connection:didCancelAuthenticationChallenge:' type='v16@0:4@8@12'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='connection:didFailWithError:' type='v16@0:4@8@12'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='connection:didReceiveAuthenticationChallenge:' type='v16@0:4@8@12'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='connection:willSendRequestForAuthenticationChallenge:' type='v16@0:4@8@12'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B24@0:8@16' selector='connectionShouldUseCredentialStorage:' type='B12@0:4@8'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLConnectionDownloadDelegate'>
<method type64='v48@0:8@16q24q32q40' selector='connection:didWriteData:totalBytesWritten:expectedTotalBytes:' type='v36@0:4@8q12q20q28'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='bytesWritten' type='q' declared_type='long long'/>
<arg index='2' name='totalBytesWritten' type='q' declared_type='long long'/>
<arg index='3' name='expectedTotalBytes' type='q' declared_type='long long'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='connectionDidFinishDownloading:destinationURL:' type='v16@0:4@8@12'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='destinationURL' type='@' declared_type='NSURL*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8@16q24q32' selector='connectionDidResumeDownloading:totalBytesWritten:expectedTotalBytes:' type='v28@0:4@8q12q20'>
<arg index='0' name='connection' type='@' declared_type='NSURLConnection*'/>
<arg index='1' name='totalBytesWritten' type='q' declared_type='long long'/>
<arg index='2' name='expectedTotalBytes' type='q' declared_type='long long'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLDownloadDelegate'>
<method type64='B32@0:8@16@24' selector='download:canAuthenticateAgainstProtectionSpace:' type='B16@0:4@8@12'>
<arg index='0' name='connection' type='@' declared_type='NSURLDownload*'/>
<arg index='1' name='protectionSpace' type='@' declared_type='NSURLProtectionSpace*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v32@0:8@16@24' selector='download:decideDestinationWithSuggestedFilename:' type='v16@0:4@8@12'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<arg index='1' name='filename' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='download:didCancelAuthenticationChallenge:' type='v16@0:4@8@12'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<arg index='1' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='download:didCreateDestination:' type='v16@0:4@8@12'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<arg index='1' name='path' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='download:didFailWithError:' type='v16@0:4@8@12'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='download:didReceiveAuthenticationChallenge:' type='v16@0:4@8@12'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<arg index='1' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16Q24' selector='download:didReceiveDataOfLength:' type='v16@0:4@8I12'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<arg index='1' name='length' type64='Q' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='download:didReceiveResponse:' type='v16@0:4@8@12'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<arg index='1' name='response' type='@' declared_type='NSURLResponse*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B32@0:8@16@24' selector='download:shouldDecodeSourceDataOfMIMEType:' type='B16@0:4@8@12'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<arg index='1' name='encodingType' type='@' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v40@0:8@16@24q32' selector='download:willResumeWithResponse:fromByte:' type='v24@0:4@8@12q16'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<arg index='1' name='response' type='@' declared_type='NSURLResponse*'/>
<arg index='2' name='startingByte' type='q' declared_type='long long'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@40@0:8@16@24@32' selector='download:willSendRequest:redirectResponse:' type='@20@0:4@8@12@16'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<arg index='1' name='request' type='@' declared_type='NSURLRequest*'/>
<arg index='2' name='redirectResponse' type='@' declared_type='NSURLResponse*'/>
<retval type='@' declared_type='NSURLRequest*'/>
</method>
<method type64='v24@0:8@16' selector='downloadDidBegin:' type='v12@0:4@8'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='downloadDidFinish:' type='v12@0:4@8'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B24@0:8@16' selector='downloadShouldUseCredentialStorage:' type='B12@0:4@8'>
<arg index='0' name='download' type='@' declared_type='NSURLDownload*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLHandleClient'>
<method type64='v32@0:8@16@24' selector='URLHandle:resourceDataDidBecomeAvailable:' type='v16@0:4@8@12'>
<arg index='0' name='sender' type='@' declared_type='NSURLHandle*'/>
<arg index='1' name='newBytes' type='@' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='URLHandle:resourceDidFailLoadingWithReason:' type='v16@0:4@8@12'>
<arg index='0' name='sender' type='@' declared_type='NSURLHandle*'/>
<arg index='1' name='reason' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='URLHandleResourceDidBeginLoading:' type='v12@0:4@8'>
<arg index='0' name='sender' type='@' declared_type='NSURLHandle*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='URLHandleResourceDidCancelLoading:' type='v12@0:4@8'>
<arg index='0' name='sender' type='@' declared_type='NSURLHandle*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='URLHandleResourceDidFinishLoading:' type='v12@0:4@8'>
<arg index='0' name='sender' type='@' declared_type='NSURLHandle*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSURLProtocolClient'>
<method type64='v32@0:8@16@24' selector='URLProtocol:cachedResponseIsValid:' type='v16@0:4@8@12'>
<arg index='0' name='protocol' type='@' declared_type='NSURLProtocol*'/>
<arg index='1' name='cachedResponse' type='@' declared_type='NSCachedURLResponse*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='URLProtocol:didCancelAuthenticationChallenge:' type='v16@0:4@8@12'>
<arg index='0' name='protocol' type='@' declared_type='NSURLProtocol*'/>
<arg index='1' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='URLProtocol:didFailWithError:' type='v16@0:4@8@12'>
<arg index='0' name='protocol' type='@' declared_type='NSURLProtocol*'/>
<arg index='1' name='error' type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='URLProtocol:didLoadData:' type='v16@0:4@8@12'>
<arg index='0' name='protocol' type='@' declared_type='NSURLProtocol*'/>
<arg index='1' name='data' type='@' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='URLProtocol:didReceiveAuthenticationChallenge:' type='v16@0:4@8@12'>
<arg index='0' name='protocol' type='@' declared_type='NSURLProtocol*'/>
<arg index='1' name='challenge' type='@' declared_type='NSURLAuthenticationChallenge*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8@16@24Q32' selector='URLProtocol:didReceiveResponse:cacheStoragePolicy:' type='v20@0:4@8@12I16'>
<arg index='0' name='protocol' type='@' declared_type='NSURLProtocol*'/>
<arg index='1' name='response' type='@' declared_type='NSURLResponse*'/>
<arg index='2' name='policy' type64='Q' type='I' declared_type='NSURLCacheStoragePolicy'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8@16@24@32' selector='URLProtocol:wasRedirectedToRequest:redirectResponse:' type='v20@0:4@8@12@16'>
<arg index='0' name='protocol' type='@' declared_type='NSURLProtocol*'/>
<arg index='1' name='request' type='@' declared_type='NSURLRequest*'/>
<arg index='2' name='redirectResponse' type='@' declared_type='NSURLResponse*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='URLProtocolDidFinishLoading:' type='v12@0:4@8'>
<arg index='0' name='protocol' type='@' declared_type='NSURLProtocol*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSUserNotificationCenterDelegate'>
<method type64='v32@0:8@16@24' selector='userNotificationCenter:didActivateNotification:' type='v16@0:4@8@12'>
<arg index='0' name='center' type='@' declared_type='NSUserNotificationCenter*'/>
<arg index='1' name='notification' type='@' declared_type='NSUserNotification*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='userNotificationCenter:didDeliverNotification:' type='v16@0:4@8@12'>
<arg index='0' name='center' type='@' declared_type='NSUserNotificationCenter*'/>
<arg index='1' name='notification' type='@' declared_type='NSUserNotification*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B32@0:8@16@24' selector='userNotificationCenter:shouldPresentNotification:' type='B16@0:4@8@12'>
<arg index='0' name='center' type='@' declared_type='NSUserNotificationCenter*'/>
<arg index='1' name='notification' type='@' declared_type='NSUserNotification*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSXMLParserDelegate'>
<method type64='v48@0:8@16@24@32@40' selector='parser:didEndElement:namespaceURI:qualifiedName:' type='v24@0:4@8@12@16@20'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='elementName' type='@' declared_type='NSString*'/>
<arg index='2' name='namespaceURI' type='@' declared_type='NSString*'/>
<arg index='3' name='qName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='parser:didEndMappingPrefix:' type='v16@0:4@8@12'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='prefix' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v56@0:8@16@24@32@40@48' selector='parser:didStartElement:namespaceURI:qualifiedName:attributes:' type='v28@0:4@8@12@16@20@24'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='elementName' type='@' declared_type='NSString*'/>
<arg index='2' name='namespaceURI' type='@' declared_type='NSString*'/>
<arg index='3' name='qName' type='@' declared_type='NSString*'/>
<arg index='4' name='attributeDict' type='@' declared_type='NSDictionary*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8@16@24@32' selector='parser:didStartMappingPrefix:toURI:' type='v20@0:4@8@12@16'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='prefix' type='@' declared_type='NSString*'/>
<arg index='2' name='namespaceURI' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v56@0:8@16@24@32@40@48' selector='parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:' type='v28@0:4@8@12@16@20@24'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='attributeName' type='@' declared_type='NSString*'/>
<arg index='2' name='elementName' type='@' declared_type='NSString*'/>
<arg index='3' name='type' type='@' declared_type='NSString*'/>
<arg index='4' name='defaultValue' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='parser:foundCDATA:' type='v16@0:4@8@12'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='CDATABlock' type='@' declared_type='NSData*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='parser:foundCharacters:' type='v16@0:4@8@12'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='string' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='parser:foundComment:' type='v16@0:4@8@12'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='comment' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8@16@24@32' selector='parser:foundElementDeclarationWithName:model:' type='v20@0:4@8@12@16'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='elementName' type='@' declared_type='NSString*'/>
<arg index='2' name='model' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v48@0:8@16@24@32@40' selector='parser:foundExternalEntityDeclarationWithName:publicID:systemID:' type='v24@0:4@8@12@16@20'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='publicID' type='@' declared_type='NSString*'/>
<arg index='3' name='systemID' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='parser:foundIgnorableWhitespace:' type='v16@0:4@8@12'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='whitespaceString' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8@16@24@32' selector='parser:foundInternalEntityDeclarationWithName:value:' type='v20@0:4@8@12@16'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='value' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v48@0:8@16@24@32@40' selector='parser:foundNotationDeclarationWithName:publicID:systemID:' type='v24@0:4@8@12@16@20'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='publicID' type='@' declared_type='NSString*'/>
<arg index='3' name='systemID' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8@16@24@32' selector='parser:foundProcessingInstructionWithTarget:data:' type='v20@0:4@8@12@16'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='target' type='@' declared_type='NSString*'/>
<arg index='2' name='data' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v56@0:8@16@24@32@40@48' selector='parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:' type='v28@0:4@8@12@16@20@24'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='publicID' type='@' declared_type='NSString*'/>
<arg index='3' name='systemID' type='@' declared_type='NSString*'/>
<arg index='4' name='notationName' type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='parser:parseErrorOccurred:' type='v16@0:4@8@12'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='parseError' type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@40@0:8@16@24@32' selector='parser:resolveExternalEntityName:systemID:' type='@20@0:4@8@12@16'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='name' type='@' declared_type='NSString*'/>
<arg index='2' name='systemID' type='@' declared_type='NSString*'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method type64='v32@0:8@16@24' selector='parser:validationErrorOccurred:' type='v16@0:4@8@12'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<arg index='1' name='validationError' type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='parserDidEndDocument:' type='v12@0:4@8'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='parserDidStartDocument:' type='v12@0:4@8'>
<arg index='0' name='parser' type='@' declared_type='NSXMLParser*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSXPCListenerDelegate'>
<method type64='B32@0:8@16@24' selector='listener:shouldAcceptNewConnection:' type='B16@0:4@8@12'>
<arg index='0' name='listener' type='@' declared_type='NSXPCListener*'/>
<arg index='1' name='newConnection' type='@' declared_type='NSXPCConnection*'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSXPCProxyCreating'>
<method type64='@16@0:8' selector='remoteObjectProxy' type='@8@0:4'>
<retval type='@' declared_type='id'/>
</method>
<method type64='@24@0:8@?16' selector='remoteObjectProxyWithErrorHandler:' type='@12@0:4@?8'>
<arg function_pointer='true' index='0' name='handler' type='@?' declared_type='void (^)(NSError *)'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
</signatures>
