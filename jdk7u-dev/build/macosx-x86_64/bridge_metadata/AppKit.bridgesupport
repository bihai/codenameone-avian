<?xml version='1.0'?>
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework'/>
<depends_on path='/System/Library/Frameworks/AudioToolbox.framework'/>
<depends_on path='/System/Library/Frameworks/AudioUnit.framework'/>
<depends_on path='/System/Library/Frameworks/CoreData.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework'/>
<depends_on path='/System/Library/Frameworks/QuartzCore.framework'/>
<depends_on path='/System/Library/Frameworks/Security.framework'/>
<depends_on path='/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework'/>
<depends_on path='/System/Library/Frameworks/CoreAudio.framework'/>
<depends_on path='/System/Library/Frameworks/DiskArbitration.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/OpenGL.framework'/>
<depends_on path='/System/Library/Frameworks/CoreText.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/ImageIO.framework'/>
<struct type64='{_NSEdgeInsets=&quot;top&quot;d&quot;left&quot;d&quot;bottom&quot;d&quot;right&quot;d}' type='{_NSEdgeInsets=&quot;top&quot;f&quot;left&quot;f&quot;bottom&quot;f&quot;right&quot;f}' name='NSEdgeInsets'>
<field type64='d' type='f' declared_type='CGFloat' name='top'/>
<field type64='d' type='f' declared_type='CGFloat' name='left'/>
<field type64='d' type='f' declared_type='CGFloat' name='bottom'/>
<field type64='d' type='f' declared_type='CGFloat' name='right'/>
</struct>
<opaque type='^{_NSModalSession=}' name='NSModalSession'/>
<opaque type='^{_CGLContextObject=}' name='NSOpenGLContextAuxiliary'/>
<opaque type='^{_CGLPixelFormatObject=}' name='NSOpenGLPixelFormatAuxiliary'/>
<opaque type='^{NSScreenAuxiliary=}' name='NSScreenAuxiliaryOpaque'/>
<opaque type='^{__NSProgressIndicatorThreadInfo=}' name='_NSProgressIndicatorThreadInfo'/>
<opaque type='^{NSThreadPrivate=}' name='_NSThreadPrivate'/>
<constant type='@' declared_type='NSString*' name='NSAbortModalException'/>
<constant type='@' declared_type='NSString*' name='NSAbortPrintingException'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityAllowedValuesAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityApplicationActivatedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityApplicationDeactivatedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityApplicationHiddenNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityApplicationRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityApplicationShownNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityAscendingSortDirectionValue'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityAttachmentTextAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityAttributedStringForRangeParameterizedAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityAutocorrectedTextAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityBackgroundColorTextAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityBoundsForRangeParameterizedAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityBrowserRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityBusyIndicatorRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityButtonRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityCancelAction'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityCancelButtonAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityCellForColumnAndRowParameterizedAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityCellRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityCenterTabStopMarkerTypeValue'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityCentimetersUnitValue'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityCheckBoxRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityChildrenAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityClearButtonAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityCloseButtonAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityCloseButtonSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityColorWellRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityColumnCountAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityColumnHeaderUIElementsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityColumnIndexRangeAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityColumnRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityColumnTitlesAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityColumnsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityComboBoxRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityConfirmAction'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityContentListSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityContentsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityCreatedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityCriticalValueAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityDecimalTabStopMarkerTypeValue'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityDecrementAction'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityDecrementArrowSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityDecrementButtonAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityDecrementPageSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityDefaultButtonAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityDefinitionListSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityDeleteAction'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityDescendingSortDirectionValue'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityDescriptionAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityDialogSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityDisclosedByRowAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityDisclosedRowsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityDisclosingAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityDisclosureLevelAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityDisclosureTriangleRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityDocumentAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityDrawerCreatedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityDrawerRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityEditedAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityEnabledAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityErrorCodeExceptionInfo'/>
<constant type='@' declared_type='NSString*' name='NSAccessibilityException'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityExpandedAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityExtrasMenuBarAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityFilenameAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityFirstLineIndentMarkerTypeValue'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityFloatingWindowSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityFocusedAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityFocusedUIElementAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityFocusedUIElementChangedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityFocusedWindowAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityFocusedWindowChangedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityFontFamilyKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityFontNameKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityFontSizeKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityFontTextAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityForegroundColorTextAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityFrontmostAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityFullScreenButtonAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityFullScreenButtonSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityGridRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityGroupRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityGrowAreaAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityGrowAreaRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityHandleRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityHandlesAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityHeadIndentMarkerTypeValue'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityHeaderAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityHelpAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityHelpTagCreatedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityHelpTagRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityHiddenAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityHorizontalOrientationValue'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityHorizontalScrollBarAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityHorizontalUnitDescriptionAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityHorizontalUnitsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityIdentifierAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityImageRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityInchesUnitValue'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityIncrementAction'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityIncrementArrowSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityIncrementButtonAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityIncrementPageSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityIncrementorRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityIndexAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityInsertionPointLineNumberAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityLabelUIElementsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityLabelValueAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityLayoutAreaRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityLayoutItemRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityLayoutPointForScreenPointParameterizedAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityLayoutSizeForScreenSizeParameterizedAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityLeftTabStopMarkerTypeValue'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityLevelIndicatorRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityLineForIndexParameterizedAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityLinkRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityLinkTextAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityLinkedUIElementsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityListRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMainAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMainWindowAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMainWindowChangedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMarkerGroupUIElementAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMarkerTypeAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMarkerTypeDescriptionAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMarkerUIElementsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMarkerValuesAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMatteContentUIElementAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMatteHoleAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMatteRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMaxValueAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMenuBarAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMenuBarRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMenuButtonRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMenuItemRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMenuRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMinValueAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMinimizeButtonAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMinimizeButtonSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMinimizedAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMisspelledTextAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityModalAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityMovedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityNextContentsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityNumberOfCharactersAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityOrderedByRowAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityOrientationAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityOutlineRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityOutlineRowSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityOverflowButtonAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityParentAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityPicasUnitValue'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityPickAction'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityPlaceholderValueAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityPointsUnitValue'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityPopUpButtonRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityPopoverRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityPositionAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityPressAction'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityPreviousContentsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityProgressIndicatorRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityProxyAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityRTFForRangeParameterizedAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityRadioButtonRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityRadioGroupRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityRaiseAction'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityRangeForIndexParameterizedAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityRangeForLineParameterizedAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityRangeForPositionParameterizedAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityRatingIndicatorSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityRelevanceIndicatorRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityResizedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityRightTabStopMarkerTypeValue'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityRoleAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityRoleDescriptionAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityRowCollapsedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityRowCountAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityRowCountChangedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityRowExpandedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityRowHeaderUIElementsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityRowIndexRangeAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityRowRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityRowsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityRulerMarkerRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityRulerRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityScreenPointForLayoutPointParameterizedAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityScreenSizeForLayoutSizeParameterizedAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityScrollAreaRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityScrollBarRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySearchButtonAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySearchFieldSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySearchMenuAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySecureTextFieldSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySelectedAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySelectedCellsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySelectedCellsChangedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySelectedChildrenAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySelectedChildrenChangedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySelectedChildrenMovedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySelectedColumnsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySelectedColumnsChangedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySelectedRowsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySelectedRowsChangedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySelectedTextAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySelectedTextChangedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySelectedTextRangeAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySelectedTextRangesAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityServesAsTitleForUIElementsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityShadowTextAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySharedCharacterRangeAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySharedTextUIElementsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySheetCreatedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySheetRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityShowMenuAction'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityShownMenuAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySizeAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySliderRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySortButtonRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySortButtonSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySortDirectionAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySplitGroupRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySplitterRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySplittersAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityStandardWindowSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityStaticTextRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityStrikethroughColorTextAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityStrikethroughTextAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityStringForRangeParameterizedAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityStyleRangeForIndexParameterizedAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySubroleAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySuperscriptTextAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySystemDialogSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySystemFloatingWindowSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilitySystemWideRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityTabGroupRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityTableRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityTableRowSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityTabsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityTailIndentMarkerTypeValue'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityTextAreaRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityTextAttachmentSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityTextFieldRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityTextLinkSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityTimelineSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityTitleAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityTitleChangedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityTitleUIElementAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityToolbarButtonAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityToolbarButtonSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityToolbarRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityTopLevelUIElementAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityUIElementDestroyedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityURLAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityUnderlineColorTextAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityUnderlineTextAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityUnitDescriptionAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityUnitsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityUnitsChangedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityUnknownMarkerTypeValue'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityUnknownOrientationValue'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityUnknownRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityUnknownSortDirectionValue'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityUnknownSubrole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityUnknownUnitValue'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityValueAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityValueChangedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityValueDescriptionAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityValueIndicatorRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityVerticalOrientationValue'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityVerticalScrollBarAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityVerticalUnitDescriptionAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityVerticalUnitsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityVisibleCellsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityVisibleCharacterRangeAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityVisibleChildrenAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityVisibleColumnsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityVisibleNameKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityVisibleRowsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityWarningValueAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityWindowAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityWindowCreatedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityWindowDeminiaturizedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityWindowMiniaturizedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityWindowMovedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityWindowResizedNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityWindowRole'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityWindowsAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityZoomButtonAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSAccessibilityZoomButtonSubrole'/>
<constant type='@' declared_type='NSString*' name='NSAlignmentBinding'/>
<constant type='@' declared_type='NSString*' name='NSAllRomanInputSourcesLocaleIdentifier'/>
<constant type='@' declared_type='NSString*' name='NSAllowsEditingMultipleValuesSelectionBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSAllowsNullArgumentBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSAlternateImageBinding'/>
<constant type='@' declared_type='NSString*' name='NSAlternateTitleBinding'/>
<constant type='@' declared_type='NSString*' name='NSAlwaysPresentsApplicationModalAlertsBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSAnimateBinding'/>
<constant type='@' declared_type='NSString*' name='NSAnimationDelayBinding'/>
<constant type='@' declared_type='NSString*' name='NSAnimationProgressMark'/>
<constant type='@' declared_type='NSString*' name='NSAnimationProgressMarkNotification'/>
<constant type='@' declared_type='NSString*' name='NSAnimationTriggerOrderIn'/>
<constant type='@' declared_type='NSString*' name='NSAnimationTriggerOrderOut'/>
<constant type='@' declared_type='NSString*' name='NSAntialiasThresholdChangedNotification'/>
<constant type='@' declared_type='id' name='NSApp'/>
<constant type='@' declared_type='NSString*' name='NSAppKitIgnoredException'/>
<constant type='d' const='true' declared_type='double' name='NSAppKitVersionNumber'/>
<constant type='@' declared_type='NSString*' name='NSAppKitVirtualMemoryException'/>
<constant type='@' declared_type='NSString*' name='NSApplicationDidBecomeActiveNotification'/>
<constant type='@' declared_type='NSString*' name='NSApplicationDidChangeScreenParametersNotification'/>
<constant type='@' declared_type='NSString*' name='NSApplicationDidFinishLaunchingNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSApplicationDidFinishRestoringWindowsNotification'/>
<constant type='@' declared_type='NSString*' name='NSApplicationDidHideNotification'/>
<constant type='@' declared_type='NSString*' name='NSApplicationDidResignActiveNotification'/>
<constant type='@' declared_type='NSString*' name='NSApplicationDidUnhideNotification'/>
<constant type='@' declared_type='NSString*' name='NSApplicationDidUpdateNotification'/>
<constant type='@' declared_type='NSString*' name='NSApplicationFileType'/>
<constant type='@' const='true' declared_type='NSString*' name='NSApplicationLaunchIsDefaultLaunchKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSApplicationLaunchRemoteNotificationKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSApplicationLaunchUserNotificationKey'/>
<constant type='@' declared_type='NSString*' name='NSApplicationWillBecomeActiveNotification'/>
<constant type='@' declared_type='NSString*' name='NSApplicationWillFinishLaunchingNotification'/>
<constant type='@' declared_type='NSString*' name='NSApplicationWillHideNotification'/>
<constant type='@' declared_type='NSString*' name='NSApplicationWillResignActiveNotification'/>
<constant type='@' declared_type='NSString*' name='NSApplicationWillTerminateNotification'/>
<constant type='@' declared_type='NSString*' name='NSApplicationWillUnhideNotification'/>
<constant type='@' declared_type='NSString*' name='NSApplicationWillUpdateNotification'/>
<constant type='@' declared_type='NSString*' name='NSArgumentBinding'/>
<constant type='@' declared_type='NSString*' name='NSAttachmentAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSAttributedStringBinding'/>
<constant type='@' declared_type='NSString*' name='NSAuthorDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSBackgroundColorAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSBackgroundColorDocumentAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSBackingPropertyOldColorSpaceKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSBackingPropertyOldScaleFactorKey'/>
<constant type='@' declared_type='NSString*' name='NSBadBitmapParametersException'/>
<constant type='@' declared_type='NSString*' name='NSBadComparisonException'/>
<constant type='@' declared_type='NSString*' name='NSBadRTFColorTableException'/>
<constant type='@' declared_type='NSString*' name='NSBadRTFDirectiveException'/>
<constant type='@' declared_type='NSString*' name='NSBadRTFFontTableException'/>
<constant type='@' declared_type='NSString*' name='NSBadRTFStyleSheetException'/>
<constant type='@' declared_type='NSString*' name='NSBaseURLDocumentOption'/>
<constant type='@' declared_type='NSString*' name='NSBaselineOffsetAttributeName'/>
<constant type64='d' type='f' const='true' declared_type='CGFloat' name='NSBlack'/>
<constant type='@' declared_type='NSString*' name='NSBottomMarginDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSBrowserColumnConfigurationDidChangeNotification'/>
<constant type='@' declared_type='NSString*' name='NSBrowserIllegalDelegateException'/>
<constant type='@' declared_type='NSString*' name='NSCalibratedBlackColorSpace'/>
<constant type='@' declared_type='NSString*' name='NSCalibratedRGBColorSpace'/>
<constant type='@' declared_type='NSString*' name='NSCalibratedWhiteColorSpace'/>
<constant type='@' declared_type='NSString*' name='NSCategoryDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSCharacterEncodingDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSCharacterEncodingDocumentOption'/>
<constant type='@' declared_type='NSString*' name='NSCharacterShapeAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSCocoaVersionDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSColorListDidChangeNotification'/>
<constant type='@' declared_type='NSString*' name='NSColorListIOException'/>
<constant type='@' declared_type='NSString*' name='NSColorListNotEditableException'/>
<constant type='@' declared_type='NSString*' name='NSColorPanelColorDidChangeNotification'/>
<constant type='@' declared_type='NSString*' name='NSColorPboardType'/>
<constant type='@' declared_type='NSString*' name='NSComboBoxSelectionDidChangeNotification'/>
<constant type='@' declared_type='NSString*' name='NSComboBoxSelectionIsChangingNotification'/>
<constant type='@' declared_type='NSString*' name='NSComboBoxWillDismissNotification'/>
<constant type='@' declared_type='NSString*' name='NSComboBoxWillPopUpNotification'/>
<constant type='@' declared_type='NSString*' name='NSCommentDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSCompanyDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSConditionallySetsEditableBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSConditionallySetsEnabledBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSConditionallySetsHiddenBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSContentArrayBinding'/>
<constant type='@' declared_type='NSString*' name='NSContentArrayForMultipleSelectionBinding'/>
<constant type='@' declared_type='NSString*' name='NSContentBinding'/>
<constant type='@' declared_type='NSString*' name='NSContentDictionaryBinding'/>
<constant type='@' declared_type='NSString*' name='NSContentHeightBinding'/>
<constant type='@' declared_type='NSString*' name='NSContentObjectBinding'/>
<constant type='@' declared_type='NSString*' name='NSContentObjectsBinding'/>
<constant type='@' declared_type='NSString*' name='NSContentPlacementTagBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSContentSetBinding'/>
<constant type='@' declared_type='NSString*' name='NSContentValuesBinding'/>
<constant type='@' declared_type='NSString*' name='NSContentWidthBinding'/>
<constant type='@' declared_type='NSString*' name='NSContextHelpModeDidActivateNotification'/>
<constant type='@' declared_type='NSString*' name='NSContextHelpModeDidDeactivateNotification'/>
<constant type='@' declared_type='NSString*' name='NSContinuouslyUpdatesValueBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSControlTextDidBeginEditingNotification'/>
<constant type='@' declared_type='NSString*' name='NSControlTextDidChangeNotification'/>
<constant type='@' declared_type='NSString*' name='NSControlTextDidEndEditingNotification'/>
<constant type='@' declared_type='NSString*' name='NSControlTintDidChangeNotification'/>
<constant type='@' declared_type='NSString*' name='NSConvertedDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSCopyrightDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSCreatesSortDescriptorBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSCreationTimeDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSCriticalValueBinding'/>
<constant type='@' declared_type='NSString*' name='NSCursorAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSCustomColorSpace'/>
<constant type64='d' type='f' const='true' declared_type='CGFloat' name='NSDarkGray'/>
<constant type='@' declared_type='NSString*' name='NSDataBinding'/>
<constant type='@' declared_type='NSString*' name='NSDefaultAttributesDocumentOption'/>
<constant type='@' declared_type='NSString*' name='NSDefaultTabIntervalDocumentAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSDefinitionPresentationTypeDictionaryApplication'/>
<constant type='@' const='true' declared_type='NSString*' name='NSDefinitionPresentationTypeKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSDefinitionPresentationTypeOverlay'/>
<constant type='@' declared_type='NSString*' name='NSDeletesObjectsOnRemoveBindingsOption'/>
<constant type='@' declared_type='NSString*' name='NSDeviceBitsPerSample'/>
<constant type='@' declared_type='NSString*' name='NSDeviceBlackColorSpace'/>
<constant type='@' declared_type='NSString*' name='NSDeviceCMYKColorSpace'/>
<constant type='@' declared_type='NSString*' name='NSDeviceColorSpaceName'/>
<constant type='@' declared_type='NSString*' name='NSDeviceIsPrinter'/>
<constant type='@' declared_type='NSString*' name='NSDeviceIsScreen'/>
<constant type='@' declared_type='NSString*' name='NSDeviceRGBColorSpace'/>
<constant type='@' declared_type='NSString*' name='NSDeviceResolution'/>
<constant type='@' declared_type='NSString*' name='NSDeviceSize'/>
<constant type='@' declared_type='NSString*' name='NSDeviceWhiteColorSpace'/>
<constant type='@' declared_type='NSString*' name='NSDirectoryFileType'/>
<constant type='@' declared_type='NSString*' name='NSDisplayNameBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSDisplayPatternBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSDisplayPatternTitleBinding'/>
<constant type='@' declared_type='NSString*' name='NSDisplayPatternValueBinding'/>
<constant type='@' declared_type='NSString*' name='NSDocFormatTextDocumentType'/>
<constant type='@' declared_type='NSString*' name='NSDocumentEditedBinding'/>
<constant type='@' declared_type='NSString*' name='NSDocumentTypeDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSDocumentTypeDocumentOption'/>
<constant type='@' declared_type='NSString*' name='NSDoubleClickArgumentBinding'/>
<constant type='@' declared_type='NSString*' name='NSDoubleClickTargetBinding'/>
<constant type='@' declared_type='NSString*' name='NSDragPboard'/>
<constant type='@' declared_type='NSString*' name='NSDraggingException'/>
<constant type='@' const='true' declared_type='NSString*' name='NSDraggingImageComponentIconKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSDraggingImageComponentLabelKey'/>
<constant type='@' declared_type='NSString*' name='NSDrawerDidCloseNotification'/>
<constant type='@' declared_type='NSString*' name='NSDrawerDidOpenNotification'/>
<constant type='@' declared_type='NSString*' name='NSDrawerWillCloseNotification'/>
<constant type='@' declared_type='NSString*' name='NSDrawerWillOpenNotification'/>
<constant type='@' declared_type='NSString*' name='NSEditableBinding'/>
<constant type='@' declared_type='NSString*' name='NSEditorDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSEnabledBinding'/>
<constant type='@' declared_type='NSString*' name='NSEventTrackingRunLoopMode'/>
<constant type='@' declared_type='NSString*' name='NSExcludedElementsDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSExcludedKeysBinding'/>
<constant type='@' declared_type='NSString*' name='NSExpansionAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSFileContentsPboardType'/>
<constant type='@' declared_type='NSString*' name='NSFileTypeDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSFileTypeDocumentOption'/>
<constant type='@' declared_type='NSString*' name='NSFilenamesPboardType'/>
<constant type='@' declared_type='NSString*' name='NSFilesPromisePboardType'/>
<constant type='@' declared_type='NSString*' name='NSFilesystemFileType'/>
<constant type='@' declared_type='NSString*' name='NSFilterPredicateBinding'/>
<constant type='@' declared_type='NSString*' name='NSFindPanelCaseInsensitiveSearch'/>
<constant type='@' declared_type='NSString*' name='NSFindPanelSearchOptionsPboardType'/>
<constant type='@' declared_type='NSString*' name='NSFindPanelSubstringMatch'/>
<constant type='@' declared_type='NSString*' name='NSFindPboard'/>
<constant type='@' declared_type='NSString*' name='NSFontAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSFontBinding'/>
<constant type='@' declared_type='NSString*' name='NSFontBoldBinding'/>
<constant type='@' declared_type='NSString*' name='NSFontCascadeListAttribute'/>
<constant type='@' declared_type='NSString*' name='NSFontCharacterSetAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSFontCollectionActionKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSFontCollectionAllFonts'/>
<constant type='@' const='true' declared_type='NSString*' name='NSFontCollectionDidChangeNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSFontCollectionDisallowAutoActivationOption'/>
<constant type='@' const='true' declared_type='NSString*' name='NSFontCollectionFavorites'/>
<constant type='@' const='true' declared_type='NSString*' name='NSFontCollectionIncludeDisabledFontsOption'/>
<constant type='@' const='true' declared_type='NSString*' name='NSFontCollectionNameKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSFontCollectionOldNameKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSFontCollectionRecentlyUsed'/>
<constant type='@' const='true' declared_type='NSString*' name='NSFontCollectionRemoveDuplicatesOption'/>
<constant type='@' const='true' declared_type='NSString*' name='NSFontCollectionUser'/>
<constant type='@' const='true' declared_type='NSString*' name='NSFontCollectionVisibilityKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSFontCollectionWasHidden'/>
<constant type='@' const='true' declared_type='NSString*' name='NSFontCollectionWasRenamed'/>
<constant type='@' const='true' declared_type='NSString*' name='NSFontCollectionWasShown'/>
<constant type='@' declared_type='NSString*' name='NSFontColorAttribute'/>
<constant type='@' declared_type='NSString*' name='NSFontFaceAttribute'/>
<constant type='@' declared_type='NSString*' name='NSFontFamilyAttribute'/>
<constant type='@' declared_type='NSString*' name='NSFontFamilyNameBinding'/>
<constant type='@' declared_type='NSString*' name='NSFontFeatureSelectorIdentifierKey'/>
<constant type='@' declared_type='NSString*' name='NSFontFeatureSettingsAttribute'/>
<constant type='@' declared_type='NSString*' name='NSFontFeatureTypeIdentifierKey'/>
<constant type='@' declared_type='NSString*' name='NSFontFixedAdvanceAttribute'/>
<constant type64='^d' type='^f' const='true' declared_type='CGFloat*' name='NSFontIdentityMatrix'/>
<constant type='@' declared_type='NSString*' name='NSFontItalicBinding'/>
<constant type='@' declared_type='NSString*' name='NSFontMatrixAttribute'/>
<constant type='@' declared_type='NSString*' name='NSFontNameAttribute'/>
<constant type='@' declared_type='NSString*' name='NSFontNameBinding'/>
<constant type='@' declared_type='NSString*' name='NSFontPboard'/>
<constant type='@' declared_type='NSString*' name='NSFontPboardType'/>
<constant type='@' declared_type='NSString*' name='NSFontSetChangedNotification'/>
<constant type='@' declared_type='NSString*' name='NSFontSizeAttribute'/>
<constant type='@' declared_type='NSString*' name='NSFontSizeBinding'/>
<constant type='@' declared_type='NSString*' name='NSFontSlantTrait'/>
<constant type='@' declared_type='NSString*' name='NSFontSymbolicTrait'/>
<constant type='@' declared_type='NSString*' name='NSFontTraitsAttribute'/>
<constant type='@' declared_type='NSString*' name='NSFontUnavailableException'/>
<constant type='@' declared_type='NSString*' name='NSFontVariationAttribute'/>
<constant type='@' declared_type='NSString*' name='NSFontVariationAxisDefaultValueKey'/>
<constant type='@' declared_type='NSString*' name='NSFontVariationAxisIdentifierKey'/>
<constant type='@' declared_type='NSString*' name='NSFontVariationAxisMaximumValueKey'/>
<constant type='@' declared_type='NSString*' name='NSFontVariationAxisMinimumValueKey'/>
<constant type='@' declared_type='NSString*' name='NSFontVariationAxisNameKey'/>
<constant type='@' declared_type='NSString*' name='NSFontVisibleNameAttribute'/>
<constant type='@' declared_type='NSString*' name='NSFontWeightTrait'/>
<constant type='@' declared_type='NSString*' name='NSFontWidthTrait'/>
<constant type='@' declared_type='NSString*' name='NSForegroundColorAttributeName'/>
<constant type='@' const='true' declared_type='NSString*' name='NSFullScreenModeAllScreens'/>
<constant type='@' const='true' declared_type='NSString*' name='NSFullScreenModeApplicationPresentationOptions'/>
<constant type='@' const='true' declared_type='NSString*' name='NSFullScreenModeSetting'/>
<constant type='@' const='true' declared_type='NSString*' name='NSFullScreenModeWindowLevel'/>
<constant type='@' declared_type='NSString*' name='NSGeneralPboard'/>
<constant type='@' declared_type='NSString*' name='NSGlyphInfoAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSGraphicsContextDestinationAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSGraphicsContextPDFFormat'/>
<constant type='@' declared_type='NSString*' name='NSGraphicsContextPSFormat'/>
<constant type='@' declared_type='NSString*' name='NSGraphicsContextRepresentationFormatAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSHTMLPboardType'/>
<constant type='@' declared_type='NSString*' name='NSHTMLTextDocumentType'/>
<constant type='@' declared_type='NSString*' name='NSHandlesContentAsCompoundValueBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSHeaderTitleBinding'/>
<constant type='@' declared_type='NSString*' name='NSHiddenBinding'/>
<constant type='@' declared_type='NSString*' name='NSHyphenationFactorDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSIllegalSelectorException'/>
<constant type='@' declared_type='NSString*' name='NSImageBinding'/>
<constant type='@' declared_type='NSString*' name='NSImageCacheException'/>
<constant type='@' declared_type='NSString*' name='NSImageColorSyncProfileData'/>
<constant type='@' declared_type='NSString*' name='NSImageCompressionFactor'/>
<constant type='@' declared_type='NSString*' name='NSImageCompressionMethod'/>
<constant type='@' declared_type='NSString*' name='NSImageCurrentFrame'/>
<constant type='@' declared_type='NSString*' name='NSImageCurrentFrameDuration'/>
<constant type='@' declared_type='NSString*' name='NSImageDitherTransparency'/>
<constant type='@' declared_type='NSString*' name='NSImageEXIFData'/>
<constant type='@' declared_type='NSString*' name='NSImageFallbackBackgroundColor'/>
<constant type='@' declared_type='NSString*' name='NSImageFrameCount'/>
<constant type='@' declared_type='NSString*' name='NSImageGamma'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageHintCTM'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageHintInterpolation'/>
<constant type='@' declared_type='NSString*' name='NSImageInterlaced'/>
<constant type='@' declared_type='NSString*' name='NSImageLoopCount'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameActionTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameAddTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameAdvanced'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameApplicationIcon'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameBluetoothTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameBonjour'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameBookmarksTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameCaution'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameColorPanel'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameColumnViewTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameComputer'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameDotMac'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameEnterFullScreenTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameEveryone'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameExitFullScreenTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameFlowViewTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameFolder'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameFolderBurnable'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameFolderSmart'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameFollowLinkFreestandingTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameFontPanel'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameGoLeftTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameGoRightTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameHomeTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameIChatTheaterTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameIconViewTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameInfo'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameInvalidDataFreestandingTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameLeftFacingTriangleTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameListViewTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameLockLockedTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameLockUnlockedTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameMenuMixedStateTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameMenuOnStateTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameMobileMe'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameMultipleDocuments'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameNetwork'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNamePathTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNamePreferencesGeneral'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameQuickLookTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameRefreshFreestandingTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameRefreshTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameRemoveTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameRevealFreestandingTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameRightFacingTriangleTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameShareTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameSlideshowTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameSmartBadgeTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameStatusAvailable'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameStatusNone'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameStatusPartiallyAvailable'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameStatusUnavailable'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameStopProgressFreestandingTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameStopProgressTemplate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameTrashEmpty'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameTrashFull'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameUser'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameUserAccounts'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameUserGroup'/>
<constant type='@' const='true' declared_type='NSString*' name='NSImageNameUserGuest'/>
<constant type='@' declared_type='NSString*' name='NSImageProgressive'/>
<constant type='@' declared_type='NSString*' name='NSImageRGBColorTable'/>
<constant type='@' declared_type='NSString*' name='NSImageRepRegistryDidChangeNotification'/>
<constant type='@' declared_type='NSString*' name='NSIncludedKeysBinding'/>
<constant type='@' declared_type='NSString*' name='NSInitialKeyBinding'/>
<constant type='@' declared_type='NSString*' name='NSInitialValueBinding'/>
<constant type='@' declared_type='NSString*' name='NSInkTextPboardType'/>
<constant type='@' declared_type='NSString*' name='NSInsertsNullPlaceholderBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSInterfaceStyleDefault'/>
<constant type='@' declared_type='NSString*' name='NSInvokesSeparatelyWithArrayObjectsBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSIsIndeterminateBinding'/>
<constant type='@' declared_type='NSString*' name='NSKernAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSKeywordsDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSLabelBinding'/>
<constant type='@' declared_type='NSString*' name='NSLeftMarginDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSLigatureAttributeName'/>
<constant type64='d' type='f' const='true' declared_type='CGFloat' name='NSLightGray'/>
<constant type='@' declared_type='NSString*' name='NSLinkAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSLocalizedKeyDictionaryBinding'/>
<constant type='@' declared_type='NSString*' name='NSMacSimpleTextDocumentType'/>
<constant type='@' declared_type='NSString*' name='NSManagedObjectContextBinding'/>
<constant type='@' declared_type='NSString*' name='NSManagerDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSMarkedClauseSegmentAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSMaxValueBinding'/>
<constant type='@' declared_type='NSString*' name='NSMaxWidthBinding'/>
<constant type='@' declared_type='NSString*' name='NSMaximumRecentsBinding'/>
<constant type='@' declared_type='NSString*' name='NSMenuDidAddItemNotification'/>
<constant type='@' declared_type='NSString*' name='NSMenuDidBeginTrackingNotification'/>
<constant type='@' declared_type='NSString*' name='NSMenuDidChangeItemNotification'/>
<constant type='@' declared_type='NSString*' name='NSMenuDidEndTrackingNotification'/>
<constant type='@' declared_type='NSString*' name='NSMenuDidRemoveItemNotification'/>
<constant type='@' declared_type='NSString*' name='NSMenuDidSendActionNotification'/>
<constant type='@' declared_type='NSString*' name='NSMenuWillSendActionNotification'/>
<constant type='@' declared_type='NSString*' name='NSMinValueBinding'/>
<constant type='@' declared_type='NSString*' name='NSMinWidthBinding'/>
<constant type='@' declared_type='NSString*' name='NSMixedStateImageBinding'/>
<constant type='@' declared_type='NSString*' name='NSModalPanelRunLoopMode'/>
<constant type='@' declared_type='NSString*' name='NSModificationTimeDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSMultipleTextSelectionPboardType'/>
<constant type='@' declared_type='id' name='NSMultipleValuesMarker'/>
<constant type='@' declared_type='NSString*' name='NSMultipleValuesPlaceholderBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSNamedColorSpace'/>
<constant type='@' declared_type='NSString*' name='NSNibLoadingException'/>
<constant type='@' declared_type='NSString*' name='NSNibOwner'/>
<constant type='@' declared_type='NSString*' name='NSNibTopLevelObjects'/>
<constant type='@' declared_type='id' name='NSNoSelectionMarker'/>
<constant type='@' declared_type='NSString*' name='NSNoSelectionPlaceholderBindingOption'/>
<constant type='@' declared_type='id' name='NSNotApplicableMarker'/>
<constant type='@' declared_type='NSString*' name='NSNotApplicablePlaceholderBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSNullPlaceholderBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSObliquenessAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSObservedKeyPathKey'/>
<constant type='@' declared_type='NSString*' name='NSObservedObjectKey'/>
<constant type='@' declared_type='NSString*' name='NSOffStateImageBinding'/>
<constant type='@' declared_type='NSString*' name='NSOfficeOpenXMLTextDocumentType'/>
<constant type='@' declared_type='NSString*' name='NSOnStateImageBinding'/>
<constant type='@' declared_type='NSString*' name='NSOpenDocumentTextDocumentType'/>
<constant type='@' declared_type='NSString*' name='NSOptionsKey'/>
<constant type='@' declared_type='NSString*' name='NSOutlineViewColumnDidMoveNotification'/>
<constant type='@' declared_type='NSString*' name='NSOutlineViewColumnDidResizeNotification'/>
<constant type='@' declared_type='NSString*' name='NSOutlineViewItemDidCollapseNotification'/>
<constant type='@' declared_type='NSString*' name='NSOutlineViewItemDidExpandNotification'/>
<constant type='@' declared_type='NSString*' name='NSOutlineViewItemWillCollapseNotification'/>
<constant type='@' declared_type='NSString*' name='NSOutlineViewItemWillExpandNotification'/>
<constant type='@' declared_type='NSString*' name='NSOutlineViewSelectionDidChangeNotification'/>
<constant type='@' declared_type='NSString*' name='NSOutlineViewSelectionIsChangingNotification'/>
<constant type='@' declared_type='NSString*' name='NSPDFPboardType'/>
<constant type='@' declared_type='NSString*' name='NSPICTPboardType'/>
<constant type='@' declared_type='NSString*' name='NSPPDIncludeNotFoundException'/>
<constant type='@' declared_type='NSString*' name='NSPPDIncludeStackOverflowException'/>
<constant type='@' declared_type='NSString*' name='NSPPDIncludeStackUnderflowException'/>
<constant type='@' declared_type='NSString*' name='NSPPDParseException'/>
<constant type='@' declared_type='NSString*' name='NSPaperSizeDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSParagraphStyleAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSPasteboardCommunicationException'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPasteboardTypeColor'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPasteboardTypeFindPanelSearchOptions'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPasteboardTypeFont'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPasteboardTypeHTML'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPasteboardTypeMultipleTextSelection'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPasteboardTypePDF'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPasteboardTypePNG'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPasteboardTypeRTF'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPasteboardTypeRTFD'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPasteboardTypeRuler'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPasteboardTypeSound'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPasteboardTypeString'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPasteboardTypeTIFF'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPasteboardTypeTabularText'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPasteboardTypeTextFinderOptions'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPasteboardURLReadingContentsConformToTypesKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPasteboardURLReadingFileURLsOnlyKey'/>
<constant type='@' declared_type='NSString*' name='NSPatternColorSpace'/>
<constant type='@' declared_type='NSString*' name='NSPlainFileType'/>
<constant type='@' declared_type='NSString*' name='NSPlainTextDocumentType'/>
<constant type='@' declared_type='NSString*' name='NSPopUpButtonCellWillPopUpNotification'/>
<constant type='@' declared_type='NSString*' name='NSPopUpButtonWillPopUpNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPopoverCloseReasonDetachToWindow'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPopoverCloseReasonKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPopoverCloseReasonStandard'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPopoverDidCloseNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPopoverDidShowNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPopoverWillCloseNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPopoverWillShowNotification'/>
<constant type='@' declared_type='NSString*' name='NSPositioningRectBinding'/>
<constant type='@' declared_type='NSString*' name='NSPostScriptPboardType'/>
<constant type='@' declared_type='NSString*' name='NSPredicateBinding'/>
<constant type='@' declared_type='NSString*' name='NSPredicateFormatBindingOption'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPreferredScrollerStyleDidChangeNotification'/>
<constant type='@' declared_type='NSString*' name='NSPrefixSpacesDocumentAttribute'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintAllPages'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintAllPresetsJobStyleHint'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintBottomMargin'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintCancelJob'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintCopies'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintDetailedErrorReporting'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintFaxNumber'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintFirstPage'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintFormName'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintHeaderAndFooter'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintHorizontalPagination'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintHorizontallyCentered'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintJobDisposition'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintJobFeatures'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintJobSavingFileNameExtensionHidden'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintJobSavingURL'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintLastPage'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintLeftMargin'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintManualFeed'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintMustCollate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintNoPresetsJobStyleHint'/>
<constant type='@' declared_type='NSString*' name='NSPrintOperationExistsException'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintOrientation'/>
<constant type='@' declared_type='NSString*' name='NSPrintPackageException'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintPagesAcross'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintPagesDown'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintPagesPerSheet'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintPanelAccessorySummaryItemDescriptionKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintPanelAccessorySummaryItemNameKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintPaperFeed'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintPaperName'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintPaperSize'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintPhotoJobStyleHint'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintPreviewJob'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintPrinter'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintPrinterName'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintReversePageOrder'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintRightMargin'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintSaveJob'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintSavePath'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintScalingFactor'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintSelectionOnly'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintSpoolJob'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintTime'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintTopMargin'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintVerticalPagination'/>
<constant type='@' const='true' declared_type='NSString*' name='NSPrintVerticallyCentered'/>
<constant type='@' declared_type='NSString*' name='NSPrintingCommunicationException'/>
<constant type='@' declared_type='NSString*' name='NSRTFDPboardType'/>
<constant type='@' declared_type='NSString*' name='NSRTFDTextDocumentType'/>
<constant type='@' declared_type='NSString*' name='NSRTFPboardType'/>
<constant type='@' declared_type='NSString*' name='NSRTFPropertyStackOverflowException'/>
<constant type='@' declared_type='NSString*' name='NSRTFTextDocumentType'/>
<constant type='@' declared_type='NSString*' name='NSRaisesForNotApplicableKeysBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSReadOnlyDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSRecentSearchesBinding'/>
<constant type='@' declared_type='NSString*' name='NSRepresentedFilenameBinding'/>
<constant type='@' declared_type='NSString*' name='NSRightMarginDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSRowHeightBinding'/>
<constant type='@' const='true' declared_type='NSString*' name='NSRuleEditorPredicateComparisonModifier'/>
<constant type='@' const='true' declared_type='NSString*' name='NSRuleEditorPredicateCompoundType'/>
<constant type='@' const='true' declared_type='NSString*' name='NSRuleEditorPredicateCustomSelector'/>
<constant type='@' const='true' declared_type='NSString*' name='NSRuleEditorPredicateLeftExpression'/>
<constant type='@' const='true' declared_type='NSString*' name='NSRuleEditorPredicateOperatorType'/>
<constant type='@' const='true' declared_type='NSString*' name='NSRuleEditorPredicateOptions'/>
<constant type='@' const='true' declared_type='NSString*' name='NSRuleEditorPredicateRightExpression'/>
<constant type='@' const='true' declared_type='NSString*' name='NSRuleEditorRowsDidChangeNotification'/>
<constant type='@' declared_type='NSString*' name='NSRulerPboard'/>
<constant type='@' declared_type='NSString*' name='NSRulerPboardType'/>
<constant type='@' const='true' declared_type='NSString*' name='NSScreenColorSpaceDidChangeNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSScrollViewDidEndLiveMagnifyNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSScrollViewWillStartLiveMagnifyNotification'/>
<constant type='@' declared_type='NSString*' name='NSSelectedIdentifierBinding'/>
<constant type='@' declared_type='NSString*' name='NSSelectedIndexBinding'/>
<constant type='@' declared_type='NSString*' name='NSSelectedLabelBinding'/>
<constant type='@' declared_type='NSString*' name='NSSelectedObjectBinding'/>
<constant type='@' declared_type='NSString*' name='NSSelectedObjectsBinding'/>
<constant type='@' declared_type='NSString*' name='NSSelectedTagBinding'/>
<constant type='@' declared_type='NSString*' name='NSSelectedValueBinding'/>
<constant type='@' declared_type='NSString*' name='NSSelectedValuesBinding'/>
<constant type='@' declared_type='NSString*' name='NSSelectionIndexPathsBinding'/>
<constant type='@' declared_type='NSString*' name='NSSelectionIndexesBinding'/>
<constant type='@' declared_type='NSString*' name='NSSelectorNameBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSSelectsAllWhenSettingContentBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSShadowAttributeName'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSharingServiceNameAddToAperture'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSharingServiceNameAddToIPhoto'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSharingServiceNameAddToSafariReadingList'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSharingServiceNameComposeEmail'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSharingServiceNameComposeMessage'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSharingServiceNamePostImageOnFlickr'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSharingServiceNamePostOnFacebook'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSharingServiceNamePostOnSinaWeibo'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSharingServiceNamePostOnTwitter'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSharingServiceNamePostVideoOnTudou'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSharingServiceNamePostVideoOnVimeo'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSharingServiceNamePostVideoOnYouku'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSharingServiceNameSendViaAirDrop'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSharingServiceNameUseAsDesktopPicture'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSharingServiceNameUseAsTwitterProfileImage'/>
<constant type='@' declared_type='NSString*' name='NSShellCommandFileType'/>
<constant type='@' declared_type='NSString*' name='NSSortDescriptorsBinding'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSoundPboardType'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechCharacterModeProperty'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechCommandDelimiterProperty'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechCommandPrefix'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechCommandSuffix'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechCurrentVoiceProperty'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechDictionaryAbbreviations'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechDictionaryEntryPhonemes'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechDictionaryEntrySpelling'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechDictionaryLocaleIdentifier'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechDictionaryModificationDate'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechDictionaryPronunciations'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechErrorCount'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechErrorNewestCharacterOffset'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechErrorNewestCode'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechErrorOldestCharacterOffset'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechErrorOldestCode'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechErrorsProperty'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechInputModeProperty'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechModeLiteral'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechModeNormal'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechModePhoneme'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechModeText'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechNumberModeProperty'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechOutputToFileURLProperty'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechPhonemeInfoExample'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechPhonemeInfoHiliteEnd'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechPhonemeInfoHiliteStart'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechPhonemeInfoOpcode'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechPhonemeInfoSymbol'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechPhonemeSymbolsProperty'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechPitchBaseProperty'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechPitchModProperty'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechRateProperty'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechRecentSyncProperty'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechResetProperty'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechStatusNumberOfCharactersLeft'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechStatusOutputBusy'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechStatusOutputPaused'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechStatusPhonemeCode'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechStatusProperty'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechSynthesizerInfoIdentifier'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechSynthesizerInfoProperty'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechSynthesizerInfoVersion'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpeechVolumeProperty'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpellCheckerDidChangeAutomaticSpellingCorrectionNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSSpellCheckerDidChangeAutomaticTextReplacementNotification'/>
<constant type='@' declared_type='NSString*' name='NSSpellingStateAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSSplitViewDidResizeSubviewsNotification'/>
<constant type='@' declared_type='NSString*' name='NSSplitViewWillResizeSubviewsNotification'/>
<constant type='@' declared_type='NSString*' name='NSStrikethroughColorAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSStrikethroughStyleAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSStringPboardType'/>
<constant type='@' declared_type='NSString*' name='NSStrokeColorAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSStrokeWidthAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSSubjectDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSSuperscriptAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSSystemColorsDidChangeNotification'/>
<constant type='@' declared_type='NSString*' name='NSTIFFException'/>
<constant type='@' declared_type='NSString*' name='NSTIFFPboardType'/>
<constant type='@' declared_type='NSString*' name='NSTabColumnTerminatorsAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSTableViewColumnDidMoveNotification'/>
<constant type='@' declared_type='NSString*' name='NSTableViewColumnDidResizeNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSTableViewRowViewKey'/>
<constant type='@' declared_type='NSString*' name='NSTableViewSelectionDidChangeNotification'/>
<constant type='@' declared_type='NSString*' name='NSTableViewSelectionIsChangingNotification'/>
<constant type='@' declared_type='NSString*' name='NSTabularTextPboardType'/>
<constant type='@' declared_type='NSString*' name='NSTargetBinding'/>
<constant type='@' declared_type='NSString*' name='NSTextAlternativesAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSTextAlternativesSelectedAlternativeStringNotification'/>
<constant type='@' declared_type='NSString*' name='NSTextCheckingDocumentAuthorKey'/>
<constant type='@' declared_type='NSString*' name='NSTextCheckingDocumentTitleKey'/>
<constant type='@' declared_type='NSString*' name='NSTextCheckingDocumentURLKey'/>
<constant type='@' declared_type='NSString*' name='NSTextCheckingOrthographyKey'/>
<constant type='@' declared_type='NSString*' name='NSTextCheckingQuotesKey'/>
<constant type='@' declared_type='NSString*' name='NSTextCheckingReferenceDateKey'/>
<constant type='@' declared_type='NSString*' name='NSTextCheckingReferenceTimeZoneKey'/>
<constant type='@' declared_type='NSString*' name='NSTextCheckingRegularExpressionsKey'/>
<constant type='@' declared_type='NSString*' name='NSTextCheckingReplacementsKey'/>
<constant type='@' declared_type='NSString*' name='NSTextColorBinding'/>
<constant type='@' declared_type='NSString*' name='NSTextDidBeginEditingNotification'/>
<constant type='@' declared_type='NSString*' name='NSTextDidChangeNotification'/>
<constant type='@' declared_type='NSString*' name='NSTextDidEndEditingNotification'/>
<constant type='@' declared_type='NSString*' name='NSTextEncodingNameDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSTextEncodingNameDocumentOption'/>
<constant type='@' const='true' declared_type='NSString*' name='NSTextFinderCaseInsensitiveKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSTextFinderMatchingTypeKey'/>
<constant type='@' declared_type='NSString*' name='NSTextInputContextKeyboardSelectionDidChangeNotification'/>
<constant type='@' declared_type='NSString*' name='NSTextLayoutSectionOrientation'/>
<constant type='@' declared_type='NSString*' name='NSTextLayoutSectionRange'/>
<constant type='@' declared_type='NSString*' name='NSTextLayoutSectionsAttribute'/>
<constant type='@' declared_type='NSString*' name='NSTextLineTooLongException'/>
<constant type='@' declared_type='NSString*' name='NSTextNoSelectionException'/>
<constant type='@' declared_type='NSString*' name='NSTextReadException'/>
<constant type='@' declared_type='NSString*' name='NSTextSizeMultiplierDocumentOption'/>
<constant type='@' declared_type='NSString*' name='NSTextStorageDidProcessEditingNotification'/>
<constant type='@' declared_type='NSString*' name='NSTextStorageWillProcessEditingNotification'/>
<constant type='@' declared_type='NSString*' name='NSTextViewDidChangeSelectionNotification'/>
<constant type='@' declared_type='NSString*' name='NSTextViewDidChangeTypingAttributesNotification'/>
<constant type='@' declared_type='NSString*' name='NSTextViewWillChangeNotifyingTextViewNotification'/>
<constant type='@' declared_type='NSString*' name='NSTextWriteException'/>
<constant type='@' declared_type='NSString*' name='NSTimeoutDocumentOption'/>
<constant type='@' declared_type='NSString*' name='NSTitleBinding'/>
<constant type='@' declared_type='NSString*' name='NSTitleDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSToolTipAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSToolTipBinding'/>
<constant type='@' declared_type='NSString*' name='NSToolbarCustomizeToolbarItemIdentifier'/>
<constant type='@' declared_type='NSString*' name='NSToolbarDidRemoveItemNotification'/>
<constant type='@' declared_type='NSString*' name='NSToolbarFlexibleSpaceItemIdentifier'/>
<constant type='@' declared_type='NSString*' name='NSToolbarPrintItemIdentifier'/>
<constant type='@' declared_type='NSString*' name='NSToolbarSeparatorItemIdentifier'/>
<constant type='@' declared_type='NSString*' name='NSToolbarShowColorsItemIdentifier'/>
<constant type='@' declared_type='NSString*' name='NSToolbarShowFontsItemIdentifier'/>
<constant type='@' declared_type='NSString*' name='NSToolbarSpaceItemIdentifier'/>
<constant type='@' declared_type='NSString*' name='NSToolbarWillAddItemNotification'/>
<constant type='@' declared_type='NSString*' name='NSTopMarginDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSTransparentBinding'/>
<constant type='@' declared_type='NSString*' name='NSTypedStreamVersionException'/>
<constant type='@' declared_type='NSString*' name='NSURLPboardType'/>
<constant type64='Q' type='I' declared_type='NSUInteger' name='NSUnderlineByWordMask'/>
<constant type='@' declared_type='NSString*' name='NSUnderlineColorAttributeName'/>
<constant type64='Q' type='I' declared_type='NSUInteger' name='NSUnderlineStrikethroughMask'/>
<constant type='@' declared_type='NSString*' name='NSUnderlineStyleAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSUsesScreenFontsDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSVCardPboardType'/>
<constant type='@' declared_type='NSString*' name='NSValidatesImmediatelyBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSValueBinding'/>
<constant type='@' declared_type='NSString*' name='NSValuePathBinding'/>
<constant type='@' declared_type='NSString*' name='NSValueTransformerBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSValueTransformerNameBindingOption'/>
<constant type='@' declared_type='NSString*' name='NSValueURLBinding'/>
<constant type='@' declared_type='NSString*' name='NSVerticalGlyphFormAttributeName'/>
<constant type='@' declared_type='NSString*' name='NSViewAnimationEffectKey'/>
<constant type='@' declared_type='NSString*' name='NSViewAnimationEndFrameKey'/>
<constant type='@' declared_type='NSString*' name='NSViewAnimationFadeInEffect'/>
<constant type='@' declared_type='NSString*' name='NSViewAnimationFadeOutEffect'/>
<constant type='@' declared_type='NSString*' name='NSViewAnimationStartFrameKey'/>
<constant type='@' declared_type='NSString*' name='NSViewAnimationTargetKey'/>
<constant type='@' declared_type='NSString*' name='NSViewBoundsDidChangeNotification'/>
<constant type='@' declared_type='NSString*' name='NSViewDidUpdateTrackingAreasNotification'/>
<constant type='@' declared_type='NSString*' name='NSViewFocusDidChangeNotification'/>
<constant type='@' declared_type='NSString*' name='NSViewFrameDidChangeNotification'/>
<constant type='@' declared_type='NSString*' name='NSViewGlobalFrameDidChangeNotification'/>
<constant type='@' declared_type='NSString*' name='NSViewModeDocumentAttribute'/>
<constant type64='d' type='f' const='true' declared_type='CGFloat' name='NSViewNoInstrinsicMetric'/>
<constant type='@' declared_type='NSString*' name='NSViewSizeDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSViewZoomDocumentAttribute'/>
<constant type='@' declared_type='NSString*' name='NSVisibleBinding'/>
<constant type='@' const='true' declared_type='NSString*' name='NSVoiceAge'/>
<constant type='@' const='true' declared_type='NSString*' name='NSVoiceDemoText'/>
<constant type='@' const='true' declared_type='NSString*' name='NSVoiceGender'/>
<constant type='@' const='true' declared_type='NSString*' name='NSVoiceGenderFemale'/>
<constant type='@' const='true' declared_type='NSString*' name='NSVoiceGenderMale'/>
<constant type='@' const='true' declared_type='NSString*' name='NSVoiceGenderNeuter'/>
<constant type='@' const='true' declared_type='NSString*' name='NSVoiceIdentifier'/>
<constant type='@' const='true' declared_type='NSString*' name='NSVoiceIndividuallySpokenCharacters'/>
<constant type='@' const='true' declared_type='NSString*' name='NSVoiceLanguage'/>
<constant type='@' const='true' declared_type='NSString*' name='NSVoiceLocaleIdentifier'/>
<constant type='@' const='true' declared_type='NSString*' name='NSVoiceName'/>
<constant type='@' const='true' declared_type='NSString*' name='NSVoiceSupportedCharacters'/>
<constant type='@' declared_type='NSString*' name='NSWarningValueBinding'/>
<constant type='@' declared_type='NSString*' name='NSWebArchiveTextDocumentType'/>
<constant type='@' declared_type='NSString*' name='NSWebPreferencesDocumentOption'/>
<constant type='@' declared_type='NSString*' name='NSWebResourceLoadDelegateDocumentOption'/>
<constant type64='d' type='f' const='true' declared_type='CGFloat' name='NSWhite'/>
<constant type='@' declared_type='NSString*' name='NSWidthBinding'/>
<constant type='@' declared_type='NSString*' name='NSWindowDidBecomeKeyNotification'/>
<constant type='@' declared_type='NSString*' name='NSWindowDidBecomeMainNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWindowDidChangeBackingPropertiesNotification'/>
<constant type='@' declared_type='NSString*' name='NSWindowDidChangeScreenNotification'/>
<constant type='@' declared_type='NSString*' name='NSWindowDidChangeScreenProfileNotification'/>
<constant type='@' declared_type='NSString*' name='NSWindowDidDeminiaturizeNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWindowDidEndLiveResizeNotification'/>
<constant type='@' declared_type='NSString*' name='NSWindowDidEndSheetNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWindowDidEnterFullScreenNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWindowDidEnterVersionBrowserNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWindowDidExitFullScreenNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWindowDidExitVersionBrowserNotification'/>
<constant type='@' declared_type='NSString*' name='NSWindowDidExposeNotification'/>
<constant type='@' declared_type='NSString*' name='NSWindowDidMiniaturizeNotification'/>
<constant type='@' declared_type='NSString*' name='NSWindowDidMoveNotification'/>
<constant type='@' declared_type='NSString*' name='NSWindowDidResignKeyNotification'/>
<constant type='@' declared_type='NSString*' name='NSWindowDidResignMainNotification'/>
<constant type='@' declared_type='NSString*' name='NSWindowDidResizeNotification'/>
<constant type='@' declared_type='NSString*' name='NSWindowDidUpdateNotification'/>
<constant type='@' declared_type='NSString*' name='NSWindowServerCommunicationException'/>
<constant type='@' declared_type='NSString*' name='NSWindowWillBeginSheetNotification'/>
<constant type='@' declared_type='NSString*' name='NSWindowWillCloseNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWindowWillEnterFullScreenNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWindowWillEnterVersionBrowserNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWindowWillExitFullScreenNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWindowWillExitVersionBrowserNotification'/>
<constant type='@' declared_type='NSString*' name='NSWindowWillMiniaturizeNotification'/>
<constant type='@' declared_type='NSString*' name='NSWindowWillMoveNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWindowWillStartLiveResizeNotification'/>
<constant type='@' declared_type='NSString*' name='NSWordMLTextDocumentType'/>
<constant type='@' declared_type='NSString*' name='NSWordTablesReadException'/>
<constant type='@' declared_type='NSString*' name='NSWordTablesWriteException'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWorkspaceActiveSpaceDidChangeNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWorkspaceApplicationKey'/>
<constant type='@' declared_type='NSString*' name='NSWorkspaceCompressOperation'/>
<constant type='@' declared_type='NSString*' name='NSWorkspaceCopyOperation'/>
<constant type='@' declared_type='NSString*' name='NSWorkspaceDecompressOperation'/>
<constant type='@' declared_type='NSString*' name='NSWorkspaceDecryptOperation'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWorkspaceDesktopImageAllowClippingKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWorkspaceDesktopImageFillColorKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWorkspaceDesktopImageScalingKey'/>
<constant type='@' declared_type='NSString*' name='NSWorkspaceDestroyOperation'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWorkspaceDidActivateApplicationNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWorkspaceDidChangeFileLabelsNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWorkspaceDidDeactivateApplicationNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWorkspaceDidHideApplicationNotification'/>
<constant type='@' declared_type='NSString*' name='NSWorkspaceDidLaunchApplicationNotification'/>
<constant type='@' declared_type='NSString*' name='NSWorkspaceDidMountNotification'/>
<constant type='@' declared_type='NSString*' name='NSWorkspaceDidPerformFileOperationNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWorkspaceDidRenameVolumeNotification'/>
<constant type='@' declared_type='NSString*' name='NSWorkspaceDidTerminateApplicationNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWorkspaceDidUnhideApplicationNotification'/>
<constant type='@' declared_type='NSString*' name='NSWorkspaceDidUnmountNotification'/>
<constant type='@' declared_type='NSString*' name='NSWorkspaceDidWakeNotification'/>
<constant type='@' declared_type='NSString*' name='NSWorkspaceDuplicateOperation'/>
<constant type='@' declared_type='NSString*' name='NSWorkspaceEncryptOperation'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWorkspaceLaunchConfigurationAppleEvent'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWorkspaceLaunchConfigurationArchitecture'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWorkspaceLaunchConfigurationArguments'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWorkspaceLaunchConfigurationEnvironment'/>
<constant type='@' declared_type='NSString*' name='NSWorkspaceLinkOperation'/>
<constant type='@' declared_type='NSString*' name='NSWorkspaceMoveOperation'/>
<constant type='@' declared_type='NSString*' name='NSWorkspaceRecycleOperation'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWorkspaceScreensDidSleepNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWorkspaceScreensDidWakeNotification'/>
<constant type='@' declared_type='NSString*' name='NSWorkspaceSessionDidBecomeActiveNotification'/>
<constant type='@' declared_type='NSString*' name='NSWorkspaceSessionDidResignActiveNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWorkspaceVolumeLocalizedNameKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWorkspaceVolumeOldLocalizedNameKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWorkspaceVolumeOldURLKey'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWorkspaceVolumeURLKey'/>
<constant type='@' declared_type='NSString*' name='NSWorkspaceWillLaunchApplicationNotification'/>
<constant type='@' const='true' declared_type='NSString*' name='NSWorkspaceWillPowerOffNotification'/>
<constant type='@' declared_type='NSString*' name='NSWorkspaceWillSleepNotification'/>
<constant type='@' declared_type='NSString*' name='NSWorkspaceWillUnmountNotification'/>
<constant type='@' declared_type='NSString*' name='NSWritingDirectionAttributeName'/>
<enum value='16' name='NSAWTEventType'/>
<enum value='4' name='NSAboveBottom'/>
<enum value='1' name='NSAboveTop'/>
<enum value='2' name='NSAddTraitFontAction'/>
<enum value='1' name='NSAdobeCNS1CharacterCollection'/>
<enum value='2' name='NSAdobeGB1CharacterCollection'/>
<enum value='3' name='NSAdobeJapan1CharacterCollection'/>
<enum value='4' name='NSAdobeJapan2CharacterCollection'/>
<enum value='5' name='NSAdobeKorea1CharacterCollection'/>
<enum value='0' name='NSAlertAlternateReturn'/>
<enum value='1' name='NSAlertDefaultReturn'/>
<enum value='-2' name='NSAlertErrorReturn'/>
<enum value='1000' name='NSAlertFirstButtonReturn'/>
<enum value='-1' name='NSAlertOtherReturn'/>
<enum value='1001' name='NSAlertSecondButtonReturn'/>
<enum value='1002' name='NSAlertThirdButtonReturn'/>
<enum value='2' name='NSAllScrollerParts'/>
<enum value='1' name='NSAlphaFirstBitmapFormat'/>
<enum value='2' name='NSAlphaNonpremultipliedBitmapFormat'/>
<enum value='65536' name='NSAlphaShiftKeyMask'/>
<enum value='524288' name='NSAlternateKeyMask'/>
<enum value='0' name='NSAnimationBlocking'/>
<enum value='1' name='NSAnimationEaseIn'/>
<enum value='0' name='NSAnimationEaseInOut'/>
<enum value='2' name='NSAnimationEaseOut'/>
<enum value='0' name='NSAnimationEffectDisappearingItemDefault'/>
<enum value='10' name='NSAnimationEffectPoof'/>
<enum value='3' name='NSAnimationLinear'/>
<enum value='1' name='NSAnimationNonblocking'/>
<enum value='2' name='NSAnimationNonblockingThreaded'/>
<enum value='4294967295' value64='18446744073709551615' name='NSAnyEventMask'/>
<enum value='0' name='NSAnyType'/>
<enum value='13' name='NSAppKitDefined'/>
<enum value='8192' name='NSAppKitDefinedMask'/>
<enum value='577' name='NSAppKitVersionNumber10_0'/>
<enum value='620' name='NSAppKitVersionNumber10_1'/>
<enum value='663' name='NSAppKitVersionNumber10_2'/>
<enum value='663.6' name='NSAppKitVersionNumber10_2_3'/>
<enum value='743' name='NSAppKitVersionNumber10_3'/>
<enum value='743.14' name='NSAppKitVersionNumber10_3_2'/>
<enum value='743.2' name='NSAppKitVersionNumber10_3_3'/>
<enum value='743.24' name='NSAppKitVersionNumber10_3_5'/>
<enum value='743.33' name='NSAppKitVersionNumber10_3_7'/>
<enum value='743.36' name='NSAppKitVersionNumber10_3_9'/>
<enum value='824' name='NSAppKitVersionNumber10_4'/>
<enum value='824.1' name='NSAppKitVersionNumber10_4_1'/>
<enum value='824.23' name='NSAppKitVersionNumber10_4_3'/>
<enum value='824.33' name='NSAppKitVersionNumber10_4_4'/>
<enum value='824.41' name='NSAppKitVersionNumber10_4_7'/>
<enum value='949' name='NSAppKitVersionNumber10_5'/>
<enum value='949.27' name='NSAppKitVersionNumber10_5_2'/>
<enum value='949.33' name='NSAppKitVersionNumber10_5_3'/>
<enum value='1038' name='NSAppKitVersionNumber10_6'/>
<enum value='1138' name='NSAppKitVersionNumber10_7'/>
<enum value='1138.23' name='NSAppKitVersionNumber10_7_2'/>
<enum value='685.0' name='NSAppKitVersionNumberWithColumnResizingBrowser'/>
<enum value='680.0' name='NSAppKitVersionNumberWithContinuousScrollingBrowser'/>
<enum value='682.0' name='NSAppKitVersionNumberWithCursorSizeSupport'/>
<enum value='686.0' name='NSAppKitVersionNumberWithCustomSheetPosition'/>
<enum value='1019.0' name='NSAppKitVersionNumberWithDeferredWindowDisplaySupport'/>
<enum value='631.0' name='NSAppKitVersionNumberWithDirectionalTabs'/>
<enum value='1001.0' name='NSAppKitVersionNumberWithDockTilePlugInSupport'/>
<enum value='641.0' name='NSAppKitVersionNumberWithPatternColorLeakFix'/>
<enum value='1' name='NSApplicationActivateAllWindows'/>
<enum value='2' name='NSApplicationActivateIgnoringOtherApps'/>
<enum value='1' name='NSApplicationActivatedEventType'/>
<enum value='1' name='NSApplicationActivationPolicyAccessory'/>
<enum value='2' name='NSApplicationActivationPolicyProhibited'/>
<enum value='0' name='NSApplicationActivationPolicyRegular'/>
<enum value='2' name='NSApplicationDeactivatedEventType'/>
<enum value='15' name='NSApplicationDefined'/>
<enum value='32768' name='NSApplicationDefinedMask'/>
<enum value='1' name='NSApplicationDelegateReplyCancel'/>
<enum value='2' name='NSApplicationDelegateReplyFailure'/>
<enum value='0' name='NSApplicationDelegateReplySuccess'/>
<enum value='1' name='NSApplicationPresentationAutoHideDock'/>
<enum value='4' name='NSApplicationPresentationAutoHideMenuBar'/>
<enum value='2048' name='NSApplicationPresentationAutoHideToolbar'/>
<enum value='0' name='NSApplicationPresentationDefault'/>
<enum value='16' name='NSApplicationPresentationDisableAppleMenu'/>
<enum value='64' name='NSApplicationPresentationDisableForceQuit'/>
<enum value='256' name='NSApplicationPresentationDisableHideApplication'/>
<enum value='512' name='NSApplicationPresentationDisableMenuBarTransparency'/>
<enum value='32' name='NSApplicationPresentationDisableProcessSwitching'/>
<enum value='128' name='NSApplicationPresentationDisableSessionTermination'/>
<enum value='1024' name='NSApplicationPresentationFullScreen'/>
<enum value='2' name='NSApplicationPresentationHideDock'/>
<enum value='8' name='NSApplicationPresentationHideMenuBar'/>
<enum value='1' name='NSAscendingPageOrder'/>
<enum value='5' name='NSAtBottom'/>
<enum value='2' name='NSAtTop'/>
<enum value='65532' name='NSAttachmentCharacter'/>
<enum value='0' name='NSAutoPagination'/>
<enum value='5' name='NSAutosaveAsOperation'/>
<enum value='3' name='NSAutosaveElsewhereOperation'/>
<enum value='4' name='NSAutosaveInPlaceOperation'/>
<enum value='3' name='NSAutosaveOperation'/>
<enum value='1' name='NSBMPFileType'/>
<enum value='25' name='NSBackTabCharacter'/>
<enum value='1' name='NSBackgroundStyleDark'/>
<enum value='0' name='NSBackgroundStyleLight'/>
<enum value='3' name='NSBackgroundStyleLowered'/>
<enum value='2' name='NSBackgroundStyleRaised'/>
<enum value='1' name='NSBackgroundTab'/>
<enum value='2' name='NSBackingStoreBuffered'/>
<enum value='1' name='NSBackingStoreNonretained'/>
<enum value='0' name='NSBackingStoreRetained'/>
<enum value='8' name='NSBackspaceCharacter'/>
<enum value='18' name='NSBacktabTextMovement'/>
<enum value='63274' name='NSBeginFunctionKey'/>
<enum value='6' name='NSBelowBottom'/>
<enum value='3' name='NSBelowTop'/>
<enum value='2' name='NSBevelLineJoinStyle'/>
<enum value='2' name='NSBezelBorder'/>
<enum value='1' name='NSBlueControlTint'/>
<enum value='2' name='NSBoldFontMask'/>
<enum value='0' name='NSBorderlessWindowMask'/>
<enum value='2' name='NSBottomTabsBezelBorder'/>
<enum value='4' name='NSBoxCustom'/>
<enum value='3' name='NSBoxOldStyle'/>
<enum value='0' name='NSBoxPrimary'/>
<enum value='1' name='NSBoxSecondary'/>
<enum value='2' name='NSBoxSeparator'/>
<enum value='63282' name='NSBreakFunctionKey'/>
<enum value='1' name='NSBrowserAutoColumnResizing'/>
<enum value='1' name='NSBrowserDropAbove'/>
<enum value='0' name='NSBrowserDropOn'/>
<enum value='0' name='NSBrowserNoColumnResizing'/>
<enum value='2' name='NSBrowserUserColumnResizing'/>
<enum value='0' name='NSButtLineCapStyle'/>
<enum value='2' name='NSCMYKColorSpaceModel'/>
<enum value='2' name='NSCMYKModeColorPanel'/>
<enum value='0' name='NSCancelButton'/>
<enum value='23' name='NSCancelTextMovement'/>
<enum value='13' name='NSCarriageReturnCharacter'/>
<enum value='16' name='NSCellAllowsMixedState'/>
<enum value='14' name='NSCellChangesContents'/>
<enum value='0' name='NSCellDisabled'/>
<enum value='3' name='NSCellEditable'/>
<enum value='12' name='NSCellHasImageHorizontal'/>
<enum value='13' name='NSCellHasImageOnLeftOrBottom'/>
<enum value='11' name='NSCellHasOverlappingImage'/>
<enum value='5' name='NSCellHighlighted'/>
<enum value='1' name='NSCellHitContentArea'/>
<enum value='2' name='NSCellHitEditableTextArea'/>
<enum value='0' name='NSCellHitNone'/>
<enum value='4' name='NSCellHitTrackableArea'/>
<enum value='10' name='NSCellIsBordered'/>
<enum value='15' name='NSCellIsInsetButton'/>
<enum value='9' name='NSCellLightsByBackground'/>
<enum value='6' name='NSCellLightsByContents'/>
<enum value='7' name='NSCellLightsByGray'/>
<enum value='1' name='NSCellState'/>
<enum value='2' name='NSCenterTabStopType'/>
<enum value='2' name='NSCenterTextAlignment'/>
<enum value='4' name='NSChangeAutosaved'/>
<enum value='8' name='NSChangeBackgroundCell'/>
<enum value='8' name='NSChangeBackgroundCellMask'/>
<enum value='2' name='NSChangeCleared'/>
<enum value='256' name='NSChangeDiscardable'/>
<enum value='0' name='NSChangeDone'/>
<enum value='4' name='NSChangeGrayCell'/>
<enum value='4' name='NSChangeGrayCellMask'/>
<enum value='3' name='NSChangeReadOtherContents'/>
<enum value='5' name='NSChangeRedone'/>
<enum value='1' name='NSChangeUndone'/>
<enum value='7' name='NSCircularBezelStyle'/>
<enum value='1' name='NSCircularSlider'/>
<enum value='7' name='NSClearControlTint'/>
<enum value='63290' name='NSClearDisplayFunctionKey'/>
<enum value='63289' name='NSClearLineFunctionKey'/>
<enum value='2' name='NSClipPagination'/>
<enum value='1' name='NSClockAndCalendarDatePickerStyle'/>
<enum value='2' name='NSClosableWindowMask'/>
<enum value='3' name='NSClosePathBezierPathElement'/>
<enum value='1' name='NSCollectionViewDropBefore'/>
<enum value='0' name='NSCollectionViewDropOn'/>
<enum value='5' name='NSColorListModeColorPanel'/>
<enum value='65535' name='NSColorPanelAllModesMask'/>
<enum value='4' name='NSColorPanelCMYKModeMask'/>
<enum value='32' name='NSColorPanelColorListModeMask'/>
<enum value='128' name='NSColorPanelCrayonModeMask'/>
<enum value='16' name='NSColorPanelCustomPaletteModeMask'/>
<enum value='1' name='NSColorPanelGrayModeMask'/>
<enum value='8' name='NSColorPanelHSBModeMask'/>
<enum value='2' name='NSColorPanelRGBModeMask'/>
<enum value='64' name='NSColorPanelWheelModeMask'/>
<enum value='1' name='NSColorRenderingIntentAbsoluteColorimetric'/>
<enum value='0' name='NSColorRenderingIntentDefault'/>
<enum value='3' name='NSColorRenderingIntentPerceptual'/>
<enum value='2' name='NSColorRenderingIntentRelativeColorimetric'/>
<enum value='4' name='NSColorRenderingIntentSaturation'/>
<enum value='1048576' name='NSCommandKeyMask'/>
<enum value='0' name='NSCompositeClear'/>
<enum value='1' name='NSCompositeCopy'/>
<enum value='9' name='NSCompositeDestinationAtop'/>
<enum value='7' name='NSCompositeDestinationIn'/>
<enum value='8' name='NSCompositeDestinationOut'/>
<enum value='6' name='NSCompositeDestinationOver'/>
<enum value='12' name='NSCompositeHighlight'/>
<enum value='11' name='NSCompositePlusDarker'/>
<enum value='13' name='NSCompositePlusLighter'/>
<enum value='5' name='NSCompositeSourceAtop'/>
<enum value='3' name='NSCompositeSourceIn'/>
<enum value='4' name='NSCompositeSourceOut'/>
<enum value='2' name='NSCompositeSourceOver'/>
<enum value='10' name='NSCompositeXOR'/>
<enum value='512' name='NSCompressedFontMask'/>
<enum value='64' name='NSCondensedFontMask'/>
<enum value='1' name='NSContentsCellMask'/>
<enum value='1' name='NSContinuousCapacityLevelIndicatorStyle'/>
<enum value='16777215' name='NSControlGlyph'/>
<enum value='262144' name='NSControlKeyMask'/>
<enum value='0' name='NSCorrectionIndicatorTypeDefault'/>
<enum value='2' name='NSCorrectionIndicatorTypeGuesses'/>
<enum value='1' name='NSCorrectionIndicatorTypeReversion'/>
<enum value='1' name='NSCorrectionResponseAccepted'/>
<enum value='4' name='NSCorrectionResponseEdited'/>
<enum value='3' name='NSCorrectionResponseIgnored'/>
<enum value='0' name='NSCorrectionResponseNone'/>
<enum value='2' name='NSCorrectionResponseRejected'/>
<enum value='5' name='NSCorrectionResponseReverted'/>
<enum value='7' name='NSCrayonModeColorPanel'/>
<enum value='2' name='NSCriticalAlertStyle'/>
<enum value='0' name='NSCriticalRequest'/>
<enum value='2' name='NSCursorPointingDevice'/>
<enum value='17' name='NSCursorUpdate'/>
<enum value='131072' name='NSCursorUpdateMask'/>
<enum value='2' name='NSCurveToBezierPathElement'/>
<enum value='4' name='NSCustomPaletteModeColorPanel'/>
<enum value='3' name='NSDecimalTabStopType'/>
<enum value='0' name='NSDefaultControlTint'/>
<enum value='0' name='NSDefaultTokenStyle'/>
<enum value='63294' name='NSDeleteCharFunctionKey'/>
<enum value='127' name='NSDeleteCharacter'/>
<enum value='63272' name='NSDeleteFunctionKey'/>
<enum value='63292' name='NSDeleteLineFunctionKey'/>
<enum value='-1' name='NSDescendingPageOrder'/>
<enum value='4294901760' name='NSDeviceIndependentModifierFlagsMask'/>
<enum value='4' name='NSDeviceNColorSpaceModel'/>
<enum value='0' name='NSDirectSelection'/>
<enum value='5' name='NSDisclosureBezelStyle'/>
<enum value='2' name='NSDiscreteCapacityLevelIndicatorStyle'/>
<enum value='600000' name='NSDisplayWindowRunLoopOrdering'/>
<enum value='64' name='NSDocModalWindowMask'/>
<enum value='20' name='NSDockWindowLevel'/>
<enum value='6' name='NSDoubleType'/>
<enum value='63233' name='NSDownArrowFunctionKey'/>
<enum value='22' name='NSDownTextMovement'/>
<enum value='15' name='NSDragOperationAll'/>
<enum value='15' name='NSDragOperationAll_Obsolete'/>
<enum value='1' name='NSDragOperationCopy'/>
<enum value='32' name='NSDragOperationDelete'/>
<enum value='4294967295' value64='18446744073709551615' name='NSDragOperationEvery'/>
<enum value='4' name='NSDragOperationGeneric'/>
<enum value='2' name='NSDragOperationLink'/>
<enum value='16' name='NSDragOperationMove'/>
<enum value='0' name='NSDragOperationNone'/>
<enum value='8' name='NSDragOperationPrivate'/>
<enum value='0' name='NSDraggingContextOutsideApplication'/>
<enum value='1' name='NSDraggingContextWithinApplication'/>
<enum value='0' name='NSDraggingFormationDefault'/>
<enum value='3' name='NSDraggingFormationList'/>
<enum value='1' name='NSDraggingFormationNone'/>
<enum value='2' name='NSDraggingFormationPile'/>
<enum value='4' name='NSDraggingFormationStack'/>
<enum value='65536' name='NSDraggingItemEnumerationClearNonenumeratedImages'/>
<enum value='1' name='NSDraggingItemEnumerationConcurrent'/>
<enum value='0' name='NSDrawerClosedState'/>
<enum value='3' name='NSDrawerClosingState'/>
<enum value='2' name='NSDrawerOpenState'/>
<enum value='1' name='NSDrawerOpeningState'/>
<enum value='63275' name='NSEndFunctionKey'/>
<enum value='3' name='NSEnterCharacter'/>
<enum value='256' name='NSEraDatePickerElementFlag'/>
<enum value='3' name='NSEraserPointingDevice'/>
<enum value='1' name='NSEvenOddWindingRule'/>
<enum value='1' name='NSEventGestureAxisHorizontal'/>
<enum value='0' name='NSEventGestureAxisNone'/>
<enum value='2' name='NSEventGestureAxisVertical'/>
<enum value='524288' name='NSEventMaskBeginGesture'/>
<enum value='1048576' name='NSEventMaskEndGesture'/>
<enum value='536870912' name='NSEventMaskGesture'/>
<enum value='1073741824' name='NSEventMaskMagnify'/>
<enum value='262144' name='NSEventMaskRotate'/>
<enum value64='4294967296' name='NSEventMaskSmartMagnify'/>
<enum value='2147483648' name='NSEventMaskSwipe'/>
<enum value='1' name='NSEventPhaseBegan'/>
<enum value='16' name='NSEventPhaseCancelled'/>
<enum value='4' name='NSEventPhaseChanged'/>
<enum value='8' name='NSEventPhaseEnded'/>
<enum value='32' name='NSEventPhaseMayBegin'/>
<enum value='0' name='NSEventPhaseNone'/>
<enum value='2' name='NSEventPhaseStationary'/>
<enum value='2' name='NSEventSwipeTrackingClampGestureAmount'/>
<enum value='1' name='NSEventSwipeTrackingLockDirection'/>
<enum value='19' name='NSEventTypeBeginGesture'/>
<enum value='20' name='NSEventTypeEndGesture'/>
<enum value='29' name='NSEventTypeGesture'/>
<enum value='30' name='NSEventTypeMagnify'/>
<enum value='33' name='NSEventTypeQuickLook'/>
<enum value='18' name='NSEventTypeRotate'/>
<enum value64='32' name='NSEventTypeSmartMagnify'/>
<enum value='31' name='NSEventTypeSwipe'/>
<enum value='4' name='NSExclude10_4ElementsIconCreationOption'/>
<enum value='2' name='NSExcludeQuickDrawElementsIconCreationOption'/>
<enum value='63298' name='NSExecuteFunctionKey'/>
<enum value='32' name='NSExpandedFontMask'/>
<enum value='63245' name='NSF10FunctionKey'/>
<enum value='63246' name='NSF11FunctionKey'/>
<enum value='63247' name='NSF12FunctionKey'/>
<enum value='63248' name='NSF13FunctionKey'/>
<enum value='63249' name='NSF14FunctionKey'/>
<enum value='63250' name='NSF15FunctionKey'/>
<enum value='63251' name='NSF16FunctionKey'/>
<enum value='63252' name='NSF17FunctionKey'/>
<enum value='63253' name='NSF18FunctionKey'/>
<enum value='63254' name='NSF19FunctionKey'/>
<enum value='63236' name='NSF1FunctionKey'/>
<enum value='63255' name='NSF20FunctionKey'/>
<enum value='63256' name='NSF21FunctionKey'/>
<enum value='63257' name='NSF22FunctionKey'/>
<enum value='63258' name='NSF23FunctionKey'/>
<enum value='63259' name='NSF24FunctionKey'/>
<enum value='63260' name='NSF25FunctionKey'/>
<enum value='63261' name='NSF26FunctionKey'/>
<enum value='63262' name='NSF27FunctionKey'/>
<enum value='63263' name='NSF28FunctionKey'/>
<enum value='63264' name='NSF29FunctionKey'/>
<enum value='63237' name='NSF2FunctionKey'/>
<enum value='63265' name='NSF30FunctionKey'/>
<enum value='63266' name='NSF31FunctionKey'/>
<enum value='63267' name='NSF32FunctionKey'/>
<enum value='63268' name='NSF33FunctionKey'/>
<enum value='63269' name='NSF34FunctionKey'/>
<enum value='63270' name='NSF35FunctionKey'/>
<enum value='63238' name='NSF3FunctionKey'/>
<enum value='63239' name='NSF4FunctionKey'/>
<enum value='63240' name='NSF5FunctionKey'/>
<enum value='63241' name='NSF6FunctionKey'/>
<enum value='63242' name='NSF7FunctionKey'/>
<enum value='63243' name='NSF8FunctionKey'/>
<enum value='63244' name='NSF9FunctionKey'/>
<enum value='134' name='NSFPCurrentField'/>
<enum value='131' name='NSFPPreviewButton'/>
<enum value='128' name='NSFPPreviewField'/>
<enum value='130' name='NSFPRevertButton'/>
<enum value='132' name='NSFPSetButton'/>
<enum value='129' name='NSFPSizeField'/>
<enum value='133' name='NSFPSizeTitle'/>
<enum value='0' name='NSFileHandlingPanelCancelButton'/>
<enum value='1' name='NSFileHandlingPanelOKButton'/>
<enum value='63301' name='NSFindFunctionKey'/>
<enum value='2' name='NSFindPanelActionNext'/>
<enum value='3' name='NSFindPanelActionPrevious'/>
<enum value='5' name='NSFindPanelActionReplace'/>
<enum value='4' name='NSFindPanelActionReplaceAll'/>
<enum value='8' name='NSFindPanelActionReplaceAllInSelection'/>
<enum value='6' name='NSFindPanelActionReplaceAndFind'/>
<enum value='9' name='NSFindPanelActionSelectAll'/>
<enum value='10' name='NSFindPanelActionSelectAllInSelection'/>
<enum value='7' name='NSFindPanelActionSetFindString'/>
<enum value='1' name='NSFindPanelActionShowFindPanel'/>
<enum value='0' name='NSFindPanelSubstringMatchTypeContains'/>
<enum value='3' name='NSFindPanelSubstringMatchTypeEndsWith'/>
<enum value='2' name='NSFindPanelSubstringMatchTypeFullWord'/>
<enum value='1' name='NSFindPanelSubstringMatchTypeStartsWith'/>
<enum value='1' name='NSFitPagination'/>
<enum value='1024' name='NSFixedPitchFontMask'/>
<enum value='12' name='NSFlagsChanged'/>
<enum value='4096' name='NSFlagsChangedMask'/>
<enum value='3' name='NSFloatType'/>
<enum value='4' name='NSFloatingPointSamplesBitmapFormat'/>
<enum value='3' name='NSFloatingWindowLevel'/>
<enum value='2' name='NSFocusRingAbove'/>
<enum value='1' name='NSFocusRingBelow'/>
<enum value='0' name='NSFocusRingOnly'/>
<enum value='0' name='NSFocusRingTypeDefault'/>
<enum value='2' name='NSFocusRingTypeExterior'/>
<enum value='1' name='NSFocusRingTypeNone'/>
<enum value='3' name='NSFontAntialiasedIntegerAdvancementsRenderingMode'/>
<enum value='1' name='NSFontAntialiasedRenderingMode'/>
<enum value='2' name='NSFontBoldTrait'/>
<enum value='1073741824' name='NSFontClarendonSerifsClass'/>
<enum value='1' name='NSFontCollectionApplicationOnlyMask'/>
<enum value='4' name='NSFontCollectionVisibilityComputer'/>
<enum value='1' name='NSFontCollectionVisibilityProcess'/>
<enum value='2' name='NSFontCollectionVisibilityUser'/>
<enum value='64' name='NSFontCondensedTrait'/>
<enum value='0' name='NSFontDefaultRenderingMode'/>
<enum value='32' name='NSFontExpandedTrait'/>
<enum value='4026531840' name='NSFontFamilyClassMask'/>
<enum value='1879048192' name='NSFontFreeformSerifsClass'/>
<enum value='2' name='NSFontIntegerAdvancementsRenderingMode'/>
<enum value='1' name='NSFontItalicTrait'/>
<enum value='805306368' name='NSFontModernSerifsClass'/>
<enum value='1024' name='NSFontMonoSpaceTrait'/>
<enum value='268435456' name='NSFontOldStyleSerifsClass'/>
<enum value='-1879048192' name='NSFontOrnamentalsClass'/>
<enum value='1048320' name='NSFontPanelAllEffectsModeMask'/>
<enum value='4294967295' name='NSFontPanelAllModesMask'/>
<enum value='4' name='NSFontPanelCollectionModeMask'/>
<enum value='2048' name='NSFontPanelDocumentColorEffectModeMask'/>
<enum value='1' name='NSFontPanelFaceModeMask'/>
<enum value='4096' name='NSFontPanelShadowEffectModeMask'/>
<enum value='2' name='NSFontPanelSizeModeMask'/>
<enum value='65535' name='NSFontPanelStandardModesMask'/>
<enum value='512' name='NSFontPanelStrikethroughEffectModeMask'/>
<enum value='1024' name='NSFontPanelTextColorEffectModeMask'/>
<enum value='256' name='NSFontPanelUnderlineEffectModeMask'/>
<enum value='-2147483648' name='NSFontSansSerifClass'/>
<enum value='-1610612736' name='NSFontScriptsClass'/>
<enum value='1342177280' name='NSFontSlabSerifsClass'/>
<enum value='-1073741824' name='NSFontSymbolicClass'/>
<enum value='536870912' name='NSFontTransitionalSerifsClass'/>
<enum value='4096' name='NSFontUIOptimizedTrait'/>
<enum value='0' name='NSFontUnknownClass'/>
<enum value='2048' name='NSFontVerticalTrait'/>
<enum value='12' name='NSFormFeedCharacter'/>
<enum value='16384' name='NSFullScreenWindowMask'/>
<enum value='8388608' name='NSFunctionKeyMask'/>
<enum value='2' name='NSGIFFileType'/>
<enum value='2' name='NSGlyphAttributeBidiLevel'/>
<enum value='1' name='NSGlyphAttributeElastic'/>
<enum value='5' name='NSGlyphAttributeInscribe'/>
<enum value='0' name='NSGlyphAttributeSoft'/>
<enum value='2' name='NSGlyphInscribeAbove'/>
<enum value='0' name='NSGlyphInscribeBase'/>
<enum value='1' name='NSGlyphInscribeBelow'/>
<enum value='4' name='NSGlyphInscribeOverBelow'/>
<enum value='3' name='NSGlyphInscribeOverstrike'/>
<enum value='2' name='NSGradientConcaveStrong'/>
<enum value='1' name='NSGradientConcaveWeak'/>
<enum value='4' name='NSGradientConvexStrong'/>
<enum value='3' name='NSGradientConvexWeak'/>
<enum value='2' name='NSGradientDrawsAfterEndingLocation'/>
<enum value='1' name='NSGradientDrawsBeforeStartingLocation'/>
<enum value='0' name='NSGradientNone'/>
<enum value='6' name='NSGraphiteControlTint'/>
<enum value='0' name='NSGrayColorSpaceModel'/>
<enum value='0' name='NSGrayModeColorPanel'/>
<enum value='3' name='NSGrooveBorder'/>
<enum value='3' name='NSHSBModeColorPanel'/>
<enum value='8192' name='NSHUDWindowMask'/>
<enum value='5' name='NSHeavierFontAction'/>
<enum value='9' name='NSHelpButtonBezelStyle'/>
<enum value='63302' name='NSHelpFunctionKey'/>
<enum value='4194304' name='NSHelpKeyMask'/>
<enum value='1' name='NSHighlightModeMatrix'/>
<enum value='63273' name='NSHomeFunctionKey'/>
<enum value='0' name='NSHorizontalRuler'/>
<enum value='12' name='NSHourMinuteDatePickerElementFlag'/>
<enum value='14' name='NSHourMinuteSecondDatePickerElementFlag'/>
<enum value='0' name='NSIdentityMappingCharacterCollection'/>
<enum value='0' name='NSIllegalTextMovement'/>
<enum value='5' name='NSImageAbove'/>
<enum value='5' name='NSImageAlignBottom'/>
<enum value='6' name='NSImageAlignBottomLeft'/>
<enum value='7' name='NSImageAlignBottomRight'/>
<enum value='0' name='NSImageAlignCenter'/>
<enum value='4' name='NSImageAlignLeft'/>
<enum value='8' name='NSImageAlignRight'/>
<enum value='1' name='NSImageAlignTop'/>
<enum value='2' name='NSImageAlignTopLeft'/>
<enum value='3' name='NSImageAlignTopRight'/>
<enum value='4' name='NSImageBelow'/>
<enum value='1' name='NSImageCacheAlways'/>
<enum value='2' name='NSImageCacheBySize'/>
<enum value='0' name='NSImageCacheDefault'/>
<enum value='3' name='NSImageCacheNever'/>
<enum value='2' name='NSImageCellType'/>
<enum value='4' name='NSImageFrameButton'/>
<enum value='2' name='NSImageFrameGrayBezel'/>
<enum value='3' name='NSImageFrameGroove'/>
<enum value='0' name='NSImageFrameNone'/>
<enum value='1' name='NSImageFramePhoto'/>
<enum value='0' name='NSImageInterpolationDefault'/>
<enum value='3' name='NSImageInterpolationHigh'/>
<enum value='2' name='NSImageInterpolationLow'/>
<enum value='4' name='NSImageInterpolationMedium'/>
<enum value='1' name='NSImageInterpolationNone'/>
<enum value='2' name='NSImageLeft'/>
<enum value='1' name='NSImageLoadStatusCancelled'/>
<enum value='0' name='NSImageLoadStatusCompleted'/>
<enum value='2' name='NSImageLoadStatusInvalidData'/>
<enum value='4' name='NSImageLoadStatusReadError'/>
<enum value='3' name='NSImageLoadStatusUnexpectedEOF'/>
<enum value='1' name='NSImageOnly'/>
<enum value='6' name='NSImageOverlaps'/>
<enum value='-6' name='NSImageRepLoadStatusCompleted'/>
<enum value='-4' name='NSImageRepLoadStatusInvalidData'/>
<enum value='-2' name='NSImageRepLoadStatusReadingHeader'/>
<enum value='-5' name='NSImageRepLoadStatusUnexpectedEOF'/>
<enum value='-1' name='NSImageRepLoadStatusUnknownType'/>
<enum value='-3' name='NSImageRepLoadStatusWillNeedAllData'/>
<enum value='0' name='NSImageRepMatchesDevice'/>
<enum value='3' name='NSImageRight'/>
<enum value='1' name='NSImageScaleAxesIndependently'/>
<enum value='2' name='NSImageScaleNone'/>
<enum value='0' name='NSImageScaleProportionallyDown'/>
<enum value='3' name='NSImageScaleProportionallyUpOrDown'/>
<enum value='5' name='NSIndexedColorSpaceModel'/>
<enum value='1' name='NSInformationalAlertStyle'/>
<enum value='10' name='NSInformationalRequest'/>
<enum value='15' name='NSInlineBezelStyle'/>
<enum value='63293' name='NSInsertCharFunctionKey'/>
<enum value='63271' name='NSInsertFunctionKey'/>
<enum value='63291' name='NSInsertLineFunctionKey'/>
<enum value='1' name='NSIntType'/>
<enum value='1' name='NSItalicFontMask'/>
<enum value='5' name='NSJPEG2000FileType'/>
<enum value='3' name='NSJPEGFileType'/>
<enum value='3' name='NSJustifiedTextAlignment'/>
<enum value='10' name='NSKeyDown'/>
<enum value='1024' name='NSKeyDownMask'/>
<enum value='11' name='NSKeyUp'/>
<enum value='2048' name='NSKeyUpMask'/>
<enum value='3' name='NSLABColorSpaceModel'/>
<enum value='1' name='NSLandscapeOrientation'/>
<enum value='11' name='NSLayoutAttributeBaseline'/>
<enum value='4' name='NSLayoutAttributeBottom'/>
<enum value='9' name='NSLayoutAttributeCenterX'/>
<enum value='10' name='NSLayoutAttributeCenterY'/>
<enum value='8' name='NSLayoutAttributeHeight'/>
<enum value='5' name='NSLayoutAttributeLeading'/>
<enum value='1' name='NSLayoutAttributeLeft'/>
<enum value='0' name='NSLayoutAttributeNotAnAttribute'/>
<enum value='2' name='NSLayoutAttributeRight'/>
<enum value='3' name='NSLayoutAttributeTop'/>
<enum value='6' name='NSLayoutAttributeTrailing'/>
<enum value='7' name='NSLayoutAttributeWidth'/>
<enum value='0' name='NSLayoutConstraintOrientationHorizontal'/>
<enum value='1' name='NSLayoutConstraintOrientationVertical'/>
<enum value='2048' name='NSLayoutFormatAlignAllBaseline'/>
<enum value='16' name='NSLayoutFormatAlignAllBottom'/>
<enum value='512' name='NSLayoutFormatAlignAllCenterX'/>
<enum value='1024' name='NSLayoutFormatAlignAllCenterY'/>
<enum value='32' name='NSLayoutFormatAlignAllLeading'/>
<enum value='2' name='NSLayoutFormatAlignAllLeft'/>
<enum value='4' name='NSLayoutFormatAlignAllRight'/>
<enum value='8' name='NSLayoutFormatAlignAllTop'/>
<enum value='64' name='NSLayoutFormatAlignAllTrailing'/>
<enum value='65535' name='NSLayoutFormatAlignmentMask'/>
<enum value='0' name='NSLayoutFormatDirectionLeadingToTrailing'/>
<enum value='65536' name='NSLayoutFormatDirectionLeftToRight'/>
<enum value='196608' name='NSLayoutFormatDirectionMask'/>
<enum value='131072' name='NSLayoutFormatDirectionRightToLeft'/>
<enum value='750' name='NSLayoutPriorityDefaultHigh'/>
<enum value='250' name='NSLayoutPriorityDefaultLow'/>
<enum value='510' name='NSLayoutPriorityDragThatCanResizeWindow'/>
<enum value='490' name='NSLayoutPriorityDragThatCannotResizeWindow'/>
<enum value='50' name='NSLayoutPriorityFittingSizeCompression'/>
<enum value='1000' name='NSLayoutPriorityRequired'/>
<enum value='500' name='NSLayoutPriorityWindowSizeStayPut'/>
<enum value='0' name='NSLayoutRelationEqual'/>
<enum value='1' name='NSLayoutRelationGreaterThanOrEqual'/>
<enum value='-1' name='NSLayoutRelationLessThanOrEqual'/>
<enum value='63234' name='NSLeftArrowFunctionKey'/>
<enum value='1' name='NSLeftMouseDown'/>
<enum value='2' name='NSLeftMouseDownMask'/>
<enum value='6' name='NSLeftMouseDragged'/>
<enum value='64' name='NSLeftMouseDraggedMask'/>
<enum value='2' name='NSLeftMouseUp'/>
<enum value='4' name='NSLeftMouseUpMask'/>
<enum value='0' name='NSLeftTabStopType'/>
<enum value='1' name='NSLeftTabsBezelBorder'/>
<enum value='0' name='NSLeftTextAlignment'/>
<enum value='19' name='NSLeftTextMovement'/>
<enum value='6' name='NSLighterFontAction'/>
<enum value='1' name='NSLineBorder'/>
<enum value='1' name='NSLineBreakByCharWrapping'/>
<enum value='2' name='NSLineBreakByClipping'/>
<enum value='3' name='NSLineBreakByTruncatingHead'/>
<enum value='5' name='NSLineBreakByTruncatingMiddle'/>
<enum value='4' name='NSLineBreakByTruncatingTail'/>
<enum value='0' name='NSLineBreakByWordWrapping'/>
<enum value='0' name='NSLineDoesntMove'/>
<enum value='3' name='NSLineMovesDown'/>
<enum value='1' name='NSLineMovesLeft'/>
<enum value='2' name='NSLineMovesRight'/>
<enum value='4' name='NSLineMovesUp'/>
<enum value='8232' name='NSLineSeparatorCharacter'/>
<enum value='2' name='NSLineSweepDown'/>
<enum value='0' name='NSLineSweepLeft'/>
<enum value='1' name='NSLineSweepRight'/>
<enum value='3' name='NSLineSweepUp'/>
<enum value='1' name='NSLineToBezierPathElement'/>
<enum value='0' name='NSLinearSlider'/>
<enum value='2' name='NSListModeMatrix'/>
<enum value='3' name='NSMacintoshInterfaceStyle'/>
<enum value='24' name='NSMainMenuWindowLevel'/>
<enum value='63285' name='NSMenuFunctionKey'/>
<enum value='32' name='NSMenuPropertyItemAccessibilityDescription'/>
<enum value='2' name='NSMenuPropertyItemAttributedTitle'/>
<enum value='16' name='NSMenuPropertyItemEnabled'/>
<enum value='8' name='NSMenuPropertyItemImage'/>
<enum value='4' name='NSMenuPropertyItemKeyEquivalent'/>
<enum value='1' name='NSMenuPropertyItemTitle'/>
<enum value='2' name='NSMiniControlSize'/>
<enum value='4' name='NSMiniaturizableWindowMask'/>
<enum value='0' name='NSMiterLineJoinStyle'/>
<enum value='-1' name='NSMixedState'/>
<enum value='8' name='NSModalPanelWindowLevel'/>
<enum value='63303' name='NSModeSwitchFunctionKey'/>
<enum value='5' name='NSMomentaryChangeButton'/>
<enum value='7' name='NSMomentaryLight'/>
<enum value='0' name='NSMomentaryLightButton'/>
<enum value='0' name='NSMomentaryPushButton'/>
<enum value='7' name='NSMomentaryPushInButton'/>
<enum value='8' name='NSMouseEntered'/>
<enum value='256' name='NSMouseEnteredMask'/>
<enum value='0' name='NSMouseEventSubtype'/>
<enum value='9' name='NSMouseExited'/>
<enum value='512' name='NSMouseExitedMask'/>
<enum value='5' name='NSMouseMoved'/>
<enum value='32' name='NSMouseMovedMask'/>
<enum value='0' name='NSMoveToBezierPathElement'/>
<enum value='16' name='NSNarrowFontMask'/>
<enum value='5' name='NSNativeShortGlyphPacking'/>
<enum value='4' name='NSNaturalTextAlignment'/>
<enum value='10' name='NSNewlineCharacter'/>
<enum value='63296' name='NSNextFunctionKey'/>
<enum value='1' name='NSNextStepInterfaceStyle'/>
<enum value='0' name='NSNoBorder'/>
<enum value='0' name='NSNoCellMask'/>
<enum value='0' name='NSNoFontChangeAction'/>
<enum value='0' name='NSNoImage'/>
<enum value='0' name='NSNoInterfaceStyle'/>
<enum value='-1' name='NSNoModeColorPanel'/>
<enum value='0' name='NSNoScrollerParts'/>
<enum value='4' name='NSNoTabsBezelBorder'/>
<enum value='5' name='NSNoTabsLineBorder'/>
<enum value='6' name='NSNoTabsNoBorder'/>
<enum value='0' name='NSNoTitle'/>
<enum value='0' name='NSNoUnderlineStyle'/>
<enum value='8' name='NSNonStandardCharacterSetFontMask'/>
<enum value='0' name='NSNonZeroWindingRule'/>
<enum value='128' name='NSNonactivatingPanelMask'/>
<enum value='0' name='NSNormalWindowLevel'/>
<enum value='0' name='NSNullCellType'/>
<enum value='0' name='NSNullGlyph'/>
<enum value='2097152' name='NSNumericPadKeyMask'/>
<enum value='1' name='NSOKButton'/>
<enum value='1' name='NSOPENGL_CURRENT_VERSION'/>
<enum value='0' name='NSOffState'/>
<enum value='6' name='NSOnOffButton'/>
<enum value='1' name='NSOnState'/>
<enum value='1' name='NSOnlyScrollerArrows'/>
<enum value='309' name='NSOpenGLCPCurrentRendererID'/>
<enum value='311' name='NSOpenGLCPGPUFragmentProcessing'/>
<enum value='310' name='NSOpenGLCPGPUVertexProcessing'/>
<enum value='314' name='NSOpenGLCPHasDrawable'/>
<enum value='315' name='NSOpenGLCPMPSwapsInFlight'/>
<enum value='221' name='NSOpenGLCPRasterizationEnable'/>
<enum value='308' name='NSOpenGLCPReclaimResources'/>
<enum value='301' name='NSOpenGLCPStateValidation'/>
<enum value='304' name='NSOpenGLCPSurfaceBackingSize'/>
<enum value='236' name='NSOpenGLCPSurfaceOpacity'/>
<enum value='235' name='NSOpenGLCPSurfaceOrder'/>
<enum value='306' name='NSOpenGLCPSurfaceSurfaceVolatile'/>
<enum value='222' name='NSOpenGLCPSwapInterval'/>
<enum value='200' name='NSOpenGLCPSwapRectangle'/>
<enum value='201' name='NSOpenGLCPSwapRectangleEnable'/>
<enum value='502' name='NSOpenGLGOClearFormatCache'/>
<enum value='501' name='NSOpenGLGOFormatCacheSize'/>
<enum value='504' name='NSOpenGLGOResetLibrary'/>
<enum value='503' name='NSOpenGLGORetainRenderers'/>
<enum value='506' name='NSOpenGLGOUseBuildCache'/>
<enum value='73' name='NSOpenGLPFAAccelerated'/>
<enum value='97' name='NSOpenGLPFAAcceleratedCompute'/>
<enum value='14' name='NSOpenGLPFAAccumSize'/>
<enum value='1' name='NSOpenGLPFAAllRenderers'/>
<enum value='96' name='NSOpenGLPFAAllowOfflineRenderers'/>
<enum value='11' name='NSOpenGLPFAAlphaSize'/>
<enum value='7' name='NSOpenGLPFAAuxBuffers'/>
<enum value='57' name='NSOpenGLPFAAuxDepthStencil'/>
<enum value='76' name='NSOpenGLPFABackingStore'/>
<enum value='74' name='NSOpenGLPFAClosestPolicy'/>
<enum value='58' name='NSOpenGLPFAColorFloat'/>
<enum value='8' name='NSOpenGLPFAColorSize'/>
<enum value='83' name='NSOpenGLPFACompliant'/>
<enum value='12' name='NSOpenGLPFADepthSize'/>
<enum value='5' name='NSOpenGLPFADoubleBuffer'/>
<enum value='54' name='NSOpenGLPFAFullScreen'/>
<enum value='78' name='NSOpenGLPFAMPSafe'/>
<enum value='52' name='NSOpenGLPFAMaximumPolicy'/>
<enum value='51' name='NSOpenGLPFAMinimumPolicy'/>
<enum value='81' name='NSOpenGLPFAMultiScreen'/>
<enum value='59' name='NSOpenGLPFAMultisample'/>
<enum value='72' name='NSOpenGLPFANoRecovery'/>
<enum value='53' name='NSOpenGLPFAOffScreen'/>
<enum value='99' name='NSOpenGLPFAOpenGLProfile'/>
<enum value='90' name='NSOpenGLPFAPixelBuffer'/>
<enum value='91' name='NSOpenGLPFARemotePixelBuffer'/>
<enum value='70' name='NSOpenGLPFARendererID'/>
<enum value='75' name='NSOpenGLPFARobust'/>
<enum value='61' name='NSOpenGLPFASampleAlpha'/>
<enum value='55' name='NSOpenGLPFASampleBuffers'/>
<enum value='56' name='NSOpenGLPFASamples'/>
<enum value='84' name='NSOpenGLPFAScreenMask'/>
<enum value='71' name='NSOpenGLPFASingleRenderer'/>
<enum value='13' name='NSOpenGLPFAStencilSize'/>
<enum value='6' name='NSOpenGLPFAStereo'/>
<enum value='60' name='NSOpenGLPFASupersample'/>
<enum value='3' name='NSOpenGLPFATripleBuffer'/>
<enum value='128' name='NSOpenGLPFAVirtualScreenCount'/>
<enum value='80' name='NSOpenGLPFAWindow'/>
<enum value='12800' name='NSOpenGLProfileVersion3_2Core'/>
<enum value='4096' name='NSOpenGLProfileVersionLegacy'/>
<enum value='25' name='NSOtherMouseDown'/>
<enum value='33554432' name='NSOtherMouseDownMask'/>
<enum value='27' name='NSOtherMouseDragged'/>
<enum value='134217728' name='NSOtherMouseDraggedMask'/>
<enum value='26' name='NSOtherMouseUp'/>
<enum value='67108864' name='NSOtherMouseUpMask'/>
<enum value='0' name='NSOtherTextMovement'/>
<enum value='-1' name='NSOutlineViewDropOnItemIndex'/>
<enum value='4' name='NSPNGFileType'/>
<enum value='2' name='NSPageControllerTransitionStyleHorizontalStrip'/>
<enum value='1' name='NSPageControllerTransitionStyleStackBook'/>
<enum value='0' name='NSPageControllerTransitionStyleStackHistory'/>
<enum value='63277' name='NSPageDownFunctionKey'/>
<enum value='63276' name='NSPageUpFunctionKey'/>
<enum value='8233' name='NSParagraphSeparatorCharacter'/>
<enum value='0' name='NSPasteboardReadingAsData'/>
<enum value='4' name='NSPasteboardReadingAsKeyedArchive'/>
<enum value='2' name='NSPasteboardReadingAsPropertyList'/>
<enum value='1' name='NSPasteboardReadingAsString'/>
<enum value='512' name='NSPasteboardWritingPromised'/>
<enum value='1' name='NSPathStyleNavigationBar'/>
<enum value='2' name='NSPathStylePopUp'/>
<enum value='0' name='NSPathStyleStandard'/>
<enum value='6' name='NSPatternColorSpaceModel'/>
<enum value='63280' name='NSPauseFunctionKey'/>
<enum value='2' name='NSPenLowerSideMask'/>
<enum value='1' name='NSPenPointingDevice'/>
<enum value='1' name='NSPenTipMask'/>
<enum value='4' name='NSPenUpperSideMask'/>
<enum value='16' name='NSPeriodic'/>
<enum value='65536' name='NSPeriodicMask'/>
<enum value='1' name='NSPlainTextTokenStyle'/>
<enum value='2' name='NSPopUpArrowAtBottom'/>
<enum value='1' name='NSPopUpArrowAtCenter'/>
<enum value='101' name='NSPopUpMenuWindowLevel'/>
<enum value='0' name='NSPopUpNoArrow'/>
<enum value='1' name='NSPopoverAppearanceHUD'/>
<enum value='0' name='NSPopoverAppearanceMinimal'/>
<enum value='0' name='NSPopoverBehaviorApplicationDefined'/>
<enum value='2' name='NSPopoverBehaviorSemitransient'/>
<enum value='1' name='NSPopoverBehaviorTransient'/>
<enum value='0' name='NSPortraitOrientation'/>
<enum value='7' name='NSPositiveDoubleType'/>
<enum value='4' name='NSPositiveFloatType'/>
<enum value='2' name='NSPositiveIntType'/>
<enum value='256' name='NSPosterFontMask'/>
<enum value='1' name='NSPowerOffEventType'/>
<enum value='2' name='NSPressedTab'/>
<enum value='63295' name='NSPrevFunctionKey'/>
<enum value='63288' name='NSPrintFunctionKey'/>
<enum value='1' name='NSPrintPanelShowsCopies'/>
<enum value='8' name='NSPrintPanelShowsOrientation'/>
<enum value='2' name='NSPrintPanelShowsPageRange'/>
<enum value='256' name='NSPrintPanelShowsPageSetupAccessory'/>
<enum value='4' name='NSPrintPanelShowsPaperSize'/>
<enum value='131072' name='NSPrintPanelShowsPreview'/>
<enum value='32' name='NSPrintPanelShowsPrintSelection'/>
<enum value='16' name='NSPrintPanelShowsScaling'/>
<enum value='0' name='NSPrintRenderingQualityBest'/>
<enum value='1' name='NSPrintRenderingQualityResponsive'/>
<enum value='63278' name='NSPrintScreenFunctionKey'/>
<enum value='2' name='NSPrinterTableError'/>
<enum value='1' name='NSPrinterTableNotFound'/>
<enum value='0' name='NSPrinterTableOK'/>
<enum value='0' name='NSPrintingCancelled'/>
<enum value='3' name='NSPrintingFailure'/>
<enum value='2' name='NSPrintingReplyLater'/>
<enum value='1' name='NSPrintingSuccess'/>
<enum value='0' name='NSProgressIndicatorBarStyle'/>
<enum value='12' name='NSProgressIndicatorPreferredAquaThickness'/>
<enum value='18' name='NSProgressIndicatorPreferredLargeThickness'/>
<enum value='10' name='NSProgressIndicatorPreferredSmallThickness'/>
<enum value='14' name='NSProgressIndicatorPreferredThickness'/>
<enum value='1' name='NSProgressIndicatorSpinningStyle'/>
<enum value='2' name='NSPushInCell'/>
<enum value='2' name='NSPushInCellMask'/>
<enum value='1' name='NSPushOnPushOffButton'/>
<enum value='1' name='NSRGBColorSpaceModel'/>
<enum value='1' name='NSRGBModeColorPanel'/>
<enum value='4' name='NSRadioButton'/>
<enum value='0' name='NSRadioModeMatrix'/>
<enum value='1' name='NSRangeDateMode'/>
<enum value='3' name='NSRatingLevelIndicatorStyle'/>
<enum value='13' name='NSRecessedBezelStyle'/>
<enum value='63300' name='NSRedoFunctionKey'/>
<enum value='0' name='NSRegularControlSize'/>
<enum value='2' name='NSRegularSquareBezelStyle'/>
<enum value='0' name='NSRelevancyLevelIndicatorStyle'/>
<enum value='4' name='NSRemoteNotificationTypeAlert'/>
<enum value='1' name='NSRemoteNotificationTypeBadge'/>
<enum value='0' name='NSRemoteNotificationTypeNone'/>
<enum value='2' name='NSRemoteNotificationTypeSound'/>
<enum value='7' name='NSRemoveTraitFontAction'/>
<enum value='700000' name='NSResetCursorRectsRunLoopOrdering'/>
<enum value='63283' name='NSResetFunctionKey'/>
<enum value='8' name='NSResizableWindowMask'/>
<enum value='16' name='NSReturnTextMovement'/>
<enum value='63235' name='NSRightArrowFunctionKey'/>
<enum value='3' name='NSRightMouseDown'/>
<enum value='8' name='NSRightMouseDownMask'/>
<enum value='7' name='NSRightMouseDragged'/>
<enum value='128' name='NSRightMouseDraggedMask'/>
<enum value='4' name='NSRightMouseUp'/>
<enum value='16' name='NSRightMouseUpMask'/>
<enum value='1' name='NSRightTabStopType'/>
<enum value='3' name='NSRightTabsBezelBorder'/>
<enum value='1' name='NSRightTextAlignment'/>
<enum value='20' name='NSRightTextMovement'/>
<enum value='1' name='NSRoundLineCapStyle'/>
<enum value='1' name='NSRoundLineJoinStyle'/>
<enum value='12' name='NSRoundRectBezelStyle'/>
<enum value='1' name='NSRoundedBezelStyle'/>
<enum value='14' name='NSRoundedDisclosureBezelStyle'/>
<enum value='2' name='NSRoundedTokenStyle'/>
<enum value='2' name='NSRuleEditorNestingModeCompound'/>
<enum value='1' name='NSRuleEditorNestingModeList'/>
<enum value='3' name='NSRuleEditorNestingModeSimple'/>
<enum value='0' name='NSRuleEditorNestingModeSingle'/>
<enum value='1' name='NSRuleEditorRowTypeCompound'/>
<enum value='0' name='NSRuleEditorRowTypeSimple'/>
<enum value='-1001' name='NSRunAbortedResponse'/>
<enum value='-1002' name='NSRunContinuesResponse'/>
<enum value='-1000' name='NSRunStoppedResponse'/>
<enum value='1' name='NSSaveAsOperation'/>
<enum value='0' name='NSSaveOperation'/>
<enum value='2' name='NSSaveToOperation'/>
<enum value='2' name='NSScaleNone'/>
<enum value='0' name='NSScaleProportionally'/>
<enum value='1' name='NSScaleToFit'/>
<enum value='8' name='NSScreenChangedEventType'/>
<enum value='1000' name='NSScreenSaverWindowLevel'/>
<enum value='2' name='NSScrollElasticityAllowed'/>
<enum value='0' name='NSScrollElasticityAutomatic'/>
<enum value='1' name='NSScrollElasticityNone'/>
<enum value='63279' name='NSScrollLockFunctionKey'/>
<enum value='1' name='NSScrollViewFindBarPositionAboveContent'/>
<enum value='0' name='NSScrollViewFindBarPositionAboveHorizontalRuler'/>
<enum value='2' name='NSScrollViewFindBarPositionBelowContent'/>
<enum value='22' name='NSScrollWheel'/>
<enum value='4194304' name='NSScrollWheelMask'/>
<enum value='0' name='NSScrollerArrowsDefaultSetting'/>
<enum value='0' name='NSScrollerArrowsMaxEnd'/>
<enum value='1' name='NSScrollerArrowsMinEnd'/>
<enum value='2' name='NSScrollerArrowsNone'/>
<enum value='1' name='NSScrollerDecrementArrow'/>
<enum value='4' name='NSScrollerDecrementLine'/>
<enum value='1' name='NSScrollerDecrementPage'/>
<enum value='0' name='NSScrollerIncrementArrow'/>
<enum value='5' name='NSScrollerIncrementLine'/>
<enum value='3' name='NSScrollerIncrementPage'/>
<enum value='2' name='NSScrollerKnob'/>
<enum value='6' name='NSScrollerKnobSlot'/>
<enum value='1' name='NSScrollerKnobStyleDark'/>
<enum value='0' name='NSScrollerKnobStyleDefault'/>
<enum value='2' name='NSScrollerKnobStyleLight'/>
<enum value='0' name='NSScrollerNoPart'/>
<enum value='0' name='NSScrollerStyleLegacy'/>
<enum value='1' name='NSScrollerStyleOverlay'/>
<enum value='1002' name='NSSearchFieldClearRecentsMenuItemTag'/>
<enum value='1003' name='NSSearchFieldNoRecentsMenuItemTag'/>
<enum value='1001' name='NSSearchFieldRecentsMenuItemTag'/>
<enum value='1000' name='NSSearchFieldRecentsTitleMenuItemTag'/>
<enum value='0' name='NSSegmentStyleAutomatic'/>
<enum value='5' name='NSSegmentStyleCapsule'/>
<enum value='3' name='NSSegmentStyleRoundRect'/>
<enum value='1' name='NSSegmentStyleRounded'/>
<enum value='6' name='NSSegmentStyleSmallSquare'/>
<enum value='2' name='NSSegmentStyleTexturedRounded'/>
<enum value='4' name='NSSegmentStyleTexturedSquare'/>
<enum value='2' name='NSSegmentSwitchTrackingMomentary'/>
<enum value='1' name='NSSegmentSwitchTrackingSelectAny'/>
<enum value='0' name='NSSegmentSwitchTrackingSelectOne'/>
<enum value='0' name='NSSelectByCharacter'/>
<enum value='2' name='NSSelectByParagraph'/>
<enum value='1' name='NSSelectByWord'/>
<enum value='63297' name='NSSelectFunctionKey'/>
<enum value='0' name='NSSelectedTab'/>
<enum value='1' name='NSSelectingNext'/>
<enum value='2' name='NSSelectingPrevious'/>
<enum value='1' name='NSSelectionAffinityDownstream'/>
<enum value='0' name='NSSelectionAffinityUpstream'/>
<enum value='66561' name='NSServiceApplicationLaunchFailedError'/>
<enum value='66560' name='NSServiceApplicationNotFoundError'/>
<enum value='66817' name='NSServiceErrorMaximum'/>
<enum value='66560' name='NSServiceErrorMinimum'/>
<enum value='66563' name='NSServiceInvalidPasteboardDataError'/>
<enum value='66564' name='NSServiceMalformedServiceDictionaryError'/>
<enum value='66800' name='NSServiceMiscellaneousError'/>
<enum value='66562' name='NSServiceRequestTimedOutError'/>
<enum value='6' name='NSShadowlessSquareBezelStyle'/>
<enum value='2' name='NSSharingContentScopeFull'/>
<enum value='0' name='NSSharingContentScopeItem'/>
<enum value='1' name='NSSharingContentScopePartial'/>
<enum value='131072' name='NSShiftKeyMask'/>
<enum value='1' name='NSShowControlGlyphs'/>
<enum value='2' name='NSShowInvisibleGlyphs'/>
<enum value='0' name='NSSingleDateMode'/>
<enum value='1' name='NSSingleUnderlineStyle'/>
<enum value='4' name='NSSizeDownFontAction'/>
<enum value='3' name='NSSizeUpFontAction'/>
<enum value='128' name='NSSmallCapsFontMask'/>
<enum value='1' name='NSSmallControlSize'/>
<enum value='2' name='NSSmallIconButtonBezelStyle'/>
<enum value='10' name='NSSmallSquareBezelStyle'/>
<enum value='0' name='NSSpecialPageOrder'/>
<enum value='0' name='NSSpeechImmediateBoundary'/>
<enum value='2' name='NSSpeechSentenceBoundary'/>
<enum value='1' name='NSSpeechWordBoundary'/>
<enum value='2' name='NSSpellingStateGrammarFlag'/>
<enum value='1' name='NSSpellingStateSpellingFlag'/>
<enum value='3' name='NSSplitViewDividerStylePaneSplitter'/>
<enum value='1' name='NSSplitViewDividerStyleThick'/>
<enum value='2' name='NSSplitViewDividerStyleThin'/>
<enum value='2' name='NSSquareLineCapStyle'/>
<enum value='-2' name='NSSquareStatusItemLength'/>
<enum value='25' name='NSStatusWindowLevel'/>
<enum value='63284' name='NSStopFunctionKey'/>
<enum value='4' name='NSStringDrawingDisableScreenFontSubstitution'/>
<enum value='16' name='NSStringDrawingOneShot'/>
<enum value='32' name='NSStringDrawingTruncatesLastVisibleLine'/>
<enum value='8' name='NSStringDrawingUsesDeviceMetrics'/>
<enum value='2' name='NSStringDrawingUsesFontLeading'/>
<enum value='1' name='NSStringDrawingUsesLineFragmentOrigin'/>
<enum value='3' name='NSSubmenuWindowLevel'/>
<enum value='3' name='NSSwitchButton'/>
<enum value='63281' name='NSSysReqFunctionKey'/>
<enum value='14' name='NSSystemDefined'/>
<enum value='16384' name='NSSystemDefinedMask'/>
<enum value='63287' name='NSSystemFunctionKey'/>
<enum value='3' name='NSTIFFCompressionCCITTFAX3'/>
<enum value='4' name='NSTIFFCompressionCCITTFAX4'/>
<enum value='6' name='NSTIFFCompressionJPEG'/>
<enum value='5' name='NSTIFFCompressionLZW'/>
<enum value='32766' name='NSTIFFCompressionNEXT'/>
<enum value='1' name='NSTIFFCompressionNone'/>
<enum value='32865' name='NSTIFFCompressionOldJPEG'/>
<enum value='32773' name='NSTIFFCompressionPackBits'/>
<enum value='0' name='NSTIFFFileType'/>
<enum value='9' name='NSTabCharacter'/>
<enum value='17' name='NSTabTextMovement'/>
<enum value='1' name='NSTableColumnAutoresizingMask'/>
<enum value='0' name='NSTableColumnNoResizing'/>
<enum value='2' name='NSTableColumnUserResizingMask'/>
<enum value='1' name='NSTableViewAnimationEffectFade'/>
<enum value='2' name='NSTableViewAnimationEffectGap'/>
<enum value='0' name='NSTableViewAnimationEffectNone'/>
<enum value='32' name='NSTableViewAnimationSlideDown'/>
<enum value='48' name='NSTableViewAnimationSlideLeft'/>
<enum value='64' name='NSTableViewAnimationSlideRight'/>
<enum value='16' name='NSTableViewAnimationSlideUp'/>
<enum value='8' name='NSTableViewDashedHorizontalGridLineMask'/>
<enum value='-1' name='NSTableViewDraggingDestinationFeedbackStyleNone'/>
<enum value='0' name='NSTableViewDraggingDestinationFeedbackStyleRegular'/>
<enum value='1' name='NSTableViewDraggingDestinationFeedbackStyleSourceList'/>
<enum value='1' name='NSTableViewDropAbove'/>
<enum value='0' name='NSTableViewDropOn'/>
<enum value='5' name='NSTableViewFirstColumnOnlyAutoresizingStyle'/>
<enum value='0' name='NSTableViewGridNone'/>
<enum value='4' name='NSTableViewLastColumnOnlyAutoresizingStyle'/>
<enum value='0' name='NSTableViewNoColumnAutoresizing'/>
<enum value='3' name='NSTableViewReverseSequentialColumnAutoresizingStyle'/>
<enum value='0' name='NSTableViewRowSizeStyleCustom'/>
<enum value='-1' name='NSTableViewRowSizeStyleDefault'/>
<enum value='3' name='NSTableViewRowSizeStyleLarge'/>
<enum value='2' name='NSTableViewRowSizeStyleMedium'/>
<enum value='1' name='NSTableViewRowSizeStyleSmall'/>
<enum value='-1' name='NSTableViewSelectionHighlightStyleNone'/>
<enum value='0' name='NSTableViewSelectionHighlightStyleRegular'/>
<enum value='1' name='NSTableViewSelectionHighlightStyleSourceList'/>
<enum value='2' name='NSTableViewSequentialColumnAutoresizingStyle'/>
<enum value='2' name='NSTableViewSolidHorizontalGridLineMask'/>
<enum value='1' name='NSTableViewSolidVerticalGridLineMask'/>
<enum value='1' name='NSTableViewUniformColumnAutoresizingStyle'/>
<enum value='23' name='NSTabletPoint'/>
<enum value='1' name='NSTabletPointEventSubtype'/>
<enum value='8388608' name='NSTabletPointMask'/>
<enum value='24' name='NSTabletProximity'/>
<enum value='2' name='NSTabletProximityEventSubtype'/>
<enum value='16777216' name='NSTabletProximityMask'/>
<enum value='0' name='NSTerminateCancel'/>
<enum value='2' name='NSTerminateLater'/>
<enum value='1' name='NSTerminateNow'/>
<enum value='0' name='NSTextBlockAbsoluteValueType'/>
<enum value='3' name='NSTextBlockBaselineAlignment'/>
<enum value='0' name='NSTextBlockBorder'/>
<enum value='2' name='NSTextBlockBottomAlignment'/>
<enum value='4' name='NSTextBlockHeight'/>
<enum value='1' name='NSTextBlockMargin'/>
<enum value='6' name='NSTextBlockMaximumHeight'/>
<enum value='2' name='NSTextBlockMaximumWidth'/>
<enum value='1' name='NSTextBlockMiddleAlignment'/>
<enum value='5' name='NSTextBlockMinimumHeight'/>
<enum value='1' name='NSTextBlockMinimumWidth'/>
<enum value='-1' name='NSTextBlockPadding'/>
<enum value='1' name='NSTextBlockPercentageValueType'/>
<enum value='0' name='NSTextBlockTopAlignment'/>
<enum value='0' name='NSTextBlockWidth'/>
<enum value='1' name='NSTextCellType'/>
<enum value='0' name='NSTextFieldAndStepperDatePickerStyle'/>
<enum value='2' name='NSTextFieldDatePickerStyle'/>
<enum value='1' name='NSTextFieldRoundedBezel'/>
<enum value='0' name='NSTextFieldSquareBezel'/>
<enum value='11' name='NSTextFinderActionHideFindInterface'/>
<enum value='13' name='NSTextFinderActionHideReplaceInterface'/>
<enum value='2' name='NSTextFinderActionNextMatch'/>
<enum value='3' name='NSTextFinderActionPreviousMatch'/>
<enum value='5' name='NSTextFinderActionReplace'/>
<enum value='4' name='NSTextFinderActionReplaceAll'/>
<enum value='8' name='NSTextFinderActionReplaceAllInSelection'/>
<enum value='6' name='NSTextFinderActionReplaceAndFind'/>
<enum value='9' name='NSTextFinderActionSelectAll'/>
<enum value='10' name='NSTextFinderActionSelectAllInSelection'/>
<enum value='7' name='NSTextFinderActionSetSearchString'/>
<enum value='1' name='NSTextFinderActionShowFindInterface'/>
<enum value='12' name='NSTextFinderActionShowReplaceInterface'/>
<enum value='0' name='NSTextFinderMatchingTypeContains'/>
<enum value='3' name='NSTextFinderMatchingTypeEndsWith'/>
<enum value='2' name='NSTextFinderMatchingTypeFullWord'/>
<enum value='1' name='NSTextFinderMatchingTypeStartsWith'/>
<enum value='0' name='NSTextLayoutOrientationHorizontal'/>
<enum value='1' name='NSTextLayoutOrientationVertical'/>
<enum value='1' name='NSTextListPrependEnclosingMarker'/>
<enum value='65806' name='NSTextReadInapplicableDocumentTypeError'/>
<enum value='66303' name='NSTextReadWriteErrorMaximum'/>
<enum value='65792' name='NSTextReadWriteErrorMinimum'/>
<enum value='1' name='NSTextStorageEditedAttributes'/>
<enum value='2' name='NSTextStorageEditedCharacters'/>
<enum value='0' name='NSTextTableAutomaticLayoutAlgorithm'/>
<enum value='1' name='NSTextTableFixedLayoutAlgorithm'/>
<enum value='66062' name='NSTextWriteInapplicableDocumentTypeError'/>
<enum value='0' name='NSTextWritingDirectionEmbedding'/>
<enum value='2' name='NSTextWritingDirectionOverride'/>
<enum value='256' name='NSTexturedBackgroundWindowMask'/>
<enum value='11' name='NSTexturedRoundedBezelStyle'/>
<enum value='8' name='NSTexturedSquareBezelStyle'/>
<enum value='3' name='NSThickSquareBezelStyle'/>
<enum value='4' name='NSThickerSquareBezelStyle'/>
<enum value='1' name='NSTickMarkAbove'/>
<enum value='0' name='NSTickMarkBelow'/>
<enum value='1' name='NSTickMarkLeft'/>
<enum value='0' name='NSTickMarkRight'/>
<enum value='16' name='NSTimeZoneDatePickerElementFlag'/>
<enum value='1' name='NSTitledWindowMask'/>
<enum value='2' name='NSToggleButton'/>
<enum value='0' name='NSToolbarDisplayModeDefault'/>
<enum value='1' name='NSToolbarDisplayModeIconAndLabel'/>
<enum value='2' name='NSToolbarDisplayModeIconOnly'/>
<enum value='3' name='NSToolbarDisplayModeLabelOnly'/>
<enum value='1000' name='NSToolbarItemVisibilityPriorityHigh'/>
<enum value='-1000' name='NSToolbarItemVisibilityPriorityLow'/>
<enum value='0' name='NSToolbarItemVisibilityPriorityStandard'/>
<enum value='2000' name='NSToolbarItemVisibilityPriorityUser'/>
<enum value='0' name='NSToolbarSizeModeDefault'/>
<enum value='1' name='NSToolbarSizeModeRegular'/>
<enum value='2' name='NSToolbarSizeModeSmall'/>
<enum value='0' name='NSTopTabsBezelBorder'/>
<enum value='3' name='NSTornOffMenuWindowLevel'/>
<enum value='3' name='NSTouchEventSubtype'/>
<enum value='4294967295' value64='18446744073709551615' name='NSTouchPhaseAny'/>
<enum value='1' name='NSTouchPhaseBegan'/>
<enum value='16' name='NSTouchPhaseCancelled'/>
<enum value='8' name='NSTouchPhaseEnded'/>
<enum value='2' name='NSTouchPhaseMoved'/>
<enum value='4' name='NSTouchPhaseStationary'/>
<enum value='7' name='NSTouchPhaseTouching'/>
<enum value='3' name='NSTrackModeMatrix'/>
<enum value='128' name='NSTrackingActiveAlways'/>
<enum value='64' name='NSTrackingActiveInActiveApp'/>
<enum value='32' name='NSTrackingActiveInKeyWindow'/>
<enum value='16' name='NSTrackingActiveWhenFirstResponder'/>
<enum value='256' name='NSTrackingAssumeInside'/>
<enum value='4' name='NSTrackingCursorUpdate'/>
<enum value='1024' name='NSTrackingEnabledDuringMouseDrag'/>
<enum value='512' name='NSTrackingInVisibleRect'/>
<enum value='1' name='NSTrackingMouseEnteredAndExited'/>
<enum value='2' name='NSTrackingMouseMoved'/>
<enum value='2' name='NSTypesetterBehavior_10_2'/>
<enum value='1' name='NSTypesetterBehavior_10_2_WithCompatibility'/>
<enum value='3' name='NSTypesetterBehavior_10_3'/>
<enum value='4' name='NSTypesetterBehavior_10_4'/>
<enum value='32' name='NSTypesetterContainerBreakAction'/>
<enum value='4' name='NSTypesetterHorizontalTabAction'/>
<enum value='-1' name='NSTypesetterLatestBehavior'/>
<enum value='8' name='NSTypesetterLineBreakAction'/>
<enum value='0' name='NSTypesetterOriginalBehavior'/>
<enum value='16' name='NSTypesetterParagraphBreakAction'/>
<enum value='2' name='NSTypesetterWhitespaceAction'/>
<enum value='1' name='NSTypesetterZeroAdvancementAction'/>
<enum value='4' name='NSUnboldFontMask'/>
<enum value='512' name='NSUnderlinePatternDash'/>
<enum value='768' name='NSUnderlinePatternDashDot'/>
<enum value='1024' name='NSUnderlinePatternDashDotDot'/>
<enum value='256' name='NSUnderlinePatternDot'/>
<enum value='0' name='NSUnderlinePatternSolid'/>
<enum value='9' name='NSUnderlineStyleDouble'/>
<enum value='0' name='NSUnderlineStyleNone'/>
<enum value='1' name='NSUnderlineStyleSingle'/>
<enum value='2' name='NSUnderlineStyleThick'/>
<enum value='63299' name='NSUndoFunctionKey'/>
<enum value='4096' name='NSUnifiedTitleAndToolbarWindowMask'/>
<enum value='16777216' name='NSUnitalicFontMask'/>
<enum value='-1' name='NSUnknownColorSpaceModel'/>
<enum value='2' name='NSUnknownPageOrder'/>
<enum value='0' name='NSUnknownPointingDevice'/>
<enum value='2048' name='NSUnscaledWindowMask'/>
<enum value='63232' name='NSUpArrowFunctionKey'/>
<enum value='21' name='NSUpTextMovement'/>
<enum value='500000' name='NSUpdateWindowsRunLoopOrdering'/>
<enum value='63286' name='NSUserFunctionKey'/>
<enum value='0' name='NSUserInterfaceLayoutDirectionLeftToRight'/>
<enum value='1' name='NSUserInterfaceLayoutDirectionRightToLeft'/>
<enum value='16' name='NSUtilityWindowMask'/>
<enum value='-1' name='NSVariableStatusItemLength'/>
<enum value='1' name='NSVerticalRuler'/>
<enum value='1' name='NSViaPanelFontAction'/>
<enum value='16' name='NSViewHeightSizable'/>
<enum value='8' name='NSViewLayerContentsPlacementBottom'/>
<enum value='9' name='NSViewLayerContentsPlacementBottomLeft'/>
<enum value='7' name='NSViewLayerContentsPlacementBottomRight'/>
<enum value='3' name='NSViewLayerContentsPlacementCenter'/>
<enum value='10' name='NSViewLayerContentsPlacementLeft'/>
<enum value='6' name='NSViewLayerContentsPlacementRight'/>
<enum value='0' name='NSViewLayerContentsPlacementScaleAxesIndependently'/>
<enum value='2' name='NSViewLayerContentsPlacementScaleProportionallyToFill'/>
<enum value='1' name='NSViewLayerContentsPlacementScaleProportionallyToFit'/>
<enum value='4' name='NSViewLayerContentsPlacementTop'/>
<enum value='11' name='NSViewLayerContentsPlacementTopLeft'/>
<enum value='5' name='NSViewLayerContentsPlacementTopRight'/>
<enum value='3' name='NSViewLayerContentsRedrawBeforeViewResize'/>
<enum value='2' name='NSViewLayerContentsRedrawDuringViewResize'/>
<enum value='0' name='NSViewLayerContentsRedrawNever'/>
<enum value='1' name='NSViewLayerContentsRedrawOnSetNeedsDisplay'/>
<enum value='4' name='NSViewMaxXMargin'/>
<enum value='32' name='NSViewMaxYMargin'/>
<enum value='1' name='NSViewMinXMargin'/>
<enum value='8' name='NSViewMinYMargin'/>
<enum value='0' name='NSViewNotSizable'/>
<enum value='2' name='NSViewWidthSizable'/>
<enum value='4' name='NSWantsBidiLevels'/>
<enum value='0' name='NSWarningAlertStyle'/>
<enum value='6' name='NSWheelModeColorPanel'/>
<enum value='1' name='NSWindowAbove'/>
<enum value='5' name='NSWindowAnimationBehaviorAlertPanel'/>
<enum value='0' name='NSWindowAnimationBehaviorDefault'/>
<enum value='3' name='NSWindowAnimationBehaviorDocumentWindow'/>
<enum value='2' name='NSWindowAnimationBehaviorNone'/>
<enum value='4' name='NSWindowAnimationBehaviorUtilityWindow'/>
<enum value='0' name='NSWindowBackingLocationDefault'/>
<enum value='2' name='NSWindowBackingLocationMainMemory'/>
<enum value='1' name='NSWindowBackingLocationVideoMemory'/>
<enum value='-1' name='NSWindowBelow'/>
<enum value='0' name='NSWindowCloseButton'/>
<enum value='1' name='NSWindowCollectionBehaviorCanJoinAllSpaces'/>
<enum value='0' name='NSWindowCollectionBehaviorDefault'/>
<enum value='256' name='NSWindowCollectionBehaviorFullScreenAuxiliary'/>
<enum value='128' name='NSWindowCollectionBehaviorFullScreenPrimary'/>
<enum value='64' name='NSWindowCollectionBehaviorIgnoresCycle'/>
<enum value='4' name='NSWindowCollectionBehaviorManaged'/>
<enum value='2' name='NSWindowCollectionBehaviorMoveToActiveSpace'/>
<enum value='32' name='NSWindowCollectionBehaviorParticipatesInCycle'/>
<enum value='16' name='NSWindowCollectionBehaviorStationary'/>
<enum value='8' name='NSWindowCollectionBehaviorTransient'/>
<enum value='544' name='NSWindowDepthOnehundredtwentyeightBitRGB'/>
<enum value='528' name='NSWindowDepthSixtyfourBitRGB'/>
<enum value='520' name='NSWindowDepthTwentyfourBitRGB'/>
<enum value='4' name='NSWindowDocumentIconButton'/>
<enum value='6' name='NSWindowDocumentVersionsButton'/>
<enum value='0' name='NSWindowExposedEventType'/>
<enum value='7' name='NSWindowFullScreenButton'/>
<enum value='1' name='NSWindowMiniaturizeButton'/>
<enum value='4' name='NSWindowMovedEventType'/>
<enum value='1' name='NSWindowNumberListAllApplications'/>
<enum value='16' name='NSWindowNumberListAllSpaces'/>
<enum value='0' name='NSWindowOut'/>
<enum value='0' name='NSWindowSharingNone'/>
<enum value='1' name='NSWindowSharingReadOnly'/>
<enum value='2' name='NSWindowSharingReadWrite'/>
<enum value='3' name='NSWindowToolbarButton'/>
<enum value='2' name='NSWindowZoomButton'/>
<enum value='2' name='NSWindows95InterfaceStyle'/>
<enum value='131072' name='NSWorkspaceLaunchAllowingClassicStartup'/>
<enum value='1048576' name='NSWorkspaceLaunchAndHide'/>
<enum value='2097152' name='NSWorkspaceLaunchAndHideOthers'/>
<enum value='2' name='NSWorkspaceLaunchAndPrint'/>
<enum value='65536' name='NSWorkspaceLaunchAsync'/>
<enum value='196608' name='NSWorkspaceLaunchDefault'/>
<enum value='128' name='NSWorkspaceLaunchInhibitingBackgroundOnly'/>
<enum value='524288' name='NSWorkspaceLaunchNewInstance'/>
<enum value='262144' name='NSWorkspaceLaunchPreferringClassic'/>
<enum value='512' name='NSWorkspaceLaunchWithoutActivation'/>
<enum value='256' name='NSWorkspaceLaunchWithoutAddingToRecents'/>
<enum value='0' name='NSWritingDirectionLeftToRight'/>
<enum value='-1' name='NSWritingDirectionNatural'/>
<enum value='1' name='NSWritingDirectionRightToLeft'/>
<enum value='192' name='NSYearMonthDatePickerElementFlag'/>
<enum value='224' name='NSYearMonthDayDatePickerElementFlag'/>
<function name='NSAccessibilityActionDescription'>
<arg type='@' declared_type='NSString*' name='action'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSAccessibilityPostNotification'>
<arg type='@' declared_type='id' name='element'/>
<arg type='@' declared_type='NSString*' name='notification'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSAccessibilityRaiseBadArgumentException'>
<arg type='@' declared_type='id' name='element'/>
<arg type='@' declared_type='NSString*' name='attribute'/>
<arg type='@' declared_type='id' name='value'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSAccessibilityRoleDescription'>
<arg type='@' declared_type='NSString*' name='role'/>
<arg type='@' declared_type='NSString*' name='subrole'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSAccessibilityRoleDescriptionForUIElement'>
<arg type='@' declared_type='id' name='element'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSAccessibilityUnignoredAncestor'>
<arg type='@' declared_type='id' name='element'/>
<retval type='@' declared_type='id'/>
</function>
<function name='NSAccessibilityUnignoredChildren'>
<arg type='@' declared_type='NSArray*' name='originalChildren'/>
<retval type='@' declared_type='NSArray*'/>
</function>
<function name='NSAccessibilityUnignoredChildrenForOnlyChild'>
<arg type='@' declared_type='id' name='originalChild'/>
<retval type='@' declared_type='NSArray*'/>
</function>
<function name='NSAccessibilityUnignoredDescendant'>
<arg type='@' declared_type='id' name='element'/>
<retval type='@' declared_type='id'/>
</function>
<function name='NSApplicationLoad'>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSApplicationMain'>
<arg type='i' declared_type='int' name='argc'/>
<arg type='^*' const='true' declared_type='char**' name='argv'/>
<retval type='i' declared_type='int'/>
</function>
<function name='NSAvailableWindowDepths'>
<retval type='^i' const='true' declared_type='NSWindowDepth*'/>
</function>
<function name='NSBeep'>
<retval type='v' declared_type='void'/>
</function>
<function variadic='true' name='NSBeginAlertSheet'>
<arg type='@' declared_type='NSString*' name='title'/>
<arg type='@' declared_type='NSString*' name='defaultButton'/>
<arg type='@' declared_type='NSString*' name='alternateButton'/>
<arg type='@' declared_type='NSString*' name='otherButton'/>
<arg type='@' declared_type='NSWindow*' name='docWindow'/>
<arg type='@' declared_type='id' name='modalDelegate'/>
<arg type=':' declared_type='SEL' name='didEndSelector'/>
<arg type=':' declared_type='SEL' name='didDismissSelector'/>
<arg type='^v' declared_type='void*' name='contextInfo'/>
<arg type='@' printf_format='true' declared_type='NSString*' name='msgFormat'/>
<retval type='v' declared_type='void'/>
</function>
<function variadic='true' name='NSBeginCriticalAlertSheet'>
<arg type='@' declared_type='NSString*' name='title'/>
<arg type='@' declared_type='NSString*' name='defaultButton'/>
<arg type='@' declared_type='NSString*' name='alternateButton'/>
<arg type='@' declared_type='NSString*' name='otherButton'/>
<arg type='@' declared_type='NSWindow*' name='docWindow'/>
<arg type='@' declared_type='id' name='modalDelegate'/>
<arg type=':' declared_type='SEL' name='didEndSelector'/>
<arg type=':' declared_type='SEL' name='didDismissSelector'/>
<arg type='^v' declared_type='void*' name='contextInfo'/>
<arg type='@' printf_format='true' declared_type='NSString*' name='msgFormat'/>
<retval type='v' declared_type='void'/>
</function>
<function variadic='true' name='NSBeginInformationalAlertSheet'>
<arg type='@' declared_type='NSString*' name='title'/>
<arg type='@' declared_type='NSString*' name='defaultButton'/>
<arg type='@' declared_type='NSString*' name='alternateButton'/>
<arg type='@' declared_type='NSString*' name='otherButton'/>
<arg type='@' declared_type='NSWindow*' name='docWindow'/>
<arg type='@' declared_type='id' name='modalDelegate'/>
<arg type=':' declared_type='SEL' name='didEndSelector'/>
<arg type=':' declared_type='SEL' name='didDismissSelector'/>
<arg type='^v' declared_type='void*' name='contextInfo'/>
<arg type='@' printf_format='true' declared_type='NSString*' name='msgFormat'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSBestDepth'>
<arg type='@' declared_type='NSString*' name='colorSpace'/>
<arg type64='q' type='i' declared_type='NSInteger' name='bps'/>
<arg type64='q' type='i' declared_type='NSInteger' name='bpp'/>
<arg type='B' declared_type='BOOL' name='planar'/>
<arg type='^B' declared_type='BOOL*' name='exactMatch'/>
<retval type='i' declared_type='NSWindowDepth'/>
</function>
<function name='NSBitsPerPixelFromDepth'>
<arg type='i' declared_type='NSWindowDepth' name='depth'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</function>
<function name='NSBitsPerSampleFromDepth'>
<arg type='i' declared_type='NSWindowDepth' name='depth'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</function>
<function name='NSColorSpaceFromDepth'>
<arg type='i' declared_type='NSWindowDepth' name='depth'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSConvertGlyphsToPackedGlyphs'>
<arg type='^I' declared_type='NSGlyph*' name='glBuf'/>
<arg type64='q' type='i' declared_type='NSInteger' name='count'/>
<arg type64='Q' type='I' declared_type='NSMultibyteGlyphPacking' name='packing'/>
<arg type='*' declared_type='char*' name='packedGlyphs'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</function>
<function name='NSCopyBits'>
<arg type64='q' type='i' declared_type='NSInteger' name='srcGState'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='srcRect'/>
<arg type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='destPoint'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSCountWindows'>
<arg type64='^q' type='^i' declared_type='NSInteger*' name='count'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSCountWindowsForContext'>
<arg type64='q' type='i' declared_type='NSInteger' name='context'/>
<arg type64='^q' type='^i' declared_type='NSInteger*' name='count'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSCreateFileContentsPboardType'>
<arg type='@' declared_type='NSString*' name='fileType'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSCreateFilenamePboardType'>
<arg type='@' declared_type='NSString*' name='fileType'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSDisableScreenUpdates'>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDottedFrameRect'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDrawBitmap'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg type64='q' type='i' declared_type='NSInteger' name='width'/>
<arg type64='q' type='i' declared_type='NSInteger' name='height'/>
<arg type64='q' type='i' declared_type='NSInteger' name='bps'/>
<arg type64='q' type='i' declared_type='NSInteger' name='spp'/>
<arg type64='q' type='i' declared_type='NSInteger' name='bpp'/>
<arg type64='q' type='i' declared_type='NSInteger' name='bpr'/>
<arg type='B' declared_type='BOOL' name='isPlanar'/>
<arg type='B' declared_type='BOOL' name='hasAlpha'/>
<arg type='@' declared_type='NSString*' name='colorSpaceName'/>
<arg type='^*' const='true' declared_type='unsigned char **' name='data'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDrawButton'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='clipRect'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDrawColorTiledRects'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='boundsRect'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='clipRect'/>
<arg type64='^Q' type='^i' const='true' declared_type='NSRectEdge*' name='sides'/>
<arg type='^@' declared_type='NSColor**' name='colors'/>
<arg type64='q' type='i' declared_type='NSInteger' name='count'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</function>
<function name='NSDrawDarkBezel'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='clipRect'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDrawGrayBezel'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='clipRect'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDrawGroove'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='clipRect'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDrawLightBezel'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='clipRect'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDrawNinePartImage'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frame'/>
<arg type='@' declared_type='NSImage*' name='topLeftCorner'/>
<arg type='@' declared_type='NSImage*' name='topEdgeFill'/>
<arg type='@' declared_type='NSImage*' name='topRightCorner'/>
<arg type='@' declared_type='NSImage*' name='leftEdgeFill'/>
<arg type='@' declared_type='NSImage*' name='centerFill'/>
<arg type='@' declared_type='NSImage*' name='rightEdgeFill'/>
<arg type='@' declared_type='NSImage*' name='bottomLeftCorner'/>
<arg type='@' declared_type='NSImage*' name='bottomEdgeFill'/>
<arg type='@' declared_type='NSImage*' name='bottomRightCorner'/>
<arg type64='Q' type='I' declared_type='NSCompositingOperation' name='op'/>
<arg type64='d' type='f' declared_type='CGFloat' name='alphaFraction'/>
<arg type='B' declared_type='BOOL' name='flipped'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDrawThreePartImage'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frame'/>
<arg type='@' declared_type='NSImage*' name='startCap'/>
<arg type='@' declared_type='NSImage*' name='centerFill'/>
<arg type='@' declared_type='NSImage*' name='endCap'/>
<arg type='B' declared_type='BOOL' name='vertical'/>
<arg type64='Q' type='I' declared_type='NSCompositingOperation' name='op'/>
<arg type64='d' type='f' declared_type='CGFloat' name='alphaFraction'/>
<arg type='B' declared_type='BOOL' name='flipped'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDrawTiledRects'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='boundsRect'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='clipRect'/>
<arg type64='^Q' type='^i' const='true' declared_type='NSRectEdge*' name='sides'/>
<arg type64='^d' type='^f' const='true' declared_type='CGFloat*' name='grays'/>
<arg type64='q' type='i' declared_type='NSInteger' name='count'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</function>
<function name='NSDrawWhiteBezel'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='clipRect'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSDrawWindowBackground'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type='v' declared_type='void'/>
</function>
<function inline='true' name='NSEdgeInsetsMake'>
<arg type64='d' type='f' declared_type='CGFloat' name='top'/>
<arg type64='d' type='f' declared_type='CGFloat' name='left'/>
<arg type64='d' type='f' declared_type='CGFloat' name='bottom'/>
<arg type64='d' type='f' declared_type='CGFloat' name='right'/>
<retval type64='{_NSEdgeInsets=dddd}' type='{_NSEdgeInsets=ffff}' declared_type='NSEdgeInsets'/>
</function>
<function name='NSEnableScreenUpdates'>
<retval type='v' declared_type='void'/>
</function>
<function name='NSEraseRect'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type='v' declared_type='void'/>
</function>
<function inline='true' name='NSEventMaskFromType'>
<arg type64='Q' type='I' declared_type='NSEventType' name='type'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</function>
<function name='NSFrameRect'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSFrameRectWithWidth'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg type64='d' type='f' declared_type='CGFloat' name='frameWidth'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSFrameRectWithWidthUsingOperation'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg type64='d' type='f' declared_type='CGFloat' name='frameWidth'/>
<arg type64='Q' type='I' declared_type='NSCompositingOperation' name='op'/>
<retval type='v' declared_type='void'/>
</function>
<function variadic='true' name='NSGetAlertPanel'>
<arg type='@' declared_type='NSString*' name='title'/>
<arg type='@' printf_format='true' declared_type='NSString*' name='msgFormat'/>
<arg type='@' declared_type='NSString*' name='defaultButton'/>
<arg type='@' declared_type='NSString*' name='alternateButton'/>
<arg type='@' declared_type='NSString*' name='otherButton'/>
<retval type='@' declared_type='id'/>
</function>
<function variadic='true' name='NSGetCriticalAlertPanel'>
<arg type='@' declared_type='NSString*' name='title'/>
<arg type='@' printf_format='true' declared_type='NSString*' name='msgFormat'/>
<arg type='@' declared_type='NSString*' name='defaultButton'/>
<arg type='@' declared_type='NSString*' name='alternateButton'/>
<arg type='@' declared_type='NSString*' name='otherButton'/>
<retval type='@' declared_type='id'/>
</function>
<function name='NSGetFileType'>
<arg type='@' declared_type='NSString*' name='pboardType'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='NSGetFileTypes'>
<arg type='@' declared_type='NSArray*' name='pboardTypes'/>
<retval type='@' declared_type='NSArray*'/>
</function>
<function variadic='true' name='NSGetInformationalAlertPanel'>
<arg type='@' declared_type='NSString*' name='title'/>
<arg type='@' printf_format='true' declared_type='NSString*' name='msgFormat'/>
<arg type='@' declared_type='NSString*' name='defaultButton'/>
<arg type='@' declared_type='NSString*' name='alternateButton'/>
<arg type='@' declared_type='NSString*' name='otherButton'/>
<retval type='@' declared_type='id'/>
</function>
<function name='NSGetWindowServerMemory'>
<arg type64='q' type='i' declared_type='NSInteger' name='context'/>
<arg type64='^q' type='^i' declared_type='NSInteger*' name='virtualMemory'/>
<arg type64='^q' type='^i' declared_type='NSInteger*' name='windowBackingMemory'/>
<arg type='^@' declared_type='NSString**' name='windowDumpString'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</function>
<function name='NSHighlightRect'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSInterfaceStyleForKey'>
<arg type='@' declared_type='NSString*' name='key'/>
<arg type='@' declared_type='NSResponder*' name='responder'/>
<retval type64='Q' type='I' declared_type='NSInterfaceStyle'/>
</function>
<function name='NSIsControllerMarker'>
<arg type='@' declared_type='id' name='object'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSNumberOfColorComponents'>
<arg type='@' declared_type='NSString*' name='colorSpaceName'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</function>
<function name='NSOpenGLGetOption'>
<arg type='i' declared_type='NSOpenGLGlobalOption' name='pname'/>
<arg type='^i' declared_type='GLint*' name='param'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSOpenGLGetVersion'>
<arg type='^i' declared_type='GLint*' name='major'/>
<arg type='^i' declared_type='GLint*' name='minor'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSOpenGLSetOption'>
<arg type='i' declared_type='NSOpenGLGlobalOption' name='pname'/>
<arg type='i' declared_type='GLint' name='param'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSPerformService'>
<arg type='@' declared_type='NSString*' name='itemName'/>
<arg type='@' declared_type='NSPasteboard*' name='pboard'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSPlanarFromDepth'>
<arg type='i' declared_type='NSWindowDepth' name='depth'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSReadPixel'>
<arg type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='passedPoint'/>
<retval type='@' declared_type='NSColor*'/>
</function>
<function name='NSRectClip'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSRectClipList'>
<arg type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' const='true' declared_type='NSRect*' name='rects'/>
<arg type64='q' type='i' declared_type='NSInteger' name='count'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSRectFill'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSRectFillList'>
<arg type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' const='true' declared_type='NSRect*' name='rects'/>
<arg type64='q' type='i' declared_type='NSInteger' name='count'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSRectFillListUsingOperation'>
<arg type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' const='true' declared_type='NSRect*' name='rects'/>
<arg type64='q' type='i' declared_type='NSInteger' name='count'/>
<arg type64='Q' type='I' declared_type='NSCompositingOperation' name='op'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSRectFillListWithColors'>
<arg type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' const='true' declared_type='NSRect*' name='rects'/>
<arg type='^@' const='true' declared_type='NSColor **' name='colors'/>
<arg type64='q' type='i' declared_type='NSInteger' name='num'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSRectFillListWithColorsUsingOperation'>
<arg type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' const='true' declared_type='NSRect*' name='rects'/>
<arg type='^@' const='true' declared_type='NSColor **' name='colors'/>
<arg type64='q' type='i' declared_type='NSInteger' name='num'/>
<arg type64='Q' type='I' declared_type='NSCompositingOperation' name='op'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSRectFillListWithGrays'>
<arg type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' const='true' declared_type='NSRect*' name='rects'/>
<arg type64='^d' type='^f' const='true' declared_type='CGFloat*' name='grays'/>
<arg type64='q' type='i' declared_type='NSInteger' name='num'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSRectFillUsingOperation'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg type64='Q' type='I' declared_type='NSCompositingOperation' name='op'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSRegisterServicesProvider'>
<arg type='@' declared_type='id' name='provider'/>
<arg type='@' declared_type='NSString*' name='name'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSReleaseAlertPanel'>
<arg type='@' declared_type='id' name='panel'/>
<retval type='v' declared_type='void'/>
</function>
<function variadic='true' name='NSRunAlertPanel'>
<arg type='@' declared_type='NSString*' name='title'/>
<arg type='@' printf_format='true' declared_type='NSString*' name='msgFormat'/>
<arg type='@' declared_type='NSString*' name='defaultButton'/>
<arg type='@' declared_type='NSString*' name='alternateButton'/>
<arg type='@' declared_type='NSString*' name='otherButton'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</function>
<function variadic='true' name='NSRunAlertPanelRelativeToWindow'>
<arg type='@' declared_type='NSString*' name='title'/>
<arg type='@' declared_type='NSString*' name='msgFormat'/>
<arg type='@' declared_type='NSString*' name='defaultButton'/>
<arg type='@' declared_type='NSString*' name='alternateButton'/>
<arg type='@' declared_type='NSString*' name='otherButton'/>
<arg type='@' declared_type='NSWindow*' name='docWindow'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</function>
<function variadic='true' name='NSRunCriticalAlertPanel'>
<arg type='@' declared_type='NSString*' name='title'/>
<arg type='@' printf_format='true' declared_type='NSString*' name='msgFormat'/>
<arg type='@' declared_type='NSString*' name='defaultButton'/>
<arg type='@' declared_type='NSString*' name='alternateButton'/>
<arg type='@' declared_type='NSString*' name='otherButton'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</function>
<function variadic='true' name='NSRunCriticalAlertPanelRelativeToWindow'>
<arg type='@' declared_type='NSString*' name='title'/>
<arg type='@' declared_type='NSString*' name='msgFormat'/>
<arg type='@' declared_type='NSString*' name='defaultButton'/>
<arg type='@' declared_type='NSString*' name='alternateButton'/>
<arg type='@' declared_type='NSString*' name='otherButton'/>
<arg type='@' declared_type='NSWindow*' name='docWindow'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</function>
<function variadic='true' name='NSRunInformationalAlertPanel'>
<arg type='@' declared_type='NSString*' name='title'/>
<arg type='@' printf_format='true' declared_type='NSString*' name='msgFormat'/>
<arg type='@' declared_type='NSString*' name='defaultButton'/>
<arg type='@' declared_type='NSString*' name='alternateButton'/>
<arg type='@' declared_type='NSString*' name='otherButton'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</function>
<function variadic='true' name='NSRunInformationalAlertPanelRelativeToWindow'>
<arg type='@' declared_type='NSString*' name='title'/>
<arg type='@' declared_type='NSString*' name='msgFormat'/>
<arg type='@' declared_type='NSString*' name='defaultButton'/>
<arg type='@' declared_type='NSString*' name='alternateButton'/>
<arg type='@' declared_type='NSString*' name='otherButton'/>
<arg type='@' declared_type='NSWindow*' name='docWindow'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</function>
<function name='NSSetFocusRingStyle'>
<arg type64='Q' type='I' declared_type='NSFocusRingPlacement' name='placement'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSSetShowsServicesMenuItem'>
<arg type='@' declared_type='NSString*' name='itemName'/>
<arg type='B' declared_type='BOOL' name='enabled'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</function>
<function name='NSShowAnimationEffect'>
<arg type64='Q' type='I' declared_type='NSAnimationEffect' name='animationEffect'/>
<arg type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='centerLocation'/>
<arg type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='size'/>
<arg type='@' declared_type='id' name='animationDelegate'/>
<arg type=':' declared_type='SEL' name='didEndSelector'/>
<arg type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSShowsServicesMenuItem'>
<arg type='@' declared_type='NSString*' name='itemName'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='NSUnregisterServicesProvider'>
<arg type='@' declared_type='NSString*' name='name'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSUpdateDynamicServices'>
<retval type='v' declared_type='void'/>
</function>
<function name='NSWindowList'>
<arg type64='q' type='i' declared_type='NSInteger' name='size'/>
<arg type64='^q' type='^i' declared_type='NSInteger*' name='list'/>
<retval type='v' declared_type='void'/>
</function>
<function name='NSWindowListForContext'>
<arg type64='q' type='i' declared_type='NSInteger' name='context'/>
<arg type64='q' type='i' declared_type='NSInteger' name='size'/>
<arg type64='^q' type='^i' declared_type='NSInteger*' name='list'/>
<retval type='v' declared_type='void'/>
</function>
<class name='CIColor'>
<method selector='initWithColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CIImage'>
<method selector='drawAtPoint:fromRect:operation:fraction:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='fromRect'/>
<arg index='2' type64='Q' type='I' declared_type='NSCompositingOperation' name='op'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='delta'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawInRect:fromRect:operation:fraction:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='fromRect'/>
<arg index='2' type64='Q' type='I' declared_type='NSCompositingOperation' name='op'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='delta'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithBitmapImageRep:'>
<arg index='0' type='@' declared_type='NSBitmapImageRep*' name='bitmapImageRep'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSATSTypesetter'>
<method selector='attributedString'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='bidiProcessingEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='1' type='@' declared_type='NSTextContainer*' name='textContainer'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='proposedRect'/>
<arg index='3' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='glyphPosition'/>
<arg index='4' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='characterRangeForGlyphRange:actualGlyphRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='actualGlyphRange'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='currentTextContainer'>
<retval type='@' declared_type='NSTextContainer*'/>
</method>
<method selector='deleteGlyphsInRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphsRange'/>
<arg index='1' type='^I' declared_type='NSGlyph*' name='glyphBuffer'/>
<arg index='2' type64='^Q' type='^I' declared_type='NSUInteger*' name='charIndexBuffer'/>
<arg index='3' type64='^Q' type='^I' declared_type='NSGlyphInscription*' name='inscribeBuffer'/>
<arg index='4' type='^B' declared_type='BOOL*' name='elasticBuffer'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:'>
<arg index='0' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect*' name='lineFragmentRect'/>
<arg index='1' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect*' name='lineFragmentUsedRect'/>
<arg index='2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='paragraphSeparatorGlyphRange'/>
<arg index='3' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='lineOrigin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='glyphRangeForCharacterRange:actualCharacterRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='actualCharRange'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='hyphenCharacterForGlyphAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<retval type64='I' type='L' declared_type='UTF32Char'/>
</method>
<method selector='hyphenationFactor'>
<retval type='f' declared_type='float'/>
</method>
<method selector='hyphenationFactorForGlyphAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<retval type='f' declared_type='float'/>
</method>
<method selector='insertGlyph:atGlyphIndex:characterIndex:'>
<arg index='0' type='I' declared_type='NSGlyph' name='glyph'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='characterIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='layoutManager'>
<retval type='@' declared_type='NSLayoutManager*'/>
</method>
<method selector='layoutParagraphAtPoint:'>
<arg index='0' type64='^{CGPoint=dd}' type='^{_NSPoint=ff}' declared_type='NSPoint*' name='lineFragmentOrigin'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='lineFragmentPadding'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='lineFragmentRectForProposedRect:remainingRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='proposedRect'/>
<arg index='1' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRectPointer' name='remainingRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='paragraphGlyphRange'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='paragraphSeparatorGlyphRange'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='setAttachmentSize:forGlyphRange:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='attachmentSize'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributedString:'>
<arg index='0' type='@' declared_type='NSAttributedString*' name='attrString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBidiLevels:forGlyphRange:'>
<arg index='0' type='*' const='true' declared_type='uint8_t*' name='levels'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBidiProcessingEnabled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawsOutsideLineFragment:forGlyphRange:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHardInvalidation:forGlyphRange:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHyphenationFactor:'>
<arg index='0' type='f' declared_type='float' name='factor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineFragmentPadding:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='padding'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='fragmentRect'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='usedRect'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='baselineOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocation:withAdvancements:forStartOfGlyphRange:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='location'/>
<arg index='1' type64='^d' type='^f' const='true' declared_type='CGFloat*' name='advancements'/>
<arg index='2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNotShownAttribute:forGlyphRange:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParagraphGlyphRange:separatorGlyphRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='paragraphRange'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='paragraphSeparatorRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTypesetterBehavior:'>
<arg index='0' type64='q' type='i' declared_type='NSTypesetterBehavior' name='behavior'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesFontLeading:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedTypesetter' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='shouldBreakLineByHyphenatingBeforeCharacterAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='shouldBreakLineByWordBeforeCharacterAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='substituteFontForFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='originalFont'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='substituteGlyphsInRange:withGlyphs:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<arg index='1' type='^I' declared_type='NSGlyph*' name='glyphs'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textTabForGlyphLocation:writingDirection:maxLocation:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='glyphLocation'/>
<arg index='1' type64='q' type='i' declared_type='NSWritingDirection' name='direction'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='maxLocation'/>
<retval type='@' declared_type='NSTextTab*'/>
</method>
<method selector='typesetterBehavior'>
<retval type64='q' type='i' declared_type='NSTypesetterBehavior'/>
</method>
<method selector='usesFontLeading'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'>
<arg index='0' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect*' name='lineRect'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<arg index='2' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect*' name='usedRect'/>
<arg index='3' type64='^d' type='^f' declared_type='CGFloat*' name='baselineOffset'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSActionCell'>
<method selector='action'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='setAction:'>
<arg index='0' type=':' declared_type='SEL' name='aSelector'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTag:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='anInt'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTarget:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tag'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='target'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSAffineTransform'>
<method selector='concat'>
<retval type='v' declared_type='void'/>
</method>
<method selector='set'>
<retval type='v' declared_type='void'/>
</method>
<method selector='transformBezierPath:'>
<arg index='0' type='@' declared_type='NSBezierPath*' name='aPath'/>
<retval type='@' declared_type='NSBezierPath*'/>
</method>
</class>
<class name='NSAlert'>
<method selector='accessoryView'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='addButtonWithTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<retval type='@' declared_type='NSButton*'/>
</method>
<method selector='alertStyle'>
<retval type64='Q' type='I' declared_type='NSAlertStyle'/>
</method>
<method selector='alertWithError:' class_method='true'>
<arg index='0' type='@' declared_type='NSError*' name='error'/>
<retval type='@' declared_type='NSAlert*'/>
</method>
<method selector='alertWithMessageText:defaultButton:alternateButton:otherButton:informativeTextWithFormat:' variadic='true' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='message'/>
<arg index='1' type='@' declared_type='NSString*' name='defaultButton'/>
<arg index='2' type='@' declared_type='NSString*' name='alternateButton'/>
<arg index='3' type='@' declared_type='NSString*' name='otherButton'/>
<arg index='4' type='@' printf_format='true' declared_type='NSString*' name='format'/>
<retval type='@' declared_type='NSAlert*'/>
</method>
<method selector='beginSheetModalForWindow:modalDelegate:didEndSelector:contextInfo:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type='@' declared_type='id' name='delegate'/>
<arg index='2' type=':' declared_type='SEL' name='didEndSelector'/>
<arg index='3' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='buttons'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='helpAnchor'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='icon'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='informativeText'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='layout'>
<retval type='v' declared_type='void'/>
</method>
<method selector='messageText'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='runModal'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='setAccessoryView:'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlertStyle:'>
<arg index='0' type64='Q' type='I' declared_type='NSAlertStyle' name='style'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHelpAnchor:'>
<arg index='0' type='@' declared_type='NSString*' name='anchor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIcon:'>
<arg index='0' type='@' declared_type='NSImage*' name='icon'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInformativeText:'>
<arg index='0' type='@' declared_type='NSString*' name='informativeText'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMessageText:'>
<arg index='0' type='@' declared_type='NSString*' name='messageText'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsHelp:'>
<arg index='0' type='B' declared_type='BOOL' name='showsHelp'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsSuppressionButton:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showsHelp'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showsSuppressionButton'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='suppressionButton'>
<retval type='@' declared_type='NSButton*'/>
</method>
<method selector='window'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSAnimation'>
<method selector='addProgressMark:'>
<arg index='0' type='f' declared_type='NSAnimationProgress' name='progressMark'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='animationBlockingMode'>
<retval type64='Q' type='I' declared_type='NSAnimationBlockingMode'/>
</method>
<method selector='animationCurve'>
<retval type64='Q' type='I' declared_type='NSAnimationCurve'/>
</method>
<method selector='clearStartAnimation'>
<retval type='v' declared_type='void'/>
</method>
<method selector='clearStopAnimation'>
<retval type='v' declared_type='void'/>
</method>
<method selector='currentProgress'>
<retval type='f' declared_type='NSAnimationProgress'/>
</method>
<method selector='currentValue'>
<retval type='f' declared_type='float'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='duration'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='frameRate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='initWithDuration:animationCurve:'>
<arg index='0' type='d' declared_type='NSTimeInterval' name='duration'/>
<arg index='1' type64='Q' type='I' declared_type='NSAnimationCurve' name='animationCurve'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isAnimating'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='progressMarks'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removeProgressMark:'>
<arg index='0' type='f' declared_type='NSAnimationProgress' name='progressMark'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='runLoopModesForAnimating'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setAnimationBlockingMode:'>
<arg index='0' type64='Q' type='I' declared_type='NSAnimationBlockingMode' name='animationBlockingMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAnimationCurve:'>
<arg index='0' type64='Q' type='I' declared_type='NSAnimationCurve' name='curve'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCurrentProgress:'>
<arg index='0' type='f' declared_type='NSAnimationProgress' name='progress'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDuration:'>
<arg index='0' type='d' declared_type='NSTimeInterval' name='duration'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFrameRate:'>
<arg index='0' type='f' declared_type='float' name='framesPerSecond'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProgressMarks:'>
<arg index='0' type='@' declared_type='NSArray*' name='progressMarks'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startAnimation'>
<retval type='v' declared_type='void'/>
</method>
<method selector='startWhenAnimation:reachesProgress:'>
<arg index='0' type='@' declared_type='NSAnimation*' name='animation'/>
<arg index='1' type='f' declared_type='NSAnimationProgress' name='startProgress'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopAnimation'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopWhenAnimation:reachesProgress:'>
<arg index='0' type='@' declared_type='NSAnimation*' name='animation'/>
<arg index='1' type='f' declared_type='NSAnimationProgress' name='stopProgress'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSAnimationContext'>
<method selector='allowsImplicitAnimation'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='beginGrouping' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='completionHandler'>
<retval function_pointer='true' type='@?' declared_type='void (^)(void)'>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='currentContext' class_method='true'>
<retval type='@' declared_type='NSAnimationContext*'/>
</method>
<method selector='duration'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='endGrouping' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='runAnimationGroup:completionHandler:' class_method='true'>
<arg index='0' function_pointer='true' type='@?' declared_type='void (^)(NSAnimationContext *)' name='changes'>
<arg type='@' declared_type='NSAnimationContext*'/>
<retval type='v' declared_type='void'/>
</arg>
<arg index='1' function_pointer='true' type='@?' declared_type='void (^)(void)' name='completionHandler'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsImplicitAnimation:'>
<arg index='0' type='B' declared_type='BOOL' name='allowsImplicitAnimation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCompletionHandler:'>
<arg index='0' function_pointer='true' type='@?' declared_type='void (^)(void)' name='completionHandler'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDuration:'>
<arg index='0' type='d' declared_type='NSTimeInterval' name='duration'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimingFunction:'>
<arg index='0' type='@' declared_type='CAMediaTimingFunction*' name='timingFunction'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='timingFunction'>
<retval type='@' declared_type='CAMediaTimingFunction*'/>
</method>
</class>
<class name='NSAppleScript'>
<method selector='richTextSource'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
</class>
<class name='NSApplication'>
<method selector='abortModal'>
<retval type='v' declared_type='void'/>
</method>
<method selector='activateContextHelpMode:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='activateIgnoringOtherApps:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='activationPolicy'>
<retval type64='q' type='i' declared_type='NSApplicationActivationPolicy'/>
</method>
<method selector='addWindowsItem:title:filename:'>
<arg index='0' type='@' declared_type='NSWindow*' name='win'/>
<arg index='1' type='@' declared_type='NSString*' name='aString'/>
<arg index='2' type='B' declared_type='BOOL' name='isFilename'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='application:printFiles:'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<arg index='1' type='@' declared_type='NSArray*' name='filenames'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationIconImage'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='arrangeInFront:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginModalSessionForWindow:'>
<arg index='0' type='@' declared_type='NSWindow*' name='theWindow'/>
<retval type='^{_NSModalSession=}' declared_type='NSModalSession'/>
</method>
<method selector='beginModalSessionForWindow:relativeToWindow:'>
<arg index='0' type='@' declared_type='NSWindow*' name='theWindow'/>
<arg index='1' type='@' declared_type='NSWindow*' name='docWindow'/>
<retval type='^{_NSModalSession=}' declared_type='NSModalSession'/>
</method>
<method selector='beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
<arg index='0' type='@' declared_type='NSWindow*' name='sheet'/>
<arg index='1' type='@' declared_type='NSWindow*' name='docWindow'/>
<arg index='2' type='@' declared_type='id' name='modalDelegate'/>
<arg index='3' type=':' declared_type='SEL' name='didEndSelector'/>
<arg index='4' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancelUserAttentionRequest:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='request'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='changeWindowsItem:title:filename:'>
<arg index='0' type='@' declared_type='NSWindow*' name='win'/>
<arg index='1' type='@' declared_type='NSString*' name='aString'/>
<arg index='2' type='B' declared_type='BOOL' name='isFilename'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='completeStateRestoration'>
<retval type='v' declared_type='void'/>
</method>
<method selector='context'>
<retval type='@' declared_type='NSGraphicsContext*'/>
</method>
<method selector='currentEvent'>
<retval type='@' declared_type='NSEvent*'/>
</method>
<method selector='currentSystemPresentationOptions'>
<retval type64='Q' type='I' declared_type='NSApplicationPresentationOptions'/>
</method>
<method selector='deactivate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='detachDrawingThread:toTarget:withObject:' class_method='true'>
<arg index='0' type=':' declared_type='SEL' name='selector'/>
<arg index='1' type='@' declared_type='id' name='target'/>
<arg index='2' type='@' declared_type='id' name='argument'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='disableRelaunchOnLogin'>
<retval type='v' declared_type='void'/>
</method>
<method selector='discardEventsMatchingMask:beforeEvent:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='mask'/>
<arg index='1' type='@' declared_type='NSEvent*' name='lastEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dockTile'>
<retval type='@' declared_type='NSDockTile*'/>
</method>
<method selector='enableRelaunchOnLogin'>
<retval type='v' declared_type='void'/>
</method>
<method selector='enabledRemoteNotificationTypes'>
<retval type64='Q' type='I' declared_type='NSRemoteNotificationType'/>
</method>
<method selector='endModalSession:'>
<arg index='0' type='^{_NSModalSession=}' declared_type='NSModalSession' name='session'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='endSheet:'>
<arg index='0' type='@' declared_type='NSWindow*' name='sheet'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='endSheet:returnCode:'>
<arg index='0' type='@' declared_type='NSWindow*' name='sheet'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='returnCode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='extendStateRestoration'>
<retval type='v' declared_type='void'/>
</method>
<method selector='finishLaunching'>
<retval type='v' declared_type='void'/>
</method>
<method selector='helpMenu'>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='hide:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='hideOtherApplications:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isActive'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFullKeyboardAccessEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isHidden'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRunning'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyWindow'>
<retval type='@' declared_type='NSWindow*'/>
</method>
<method selector='mainMenu'>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='mainWindow'>
<retval type='@' declared_type='NSWindow*'/>
</method>
<method selector='makeWindowsPerform:inOrder:'>
<arg index='0' type=':' declared_type='SEL' name='aSelector'/>
<arg index='1' type='B' declared_type='BOOL' name='flag'/>
<retval type='@' declared_type='NSWindow*'/>
</method>
<method selector='miniaturizeAll:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='modalWindow'>
<retval type='@' declared_type='NSWindow*'/>
</method>
<method selector='nextEventMatchingMask:untilDate:inMode:dequeue:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='mask'/>
<arg index='1' type='@' declared_type='NSDate*' name='expiration'/>
<arg index='2' type='@' declared_type='NSString*' name='mode'/>
<arg index='3' type='B' declared_type='BOOL' name='deqFlag'/>
<retval type='@' declared_type='NSEvent*'/>
</method>
<method selector='orderFrontCharacterPalette:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='orderFrontColorPanel:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='orderFrontStandardAboutPanel:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='orderFrontStandardAboutPanelWithOptions:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='optionsDictionary'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='orderedDocuments'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='orderedWindows'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='postEvent:atStart:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<arg index='1' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentationOptions'>
<retval type64='Q' type='I' declared_type='NSApplicationPresentationOptions'/>
</method>
<method selector='preventWindowOrdering'>
<retval type='v' declared_type='void'/>
</method>
<method selector='registerForRemoteNotificationTypes:'>
<arg index='0' type64='Q' type='I' declared_type='NSRemoteNotificationType' name='types'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='registerServicesMenuSendTypes:returnTypes:'>
<arg index='0' type='@' declared_type='NSArray*' name='sendTypes'/>
<arg index='1' type='@' declared_type='NSArray*' name='returnTypes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='registerUserInterfaceItemSearchHandler:'>
<arg index='0' type='@' declared_type='id' name='handler'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeWindowsItem:'>
<arg index='0' type='@' declared_type='NSWindow*' name='win'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replyToApplicationShouldTerminate:'>
<arg index='0' type='B' declared_type='BOOL' name='shouldTerminate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replyToOpenOrPrint:'>
<arg index='0' type64='Q' type='I' declared_type='NSApplicationDelegateReply' name='reply'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reportException:'>
<arg index='0' type='@' declared_type='NSException*' name='theException'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='requestUserAttention:'>
<arg index='0' type64='Q' type='I' declared_type='NSRequestUserAttentionType' name='requestType'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='restoreWindowWithIdentifier:state:completionHandler:'>
<arg index='0' type='@' declared_type='NSString*' name='identifier'/>
<arg index='1' type='@' declared_type='NSCoder*' name='state'/>
<arg index='2' function_pointer='true' type='@?' declared_type='void (^)(NSWindow *, NSError *)' name='completionHandler'>
<arg type='@' declared_type='NSWindow*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='run'>
<retval type='v' declared_type='void'/>
</method>
<method selector='runModalForWindow:'>
<arg index='0' type='@' declared_type='NSWindow*' name='theWindow'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='runModalForWindow:relativeToWindow:'>
<arg index='0' type='@' declared_type='NSWindow*' name='theWindow'/>
<arg index='1' type='@' declared_type='NSWindow*' name='docWindow'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='runModalSession:'>
<arg index='0' type='^{_NSModalSession=}' declared_type='NSModalSession' name='session'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='runPageLayout:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchString:inUserInterfaceItemString:searchRange:foundRange:'>
<arg index='0' type='@' declared_type='NSString*' name='searchString'/>
<arg index='1' type='@' declared_type='NSString*' name='stringToSearch'/>
<arg index='2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='searchRange'/>
<arg index='3' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRange*' name='foundRange'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='sendAction:to:from:'>
<arg index='0' type=':' declared_type='SEL' name='theAction'/>
<arg index='1' type='@' declared_type='id' name='theTarget'/>
<arg index='2' type='@' declared_type='id' name='sender'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='sendEvent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='servicesMenu'>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='servicesProvider'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setActivationPolicy:'>
<arg index='0' type64='q' type='i' declared_type='NSApplicationActivationPolicy' name='activationPolicy'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setApplicationIconImage:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHelpMenu:'>
<arg index='0' type='@' declared_type='NSMenu*' name='helpMenu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMainMenu:'>
<arg index='0' type='@' declared_type='NSMenu*' name='aMenu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPresentationOptions:'>
<arg index='0' type64='Q' type='I' declared_type='NSApplicationPresentationOptions' name='newOptions'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setServicesMenu:'>
<arg index='0' type='@' declared_type='NSMenu*' name='aMenu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setServicesProvider:'>
<arg index='0' type='@' declared_type='id' name='provider'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWindowsMenu:'>
<arg index='0' type='@' declared_type='NSMenu*' name='aMenu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWindowsNeedUpdate:'>
<arg index='0' type='B' declared_type='BOOL' name='needUpdate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedApplication' class_method='true'>
<retval type='@' declared_type='NSApplication*'/>
</method>
<method selector='showHelp:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stop:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopModal'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopModalWithCode:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='returnCode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='targetForAction:'>
<arg index='0' type=':' declared_type='SEL' name='theAction'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='targetForAction:to:from:'>
<arg index='0' type=':' declared_type='SEL' name='theAction'/>
<arg index='1' type='@' declared_type='id' name='theTarget'/>
<arg index='2' type='@' declared_type='id' name='sender'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='terminate:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tryToPerform:with:'>
<arg index='0' type=':' declared_type='SEL' name='anAction'/>
<arg index='1' type='@' declared_type='id' name='anObject'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='unhide:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unhideAllApplications:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unhideWithoutActivation'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unregisterForRemoteNotifications'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unregisterUserInterfaceItemSearchHandler:'>
<arg index='0' type='@' declared_type='id' name='handler'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateWindows'>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateWindowsItem:'>
<arg index='0' type='@' declared_type='NSWindow*' name='win'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='userInterfaceLayoutDirection'>
<retval type64='q' type='i' declared_type='NSUserInterfaceLayoutDirection'/>
</method>
<method selector='validRequestorForSendType:returnType:'>
<arg index='0' type='@' declared_type='NSString*' name='sendType'/>
<arg index='1' type='@' declared_type='NSString*' name='returnType'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='windowWithWindowNumber:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='windowNum'/>
<retval type='@' declared_type='NSWindow*'/>
</method>
<method selector='windows'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='windowsMenu'>
<retval type='@' declared_type='NSMenu*'/>
</method>
</class>
<class name='NSArrayController'>
<method selector='add:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObject:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObjects:'>
<arg index='0' type='@' declared_type='NSArray*' name='objects'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSelectedObjects:'>
<arg index='0' type='@' declared_type='NSArray*' name='objects'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='addSelectionIndexes:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='indexes'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='alwaysUsesMultipleValuesMarker'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='arrangeObjects:'>
<arg index='0' type='@' declared_type='NSArray*' name='objects'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='arrangedObjects'>
<retval type='@' declared_type='id'/>
</method>
<method selector='automaticRearrangementKeyPaths'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='automaticallyRearrangesObjects'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='avoidsEmptySelection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canInsert'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canSelectNext'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canSelectPrevious'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='clearsFilterPredicateOnInsertion'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='didChangeArrangementCriteria'>
<retval type='v' declared_type='void'/>
</method>
<method selector='filterPredicate'>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='insert:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertObject:atArrangedObjectIndex:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertObjects:atArrangedObjectIndexes:'>
<arg index='0' type='@' declared_type='NSArray*' name='objects'/>
<arg index='1' type='@' declared_type='NSIndexSet*' name='indexes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='preservesSelection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='rearrangeObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='remove:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObject:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectAtArrangedObjectIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjects:'>
<arg index='0' type='@' declared_type='NSArray*' name='objects'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsAtArrangedObjectIndexes:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='indexes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSelectedObjects:'>
<arg index='0' type='@' declared_type='NSArray*' name='objects'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeSelectionIndexes:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='indexes'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='selectNext:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectPrevious:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectedObjects'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='selectionIndex'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='selectionIndexes'>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='selectsInsertedObjects'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAlwaysUsesMultipleValuesMarker:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutomaticallyRearrangesObjects:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAvoidsEmptySelection:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setClearsFilterPredicateOnInsertion:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFilterPredicate:'>
<arg index='0' type='@' declared_type='NSPredicate*' name='filterPredicate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreservesSelection:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedObjects:'>
<arg index='0' type='@' declared_type='NSArray*' name='objects'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setSelectionIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='index'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setSelectionIndexes:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='indexes'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setSelectsInsertedObjects:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSortDescriptors:'>
<arg index='0' type='@' declared_type='NSArray*' name='sortDescriptors'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSAttributedString'>
<method selector='RTFDFileWrapperFromRange:documentAttributes:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='dict'/>
<retval type='@' declared_type='NSFileWrapper*'/>
</method>
<method selector='RTFDFromRange:documentAttributes:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='dict'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='RTFFromRange:documentAttributes:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='dict'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='URLAtIndex:effectiveRange:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='location'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='effectiveRange'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='attributedStringWithAttachment:' class_method='true'>
<arg index='0' type='@' declared_type='NSTextAttachment*' name='attachment'/>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='boundingRectWithSize:options:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='size'/>
<arg index='1' type64='q' type='i' declared_type='NSStringDrawingOptions' name='options'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='containsAttachments'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='dataFromRange:documentAttributes:error:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='dict'/>
<arg index='2' type='^@' declared_type='NSError**' name='error'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='docFormatFromRange:documentAttributes:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='dict'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='doubleClickAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='location'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='drawAtPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawInRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawWithRect:options:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='1' type64='q' type='i' declared_type='NSStringDrawingOptions' name='options'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fileWrapperFromRange:documentAttributes:error:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='dict'/>
<arg index='2' type='^@' declared_type='NSError**' name='error'/>
<retval type='@' declared_type='NSFileWrapper*'/>
</method>
<method selector='fontAttributesInRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='initWithData:options:documentAttributes:error:'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='options'/>
<arg index='2' type='^@' declared_type='NSDictionary**' name='dict'/>
<arg index='3' type='^@' declared_type='NSError**' name='error'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDocFormat:documentAttributes:'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<arg index='1' type='^@' declared_type='NSDictionary**' name='dict'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithHTML:baseURL:documentAttributes:'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<arg index='1' type='@' declared_type='NSURL*' name='base'/>
<arg index='2' type='^@' declared_type='NSDictionary**' name='dict'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithHTML:documentAttributes:'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<arg index='1' type='^@' declared_type='NSDictionary**' name='dict'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithHTML:options:documentAttributes:'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='options'/>
<arg index='2' type='^@' declared_type='NSDictionary**' name='dict'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPath:documentAttributes:'>
<arg index='0' type='@' declared_type='NSString*' name='path'/>
<arg index='1' type='^@' declared_type='NSDictionary**' name='dict'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRTF:documentAttributes:'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<arg index='1' type='^@' declared_type='NSDictionary**' name='dict'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRTFD:documentAttributes:'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<arg index='1' type='^@' declared_type='NSDictionary**' name='dict'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRTFDFileWrapper:documentAttributes:'>
<arg index='0' type='@' declared_type='NSFileWrapper*' name='wrapper'/>
<arg index='1' type='^@' declared_type='NSDictionary**' name='dict'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithURL:documentAttributes:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='^@' declared_type='NSDictionary**' name='dict'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithURL:options:documentAttributes:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='options'/>
<arg index='2' type='^@' declared_type='NSDictionary**' name='dict'/>
<arg index='3' type='^@' declared_type='NSError**' name='error'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemNumberInTextList:atIndex:'>
<arg index='0' type='@' declared_type='NSTextList*' name='list'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='location'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='lineBreakBeforeIndex:withinRange:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='location'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='aRange'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='lineBreakByHyphenatingBeforeIndex:withinRange:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='location'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='aRange'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='nextWordFromIndex:forward:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='location'/>
<arg index='1' type='B' declared_type='BOOL' name='isForward'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='rangeOfTextBlock:atIndex:'>
<arg index='0' type='@' declared_type='NSTextBlock*' name='block'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='location'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeOfTextList:atIndex:'>
<arg index='0' type='@' declared_type='NSTextList*' name='list'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='location'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeOfTextTable:atIndex:'>
<arg index='0' type='@' declared_type='NSTextTable*' name='table'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='location'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rulerAttributesInRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='size'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='textFileTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='textPasteboardTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='textTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='textUnfilteredFileTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='textUnfilteredPasteboardTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='textUnfilteredTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSBezierPath'>
<method selector='addClip'>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendBezierPath:'>
<arg index='0' type='@' declared_type='NSBezierPath*' name='path'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendBezierPathWithArcFromPoint:toPoint:radius:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point1'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point2'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='radius'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='center'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='radius'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='startAngle'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='endAngle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:clockwise:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='center'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='radius'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='startAngle'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='endAngle'/>
<arg index='4' type='B' declared_type='BOOL' name='clockwise'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendBezierPathWithGlyph:inFont:'>
<arg index='0' type='I' declared_type='NSGlyph' name='glyph'/>
<arg index='1' type='@' declared_type='NSFont*' name='font'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendBezierPathWithGlyphs:count:inFont:'>
<arg index='0' type='^I' declared_type='NSGlyph*' name='glyphs'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='count'/>
<arg index='2' type='@' declared_type='NSFont*' name='font'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendBezierPathWithOvalInRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendBezierPathWithPackedGlyphs:'>
<arg index='0' type='*' const='true' declared_type='char*' name='packedGlyphs'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendBezierPathWithPoints:count:'>
<arg index='0' type64='^{CGPoint=dd}' type='^{_NSPoint=ff}' declared_type='NSPointArray' name='points'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='count'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendBezierPathWithRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='appendBezierPathWithRoundedRect:xRadius:yRadius:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='xRadius'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='yRadius'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='bezierPath' class_method='true'>
<retval type='@' declared_type='NSBezierPath*'/>
</method>
<method selector='bezierPathByFlatteningPath'>
<retval type='@' declared_type='NSBezierPath*'/>
</method>
<method selector='bezierPathByReversingPath'>
<retval type='@' declared_type='NSBezierPath*'/>
</method>
<method selector='bezierPathWithOvalInRect:' class_method='true'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='@' declared_type='NSBezierPath*'/>
</method>
<method selector='bezierPathWithRect:' class_method='true'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='@' declared_type='NSBezierPath*'/>
</method>
<method selector='bezierPathWithRoundedRect:xRadius:yRadius:' class_method='true'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='xRadius'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='yRadius'/>
<retval type='@' declared_type='NSBezierPath*'/>
</method>
<method selector='bounds'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='cachesBezierPath'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='clipRect:' class_method='true'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='closePath'>
<retval type='v' declared_type='void'/>
</method>
<method selector='containsPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='controlPointBounds'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='currentPoint'>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='curveToPoint:controlPoint1:controlPoint2:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='endPoint'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='controlPoint1'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='controlPoint2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='defaultFlatness' class_method='true'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='defaultLineCapStyle' class_method='true'>
<retval type64='Q' type='I' declared_type='NSLineCapStyle'/>
</method>
<method selector='defaultLineJoinStyle' class_method='true'>
<retval type64='Q' type='I' declared_type='NSLineJoinStyle'/>
</method>
<method selector='defaultLineWidth' class_method='true'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='defaultMiterLimit' class_method='true'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='defaultWindingRule' class_method='true'>
<retval type64='Q' type='I' declared_type='NSWindingRule'/>
</method>
<method selector='drawPackedGlyphs:atPoint:' class_method='true'>
<arg index='0' type='*' const='true' declared_type='char*' name='packedGlyphs'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='elementAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type64='Q' type='I' declared_type='NSBezierPathElement'/>
</method>
<method selector='elementAtIndex:associatedPoints:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<arg index='1' type64='^{CGPoint=dd}' type='^{_NSPoint=ff}' declared_type='NSPointArray' name='points'/>
<retval type64='Q' type='I' declared_type='NSBezierPathElement'/>
</method>
<method selector='elementCount'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='fill'>
<retval type='v' declared_type='void'/>
</method>
<method selector='fillRect:' class_method='true'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='flatness'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='getLineDash:count:phase:'>
<arg index='0' type64='^d' type='^f' declared_type='CGFloat*' name='pattern'/>
<arg index='1' type64='^q' type='^i' declared_type='NSInteger*' name='count'/>
<arg index='2' type64='^d' type='^f' declared_type='CGFloat*' name='phase'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isEmpty'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lineCapStyle'>
<retval type64='Q' type='I' declared_type='NSLineCapStyle'/>
</method>
<method selector='lineJoinStyle'>
<retval type64='Q' type='I' declared_type='NSLineJoinStyle'/>
</method>
<method selector='lineToPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='lineWidth'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='miterLimit'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='moveToPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='relativeCurveToPoint:controlPoint1:controlPoint2:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='endPoint'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='controlPoint1'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='controlPoint2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='relativeLineToPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='relativeMoveToPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllPoints'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAssociatedPoints:atIndex:'>
<arg index='0' type64='^{CGPoint=dd}' type='^{_NSPoint=ff}' declared_type='NSPointArray' name='points'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCachesBezierPath:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setClip'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultFlatness:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='flatness'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultLineCapStyle:' class_method='true'>
<arg index='0' type64='Q' type='I' declared_type='NSLineCapStyle' name='lineCapStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultLineJoinStyle:' class_method='true'>
<arg index='0' type64='Q' type='I' declared_type='NSLineJoinStyle' name='lineJoinStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultLineWidth:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='lineWidth'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultMiterLimit:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='limit'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultWindingRule:' class_method='true'>
<arg index='0' type64='Q' type='I' declared_type='NSWindingRule' name='windingRule'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFlatness:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='flatness'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineCapStyle:'>
<arg index='0' type64='Q' type='I' declared_type='NSLineCapStyle' name='lineCapStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineDash:count:phase:'>
<arg index='0' type64='^d' type='^f' const='true' declared_type='CGFloat*' name='pattern'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='count'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='phase'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineJoinStyle:'>
<arg index='0' type64='Q' type='I' declared_type='NSLineJoinStyle' name='lineJoinStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineWidth:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='lineWidth'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMiterLimit:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='miterLimit'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWindingRule:'>
<arg index='0' type64='Q' type='I' declared_type='NSWindingRule' name='windingRule'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stroke'>
<retval type='v' declared_type='void'/>
</method>
<method selector='strokeLineFromPoint:toPoint:' class_method='true'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point1'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='strokeRect:' class_method='true'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='transformUsingAffineTransform:'>
<arg index='0' type='@' declared_type='NSAffineTransform*' name='transform'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windingRule'>
<retval type64='Q' type='I' declared_type='NSWindingRule'/>
</method>
</class>
<class name='NSBitmapImageRep'>
<method selector='CGImage'>
<retval type='^{CGImage=}' declared_type='CGImageRef'/>
</method>
<method selector='TIFFRepresentation'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='TIFFRepresentationOfImageRepsInArray:' class_method='true'>
<arg index='0' type='@' declared_type='NSArray*' name='array'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='TIFFRepresentationOfImageRepsInArray:usingCompression:factor:' class_method='true'>
<arg index='0' type='@' declared_type='NSArray*' name='array'/>
<arg index='1' type64='Q' type='I' declared_type='NSTIFFCompression' name='comp'/>
<arg index='2' type='f' declared_type='float' name='factor'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='TIFFRepresentationUsingCompression:factor:'>
<arg index='0' type64='Q' type='I' declared_type='NSTIFFCompression' name='comp'/>
<arg index='1' type='f' declared_type='float' name='factor'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='bitmapData'>
<retval type='*' declared_type='unsigned char*'/>
</method>
<method selector='bitmapFormat'>
<retval type64='Q' type='I' declared_type='NSBitmapFormat'/>
</method>
<method selector='bitmapImageRepByConvertingToColorSpace:renderingIntent:'>
<arg index='0' type='@' declared_type='NSColorSpace*' name='targetSpace'/>
<arg index='1' type64='q' type='i' declared_type='NSColorRenderingIntent' name='renderingIntent'/>
<retval type='@' declared_type='NSBitmapImageRep*'/>
</method>
<method selector='bitmapImageRepByRetaggingWithColorSpace:'>
<arg index='0' type='@' declared_type='NSColorSpace*' name='newSpace'/>
<retval type='@' declared_type='NSBitmapImageRep*'/>
</method>
<method selector='bitsPerPixel'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='bytesPerPlane'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='bytesPerRow'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='canBeCompressedUsing:'>
<arg index='0' type64='Q' type='I' declared_type='NSTIFFCompression' name='compression'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='colorAtX:y:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='x'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='y'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='colorSpace'>
<retval type='@' declared_type='NSColorSpace*'/>
</method>
<method selector='colorizeByMappingGray:toColor:blackMapping:whiteMapping:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='midPoint'/>
<arg index='1' type='@' declared_type='NSColor*' name='midPointColor'/>
<arg index='2' type='@' declared_type='NSColor*' name='shadowColor'/>
<arg index='3' type='@' declared_type='NSColor*' name='lightColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getBitmapDataPlanes:'>
<arg index='0' type='^*' declared_type='unsigned char**' name='data'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getCompression:factor:'>
<arg index='0' type64='^Q' type='^I' declared_type='NSTIFFCompression*' name='compression'/>
<arg index='1' type='^f' declared_type='float*' name='factor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getPixel:atX:y:'>
<arg index='0' type64='^Q' type='^I' declared_type='NSUInteger*' name='p'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='x'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='y'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getTIFFCompressionTypes:count:' class_method='true'>
<arg index='0' type64='^^Q' type='^^I' const='true' declared_type='NSTIFFCompression**' name='list'/>
<arg index='1' type64='^q' type='^i' declared_type='NSInteger*' name='numTypes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='imageRepWithData:' class_method='true'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='imageRepsWithData:' class_method='true'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='incrementalLoadFromData:complete:'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<arg index='1' type='B' declared_type='BOOL' name='complete'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='initForIncrementalLoad'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bitmapFormat:bytesPerRow:bitsPerPixel:'>
<arg index='0' type='^*' declared_type='unsigned char**' name='planes'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='width'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='height'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='bps'/>
<arg index='4' type64='q' type='i' declared_type='NSInteger' name='spp'/>
<arg index='5' type='B' declared_type='BOOL' name='alpha'/>
<arg index='6' type='B' declared_type='BOOL' name='isPlanar'/>
<arg index='7' type='@' declared_type='NSString*' name='colorSpaceName'/>
<arg index='8' type64='Q' type='I' declared_type='NSBitmapFormat' name='bitmapFormat'/>
<arg index='9' type64='q' type='i' declared_type='NSInteger' name='rBytes'/>
<arg index='10' type64='q' type='i' declared_type='NSInteger' name='pBits'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bytesPerRow:bitsPerPixel:'>
<arg index='0' type='^*' declared_type='unsigned char**' name='planes'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='width'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='height'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='bps'/>
<arg index='4' type64='q' type='i' declared_type='NSInteger' name='spp'/>
<arg index='5' type='B' declared_type='BOOL' name='alpha'/>
<arg index='6' type='B' declared_type='BOOL' name='isPlanar'/>
<arg index='7' type='@' declared_type='NSString*' name='colorSpaceName'/>
<arg index='8' type64='q' type='i' declared_type='NSInteger' name='rBytes'/>
<arg index='9' type64='q' type='i' declared_type='NSInteger' name='pBits'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCGImage:'>
<arg index='0' type='^{CGImage=}' declared_type='CGImageRef' name='cgImage'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCIImage:'>
<arg index='0' type='@' declared_type='CIImage*' name='ciImage'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFocusedViewRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isPlanar'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='localizedNameForTIFFCompressionType:' class_method='true'>
<arg index='0' type64='Q' type='I' declared_type='NSTIFFCompression' name='compression'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='numberOfPlanes'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='representationOfImageRepsInArray:usingType:properties:' class_method='true'>
<arg index='0' type='@' declared_type='NSArray*' name='imageReps'/>
<arg index='1' type64='Q' type='I' declared_type='NSBitmapImageFileType' name='storageType'/>
<arg index='2' type='@' declared_type='NSDictionary*' name='properties'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='representationUsingType:properties:'>
<arg index='0' type64='Q' type='I' declared_type='NSBitmapImageFileType' name='storageType'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='properties'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='samplesPerPixel'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='setColor:atX:y:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='x'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='y'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCompression:factor:'>
<arg index='0' type64='Q' type='I' declared_type='NSTIFFCompression' name='compression'/>
<arg index='1' type='f' declared_type='float' name='factor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPixel:atX:y:'>
<arg index='0' type64='^Q' type='^I' declared_type='NSUInteger*' name='p'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='x'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='y'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setProperty:withValue:'>
<arg index='0' type='@' declared_type='NSString*' name='property'/>
<arg index='1' type='@' declared_type='id' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='valueForProperty:'>
<arg index='0' type='@' declared_type='NSString*' name='property'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSBox'>
<method selector='borderColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='borderRect'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='borderType'>
<retval type64='Q' type='I' declared_type='NSBorderType'/>
</method>
<method selector='borderWidth'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='boxType'>
<retval type64='Q' type='I' declared_type='NSBoxType'/>
</method>
<method selector='contentView'>
<retval type='@' declared_type='id'/>
</method>
<method selector='contentViewMargins'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='cornerRadius'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='fillColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='isTransparent'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setBorderColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='borderColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBorderType:'>
<arg index='0' type64='Q' type='I' declared_type='NSBorderType' name='aType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBorderWidth:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='borderWidth'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBoxType:'>
<arg index='0' type64='Q' type='I' declared_type='NSBoxType' name='boxType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentView:'>
<arg index='0' type='@' declared_type='NSView*' name='aView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentViewMargins:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='offsetSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCornerRadius:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='cornerRadius'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFillColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='fillColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFrameFromContentFrame:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='contentFrame'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='fontObj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitlePosition:'>
<arg index='0' type64='Q' type='I' declared_type='NSTitlePosition' name='aPosition'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleWithMnemonic:'>
<arg index='0' type='@' declared_type='NSString*' name='stringWithAmpersand'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTransparent:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sizeToFit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='titleCell'>
<retval type='@' declared_type='id'/>
</method>
<method selector='titleFont'>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='titlePosition'>
<retval type64='Q' type='I' declared_type='NSTitlePosition'/>
</method>
<method selector='titleRect'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
</class>
<class name='NSBrowser'>
<method selector='acceptsArrowKeys'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='addColumn'>
<retval type='v' declared_type='void'/>
</method>
<method selector='allowsBranchSelection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='allowsEmptySelection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='allowsMultipleSelection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='allowsTypeSelect'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='autohidesScroller'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='backgroundColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='canDragRowsWithIndexes:inColumn:withEvent:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='rowIndexes'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='2' type='@' declared_type='NSEvent*' name='event'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cellClass' class_method='true'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='cellPrototype'>
<retval type='@' declared_type='id'/>
</method>
<method selector='clickedColumn'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='clickedRow'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='columnContentWidthForColumnWidth:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='columnWidth'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='columnOfMatrix:'>
<arg index='0' type='@' declared_type='NSMatrix*' name='matrix'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='columnResizingType'>
<retval type64='Q' type='I' declared_type='NSBrowserColumnResizingType'/>
</method>
<method selector='columnWidthForColumnContentWidth:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='columnContentWidth'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='columnsAutosaveName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='defaultColumnWidth'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='displayAllColumns'>
<retval type='v' declared_type='void'/>
</method>
<method selector='displayColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='doClick:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='doDoubleClick:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='doubleAction'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='draggingImageForRowsWithIndexes:inColumn:withEvent:offset:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='rowIndexes'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='2' type='@' declared_type='NSEvent*' name='event'/>
<arg index='3' type64='^{CGPoint=dd}' type='^{_NSPoint=ff}' declared_type='NSPointPointer' name='dragImageOffset'/>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='drawTitleOfColumn:inRect:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='editItemAtIndexPath:withEvent:select:'>
<arg index='0' type='@' declared_type='NSIndexPath*' name='indexPath'/>
<arg index='1' type='@' declared_type='NSEvent*' name='theEvent'/>
<arg index='2' type='B' declared_type='BOOL' name='select'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='firstVisibleColumn'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='frameOfColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='frameOfInsideOfColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='frameOfRow:inColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='getRow:column:forPoint:'>
<arg index='0' type64='^q' type='^i' declared_type='NSInteger*' name='row'/>
<arg index='1' type64='^q' type='^i' declared_type='NSInteger*' name='column'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasHorizontalScroller'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='indexPathForColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='@' declared_type='NSIndexPath*'/>
</method>
<method selector='isLeafItem:'>
<arg index='0' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isLoaded'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isTitled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='itemAtIndexPath:'>
<arg index='0' type='@' declared_type='NSIndexPath*' name='indexPath'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='itemAtRow:inColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lastColumn'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='lastVisibleColumn'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='loadColumnZero'>
<retval type='v' declared_type='void'/>
</method>
<method selector='loadedCellAtRow:column:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='col'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='matrixClass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='matrixInColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='@' declared_type='NSMatrix*'/>
</method>
<method selector='maxVisibleColumns'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='minColumnWidth'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='noteHeightOfRowsWithIndexesChanged:inColumn:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='indexSet'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='columnIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='numberOfVisibleColumns'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='parentForItemsInColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='path'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pathSeparator'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pathToColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='prefersAllColumnUserResizing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='reloadColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reloadDataForRowIndexes:inColumn:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='rowIndexes'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSavedColumnsWithAutosaveName:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reusesColumns'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='rowHeight'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='scrollColumnToVisible:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollColumnsLeftBy:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='shiftAmount'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollColumnsRightBy:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='shiftAmount'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollRowToVisible:inColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollViaScroller:'>
<arg index='0' type='@' declared_type='NSScroller*' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectAll:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectRow:inColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectRowIndexes:inColumn:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='indexes'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectedCell'>
<retval type='@' declared_type='id'/>
</method>
<method selector='selectedCellInColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='selectedCells'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='selectedColumn'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='selectedRowInColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='selectedRowIndexesInColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='selectionIndexPath'>
<retval type='@' declared_type='NSIndexPath*'/>
</method>
<method selector='selectionIndexPaths'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sendAction'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='sendsActionOnArrowKeys'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='separatesColumns'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAcceptsArrowKeys:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsBranchSelection:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsEmptySelection:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsTypeSelect:'>
<arg index='0' type='B' declared_type='BOOL' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutohidesScroller:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCellClass:'>
<arg index='0' type='#' declared_type='Class' name='factoryId'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCellPrototype:'>
<arg index='0' type='@' declared_type='NSCell*' name='aCell'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColumnResizingType:'>
<arg index='0' type64='Q' type='I' declared_type='NSBrowserColumnResizingType' name='columnResizingType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColumnsAutosaveName:'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultColumnWidth:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='columnWidth'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDoubleAction:'>
<arg index='0' type=':' declared_type='SEL' name='aSelector'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDraggingSourceOperationMask:forLocal:'>
<arg index='0' type64='Q' type='I' declared_type='NSDragOperation' name='mask'/>
<arg index='1' type='B' declared_type='BOOL' name='isLocal'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHasHorizontalScroller:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLastColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMatrixClass:'>
<arg index='0' type='#' declared_type='Class' name='factoryId'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxVisibleColumns:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='columnCount'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinColumnWidth:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='columnWidth'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPath:'>
<arg index='0' type='@' declared_type='NSString*' name='path'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setPathSeparator:'>
<arg index='0' type='@' declared_type='NSString*' name='newString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPrefersAllColumnUserResizing:'>
<arg index='0' type='B' declared_type='BOOL' name='prefersAllColumnResizing'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReusesColumns:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRowHeight:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='height'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectionIndexPath:'>
<arg index='0' type='@' declared_type='NSIndexPath*' name='path'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectionIndexPaths:'>
<arg index='0' type='@' declared_type='NSArray*' name='paths'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSendsActionOnArrowKeys:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSeparatesColumns:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTakesTitleFromPreviousColumn:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:ofColumn:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWidth:ofColumn:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='columnWidth'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='columnIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='takesTitleFromPreviousColumn'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tile'>
<retval type='v' declared_type='void'/>
</method>
<method selector='titleFrameOfColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='titleHeight'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='titleOfColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='updateScroller'>
<retval type='v' declared_type='void'/>
</method>
<method selector='validateVisibleColumns'>
<retval type='v' declared_type='void'/>
</method>
<method selector='widthOfColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='NSBrowserCell'>
<method selector='alternateImage'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='branchImage' class_method='true'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='highlightColorInView:'>
<arg index='0' type='@' declared_type='NSView*' name='controlView'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='highlightedBranchImage' class_method='true'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='image'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='isLeaf'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isLoaded'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='reset'>
<retval type='v' declared_type='void'/>
</method>
<method selector='set'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlternateImage:'>
<arg index='0' type='@' declared_type='NSImage*' name='newAltImage'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImage:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLeaf:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLoaded:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSBundle'>
<method selector='URLForImageResource:'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='contextHelpForKey:'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='imageForResource:'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='loadNibFile:externalNameTable:withZone:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='fileName'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='context'/>
<arg index='2' type='^{_NSZone=}' declared_type='NSZone*' name='zone'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='loadNibFile:externalNameTable:withZone:'>
<arg index='0' type='@' declared_type='NSString*' name='fileName'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='context'/>
<arg index='2' type='^{_NSZone=}' declared_type='NSZone*' name='zone'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='loadNibNamed:owner:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='nibName'/>
<arg index='1' type='@' declared_type='id' name='owner'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='loadNibNamed:owner:topLevelObjects:'>
<arg index='0' type='@' declared_type='NSString*' name='nibName'/>
<arg index='1' type='@' declared_type='id' name='owner'/>
<arg index='2' type='^@' declared_type='NSArray**' name='topLevelObjects'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pathForImageResource:'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pathForSoundResource:'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSButton'>
<method selector='allowsMixedState'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='alternateImage'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='alternateTitle'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='attributedAlternateTitle'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='attributedTitle'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='bezelStyle'>
<retval type64='Q' type='I' declared_type='NSBezelStyle'/>
</method>
<method selector='getPeriodicDelay:interval:'>
<arg index='0' type='^f' declared_type='float*' name='delay'/>
<arg index='1' type='^f' declared_type='float*' name='interval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='highlight:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='image'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='imagePosition'>
<retval type64='Q' type='I' declared_type='NSCellImagePosition'/>
</method>
<method selector='isBordered'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isTransparent'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyEquivalent'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='keyEquivalentModifierMask'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='performKeyEquivalent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='key'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAllowsMixedState:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlternateImage:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlternateTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributedAlternateTitle:'>
<arg index='0' type='@' declared_type='NSAttributedString*' name='obj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributedTitle:'>
<arg index='0' type='@' declared_type='NSAttributedString*' name='aString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBezelStyle:'>
<arg index='0' type64='Q' type='I' declared_type='NSBezelStyle' name='bezelStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBordered:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setButtonType:'>
<arg index='0' type64='Q' type='I' declared_type='NSButtonType' name='aType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImage:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImagePosition:'>
<arg index='0' type64='Q' type='I' declared_type='NSCellImagePosition' name='aPosition'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKeyEquivalent:'>
<arg index='0' type='@' declared_type='NSString*' name='charCode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKeyEquivalentModifierMask:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='mask'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNextState'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPeriodicDelay:interval:'>
<arg index='0' type='f' declared_type='float' name='delay'/>
<arg index='1' type='f' declared_type='float' name='interval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsBorderOnlyWhileMouseInside:'>
<arg index='0' type='B' declared_type='BOOL' name='show'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSound:'>
<arg index='0' type='@' declared_type='NSSound*' name='aSound'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setState:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleWithMnemonic:'>
<arg index='0' type='@' declared_type='NSString*' name='stringWithAmpersand'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTransparent:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showsBorderOnlyWhileMouseInside'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='sound'>
<retval type='@' declared_type='NSSound*'/>
</method>
<method selector='state'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSButtonCell'>
<method selector='alternateImage'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='alternateMnemonic'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='alternateMnemonicLocation'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='alternateTitle'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='attributedAlternateTitle'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='attributedTitle'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='backgroundColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='bezelStyle'>
<retval type64='Q' type='I' declared_type='NSBezelStyle'/>
</method>
<method selector='drawBezelWithFrame:inView:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frame'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawImage:withFrame:inView:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frame'/>
<arg index='2' type='@' declared_type='NSView*' name='controlView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawTitle:withFrame:inView:'>
<arg index='0' type='@' declared_type='NSAttributedString*' name='title'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frame'/>
<arg index='2' type='@' declared_type='NSView*' name='controlView'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='getPeriodicDelay:interval:'>
<arg index='0' type='^f' declared_type='float*' name='delay'/>
<arg index='1' type='^f' declared_type='float*' name='interval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='gradientType'>
<retval type64='Q' type='I' declared_type='NSGradientType'/>
</method>
<method selector='highlightsBy'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='imageDimsWhenDisabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='imagePosition'>
<retval type64='Q' type='I' declared_type='NSCellImagePosition'/>
</method>
<method selector='imageScaling'>
<retval type64='Q' type='I' declared_type='NSImageScaling'/>
</method>
<method selector='isOpaque'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isTransparent'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyEquivalent'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='keyEquivalentFont'>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='keyEquivalentModifierMask'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='mouseEntered:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mouseExited:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performClick:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlternateImage:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlternateMnemonicLocation:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='location'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlternateTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlternateTitleWithMnemonic:'>
<arg index='0' type='@' declared_type='NSString*' name='stringWithAmpersand'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributedAlternateTitle:'>
<arg index='0' type='@' declared_type='NSAttributedString*' name='obj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributedTitle:'>
<arg index='0' type='@' declared_type='NSAttributedString*' name='obj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBezelStyle:'>
<arg index='0' type64='Q' type='I' declared_type='NSBezelStyle' name='bezelStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setButtonType:'>
<arg index='0' type64='Q' type='I' declared_type='NSButtonType' name='aType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='fontObj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGradientType:'>
<arg index='0' type64='Q' type='I' declared_type='NSGradientType' name='type'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHighlightsBy:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='aType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageDimsWhenDisabled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImagePosition:'>
<arg index='0' type64='Q' type='I' declared_type='NSCellImagePosition' name='aPosition'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageScaling:'>
<arg index='0' type64='Q' type='I' declared_type='NSImageScaling' name='scaling'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKeyEquivalent:'>
<arg index='0' type='@' declared_type='NSString*' name='aKeyEquivalent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKeyEquivalentFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='fontObj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKeyEquivalentFont:size:'>
<arg index='0' type='@' declared_type='NSString*' name='fontName'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='fontSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKeyEquivalentModifierMask:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='mask'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPeriodicDelay:interval:'>
<arg index='0' type='f' declared_type='float' name='delay'/>
<arg index='1' type='f' declared_type='float' name='interval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsBorderOnlyWhileMouseInside:'>
<arg index='0' type='B' declared_type='BOOL' name='show'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsStateBy:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='aType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSound:'>
<arg index='0' type='@' declared_type='NSSound*' name='aSound'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleWithMnemonic:'>
<arg index='0' type='@' declared_type='NSString*' name='stringWithAmpersand'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTransparent:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showsBorderOnlyWhileMouseInside'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showsStateBy'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='sound'>
<retval type='@' declared_type='NSSound*'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSCIImageRep'>
<method selector='CIImage'>
<retval type='@' declared_type='CIImage*'/>
</method>
<method selector='imageRepWithCIImage:' class_method='true'>
<arg index='0' type='@' declared_type='CIImage*' name='image'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCIImage:'>
<arg index='0' type='@' declared_type='CIImage*' name='image'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSCachedImageRep'>
<method selector='initWithSize:depth:separate:alpha:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='size'/>
<arg index='1' type='i' declared_type='NSWindowDepth' name='depth'/>
<arg index='2' type='B' declared_type='BOOL' name='flag'/>
<arg index='3' type='B' declared_type='BOOL' name='alpha'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithWindow:rect:'>
<arg index='0' type='@' declared_type='NSWindow*' name='win'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rect'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='window'>
<retval type='@' declared_type='NSWindow*'/>
</method>
</class>
<class name='NSCell'>
<method selector='acceptsFirstResponder'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='action'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='alignment'>
<retval type64='Q' type='I' declared_type='NSTextAlignment'/>
</method>
<method selector='allowsEditingTextAttributes'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='allowsMixedState'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='allowsUndo'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='attributedStringValue'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='backgroundStyle'>
<retval type64='q' type='i' declared_type='NSBackgroundStyle'/>
</method>
<method selector='baseWritingDirection'>
<retval type64='q' type='i' declared_type='NSWritingDirection'/>
</method>
<method selector='calcDrawInfo:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cellAttribute:'>
<arg index='0' type64='Q' type='I' declared_type='NSCellAttribute' name='aParameter'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='cellSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='cellSizeForBounds:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='compare:'>
<arg index='0' type='@' declared_type='id' name='otherCell'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='continueTracking:at:inView:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='lastPoint'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='currentPoint'/>
<arg index='2' type='@' declared_type='NSView*' name='controlView'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='controlSize'>
<retval type64='Q' type='I' declared_type='NSControlSize'/>
</method>
<method selector='controlTint'>
<retval type64='Q' type='I' declared_type='NSControlTint'/>
</method>
<method selector='controlView'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='defaultFocusRingType' class_method='true'>
<retval type64='Q' type='I' declared_type='NSFocusRingType'/>
</method>
<method selector='defaultMenu' class_method='true'>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='doubleValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='draggingImageComponentsWithFrame:inView:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frame'/>
<arg index='1' type='@' declared_type='NSView*' name='view'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='drawFocusRingMaskWithFrame:inView:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawInteriorWithFrame:inView:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawWithExpansionFrame:inView:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='1' type='@' declared_type='NSView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawWithFrame:inView:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawingRectForBounds:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='theRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='editWithFrame:inView:editor:delegate:event:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<arg index='2' type='@' declared_type='NSText*' name='textObj'/>
<arg index='3' type='@' declared_type='id' name='anObject'/>
<arg index='4' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='endEditing:'>
<arg index='0' type='@' declared_type='NSText*' name='textObj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='entryType'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='expansionFrameWithFrame:inView:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='1' type='@' declared_type='NSView*' name='view'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='fieldEditorForView:'>
<arg index='0' type='@' declared_type='NSView*' name='aControlView'/>
<retval type='@' declared_type='NSTextView*'/>
</method>
<method selector='floatValue'>
<retval type='f' declared_type='float'/>
</method>
<method selector='focusRingMaskBoundsForFrame:inView:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='focusRingType'>
<retval type64='Q' type='I' declared_type='NSFocusRingType'/>
</method>
<method selector='font'>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='formatter'>
<retval type='@' declared_type='id'/>
</method>
<method selector='getPeriodicDelay:interval:'>
<arg index='0' type='^f' declared_type='float*' name='delay'/>
<arg index='1' type='^f' declared_type='float*' name='interval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='hasValidObjectValue'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='highlight:withFrame:inView:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='2' type='@' declared_type='NSView*' name='controlView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='highlightColorWithFrame:inView:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='hitTestForEvent:inRect:ofView:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='2' type='@' declared_type='NSView*' name='controlView'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='image'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='imageRectForBounds:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='theRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='importsGraphics'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initImageCell:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initTextCell:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intValue'>
<retval type='i' declared_type='int'/>
</method>
<method selector='integerValue'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='interiorBackgroundStyle'>
<retval type64='q' type='i' declared_type='NSBackgroundStyle'/>
</method>
<method selector='isBezeled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isBordered'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isContinuous'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEditable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEntryAcceptable:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isHighlighted'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isOpaque'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isScrollable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSelectable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyEquivalent'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='lineBreakMode'>
<retval type64='Q' type='I' declared_type='NSLineBreakMode'/>
</method>
<method selector='menu'>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='menuForEvent:inRect:ofView:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='2' type='@' declared_type='NSView*' name='view'/>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='mnemonic'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='mnemonicLocation'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='mouseDownFlags'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='nextState'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='objectValue'>
<retval type='@' declared_type='id'/>
</method>
<method selector='performClick:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='prefersTrackingUntilMouseUp' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='refusesFirstResponder'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='representedObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='resetCursorRect:inView:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectWithFrame:inView:editor:delegate:start:length:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<arg index='2' type='@' declared_type='NSText*' name='textObj'/>
<arg index='3' type='@' declared_type='id' name='anObject'/>
<arg index='4' type64='q' type='i' declared_type='NSInteger' name='selStart'/>
<arg index='5' type64='q' type='i' declared_type='NSInteger' name='selLength'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sendActionOn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='mask'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='sendsActionOnEndEditing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAction:'>
<arg index='0' type=':' declared_type='SEL' name='aSelector'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlignment:'>
<arg index='0' type64='Q' type='I' declared_type='NSTextAlignment' name='mode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsEditingTextAttributes:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsMixedState:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsUndo:'>
<arg index='0' type='B' declared_type='BOOL' name='allowsUndo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributedStringValue:'>
<arg index='0' type='@' declared_type='NSAttributedString*' name='obj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundStyle:'>
<arg index='0' type64='q' type='i' declared_type='NSBackgroundStyle' name='style'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBaseWritingDirection:'>
<arg index='0' type64='q' type='i' declared_type='NSWritingDirection' name='writingDirection'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBezeled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBordered:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCellAttribute:to:'>
<arg index='0' type64='Q' type='I' declared_type='NSCellAttribute' name='aParameter'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContinuous:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setControlSize:'>
<arg index='0' type64='Q' type='I' declared_type='NSControlSize' name='size'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setControlTint:'>
<arg index='0' type64='Q' type='I' declared_type='NSControlTint' name='controlTint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setControlView:'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDoubleValue:'>
<arg index='0' type='d' declared_type='double' name='aDouble'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEditable:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnabled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEntryType:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='aType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFloatValue:'>
<arg index='0' type='f' declared_type='float' name='aFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFloatingPointFormat:left:right:'>
<arg index='0' type='B' declared_type='BOOL' name='autoRange'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='leftDigits'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='rightDigits'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFocusRingType:'>
<arg index='0' type64='Q' type='I' declared_type='NSFocusRingType' name='focusRingType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='fontObj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFormatter:'>
<arg index='0' type='@' declared_type='NSFormatter*' name='newFormatter'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHighlighted:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImage:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImportsGraphics:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIntValue:'>
<arg index='0' type='i' declared_type='int' name='anInt'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIntegerValue:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='anInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineBreakMode:'>
<arg index='0' type64='Q' type='I' declared_type='NSLineBreakMode' name='mode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMenu:'>
<arg index='0' type='@' declared_type='NSMenu*' name='aMenu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMnemonicLocation:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='location'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNextState'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectValue:'>
<arg index='0' type='@' declared_type='id' name='obj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRefusesFirstResponder:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRepresentedObject:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScrollable:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectable:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSendsActionOnEndEditing:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsFirstResponder:'>
<arg index='0' type='B' declared_type='BOOL' name='showFR'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setState:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStringValue:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTag:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='anInt'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTarget:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleWithMnemonic:'>
<arg index='0' type='@' declared_type='NSString*' name='stringWithAmpersand'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTruncatesLastVisibleLine:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setType:'>
<arg index='0' type64='Q' type='I' declared_type='NSCellType' name='aType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUpFieldEditorAttributes:'>
<arg index='0' type='@' declared_type='NSText*' name='textObj'/>
<retval type='@' declared_type='NSText*'/>
</method>
<method selector='setUserInterfaceLayoutDirection:'>
<arg index='0' type64='q' type='i' declared_type='NSUserInterfaceLayoutDirection' name='layoutDirection'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesSingleLineMode:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWraps:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showsFirstResponder'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='startTrackingAt:inView:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='startPoint'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='state'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='stopTracking:at:inView:mouseIsUp:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='lastPoint'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='stopPoint'/>
<arg index='2' type='@' declared_type='NSView*' name='controlView'/>
<arg index='3' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringValue'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='tag'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='takeDoubleValueFrom:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='takeFloatValueFrom:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='takeIntValueFrom:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='takeIntegerValueFrom:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='takeObjectValueFrom:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='takeStringValueFrom:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='target'>
<retval type='@' declared_type='id'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='titleRectForBounds:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='theRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='trackMouse:inRect:ofView:untilMouseUp:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='2' type='@' declared_type='NSView*' name='controlView'/>
<arg index='3' type='B' declared_type='BOOL' name='flag'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='truncatesLastVisibleLine'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='type'>
<retval type64='Q' type='I' declared_type='NSCellType'/>
</method>
<method selector='userInterfaceLayoutDirection'>
<retval type64='q' type='i' declared_type='NSUserInterfaceLayoutDirection'/>
</method>
<method selector='usesSingleLineMode'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='wantsNotificationForMarkedText'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='wraps'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSClipView'>
<method selector='autoscroll:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='backgroundColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='constrainScrollPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='newOrigin'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='copiesOnScroll'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='documentCursor'>
<retval type='@' declared_type='NSCursor*'/>
</method>
<method selector='documentRect'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='documentView'>
<retval type='@' declared_type='id'/>
</method>
<method selector='documentVisibleRect'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='drawsBackground'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scrollToPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='newOrigin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCopiesOnScroll:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDocumentCursor:'>
<arg index='0' type='@' declared_type='NSCursor*' name='anObj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDocumentView:'>
<arg index='0' type='@' declared_type='NSView*' name='aView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawsBackground:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewBoundsChanged:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewFrameChanged:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSCoder'>
<method selector='decodeNXColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
</class>
<class name='NSCollectionView'>
<method selector='allowsMultipleSelection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='backgroundColors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='content'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='draggingImageForItemsAtIndexes:withEvent:offset:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='indexes'/>
<arg index='1' type='@' declared_type='NSEvent*' name='event'/>
<arg index='2' type64='^{CGPoint=dd}' type='^{_NSPoint=ff}' declared_type='NSPointPointer' name='dragImageOffset'/>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='frameForItemAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='index'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='frameForItemAtIndex:withNumberOfItems:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='index'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='numberOfItems'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='isFirstResponder'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSelectable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='itemAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='index'/>
<retval type='@' declared_type='NSCollectionViewItem*'/>
</method>
<method selector='itemPrototype'>
<retval type='@' declared_type='NSCollectionViewItem*'/>
</method>
<method selector='maxItemSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='maxNumberOfColumns'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='maxNumberOfRows'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='minItemSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='newItemForRepresentedObject:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<retval type='@' declared_type='NSCollectionViewItem*'/>
</method>
<method selector='selectionIndexes'>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundColors:'>
<arg index='0' type='@' declared_type='NSArray*' name='colors'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContent:'>
<arg index='0' type='@' declared_type='NSArray*' name='content'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='aDelegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDraggingSourceOperationMask:forLocal:'>
<arg index='0' type64='Q' type='I' declared_type='NSDragOperation' name='dragOperationMask'/>
<arg index='1' type='B' declared_type='BOOL' name='localDestination'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setItemPrototype:'>
<arg index='0' type='@' declared_type='NSCollectionViewItem*' name='prototype'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxItemSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='size'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxNumberOfColumns:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='number'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxNumberOfRows:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='number'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinItemSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='size'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectable:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectionIndexes:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='indexes'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSCollectionViewItem'>
<method selector='collectionView'>
<retval type='@' declared_type='NSCollectionView*'/>
</method>
<method selector='draggingImageComponents'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='imageView'>
<retval type='@' declared_type='NSImageView*'/>
</method>
<method selector='isSelected'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setImageView:'>
<arg index='0' type='@' declared_type='NSImageView*' name='imageView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelected:'>
<arg index='0' type='B' declared_type='BOOL' name='selected'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextField:'>
<arg index='0' type='@' declared_type='NSTextField*' name='textField'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textField'>
<retval type='@' declared_type='NSTextField*'/>
</method>
</class>
<class name='NSColor'>
<method selector='CGColor'>
<retval type='^{CGColor=}' declared_type='CGColorRef'/>
</method>
<method selector='alphaComponent'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='alternateSelectedControlColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='alternateSelectedControlTextColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='blackColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='blackComponent'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='blendedColorWithFraction:ofColor:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='fraction'/>
<arg index='1' type='@' declared_type='NSColor*' name='color'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='blueColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='blueComponent'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='brightnessComponent'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='brownColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='catalogNameComponent'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='clearColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='colorForControlTint:' class_method='true'>
<arg index='0' type64='Q' type='I' declared_type='NSControlTint' name='controlTint'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='colorFromPasteboard:' class_method='true'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pasteBoard'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='colorNameComponent'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='colorSpace'>
<retval type='@' declared_type='NSColorSpace*'/>
</method>
<method selector='colorSpaceName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='colorUsingColorSpace:'>
<arg index='0' type='@' declared_type='NSColorSpace*' name='space'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='colorUsingColorSpaceName:'>
<arg index='0' type='@' declared_type='NSString*' name='colorSpace'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='colorUsingColorSpaceName:device:'>
<arg index='0' type='@' declared_type='NSString*' name='colorSpace'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='deviceDescription'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='colorWithAlphaComponent:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='alpha'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='colorWithCGColor:' class_method='true'>
<arg index='0' type='^{CGColor=}' declared_type='CGColorRef' name='cgColor'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='colorWithCIColor:' class_method='true'>
<arg index='0' type='@' declared_type='CIColor*' name='color'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='colorWithCalibratedHue:saturation:brightness:alpha:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='hue'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='saturation'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='brightness'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='alpha'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='colorWithCalibratedRed:green:blue:alpha:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='red'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='green'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='blue'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='alpha'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='colorWithCalibratedWhite:alpha:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='white'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='alpha'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='colorWithCatalogName:colorName:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='listName'/>
<arg index='1' type='@' declared_type='NSString*' name='colorName'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='colorWithColorSpace:components:count:' class_method='true'>
<arg index='0' type='@' declared_type='NSColorSpace*' name='space'/>
<arg index='1' type64='^d' type='^f' const='true' declared_type='CGFloat*' name='components'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='numberOfComponents'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='colorWithDeviceCyan:magenta:yellow:black:alpha:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='cyan'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='magenta'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='yellow'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='black'/>
<arg index='4' type64='d' type='f' declared_type='CGFloat' name='alpha'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='colorWithDeviceHue:saturation:brightness:alpha:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='hue'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='saturation'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='brightness'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='alpha'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='colorWithDeviceRed:green:blue:alpha:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='red'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='green'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='blue'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='alpha'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='colorWithDeviceWhite:alpha:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='white'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='alpha'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='colorWithGenericGamma22White:alpha:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='white'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='alpha'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='colorWithPatternImage:' class_method='true'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='colorWithSRGBRed:green:blue:alpha:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='red'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='green'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='blue'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='alpha'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='controlAlternatingRowBackgroundColors' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='controlBackgroundColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='controlColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='controlDarkShadowColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='controlHighlightColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='controlLightHighlightColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='controlShadowColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='controlTextColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='currentControlTint' class_method='true'>
<retval type64='Q' type='I' declared_type='NSControlTint'/>
</method>
<method selector='cyanColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='cyanComponent'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='darkGrayColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='disabledControlTextColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='drawSwatchInRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getComponents:'>
<arg index='0' type64='^d' type='^f' declared_type='CGFloat*' name='components'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getCyan:magenta:yellow:black:alpha:'>
<arg index='0' type64='^d' type='^f' declared_type='CGFloat*' name='cyan'/>
<arg index='1' type64='^d' type='^f' declared_type='CGFloat*' name='magenta'/>
<arg index='2' type64='^d' type='^f' declared_type='CGFloat*' name='yellow'/>
<arg index='3' type64='^d' type='^f' declared_type='CGFloat*' name='black'/>
<arg index='4' type64='^d' type='^f' declared_type='CGFloat*' name='alpha'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getHue:saturation:brightness:alpha:'>
<arg index='0' type64='^d' type='^f' declared_type='CGFloat*' name='hue'/>
<arg index='1' type64='^d' type='^f' declared_type='CGFloat*' name='saturation'/>
<arg index='2' type64='^d' type='^f' declared_type='CGFloat*' name='brightness'/>
<arg index='3' type64='^d' type='^f' declared_type='CGFloat*' name='alpha'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getRed:green:blue:alpha:'>
<arg index='0' type64='^d' type='^f' declared_type='CGFloat*' name='red'/>
<arg index='1' type64='^d' type='^f' declared_type='CGFloat*' name='green'/>
<arg index='2' type64='^d' type='^f' declared_type='CGFloat*' name='blue'/>
<arg index='3' type64='^d' type='^f' declared_type='CGFloat*' name='alpha'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getWhite:alpha:'>
<arg index='0' type64='^d' type='^f' declared_type='CGFloat*' name='white'/>
<arg index='1' type64='^d' type='^f' declared_type='CGFloat*' name='alpha'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='grayColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='greenColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='greenComponent'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='gridColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='headerColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='headerTextColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='highlightColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='highlightWithLevel:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='val'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='hueComponent'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='ignoresAlpha' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyboardFocusIndicatorColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='knobColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='lightGrayColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='localizedCatalogNameComponent'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='localizedColorNameComponent'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='magentaColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='magentaComponent'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='numberOfComponents'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='orangeColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='patternImage'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='purpleColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='redColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='redComponent'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='saturationComponent'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='scrollBarColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='secondarySelectedControlColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='selectedControlColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='selectedControlTextColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='selectedKnobColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='selectedMenuItemColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='selectedMenuItemTextColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='selectedTextBackgroundColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='selectedTextColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='set'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFill'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIgnoresAlpha:' class_method='true'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStroke'>
<retval type='v' declared_type='void'/>
</method>
<method selector='shadowColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='shadowWithLevel:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='val'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='textBackgroundColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='textColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='underPageBackgroundColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='whiteColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='whiteComponent'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='windowBackgroundColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='windowFrameColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='windowFrameTextColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='writeToPasteboard:'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pasteBoard'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='yellowColor' class_method='true'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='yellowComponent'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='NSColorList'>
<method selector='allKeys'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='availableColorLists' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='colorListNamed:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<retval type='@' declared_type='NSColorList*'/>
</method>
<method selector='colorWithKey:'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='initWithName:'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithName:fromFile:'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<arg index='1' type='@' declared_type='NSString*' name='path'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertColor:key:atIndex:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<arg index='1' type='@' declared_type='NSString*' name='key'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='loc'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isEditable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='removeColorWithKey:'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeFile'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:forKey:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<arg index='1' type='@' declared_type='NSString*' name='key'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='writeToFile:'>
<arg index='0' type='@' declared_type='NSString*' name='path'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSColorPanel'>
<method selector='accessoryView'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='alpha'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='attachColorList:'>
<arg index='0' type='@' declared_type='NSColorList*' name='colorList'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='color'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='detachColorList:'>
<arg index='0' type='@' declared_type='NSColorList*' name='colorList'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dragColor:withEvent:fromView:' class_method='true'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<arg index='1' type='@' declared_type='NSEvent*' name='theEvent'/>
<arg index='2' type='@' declared_type='NSView*' name='sourceView'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isContinuous'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mode'>
<retval type64='q' type='i' declared_type='NSColorPanelMode'/>
</method>
<method selector='setAccessoryView:'>
<arg index='0' type='@' declared_type='NSView*' name='aView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAction:'>
<arg index='0' type=':' declared_type='SEL' name='aSelector'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContinuous:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMode:'>
<arg index='0' type64='q' type='i' declared_type='NSColorPanelMode' name='mode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPickerMask:' class_method='true'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='mask'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPickerMode:' class_method='true'>
<arg index='0' type64='q' type='i' declared_type='NSColorPanelMode' name='mode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsAlpha:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTarget:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedColorPanel' class_method='true'>
<retval type='@' declared_type='NSColorPanel*'/>
</method>
<method selector='sharedColorPanelExists' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showsAlpha'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSColorPicker'>
<method selector='attachColorList:'>
<arg index='0' type='@' declared_type='NSColorList*' name='colorList'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='buttonToolTip'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='colorPanel'>
<retval type='@' declared_type='NSColorPanel*'/>
</method>
<method selector='detachColorList:'>
<arg index='0' type='@' declared_type='NSColorList*' name='colorList'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithPickerMask:colorPanel:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='mask'/>
<arg index='1' type='@' declared_type='NSColorPanel*' name='owningColorPanel'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertNewButtonImage:in:'>
<arg index='0' type='@' declared_type='NSImage*' name='newButtonImage'/>
<arg index='1' type='@' declared_type='NSButtonCell*' name='buttonCell'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='minContentSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='provideNewButtonImage'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='setMode:'>
<arg index='0' type64='q' type='i' declared_type='NSColorPanelMode' name='mode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewSizeChanged:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSColorSpace'>
<method selector='CGColorSpace'>
<retval type='^{CGColorSpace=}' declared_type='CGColorSpaceRef'/>
</method>
<method selector='ICCProfileData'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='adobeRGB1998ColorSpace' class_method='true'>
<retval type='@' declared_type='NSColorSpace*'/>
</method>
<method selector='availableColorSpacesWithModel:' class_method='true'>
<arg index='0' type64='q' type='i' declared_type='NSColorSpaceModel' name='model'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='colorSpaceModel'>
<retval type64='q' type='i' declared_type='NSColorSpaceModel'/>
</method>
<method selector='colorSyncProfile'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='deviceCMYKColorSpace' class_method='true'>
<retval type='@' declared_type='NSColorSpace*'/>
</method>
<method selector='deviceGrayColorSpace' class_method='true'>
<retval type='@' declared_type='NSColorSpace*'/>
</method>
<method selector='deviceRGBColorSpace' class_method='true'>
<retval type='@' declared_type='NSColorSpace*'/>
</method>
<method selector='genericCMYKColorSpace' class_method='true'>
<retval type='@' declared_type='NSColorSpace*'/>
</method>
<method selector='genericGamma22GrayColorSpace' class_method='true'>
<retval type='@' declared_type='NSColorSpace*'/>
</method>
<method selector='genericGrayColorSpace' class_method='true'>
<retval type='@' declared_type='NSColorSpace*'/>
</method>
<method selector='genericRGBColorSpace' class_method='true'>
<retval type='@' declared_type='NSColorSpace*'/>
</method>
<method selector='initWithCGColorSpace:'>
<arg index='0' type='^{CGColorSpace=}' declared_type='CGColorSpaceRef' name='cgColorSpace'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithColorSyncProfile:'>
<arg index='0' type='^v' declared_type='void*' name='prof'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithICCProfileData:'>
<arg index='0' type='@' declared_type='NSData*' name='iccData'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='localizedName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='numberOfColorComponents'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='sRGBColorSpace' class_method='true'>
<retval type='@' declared_type='NSColorSpace*'/>
</method>
</class>
<class name='NSColorWell'>
<method selector='activate:'>
<arg index='0' type='B' declared_type='BOOL' name='exclusive'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='color'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='deactivate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawWellInside:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='insideRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isActive'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isBordered'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setBordered:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='takeColorFrom:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSComboBox'>
<method selector='addItemWithObjectValue:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addItemsWithObjectValues:'>
<arg index='0' type='@' declared_type='NSArray*' name='objects'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='completes'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='dataSource'>
<retval type='@' declared_type='id'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='deselectItemAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='hasVerticalScroller'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='indexOfItemWithObjectValue:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='indexOfSelectedItem'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='insertItemWithObjectValue:atIndex:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='intercellSpacing'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='isButtonBordered'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='itemHeight'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='itemObjectValueAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='noteNumberOfItemsChanged'>
<retval type='v' declared_type='void'/>
</method>
<method selector='numberOfItems'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='numberOfVisibleItems'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='objectValueOfSelectedItem'>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectValues'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='reloadData'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllItems'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeItemAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeItemWithObjectValue:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollItemAtIndexToTop:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollItemAtIndexToVisible:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectItemAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectItemWithObjectValue:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setButtonBordered:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCompletes:'>
<arg index='0' type='B' declared_type='BOOL' name='completes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDataSource:'>
<arg index='0' type='@' declared_type='id' name='aSource'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHasVerticalScroller:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIntercellSpacing:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='aSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setItemHeight:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='itemHeight'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfVisibleItems:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='visibleItems'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesDataSource:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='usesDataSource'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSComboBoxCell'>
<method selector='addItemWithObjectValue:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addItemsWithObjectValues:'>
<arg index='0' type='@' declared_type='NSArray*' name='objects'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='completedString:'>
<arg index='0' type='@' declared_type='NSString*' name='string'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='completes'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='dataSource'>
<retval type='@' declared_type='id'/>
</method>
<method selector='deselectItemAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='hasVerticalScroller'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='indexOfItemWithObjectValue:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='indexOfSelectedItem'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='insertItemWithObjectValue:atIndex:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='intercellSpacing'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='isButtonBordered'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='itemHeight'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='itemObjectValueAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='noteNumberOfItemsChanged'>
<retval type='v' declared_type='void'/>
</method>
<method selector='numberOfItems'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='numberOfVisibleItems'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='objectValueOfSelectedItem'>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectValues'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='reloadData'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllItems'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeItemAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeItemWithObjectValue:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollItemAtIndexToTop:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollItemAtIndexToVisible:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectItemAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectItemWithObjectValue:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setButtonBordered:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCompletes:'>
<arg index='0' type='B' declared_type='BOOL' name='completes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDataSource:'>
<arg index='0' type='@' declared_type='id' name='aSource'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHasVerticalScroller:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIntercellSpacing:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='aSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setItemHeight:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='itemHeight'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfVisibleItems:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='visibleItems'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesDataSource:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='usesDataSource'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSControl'>
<method selector='abortEditing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='action'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='alignment'>
<retval type64='Q' type='I' declared_type='NSTextAlignment'/>
</method>
<method selector='allowsExpansionToolTips'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='attributedStringValue'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='baseWritingDirection'>
<retval type64='q' type='i' declared_type='NSWritingDirection'/>
</method>
<method selector='calcSize'>
<retval type='v' declared_type='void'/>
</method>
<method selector='cell'>
<retval type='@' declared_type='id'/>
</method>
<method selector='cellClass' class_method='true'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='currentEditor'>
<retval type='@' declared_type='NSText*'/>
</method>
<method selector='doubleValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='drawCell:'>
<arg index='0' type='@' declared_type='NSCell*' name='aCell'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawCellInside:'>
<arg index='0' type='@' declared_type='NSCell*' name='aCell'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='floatValue'>
<retval type='f' declared_type='float'/>
</method>
<method selector='font'>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='formatter'>
<retval type='@' declared_type='id'/>
</method>
<method selector='ignoresMultiClick'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithFrame:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frameRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intValue'>
<retval type='i' declared_type='int'/>
</method>
<method selector='integerValue'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='invalidateIntrinsicContentSizeForCell:'>
<arg index='0' type='@' declared_type='NSCell*' name='cell'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isContinuous'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mouseDown:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='objectValue'>
<retval type='@' declared_type='id'/>
</method>
<method selector='performClick:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='refusesFirstResponder'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='selectCell:'>
<arg index='0' type='@' declared_type='NSCell*' name='aCell'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectedCell'>
<retval type='@' declared_type='id'/>
</method>
<method selector='selectedTag'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='sendAction:to:'>
<arg index='0' type=':' declared_type='SEL' name='theAction'/>
<arg index='1' type='@' declared_type='id' name='theTarget'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='sendActionOn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='mask'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='setAction:'>
<arg index='0' type=':' declared_type='SEL' name='aSelector'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlignment:'>
<arg index='0' type64='Q' type='I' declared_type='NSTextAlignment' name='mode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsExpansionToolTips:'>
<arg index='0' type='B' declared_type='BOOL' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributedStringValue:'>
<arg index='0' type='@' declared_type='NSAttributedString*' name='obj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBaseWritingDirection:'>
<arg index='0' type64='q' type='i' declared_type='NSWritingDirection' name='writingDirection'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCell:'>
<arg index='0' type='@' declared_type='NSCell*' name='aCell'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCellClass:' class_method='true'>
<arg index='0' type='#' declared_type='Class' name='factoryId'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContinuous:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDoubleValue:'>
<arg index='0' type='d' declared_type='double' name='aDouble'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnabled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFloatValue:'>
<arg index='0' type='f' declared_type='float' name='aFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFloatingPointFormat:left:right:'>
<arg index='0' type='B' declared_type='BOOL' name='autoRange'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='leftDigits'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='rightDigits'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='fontObj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFormatter:'>
<arg index='0' type='@' declared_type='NSFormatter*' name='newFormatter'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIgnoresMultiClick:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIntValue:'>
<arg index='0' type='i' declared_type='int' name='anInt'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIntegerValue:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='anInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNeedsDisplay'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectValue:'>
<arg index='0' type='@' declared_type='id' name='obj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRefusesFirstResponder:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStringValue:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTag:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='anInt'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTarget:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sizeToFit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stringValue'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='tag'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='takeDoubleValueFrom:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='takeFloatValueFrom:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='takeIntValueFrom:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='takeIntegerValueFrom:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='takeObjectValueFrom:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='takeStringValueFrom:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='target'>
<retval type='@' declared_type='id'/>
</method>
<method selector='updateCell:'>
<arg index='0' type='@' declared_type='NSCell*' name='aCell'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateCellInside:'>
<arg index='0' type='@' declared_type='NSCell*' name='aCell'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='validateEditing'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSController'>
<method selector='commitEditing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<arg index='1' type=':' declared_type='SEL' name='didCommitSelector'/>
<arg index='2' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='discardEditing'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isEditing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='objectDidBeginEditing:'>
<arg index='0' type='@' declared_type='id' name='editor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='objectDidEndEditing:'>
<arg index='0' type='@' declared_type='id' name='editor'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSCursor'>
<method selector='IBeamCursor' class_method='true'>
<retval type='@' declared_type='NSCursor*'/>
</method>
<method selector='IBeamCursorForVerticalLayout' class_method='true'>
<retval type='@' declared_type='NSCursor*'/>
</method>
<method selector='arrowCursor' class_method='true'>
<retval type='@' declared_type='NSCursor*'/>
</method>
<method selector='closedHandCursor' class_method='true'>
<retval type='@' declared_type='NSCursor*'/>
</method>
<method selector='contextualMenuCursor' class_method='true'>
<retval type='@' declared_type='NSCursor*'/>
</method>
<method selector='crosshairCursor' class_method='true'>
<retval type='@' declared_type='NSCursor*'/>
</method>
<method selector='currentCursor' class_method='true'>
<retval type='@' declared_type='NSCursor*'/>
</method>
<method selector='currentSystemCursor' class_method='true'>
<retval type='@' declared_type='NSCursor*'/>
</method>
<method selector='disappearingItemCursor' class_method='true'>
<retval type='@' declared_type='NSCursor*'/>
</method>
<method selector='dragCopyCursor' class_method='true'>
<retval type='@' declared_type='NSCursor*'/>
</method>
<method selector='dragLinkCursor' class_method='true'>
<retval type='@' declared_type='NSCursor*'/>
</method>
<method selector='hide' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='hotSpot'>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='image'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='initWithImage:foregroundColorHint:backgroundColorHint:hotSpot:'>
<arg index='0' type='@' declared_type='NSImage*' name='newImage'/>
<arg index='1' type='@' declared_type='NSColor*' name='fg'/>
<arg index='2' type='@' declared_type='NSColor*' name='bg'/>
<arg index='3' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='hotSpot'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithImage:hotSpot:'>
<arg index='0' type='@' declared_type='NSImage*' name='newImage'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='aPoint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isSetOnMouseEntered'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSetOnMouseExited'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mouseEntered:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mouseExited:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='openHandCursor' class_method='true'>
<retval type='@' declared_type='NSCursor*'/>
</method>
<method selector='operationNotAllowedCursor' class_method='true'>
<retval type='@' declared_type='NSCursor*'/>
</method>
<method selector='pointingHandCursor' class_method='true'>
<retval type='@' declared_type='NSCursor*'/>
</method>
<method selector='pop' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='pop'>
<retval type='v' declared_type='void'/>
</method>
<method selector='push'>
<retval type='v' declared_type='void'/>
</method>
<method selector='resizeDownCursor' class_method='true'>
<retval type='@' declared_type='NSCursor*'/>
</method>
<method selector='resizeLeftCursor' class_method='true'>
<retval type='@' declared_type='NSCursor*'/>
</method>
<method selector='resizeLeftRightCursor' class_method='true'>
<retval type='@' declared_type='NSCursor*'/>
</method>
<method selector='resizeRightCursor' class_method='true'>
<retval type='@' declared_type='NSCursor*'/>
</method>
<method selector='resizeUpCursor' class_method='true'>
<retval type='@' declared_type='NSCursor*'/>
</method>
<method selector='resizeUpDownCursor' class_method='true'>
<retval type='@' declared_type='NSCursor*'/>
</method>
<method selector='set'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHiddenUntilMouseMoves:' class_method='true'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOnMouseEntered:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOnMouseExited:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unhide' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSCustomImageRep'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='drawSelector'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='drawingHandler'>
<retval function_pointer='true' type='@?' declared_type='BOOL (^)(NSRect)'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type='B' declared_type='BOOL'/>
</retval>
</method>
<method selector='initWithDrawSelector:delegate:'>
<arg index='0' type=':' declared_type='SEL' name='aMethod'/>
<arg index='1' type='@' declared_type='id' name='anObject'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSize:flipped:drawingHandler:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='size'/>
<arg index='1' type='B' declared_type='BOOL' name='drawingHandlerShouldBeCalledWithFlippedContext'/>
<arg index='2' function_pointer='true' type='@?' declared_type='BOOL (^)(NSRect)' name='drawingHandler'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSDatePicker'>
<method selector='backgroundColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='calendar'>
<retval type='@' declared_type='NSCalendar*'/>
</method>
<method selector='datePickerElements'>
<retval type64='Q' type='I' declared_type='NSDatePickerElementFlags'/>
</method>
<method selector='datePickerMode'>
<retval type64='Q' type='I' declared_type='NSDatePickerMode'/>
</method>
<method selector='datePickerStyle'>
<retval type64='Q' type='I' declared_type='NSDatePickerStyle'/>
</method>
<method selector='dateValue'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='drawsBackground'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isBezeled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isBordered'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='locale'>
<retval type='@' declared_type='NSLocale*'/>
</method>
<method selector='maxDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='minDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='setBackgroundColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBezeled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBordered:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCalendar:'>
<arg index='0' type='@' declared_type='NSCalendar*' name='newCalendar'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDatePickerElements:'>
<arg index='0' type64='Q' type='I' declared_type='NSDatePickerElementFlags' name='elementFlags'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDatePickerMode:'>
<arg index='0' type64='Q' type='I' declared_type='NSDatePickerMode' name='newMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDatePickerStyle:'>
<arg index='0' type64='Q' type='I' declared_type='NSDatePickerStyle' name='newStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDateValue:'>
<arg index='0' type='@' declared_type='NSDate*' name='newStartDate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawsBackground:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocale:'>
<arg index='0' type='@' declared_type='NSLocale*' name='newLocale'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxDate:'>
<arg index='0' type='@' declared_type='NSDate*' name='date'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinDate:'>
<arg index='0' type='@' declared_type='NSDate*' name='date'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeInterval:'>
<arg index='0' type='d' declared_type='NSTimeInterval' name='newTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeZone:'>
<arg index='0' type='@' declared_type='NSTimeZone*' name='newTimeZone'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='timeInterval'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='timeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
</class>
<class name='NSDatePickerCell'>
<method selector='backgroundColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='calendar'>
<retval type='@' declared_type='NSCalendar*'/>
</method>
<method selector='datePickerElements'>
<retval type64='Q' type='I' declared_type='NSDatePickerElementFlags'/>
</method>
<method selector='datePickerMode'>
<retval type64='Q' type='I' declared_type='NSDatePickerMode'/>
</method>
<method selector='datePickerStyle'>
<retval type64='Q' type='I' declared_type='NSDatePickerStyle'/>
</method>
<method selector='dateValue'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='drawsBackground'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='locale'>
<retval type='@' declared_type='NSLocale*'/>
</method>
<method selector='maxDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='minDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='setBackgroundColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCalendar:'>
<arg index='0' type='@' declared_type='NSCalendar*' name='newCalendar'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDatePickerElements:'>
<arg index='0' type64='Q' type='I' declared_type='NSDatePickerElementFlags' name='elementFlags'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDatePickerMode:'>
<arg index='0' type64='Q' type='I' declared_type='NSDatePickerMode' name='newMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDatePickerStyle:'>
<arg index='0' type64='Q' type='I' declared_type='NSDatePickerStyle' name='newStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDateValue:'>
<arg index='0' type='@' declared_type='NSDate*' name='newStartDate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawsBackground:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocale:'>
<arg index='0' type='@' declared_type='NSLocale*' name='newLocale'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxDate:'>
<arg index='0' type='@' declared_type='NSDate*' name='date'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinDate:'>
<arg index='0' type='@' declared_type='NSDate*' name='date'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeInterval:'>
<arg index='0' type='d' declared_type='NSTimeInterval' name='newTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTimeZone:'>
<arg index='0' type='@' declared_type='NSTimeZone*' name='newTimeZone'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='timeInterval'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='timeZone'>
<retval type='@' declared_type='NSTimeZone*'/>
</method>
</class>
<class name='NSDictionaryController'>
<method selector='excludedKeys'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='includedKeys'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='initialKey'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initialValue'>
<retval type='@' declared_type='id'/>
</method>
<method selector='localizedKeyDictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='localizedKeyTable'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='newObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setExcludedKeys:'>
<arg index='0' type='@' declared_type='NSArray*' name='keys'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIncludedKeys:'>
<arg index='0' type='@' declared_type='NSArray*' name='keys'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInitialKey:'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInitialValue:'>
<arg index='0' type='@' declared_type='id' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocalizedKeyDictionary:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='dictionary'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocalizedKeyTable:'>
<arg index='0' type='@' declared_type='NSString*' name='stringsFileName'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSDockTile'>
<method selector='badgeLabel'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='contentView'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='display'>
<retval type='v' declared_type='void'/>
</method>
<method selector='owner'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setBadgeLabel:'>
<arg index='0' type='@' declared_type='NSString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentView:'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsApplicationBadge:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showsApplicationBadge'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='size'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
</class>
<class name='NSDocument'>
<method selector='addWindowController:'>
<arg index='0' type='@' declared_type='NSWindowController*' name='windowController'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='autosaveDocumentWithDelegate:didAutosaveSelector:contextInfo:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<arg index='1' type=':' declared_type='SEL' name='didAutosaveSelector'/>
<arg index='2' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='autosaveWithImplicitCancellability:completionHandler:'>
<arg index='0' type='B' declared_type='BOOL' name='autosavingIsImplicitlyCancellable'/>
<arg index='1' function_pointer='true' type='@?' declared_type='void (^)(NSError *)' name='completionHandler'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='autosavedContentsFileURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='autosavesDrafts' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='autosavesInPlace' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='autosavingFileType'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='autosavingIsImplicitlyCancellable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='backupFileURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='browseDocumentVersions:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='canAsynchronouslyWriteToURL:ofType:forSaveOperation:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSString*' name='typeName'/>
<arg index='2' type64='Q' type='I' declared_type='NSSaveOperationType' name='saveOperation'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canCloseDocumentWithDelegate:shouldCloseSelector:contextInfo:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<arg index='1' type=':' declared_type='SEL' name='shouldCloseSelector'/>
<arg index='2' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='canConcurrentlyReadDocumentsOfType:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='typeName'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='changeCountTokenForSaveOperation:'>
<arg index='0' type64='Q' type='I' declared_type='NSSaveOperationType' name='saveOperation'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='checkAutosavingSafetyAndReturnError:'>
<arg index='0' type='^@' declared_type='NSError**' name='outError'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='close'>
<retval type='v' declared_type='void'/>
</method>
<method selector='continueActivityUsingBlock:'>
<arg index='0' function_pointer='true' type='@?' declared_type='void (^)(void)' name='block'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='continueAsynchronousWorkOnMainThreadUsingBlock:'>
<arg index='0' function_pointer='true' type='@?' declared_type='void (^)(void)' name='block'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='dataOfType:error:'>
<arg index='0' type='@' declared_type='NSString*' name='typeName'/>
<arg index='1' type='^@' declared_type='NSError**' name='outError'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='dataRepresentationOfType:'>
<arg index='0' type='@' declared_type='NSString*' name='type'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='defaultDraftName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='displayName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='duplicateAndReturnError:'>
<arg index='0' type='^@' declared_type='NSError**' name='outError'/>
<retval type='@' declared_type='NSDocument*'/>
</method>
<method selector='duplicateDocument:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='duplicateDocumentWithDelegate:didDuplicateSelector:contextInfo:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<arg index='1' type=':' declared_type='SEL' name='didDuplicateSelector'/>
<arg index='2' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeRestorableStateWithCoder:'>
<arg index='0' type='@' declared_type='NSCoder*' name='coder'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fileAttributesToWriteToFile:ofType:saveOperation:'>
<arg index='0' type='@' declared_type='NSString*' name='fullDocumentPath'/>
<arg index='1' type='@' declared_type='NSString*' name='documentTypeName'/>
<arg index='2' type64='Q' type='I' declared_type='NSSaveOperationType' name='saveOperationType'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='fileAttributesToWriteToURL:ofType:forSaveOperation:originalContentsURL:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSString*' name='typeName'/>
<arg index='2' type64='Q' type='I' declared_type='NSSaveOperationType' name='saveOperation'/>
<arg index='3' type='@' declared_type='NSURL*' name='absoluteOriginalContentsURL'/>
<arg index='4' type='^@' declared_type='NSError**' name='outError'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='fileModificationDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='fileName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fileNameExtensionForType:saveOperation:'>
<arg index='0' type='@' declared_type='NSString*' name='typeName'/>
<arg index='1' type64='Q' type='I' declared_type='NSSaveOperationType' name='saveOperation'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fileNameExtensionWasHiddenInLastRunSavePanel'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fileType'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fileTypeFromLastRunSavePanel'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fileURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='fileWrapperOfType:error:'>
<arg index='0' type='@' declared_type='NSString*' name='typeName'/>
<arg index='1' type='^@' declared_type='NSError**' name='outError'/>
<retval type='@' declared_type='NSFileWrapper*'/>
</method>
<method selector='fileWrapperRepresentationOfType:'>
<arg index='0' type='@' declared_type='NSString*' name='type'/>
<retval type='@' declared_type='NSFileWrapper*'/>
</method>
<method selector='handleCloseScriptCommand:'>
<arg index='0' type='@' declared_type='NSCloseCommand*' name='command'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='handlePrintScriptCommand:'>
<arg index='0' type='@' declared_type='NSScriptCommand*' name='command'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='handleSaveScriptCommand:'>
<arg index='0' type='@' declared_type='NSScriptCommand*' name='command'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='hasUnautosavedChanges'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasUndoManager'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initForURL:withContentsOfURL:ofType:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='urlOrNil'/>
<arg index='1' type='@' declared_type='NSURL*' name='contentsURL'/>
<arg index='2' type='@' declared_type='NSString*' name='typeName'/>
<arg index='3' type='^@' declared_type='NSError**' name='outError'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfFile:ofType:'>
<arg index='0' type='@' declared_type='NSString*' name='absolutePath'/>
<arg index='1' type='@' declared_type='NSString*' name='typeName'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:ofType:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSString*' name='typeName'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:ofType:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSString*' name='typeName'/>
<arg index='2' type='^@' declared_type='NSError**' name='outError'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithType:error:'>
<arg index='0' type='@' declared_type='NSString*' name='typeName'/>
<arg index='1' type='^@' declared_type='NSError**' name='outError'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='invalidateRestorableState'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isDocumentEdited'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isDraft'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEntireFileLoaded'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isInViewingMode'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isLocked'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isNativeType:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='type'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keepBackupFile'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lastComponentOfFileName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='loadDataRepresentation:ofType:'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<arg index='1' type='@' declared_type='NSString*' name='type'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='loadFileWrapperRepresentation:ofType:'>
<arg index='0' type='@' declared_type='NSFileWrapper*' name='wrapper'/>
<arg index='1' type='@' declared_type='NSString*' name='type'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lockDocument:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='lockDocumentWithCompletionHandler:'>
<arg index='0' function_pointer='true' type='@?' declared_type='void (^)(BOOL)' name='completionHandler'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='lockWithCompletionHandler:'>
<arg index='0' function_pointer='true' type='@?' declared_type='void (^)(NSError *)' name='completionHandler'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeWindowControllers'>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveDocument:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveDocumentToUbiquityContainer:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveDocumentWithCompletionHandler:'>
<arg index='0' function_pointer='true' type='@?' declared_type='void (^)(BOOL)' name='completionHandler'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveToURL:completionHandler:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' function_pointer='true' type='@?' declared_type='void (^)(NSError *)' name='completionHandler'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='objectSpecifier'>
<retval type='@' declared_type='NSScriptObjectSpecifier*'/>
</method>
<method selector='performActivityWithSynchronousWaiting:usingBlock:'>
<arg index='0' type='B' declared_type='BOOL' name='waitSynchronously'/>
<arg index='1' function_pointer='true' type='@?' declared_type='void (^)(void (^)(void))' name='block'>
<arg type='@?' declared_type='void (^)(void)'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='performAsynchronousFileAccessUsingBlock:'>
<arg index='0' function_pointer='true' type='@?' declared_type='void (^)(void (^)(void))' name='block'>
<arg type='@?' declared_type='void (^)(void)'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='performSynchronousFileAccessUsingBlock:'>
<arg index='0' function_pointer='true' type='@?' declared_type='void (^)(void)' name='block'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='preparePageLayout:'>
<arg index='0' type='@' declared_type='NSPageLayout*' name='pageLayout'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='prepareSavePanel:'>
<arg index='0' type='@' declared_type='NSSavePanel*' name='savePanel'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='presentError:'>
<arg index='0' type='@' declared_type='NSError*' name='error'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
<arg index='0' type='@' declared_type='NSError*' name='error'/>
<arg index='1' type='@' declared_type='NSWindow*' name='window'/>
<arg index='2' type='@' declared_type='id' name='delegate'/>
<arg index='3' type=':' declared_type='SEL' name='didPresentSelector'/>
<arg index='4' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='preservesVersions' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='printDocument:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='printDocumentWithSettings:showPrintPanel:delegate:didPrintSelector:contextInfo:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='printSettings'/>
<arg index='1' type='B' declared_type='BOOL' name='showPrintPanel'/>
<arg index='2' type='@' declared_type='id' name='delegate'/>
<arg index='3' type=':' declared_type='SEL' name='didPrintSelector'/>
<arg index='4' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='printInfo'>
<retval type='@' declared_type='NSPrintInfo*'/>
</method>
<method selector='printOperationWithSettings:error:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='printSettings'/>
<arg index='1' type='^@' declared_type='NSError**' name='outError'/>
<retval type='@' declared_type='NSPrintOperation*'/>
</method>
<method selector='printShowingPrintPanel:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='readFromData:ofType:error:'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<arg index='1' type='@' declared_type='NSString*' name='typeName'/>
<arg index='2' type='^@' declared_type='NSError**' name='outError'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='readFromFile:ofType:'>
<arg index='0' type='@' declared_type='NSString*' name='fileName'/>
<arg index='1' type='@' declared_type='NSString*' name='type'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='readFromFileWrapper:ofType:error:'>
<arg index='0' type='@' declared_type='NSFileWrapper*' name='fileWrapper'/>
<arg index='1' type='@' declared_type='NSString*' name='typeName'/>
<arg index='2' type='^@' declared_type='NSError**' name='outError'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='readFromURL:ofType:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSString*' name='type'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='readFromURL:ofType:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSString*' name='typeName'/>
<arg index='2' type='^@' declared_type='NSError**' name='outError'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='readableTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removeWindowController:'>
<arg index='0' type='@' declared_type='NSWindowController*' name='windowController'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='renameDocument:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='restorableStateKeyPaths' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='restoreDocumentWindowWithIdentifier:state:completionHandler:'>
<arg index='0' type='@' declared_type='NSString*' name='identifier'/>
<arg index='1' type='@' declared_type='NSCoder*' name='state'/>
<arg index='2' function_pointer='true' type='@?' declared_type='void (^)(NSWindow *, NSError *)' name='completionHandler'>
<arg type='@' declared_type='NSWindow*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='restoreStateWithCoder:'>
<arg index='0' type='@' declared_type='NSCoder*' name='coder'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='revertDocumentToSaved:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='revertToContentsOfURL:ofType:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSString*' name='typeName'/>
<arg index='2' type='^@' declared_type='NSError**' name='outError'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='revertToSavedFromFile:ofType:'>
<arg index='0' type='@' declared_type='NSString*' name='fileName'/>
<arg index='1' type='@' declared_type='NSString*' name='type'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='revertToSavedFromURL:ofType:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSString*' name='type'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='runModalPageLayoutWithPrintInfo:'>
<arg index='0' type='@' declared_type='NSPrintInfo*' name='printInfo'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='runModalPageLayoutWithPrintInfo:delegate:didRunSelector:contextInfo:'>
<arg index='0' type='@' declared_type='NSPrintInfo*' name='printInfo'/>
<arg index='1' type='@' declared_type='id' name='delegate'/>
<arg index='2' type=':' declared_type='SEL' name='didRunSelector'/>
<arg index='3' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='runModalPrintOperation:delegate:didRunSelector:contextInfo:'>
<arg index='0' type='@' declared_type='NSPrintOperation*' name='printOperation'/>
<arg index='1' type='@' declared_type='id' name='delegate'/>
<arg index='2' type=':' declared_type='SEL' name='didRunSelector'/>
<arg index='3' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:'>
<arg index='0' type64='Q' type='I' declared_type='NSSaveOperationType' name='saveOperation'/>
<arg index='1' type='@' declared_type='id' name='delegate'/>
<arg index='2' type=':' declared_type='SEL' name='didSaveSelector'/>
<arg index='3' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='runPageLayout:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='saveDocument:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='saveDocumentAs:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='saveDocumentTo:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='saveDocumentWithDelegate:didSaveSelector:contextInfo:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<arg index='1' type=':' declared_type='SEL' name='didSaveSelector'/>
<arg index='2' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='saveToFile:saveOperation:delegate:didSaveSelector:contextInfo:'>
<arg index='0' type='@' declared_type='NSString*' name='fileName'/>
<arg index='1' type64='Q' type='I' declared_type='NSSaveOperationType' name='saveOperation'/>
<arg index='2' type='@' declared_type='id' name='delegate'/>
<arg index='3' type=':' declared_type='SEL' name='didSaveSelector'/>
<arg index='4' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='saveToURL:ofType:forSaveOperation:completionHandler:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSString*' name='typeName'/>
<arg index='2' type64='Q' type='I' declared_type='NSSaveOperationType' name='saveOperation'/>
<arg index='3' function_pointer='true' type='@?' declared_type='void (^)(NSError *)' name='completionHandler'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSString*' name='typeName'/>
<arg index='2' type64='Q' type='I' declared_type='NSSaveOperationType' name='saveOperation'/>
<arg index='3' type='@' declared_type='id' name='delegate'/>
<arg index='4' type=':' declared_type='SEL' name='didSaveSelector'/>
<arg index='5' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='saveToURL:ofType:forSaveOperation:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSString*' name='typeName'/>
<arg index='2' type64='Q' type='I' declared_type='NSSaveOperationType' name='saveOperation'/>
<arg index='3' type='^@' declared_type='NSError**' name='outError'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scheduleAutosaving'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutosavedContentsFileURL:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayName:'>
<arg index='0' type='@' declared_type='NSString*' name='displayNameOrNil'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDraft:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFileModificationDate:'>
<arg index='0' type='@' declared_type='NSDate*' name='modificationDate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFileName:'>
<arg index='0' type='@' declared_type='NSString*' name='fileName'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFileType:'>
<arg index='0' type='@' declared_type='NSString*' name='typeName'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFileURL:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHasUndoManager:'>
<arg index='0' type='B' declared_type='BOOL' name='hasUndoManager'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLastComponentOfFileName:'>
<arg index='0' type='@' declared_type='NSString*' name='str'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPrintInfo:'>
<arg index='0' type='@' declared_type='NSPrintInfo*' name='printInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUndoManager:'>
<arg index='0' type='@' declared_type='NSUndoManager*' name='undoManager'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWindow:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldChangePrintInfo:'>
<arg index='0' type='@' declared_type='NSPrintInfo*' name='newPrintInfo'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='shouldCloseWindowController:delegate:shouldCloseSelector:contextInfo:'>
<arg index='0' type='@' declared_type='NSWindowController*' name='windowController'/>
<arg index='1' type='@' declared_type='id' name='delegate'/>
<arg index='2' type=':' declared_type='SEL' name='shouldCloseSelector'/>
<arg index='3' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldRunSavePanelWithAccessoryView'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showWindows'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unblockUserInteraction'>
<retval type='v' declared_type='void'/>
</method>
<method selector='undoManager'>
<retval type='@' declared_type='NSUndoManager*'/>
</method>
<method selector='unlockDocument:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unlockDocumentWithCompletionHandler:'>
<arg index='0' function_pointer='true' type='@?' declared_type='void (^)(BOOL)' name='completionHandler'>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='unlockWithCompletionHandler:'>
<arg index='0' function_pointer='true' type='@?' declared_type='void (^)(NSError *)' name='completionHandler'>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateChangeCount:'>
<arg index='0' type64='Q' type='I' declared_type='NSDocumentChangeType' name='change'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateChangeCountWithToken:forSaveOperation:'>
<arg index='0' type='@' declared_type='id' name='changeCountToken'/>
<arg index='1' type64='Q' type='I' declared_type='NSSaveOperationType' name='saveOperation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='usesUbiquitousStorage' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='validateUserInterfaceItem:'>
<arg index='0' type='@' declared_type='id' name='anItem'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='willNotPresentError:'>
<arg index='0' type='@' declared_type='NSError*' name='error'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='willPresentError:'>
<arg index='0' type='@' declared_type='NSError*' name='error'/>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='windowControllerDidLoadNib:'>
<arg index='0' type='@' declared_type='NSWindowController*' name='windowController'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowControllerWillLoadNib:'>
<arg index='0' type='@' declared_type='NSWindowController*' name='windowController'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowControllers'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='windowForSheet'>
<retval type='@' declared_type='NSWindow*'/>
</method>
<method selector='windowNibName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='writableTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='writableTypesForSaveOperation:'>
<arg index='0' type64='Q' type='I' declared_type='NSSaveOperationType' name='saveOperation'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='writeSafelyToURL:ofType:forSaveOperation:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSString*' name='typeName'/>
<arg index='2' type64='Q' type='I' declared_type='NSSaveOperationType' name='saveOperation'/>
<arg index='3' type='^@' declared_type='NSError**' name='outError'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToFile:ofType:'>
<arg index='0' type='@' declared_type='NSString*' name='fileName'/>
<arg index='1' type='@' declared_type='NSString*' name='type'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToFile:ofType:originalFile:saveOperation:'>
<arg index='0' type='@' declared_type='NSString*' name='fullDocumentPath'/>
<arg index='1' type='@' declared_type='NSString*' name='documentTypeName'/>
<arg index='2' type='@' declared_type='NSString*' name='fullOriginalDocumentPath'/>
<arg index='3' type64='Q' type='I' declared_type='NSSaveOperationType' name='saveOperationType'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:ofType:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSString*' name='type'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:ofType:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSString*' name='typeName'/>
<arg index='2' type='^@' declared_type='NSError**' name='outError'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeToURL:ofType:forSaveOperation:originalContentsURL:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSString*' name='typeName'/>
<arg index='2' type64='Q' type='I' declared_type='NSSaveOperationType' name='saveOperation'/>
<arg index='3' type='@' declared_type='NSURL*' name='absoluteOriginalContentsURL'/>
<arg index='4' type='^@' declared_type='NSError**' name='outError'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeWithBackupToFile:ofType:saveOperation:'>
<arg index='0' type='@' declared_type='NSString*' name='fullDocumentPath'/>
<arg index='1' type='@' declared_type='NSString*' name='documentTypeName'/>
<arg index='2' type64='Q' type='I' declared_type='NSSaveOperationType' name='saveOperationType'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSDocumentController'>
<method selector='URLsFromRunningOpenPanel'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='addDocument:'>
<arg index='0' type='@' declared_type='NSDocument*' name='document'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='autosavingDelay'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='beginOpenPanel:forTypes:completionHandler:'>
<arg index='0' type='@' declared_type='NSOpenPanel*' name='openPanel'/>
<arg index='1' type='@' declared_type='NSArray*' name='inTypes'/>
<arg index='2' function_pointer='true' type='@?' declared_type='void (^)(NSInteger)' name='completionHandler'>
<arg type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginOpenPanelWithCompletionHandler:'>
<arg index='0' function_pointer='true' type='@?' declared_type='void (^)(NSArray *)' name='completionHandler'>
<arg type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='clearRecentDocuments:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='closeAllDocumentsWithDelegate:didCloseAllSelector:contextInfo:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<arg index='1' type=':' declared_type='SEL' name='didCloseAllSelector'/>
<arg index='2' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='currentDirectory'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='currentDocument'>
<retval type='@' declared_type='id'/>
</method>
<method selector='defaultType'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='displayNameForType:'>
<arg index='0' type='@' declared_type='NSString*' name='typeName'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='documentClassForType:'>
<arg index='0' type='@' declared_type='NSString*' name='typeName'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='documentClassNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='documentForFileName:'>
<arg index='0' type='@' declared_type='NSString*' name='fileName'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='documentForURL:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='documentForWindow:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='documents'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='duplicateDocumentWithContentsOfURL:copying:displayName:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='B' declared_type='BOOL' name='duplicateByCopying'/>
<arg index='2' type='@' declared_type='NSString*' name='displayNameOrNil'/>
<arg index='3' type='^@' declared_type='NSError**' name='outError'/>
<retval type='@' declared_type='NSDocument*'/>
</method>
<method selector='fileExtensionsFromType:'>
<arg index='0' type='@' declared_type='NSString*' name='typeName'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='fileNamesFromRunningOpenPanel'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='hasEditedDocuments'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='makeDocumentForURL:withContentsOfURL:ofType:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='urlOrNil'/>
<arg index='1' type='@' declared_type='NSURL*' name='contentsURL'/>
<arg index='2' type='@' declared_type='NSString*' name='typeName'/>
<arg index='3' type='^@' declared_type='NSError**' name='outError'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='makeDocumentWithContentsOfFile:ofType:'>
<arg index='0' type='@' declared_type='NSString*' name='fileName'/>
<arg index='1' type='@' declared_type='NSString*' name='type'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='makeDocumentWithContentsOfURL:ofType:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSString*' name='type'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='makeDocumentWithContentsOfURL:ofType:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSString*' name='typeName'/>
<arg index='2' type='^@' declared_type='NSError**' name='outError'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='makeUntitledDocumentOfType:'>
<arg index='0' type='@' declared_type='NSString*' name='type'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='makeUntitledDocumentOfType:error:'>
<arg index='0' type='@' declared_type='NSString*' name='typeName'/>
<arg index='1' type='^@' declared_type='NSError**' name='outError'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='maximumRecentDocumentCount'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='newDocument:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='noteNewRecentDocument:'>
<arg index='0' type='@' declared_type='NSDocument*' name='document'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='noteNewRecentDocumentURL:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='openDocument:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='openDocumentWithContentsOfFile:display:'>
<arg index='0' type='@' declared_type='NSString*' name='fileName'/>
<arg index='1' type='B' declared_type='BOOL' name='display'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='openDocumentWithContentsOfURL:display:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='B' declared_type='BOOL' name='display'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='openDocumentWithContentsOfURL:display:completionHandler:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='B' declared_type='BOOL' name='displayDocument'/>
<arg index='2' function_pointer='true' type='@?' declared_type='void (^)(NSDocument *, BOOL, NSError *)' name='completionHandler'>
<arg type='@' declared_type='NSDocument*'/>
<arg type='B' declared_type='BOOL'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='openDocumentWithContentsOfURL:display:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='B' declared_type='BOOL' name='displayDocument'/>
<arg index='2' type='^@' declared_type='NSError**' name='outError'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='openUntitledDocumentAndDisplay:error:'>
<arg index='0' type='B' declared_type='BOOL' name='displayDocument'/>
<arg index='1' type='^@' declared_type='NSError**' name='outError'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='openUntitledDocumentOfType:display:'>
<arg index='0' type='@' declared_type='NSString*' name='type'/>
<arg index='1' type='B' declared_type='BOOL' name='display'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='presentError:'>
<arg index='0' type='@' declared_type='NSError*' name='error'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
<arg index='0' type='@' declared_type='NSError*' name='error'/>
<arg index='1' type='@' declared_type='NSWindow*' name='window'/>
<arg index='2' type='@' declared_type='id' name='delegate'/>
<arg index='3' type=':' declared_type='SEL' name='didPresentSelector'/>
<arg index='4' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='recentDocumentURLs'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removeDocument:'>
<arg index='0' type='@' declared_type='NSDocument*' name='document'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reopenDocumentForURL:withContentsOfURL:display:completionHandler:'>
<arg index='0' type='@' declared_type='NSURL*' name='urlOrNil'/>
<arg index='1' type='@' declared_type='NSURL*' name='contentsURL'/>
<arg index='2' type='B' declared_type='BOOL' name='displayDocument'/>
<arg index='3' function_pointer='true' type='@?' declared_type='void (^)(NSDocument *, BOOL, NSError *)' name='completionHandler'>
<arg type='@' declared_type='NSDocument*'/>
<arg type='B' declared_type='BOOL'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='reopenDocumentForURL:withContentsOfURL:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSURL*' name='contentsURL'/>
<arg index='2' type='^@' declared_type='NSError**' name='outError'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='reviewUnsavedDocumentsWithAlertTitle:cancellable:delegate:didReviewAllSelector:contextInfo:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<arg index='1' type='B' declared_type='BOOL' name='cancellable'/>
<arg index='2' type='@' declared_type='id' name='delegate'/>
<arg index='3' type=':' declared_type='SEL' name='didReviewAllSelector'/>
<arg index='4' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='runModalOpenPanel:forTypes:'>
<arg index='0' type='@' declared_type='NSOpenPanel*' name='openPanel'/>
<arg index='1' type='@' declared_type='NSArray*' name='types'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='saveAllDocuments:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutosavingDelay:'>
<arg index='0' type='d' declared_type='NSTimeInterval' name='autosavingDelay'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldCreateUI:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedDocumentController' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='shouldCreateUI'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='typeForContentsOfURL:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='^@' declared_type='NSError**' name='outError'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='typeFromFileExtension:'>
<arg index='0' type='@' declared_type='NSString*' name='fileNameExtensionOrHFSFileType'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='validateUserInterfaceItem:'>
<arg index='0' type='@' declared_type='id' name='anItem'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='willPresentError:'>
<arg index='0' type='@' declared_type='NSError*' name='error'/>
<retval type='@' declared_type='NSError*'/>
</method>
</class>
<class name='NSDraggingImageComponent'>
<method selector='contents'>
<retval type='@' declared_type='id'/>
</method>
<method selector='draggingImageComponentWithKey:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='frame'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='initWithKey:'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='key'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setContents:'>
<arg index='0' type='@' declared_type='id' name='contents'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFrame:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frame'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKey:'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSDraggingItem'>
<method selector='draggingFrame'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='imageComponents'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='imageComponentsProvider'>
<retval function_pointer='true' type='@?' declared_type='NSArray *(^)(void)'>
<retval type='@' declared_type='NSArray*'/>
</retval>
</method>
<method selector='initWithPasteboardWriter:'>
<arg index='0' type='@' declared_type='id' name='pasteboardWriter'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='item'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDraggingFrame:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='draggingFrame'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDraggingFrame:contents:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frame'/>
<arg index='1' type='@' declared_type='id' name='contents'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageComponentsProvider:'>
<arg index='0' function_pointer='true' type='@?' declared_type='NSArray *(^)(void)' name='imageComponentsProvider'>
<retval type='@' declared_type='NSArray*'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSDraggingSession'>
<method selector='animatesToStartingPositionsOnCancelOrFail'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='draggingFormation'>
<retval type64='q' type='i' declared_type='NSDraggingFormation'/>
</method>
<method selector='draggingLeaderIndex'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='draggingLocation'>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='draggingPasteboard'>
<retval type='@' declared_type='NSPasteboard*'/>
</method>
<method selector='draggingSequenceNumber'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='enumerateDraggingItemsWithOptions:forView:classes:searchOptions:usingBlock:'>
<arg index='0' type64='Q' type='I' declared_type='NSDraggingItemEnumerationOptions' name='enumOpts'/>
<arg index='1' type='@' declared_type='NSView*' name='view'/>
<arg index='2' type='@' declared_type='NSArray*' name='classArray'/>
<arg index='3' type='@' declared_type='NSDictionary*' name='searchOptions'/>
<arg index='4' function_pointer='true' type='@?' declared_type='void (^)(NSDraggingItem *, NSInteger, BOOL *)' name='block'>
<arg type='@' declared_type='NSDraggingItem*'/>
<arg type64='q' type='i' declared_type='NSInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAnimatesToStartingPositionsOnCancelOrFail:'>
<arg index='0' type='B' declared_type='BOOL' name='animatesToStartingPositionsOnCancelOrFail'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDraggingFormation:'>
<arg index='0' type64='q' type='i' declared_type='NSDraggingFormation' name='draggingFormation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDraggingLeaderIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='draggingLeaderIndex'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSDrawer'>
<method selector='close'>
<retval type='v' declared_type='void'/>
</method>
<method selector='close:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='contentSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='contentView'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='edge'>
<retval type64='Q' type='i' declared_type='NSRectEdge'/>
</method>
<method selector='initWithContentSize:preferredEdge:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='contentSize'/>
<arg index='1' type64='Q' type='i' declared_type='NSRectEdge' name='edge'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='leadingOffset'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='maxContentSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='minContentSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='open'>
<retval type='v' declared_type='void'/>
</method>
<method selector='open:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='openOnEdge:'>
<arg index='0' type64='Q' type='i' declared_type='NSRectEdge' name='edge'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='parentWindow'>
<retval type='@' declared_type='NSWindow*'/>
</method>
<method selector='preferredEdge'>
<retval type64='Q' type='i' declared_type='NSRectEdge'/>
</method>
<method selector='setContentSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='size'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentView:'>
<arg index='0' type='@' declared_type='NSView*' name='aView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLeadingOffset:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='offset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxContentSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='size'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinContentSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='size'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParentWindow:'>
<arg index='0' type='@' declared_type='NSWindow*' name='parent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreferredEdge:'>
<arg index='0' type64='Q' type='i' declared_type='NSRectEdge' name='edge'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTrailingOffset:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='offset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='state'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='toggle:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='trailingOffset'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='NSEPSImageRep'>
<method selector='EPSRepresentation'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='boundingBox'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='imageRepWithData:' class_method='true'>
<arg index='0' type='@' declared_type='NSData*' name='epsData'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:'>
<arg index='0' type='@' declared_type='NSData*' name='epsData'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='prepareGState'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSEvent'>
<method selector='CGEvent'>
<retval type='^{__CGEvent=}' declared_type='CGEventRef'/>
</method>
<method selector='absoluteX'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='absoluteY'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='absoluteZ'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='addGlobalMonitorForEventsMatchingMask:handler:' class_method='true'>
<arg index='0' type='Q' declared_type='NSEventMask' name='mask'/>
<arg index='1' function_pointer='true' type='@?' declared_type='void (^)(NSEvent *)' name='block'>
<arg type='@' declared_type='NSEvent*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='addLocalMonitorForEventsMatchingMask:handler:' class_method='true'>
<arg index='0' type='Q' declared_type='NSEventMask' name='mask'/>
<arg index='1' function_pointer='true' type='@?' declared_type='NSEvent *(^)(NSEvent *)' name='block'>
<arg type='@' declared_type='NSEvent*'/>
<retval type='@' declared_type='NSEvent*'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='buttonMask'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='buttonNumber'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='capabilityMask'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='characters'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='charactersIgnoringModifiers'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='clickCount'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='context'>
<retval type='@' declared_type='NSGraphicsContext*'/>
</method>
<method selector='data1'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='data2'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='deltaX'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='deltaY'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='deltaZ'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='deviceID'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='doubleClickInterval' class_method='true'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='enterExitEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:trackingNumber:userData:' class_method='true'>
<arg index='0' type64='Q' type='I' declared_type='NSEventType' name='type'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='location'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='flags'/>
<arg index='3' type='d' declared_type='NSTimeInterval' name='time'/>
<arg index='4' type64='q' type='i' declared_type='NSInteger' name='wNum'/>
<arg index='5' type='@' declared_type='NSGraphicsContext*' name='context'/>
<arg index='6' type64='q' type='i' declared_type='NSInteger' name='eNum'/>
<arg index='7' type64='q' type='i' declared_type='NSInteger' name='tNum'/>
<arg index='8' type='^v' declared_type='void*' name='data'/>
<retval type='@' declared_type='NSEvent*'/>
</method>
<method selector='eventNumber'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='eventRef'>
<retval type='^v' const='true' declared_type='void*'/>
</method>
<method selector='eventWithCGEvent:' class_method='true'>
<arg index='0' type='^{__CGEvent=}' declared_type='CGEventRef' name='cgEvent'/>
<retval type='@' declared_type='NSEvent*'/>
</method>
<method selector='eventWithEventRef:' class_method='true'>
<arg index='0' type='^v' const='true' declared_type='void*' name='eventRef'/>
<retval type='@' declared_type='NSEvent*'/>
</method>
<method selector='hasPreciseScrollingDeltas'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isARepeat'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isDirectionInvertedFromDevice'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEnteringProximity'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMouseCoalescingEnabled' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSwipeTrackingFromScrollEventsEnabled' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyCode'>
<retval type='S' declared_type='unsigned short'/>
</method>
<method selector='keyEventWithType:location:modifierFlags:timestamp:windowNumber:context:characters:charactersIgnoringModifiers:isARepeat:keyCode:' class_method='true'>
<arg index='0' type64='Q' type='I' declared_type='NSEventType' name='type'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='location'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='flags'/>
<arg index='3' type='d' declared_type='NSTimeInterval' name='time'/>
<arg index='4' type64='q' type='i' declared_type='NSInteger' name='wNum'/>
<arg index='5' type='@' declared_type='NSGraphicsContext*' name='context'/>
<arg index='6' type='@' declared_type='NSString*' name='keys'/>
<arg index='7' type='@' declared_type='NSString*' name='ukeys'/>
<arg index='8' type='B' declared_type='BOOL' name='flag'/>
<arg index='9' type='S' declared_type='unsigned short' name='code'/>
<retval type='@' declared_type='NSEvent*'/>
</method>
<method selector='keyRepeatDelay' class_method='true'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='keyRepeatInterval' class_method='true'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='locationInWindow'>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='magnification'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='modifierFlags' class_method='true'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='modifierFlags'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='momentumPhase'>
<retval type64='Q' type='I' declared_type='NSEventPhase'/>
</method>
<method selector='mouseEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:clickCount:pressure:' class_method='true'>
<arg index='0' type64='Q' type='I' declared_type='NSEventType' name='type'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='location'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='flags'/>
<arg index='3' type='d' declared_type='NSTimeInterval' name='time'/>
<arg index='4' type64='q' type='i' declared_type='NSInteger' name='wNum'/>
<arg index='5' type='@' declared_type='NSGraphicsContext*' name='context'/>
<arg index='6' type64='q' type='i' declared_type='NSInteger' name='eNum'/>
<arg index='7' type64='q' type='i' declared_type='NSInteger' name='cNum'/>
<arg index='8' type='f' declared_type='float' name='pressure'/>
<retval type='@' declared_type='NSEvent*'/>
</method>
<method selector='mouseLocation' class_method='true'>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:' class_method='true'>
<arg index='0' type64='Q' type='I' declared_type='NSEventType' name='type'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='location'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='flags'/>
<arg index='3' type='d' declared_type='NSTimeInterval' name='time'/>
<arg index='4' type64='q' type='i' declared_type='NSInteger' name='wNum'/>
<arg index='5' type='@' declared_type='NSGraphicsContext*' name='context'/>
<arg index='6' type='s' declared_type='short' name='subtype'/>
<arg index='7' type64='q' type='i' declared_type='NSInteger' name='d1'/>
<arg index='8' type64='q' type='i' declared_type='NSInteger' name='d2'/>
<retval type='@' declared_type='NSEvent*'/>
</method>
<method selector='phase'>
<retval type64='Q' type='I' declared_type='NSEventPhase'/>
</method>
<method selector='pointingDeviceID'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='pointingDeviceSerialNumber'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='pointingDeviceType'>
<retval type64='Q' type='I' declared_type='NSPointingDeviceType'/>
</method>
<method selector='pressedMouseButtons' class_method='true'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='pressure'>
<retval type='f' declared_type='float'/>
</method>
<method selector='removeMonitor:' class_method='true'>
<arg index='0' type='@' declared_type='id' name='eventMonitor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rotation'>
<retval type='f' declared_type='float'/>
</method>
<method selector='scrollingDeltaX'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='scrollingDeltaY'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='setMouseCoalescingEnabled:' class_method='true'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startPeriodicEventsAfterDelay:withPeriod:' class_method='true'>
<arg index='0' type='d' declared_type='NSTimeInterval' name='delay'/>
<arg index='1' type='d' declared_type='NSTimeInterval' name='period'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopPeriodicEvents' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='subtype'>
<retval type='s' declared_type='short'/>
</method>
<method selector='systemTabletID'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='tabletID'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='tangentialPressure'>
<retval type='f' declared_type='float'/>
</method>
<method selector='tilt'>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='timestamp'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='touchesMatchingPhase:inView:'>
<arg index='0' type64='Q' type='I' declared_type='NSTouchPhase' name='phase'/>
<arg index='1' type='@' declared_type='NSView*' name='view'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='trackSwipeEventWithOptions:dampenAmountThresholdMin:max:usingHandler:'>
<arg index='0' type64='Q' type='I' declared_type='NSEventSwipeTrackingOptions' name='options'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='minDampenThreshold'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='maxDampenThreshold'/>
<arg index='3' function_pointer='true' type='@?' declared_type='void (^)(CGFloat, NSEventPhase, BOOL, BOOL *)' name='trackingHandler'>
<arg type64='d' type='f' declared_type='CGFloat'/>
<arg type64='Q' type='I' declared_type='NSEventPhase'/>
<arg type='B' declared_type='BOOL'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='trackingArea'>
<retval type='@' declared_type='NSTrackingArea*'/>
</method>
<method selector='trackingNumber'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='type'>
<retval type64='Q' type='I' declared_type='NSEventType'/>
</method>
<method selector='uniqueID'>
<retval type='Q' declared_type='unsigned long long'/>
</method>
<method selector='userData'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='vendorDefined'>
<retval type='@' declared_type='id'/>
</method>
<method selector='vendorID'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='vendorPointingDeviceType'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='window'>
<retval type='@' declared_type='NSWindow*'/>
</method>
<method selector='windowNumber'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='NSFileWrapper'>
<method selector='icon'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='setIcon:'>
<arg index='0' type='@' declared_type='NSImage*' name='icon'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSFont'>
<method selector='advancementForGlyph:'>
<arg index='0' type='I' declared_type='NSGlyph' name='ag'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='afmDictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='ascender'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='boldSystemFontOfSize:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='fontSize'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='boundingRectForFont'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='boundingRectForGlyph:'>
<arg index='0' type='I' declared_type='NSGlyph' name='aGlyph'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='capHeight'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='controlContentFontOfSize:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='fontSize'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='coveredCharacterSet'>
<retval type='@' declared_type='NSCharacterSet*'/>
</method>
<method selector='defaultLineHeightForFont'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='descender'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='displayName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='encodingScheme'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='familyName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fontDescriptor'>
<retval type='@' declared_type='NSFontDescriptor*'/>
</method>
<method selector='fontName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fontWithDescriptor:size:' class_method='true'>
<arg index='0' type='@' declared_type='NSFontDescriptor*' name='fontDescriptor'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='fontSize'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='fontWithDescriptor:textTransform:' class_method='true'>
<arg index='0' type='@' declared_type='NSFontDescriptor*' name='fontDescriptor'/>
<arg index='1' type='@' declared_type='NSAffineTransform*' name='textTransform'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='fontWithName:matrix:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='fontName'/>
<arg index='1' type64='^d' type='^f' const='true' declared_type='CGFloat*' name='fontMatrix'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='fontWithName:size:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='fontName'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='fontSize'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='getAdvancements:forGlyphs:count:'>
<arg index='0' type64='^{CGSize=dd}' type='^{_NSSize=ff}' declared_type='NSSizeArray' name='advancements'/>
<arg index='1' type='^I' const='true' declared_type='NSGlyph*' name='glyphs'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='glyphCount'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getAdvancements:forPackedGlyphs:length:'>
<arg index='0' type64='^{CGSize=dd}' type='^{_NSSize=ff}' declared_type='NSSizeArray' name='advancements'/>
<arg index='1' type='^v' const='true' declared_type='void*' name='packedGlyphs'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='length'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getBoundingRects:forGlyphs:count:'>
<arg index='0' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRectArray' name='bounds'/>
<arg index='1' type='^I' const='true' declared_type='NSGlyph*' name='glyphs'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='glyphCount'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='glyphIsEncoded:'>
<arg index='0' type='I' declared_type='NSGlyph' name='aGlyph'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='glyphPacking'>
<retval type='I' declared_type='NSMultibyteGlyphPacking'/>
</method>
<method selector='glyphWithName:'>
<arg index='0' type='@' declared_type='NSString*' name='aName'/>
<retval type='I' declared_type='NSGlyph'/>
</method>
<method selector='isBaseFont'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFixedPitch'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isVertical'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='italicAngle'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='labelFontOfSize:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='fontSize'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='labelFontSize' class_method='true'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='leading'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='matrix'>
<retval type64='^d' type='^f' const='true' declared_type='CGFloat*'/>
</method>
<method selector='maximumAdvancement'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='menuBarFontOfSize:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='fontSize'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='menuFontOfSize:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='fontSize'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='messageFontOfSize:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='fontSize'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='mostCompatibleStringEncoding'>
<retval type64='Q' type='I' declared_type='NSStringEncoding'/>
</method>
<method selector='numberOfGlyphs'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='paletteFontOfSize:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='fontSize'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='pointSize'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='positionOfGlyph:forCharacter:struckOverRect:'>
<arg index='0' type='I' declared_type='NSGlyph' name='aGlyph'/>
<arg index='1' type='S' declared_type='unichar' name='aChar'/>
<arg index='2' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='positionOfGlyph:precededByGlyph:isNominal:'>
<arg index='0' type='I' declared_type='NSGlyph' name='curGlyph'/>
<arg index='1' type='I' declared_type='NSGlyph' name='prevGlyph'/>
<arg index='2' type='^B' declared_type='BOOL*' name='nominal'/>
<retval type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='positionOfGlyph:struckOverGlyph:metricsExist:'>
<arg index='0' type='I' declared_type='NSGlyph' name='curGlyph'/>
<arg index='1' type='I' declared_type='NSGlyph' name='prevGlyph'/>
<arg index='2' type='^B' declared_type='BOOL*' name='exist'/>
<retval type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='positionOfGlyph:struckOverRect:metricsExist:'>
<arg index='0' type='I' declared_type='NSGlyph' name='aGlyph'/>
<arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg index='2' type='^B' declared_type='BOOL*' name='exist'/>
<retval type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='positionOfGlyph:withRelation:toBaseGlyph:totalAdvancement:metricsExist:'>
<arg index='0' type='I' declared_type='NSGlyph' name='thisGlyph'/>
<arg index='1' type='I' declared_type='NSGlyphRelation' name='rel'/>
<arg index='2' type='I' declared_type='NSGlyph' name='baseGlyph'/>
<arg index='3' type='^{_NSSize=ff}' declared_type='NSSizePointer' name='adv'/>
<arg index='4' type='^B' declared_type='BOOL*' name='exist'/>
<retval type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='positionsForCompositeSequence:numberOfGlyphs:pointArray:'>
<arg index='0' type='^I' declared_type='NSGlyph*' name='someGlyphs'/>
<arg index='1' type='i' declared_type='NSInteger' name='numGlyphs'/>
<arg index='2' type='^{_NSPoint=ff}' declared_type='NSPointArray' name='points'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='preferredFontNames' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='printerFont'>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='renderingMode'>
<retval type64='Q' type='I' declared_type='NSFontRenderingMode'/>
</method>
<method selector='screenFont'>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='screenFontWithRenderingMode:'>
<arg index='0' type64='Q' type='I' declared_type='NSFontRenderingMode' name='renderingMode'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='set'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInContext:'>
<arg index='0' type='@' declared_type='NSGraphicsContext*' name='graphicsContext'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreferredFontNames:' class_method='true'>
<arg index='0' type='@' declared_type='NSArray*' name='fontNameArray'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserFixedPitchFont:' class_method='true'>
<arg index='0' type='@' declared_type='NSFont*' name='aFont'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserFont:' class_method='true'>
<arg index='0' type='@' declared_type='NSFont*' name='aFont'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='smallSystemFontSize' class_method='true'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='systemFontOfSize:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='fontSize'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='systemFontSize' class_method='true'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='systemFontSizeForControlSize:' class_method='true'>
<arg index='0' type64='Q' type='I' declared_type='NSControlSize' name='controlSize'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='textTransform'>
<retval type='@' declared_type='NSAffineTransform*'/>
</method>
<method selector='titleBarFontOfSize:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='fontSize'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='toolTipsFontOfSize:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='fontSize'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='underlinePosition'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='underlineThickness'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='useFont:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='fontName'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='userFixedPitchFontOfSize:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='fontSize'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='userFontOfSize:' class_method='true'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='fontSize'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='verticalFont'>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='widthOfString:'>
<arg index='0' type='@' declared_type='NSString*' name='string'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='xHeight'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='NSFontCollection'>
<method selector='allFontCollectionNames' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='exclusionDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='fontCollectionWithAllAvailableDescriptors' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='fontCollectionWithDescriptors:' class_method='true'>
<arg index='0' type='@' declared_type='NSArray*' name='queryDescriptors'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='fontCollectionWithLocale:' class_method='true'>
<arg index='0' type='@' declared_type='NSLocale*' name='locale'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='fontCollectionWithName:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='fontCollectionWithName:visibility:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<arg index='1' type64='Q' type='I' declared_type='NSFontCollectionVisibility' name='visibility'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='hideFontCollectionWithName:visibility:error:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<arg index='1' type64='Q' type='I' declared_type='NSFontCollectionVisibility' name='visibility'/>
<arg index='2' type='^@' declared_type='NSError**' name='error'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='matchingDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='matchingDescriptorsForFamily:'>
<arg index='0' type='@' declared_type='NSString*' name='family'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='matchingDescriptorsForFamily:options:'>
<arg index='0' type='@' declared_type='NSString*' name='family'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='options'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='matchingDescriptorsWithOptions:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='options'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='queryDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='renameFontCollectionWithName:visibility:toName:error:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<arg index='1' type64='Q' type='I' declared_type='NSFontCollectionVisibility' name='visibility'/>
<arg index='2' type='@' declared_type='NSString*' name='name'/>
<arg index='3' type='^@' declared_type='NSError**' name='error'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showFontCollection:withName:visibility:error:' class_method='true'>
<arg index='0' type='@' declared_type='NSFontCollection*' name='collection'/>
<arg index='1' type='@' declared_type='NSString*' name='name'/>
<arg index='2' type64='Q' type='I' declared_type='NSFontCollectionVisibility' name='visibility'/>
<arg index='3' type='^@' declared_type='NSError**' name='error'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSFontDescriptor'>
<method selector='fontAttributes'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='fontDescriptorByAddingAttributes:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='attributes'/>
<retval type='@' declared_type='NSFontDescriptor*'/>
</method>
<method selector='fontDescriptorWithFace:'>
<arg index='0' type='@' declared_type='NSString*' name='newFace'/>
<retval type='@' declared_type='NSFontDescriptor*'/>
</method>
<method selector='fontDescriptorWithFamily:'>
<arg index='0' type='@' declared_type='NSString*' name='newFamily'/>
<retval type='@' declared_type='NSFontDescriptor*'/>
</method>
<method selector='fontDescriptorWithFontAttributes:' class_method='true'>
<arg index='0' type='@' declared_type='NSDictionary*' name='attributes'/>
<retval type='@' declared_type='NSFontDescriptor*'/>
</method>
<method selector='fontDescriptorWithMatrix:'>
<arg index='0' type='@' declared_type='NSAffineTransform*' name='matrix'/>
<retval type='@' declared_type='NSFontDescriptor*'/>
</method>
<method selector='fontDescriptorWithName:matrix:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='fontName'/>
<arg index='1' type='@' declared_type='NSAffineTransform*' name='matrix'/>
<retval type='@' declared_type='NSFontDescriptor*'/>
</method>
<method selector='fontDescriptorWithName:size:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='fontName'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='size'/>
<retval type='@' declared_type='NSFontDescriptor*'/>
</method>
<method selector='fontDescriptorWithSize:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='newPointSize'/>
<retval type='@' declared_type='NSFontDescriptor*'/>
</method>
<method selector='fontDescriptorWithSymbolicTraits:'>
<arg index='0' type='I' declared_type='NSFontSymbolicTraits' name='symbolicTraits'/>
<retval type='@' declared_type='NSFontDescriptor*'/>
</method>
<method selector='initWithFontAttributes:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='attributes'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='matchingFontDescriptorWithMandatoryKeys:'>
<arg index='0' type='@' declared_type='NSSet*' name='mandatoryKeys'/>
<retval type='@' declared_type='NSFontDescriptor*'/>
</method>
<method selector='matchingFontDescriptorsWithMandatoryKeys:'>
<arg index='0' type='@' declared_type='NSSet*' name='mandatoryKeys'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='matrix'>
<retval type='@' declared_type='NSAffineTransform*'/>
</method>
<method selector='objectForKey:'>
<arg index='0' type='@' declared_type='NSString*' name='anAttribute'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='pointSize'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='postscriptName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='symbolicTraits'>
<retval type='I' declared_type='NSFontSymbolicTraits'/>
</method>
</class>
<class name='NSFontManager'>
<method selector='action'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='addCollection:options:'>
<arg index='0' type='@' declared_type='NSString*' name='collectionName'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='collectionOptions'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='addFontDescriptors:toCollection:'>
<arg index='0' type='@' declared_type='NSArray*' name='descriptors'/>
<arg index='1' type='@' declared_type='NSString*' name='collectionName'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addFontTrait:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='availableFontFamilies'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='availableFontNamesMatchingFontDescriptor:'>
<arg index='0' type='@' declared_type='NSFontDescriptor*' name='descriptor'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='availableFontNamesWithTraits:'>
<arg index='0' type64='Q' type='I' declared_type='NSFontTraitMask' name='someTraits'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='availableFonts'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='availableMembersOfFontFamily:'>
<arg index='0' type='@' declared_type='NSString*' name='fam'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='collectionNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='convertAttributes:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='attributes'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='convertFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='fontObj'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='convertFont:toFace:'>
<arg index='0' type='@' declared_type='NSFont*' name='fontObj'/>
<arg index='1' type='@' declared_type='NSString*' name='typeface'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='convertFont:toFamily:'>
<arg index='0' type='@' declared_type='NSFont*' name='fontObj'/>
<arg index='1' type='@' declared_type='NSString*' name='family'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='convertFont:toHaveTrait:'>
<arg index='0' type='@' declared_type='NSFont*' name='fontObj'/>
<arg index='1' type64='Q' type='I' declared_type='NSFontTraitMask' name='trait'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='convertFont:toNotHaveTrait:'>
<arg index='0' type='@' declared_type='NSFont*' name='fontObj'/>
<arg index='1' type64='Q' type='I' declared_type='NSFontTraitMask' name='trait'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='convertFont:toSize:'>
<arg index='0' type='@' declared_type='NSFont*' name='fontObj'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='size'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='convertFontTraits:'>
<arg index='0' type64='Q' type='I' declared_type='NSFontTraitMask' name='traits'/>
<retval type64='Q' type='I' declared_type='NSFontTraitMask'/>
</method>
<method selector='convertWeight:ofFont:'>
<arg index='0' type='B' declared_type='BOOL' name='upFlag'/>
<arg index='1' type='@' declared_type='NSFont*' name='fontObj'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='currentFontAction'>
<retval type64='Q' type='I' declared_type='NSFontAction'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='fontDescriptorsInCollection:'>
<arg index='0' type='@' declared_type='NSString*' name='collectionNames'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='fontMenu:'>
<arg index='0' type='B' declared_type='BOOL' name='create'/>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='fontNamed:hasTraits:'>
<arg index='0' type='@' declared_type='NSString*' name='fName'/>
<arg index='1' type64='Q' type='I' declared_type='NSFontTraitMask' name='someTraits'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fontPanel:'>
<arg index='0' type='B' declared_type='BOOL' name='create'/>
<retval type='@' declared_type='NSFontPanel*'/>
</method>
<method selector='fontWithFamily:traits:weight:size:'>
<arg index='0' type='@' declared_type='NSString*' name='family'/>
<arg index='1' type64='Q' type='I' declared_type='NSFontTraitMask' name='traits'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='weight'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='size'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='isEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMultiple'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='localizedNameForFamily:face:'>
<arg index='0' type='@' declared_type='NSString*' name='family'/>
<arg index='1' type='@' declared_type='NSString*' name='faceKey'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='modifyFont:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='modifyFontViaPanel:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='orderFrontFontPanel:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='orderFrontStylesPanel:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeCollection:'>
<arg index='0' type='@' declared_type='NSString*' name='collectionName'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeFontDescriptor:fromCollection:'>
<arg index='0' type='@' declared_type='NSFontDescriptor*' name='descriptor'/>
<arg index='1' type='@' declared_type='NSString*' name='collection'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeFontTrait:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectedFont'>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='sendAction'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAction:'>
<arg index='0' type=':' declared_type='SEL' name='aSelector'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnabled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontManagerFactory:' class_method='true'>
<arg index='0' type='#' declared_type='Class' name='factoryId'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontMenu:'>
<arg index='0' type='@' declared_type='NSMenu*' name='newMenu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontPanelFactory:' class_method='true'>
<arg index='0' type='#' declared_type='Class' name='factoryId'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedAttributes:isMultiple:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='attributes'/>
<arg index='1' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedFont:isMultiple:'>
<arg index='0' type='@' declared_type='NSFont*' name='fontObj'/>
<arg index='1' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTarget:'>
<arg index='0' type='@' declared_type='id' name='aTarget'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedFontManager' class_method='true'>
<retval type='@' declared_type='NSFontManager*'/>
</method>
<method selector='target'>
<retval type='@' declared_type='id'/>
</method>
<method selector='traitsOfFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='fontObj'/>
<retval type64='Q' type='I' declared_type='NSFontTraitMask'/>
</method>
<method selector='weightOfFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='fontObj'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='NSFontPanel'>
<method selector='accessoryView'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='isEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='panelConvertFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='fontObj'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='reloadDefaultFontFamilies'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAccessoryView:'>
<arg index='0' type='@' declared_type='NSView*' name='aView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnabled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPanelFont:isMultiple:'>
<arg index='0' type='@' declared_type='NSFont*' name='fontObj'/>
<arg index='1' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedFontPanel' class_method='true'>
<retval type='@' declared_type='NSFontPanel*'/>
</method>
<method selector='sharedFontPanelExists' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='worksWhenModal'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSForm'>
<method selector='addEntry:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<retval type='@' declared_type='NSFormCell*'/>
</method>
<method selector='cellAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='drawCellAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='indexOfCellWithTag:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='aTag'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='indexOfSelectedItem'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='insertEntry:atIndex:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='@' declared_type='NSFormCell*'/>
</method>
<method selector='preferredTextFieldWidth'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='removeEntryAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectTextAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBezeled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBordered:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEntryWidth:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='width'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFrameSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='newSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInterlineSpacing:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='spacing'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreferredTextFieldWidth:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='preferredWidth'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAlignment:'>
<arg index='0' type64='Q' type='I' declared_type='NSTextAlignment' name='mode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextBaseWritingDirection:'>
<arg index='0' type64='q' type='i' declared_type='NSWritingDirection' name='writingDirection'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='fontObj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleAlignment:'>
<arg index='0' type64='Q' type='I' declared_type='NSTextAlignment' name='mode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleBaseWritingDirection:'>
<arg index='0' type64='q' type='i' declared_type='NSWritingDirection' name='writingDirection'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='fontObj'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSFormCell'>
<method selector='attributedTitle'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='initTextCell:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isOpaque'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='placeholderAttributedString'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='placeholderString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='preferredTextFieldWidth'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='setAttributedTitle:'>
<arg index='0' type='@' declared_type='NSAttributedString*' name='obj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlaceholderAttributedString:'>
<arg index='0' type='@' declared_type='NSAttributedString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlaceholderString:'>
<arg index='0' type='@' declared_type='NSString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreferredTextFieldWidth:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='preferredWidth'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleAlignment:'>
<arg index='0' type64='Q' type='I' declared_type='NSTextAlignment' name='mode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleBaseWritingDirection:'>
<arg index='0' type64='q' type='i' declared_type='NSWritingDirection' name='writingDirection'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='fontObj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleWidth:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='width'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleWithMnemonic:'>
<arg index='0' type='@' declared_type='NSString*' name='stringWithAmpersand'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='titleAlignment'>
<retval type64='Q' type='I' declared_type='NSTextAlignment'/>
</method>
<method selector='titleBaseWritingDirection'>
<retval type64='q' type='i' declared_type='NSWritingDirection'/>
</method>
<method selector='titleFont'>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='titleWidth'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='titleWidth:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='aSize'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='NSGlyphGenerator'>
<method selector='generateGlyphsForGlyphStorage:desiredNumberOfCharacters:glyphIndex:characterIndex:'>
<arg index='0' type='@' declared_type='id' name='glyphStorage'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='nChars'/>
<arg index='2' type64='^Q' type='^I' declared_type='NSUInteger*' name='glyphIndex'/>
<arg index='3' type64='^Q' type='^I' declared_type='NSUInteger*' name='charIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedGlyphGenerator' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSGlyphInfo'>
<method selector='characterCollection'>
<retval type64='Q' type='I' declared_type='NSCharacterCollection'/>
</method>
<method selector='characterIdentifier'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='glyphInfoWithCharacterIdentifier:collection:baseString:' class_method='true'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='cid'/>
<arg index='1' type64='Q' type='I' declared_type='NSCharacterCollection' name='characterCollection'/>
<arg index='2' type='@' declared_type='NSString*' name='theString'/>
<retval type='@' declared_type='NSGlyphInfo*'/>
</method>
<method selector='glyphInfoWithGlyph:forFont:baseString:' class_method='true'>
<arg index='0' type='I' declared_type='NSGlyph' name='glyph'/>
<arg index='1' type='@' declared_type='NSFont*' name='font'/>
<arg index='2' type='@' declared_type='NSString*' name='theString'/>
<retval type='@' declared_type='NSGlyphInfo*'/>
</method>
<method selector='glyphInfoWithGlyphName:forFont:baseString:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='glyphName'/>
<arg index='1' type='@' declared_type='NSFont*' name='font'/>
<arg index='2' type='@' declared_type='NSString*' name='theString'/>
<retval type='@' declared_type='NSGlyphInfo*'/>
</method>
<method selector='glyphName'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSGradient'>
<method selector='colorSpace'>
<retval type='@' declared_type='NSColorSpace*'/>
</method>
<method selector='drawFromCenter:radius:toCenter:radius:options:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='startCenter'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='startRadius'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='endCenter'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='endRadius'/>
<arg index='4' type64='Q' type='I' declared_type='NSGradientDrawingOptions' name='options'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawFromPoint:toPoint:options:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='startingPoint'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='endingPoint'/>
<arg index='2' type64='Q' type='I' declared_type='NSGradientDrawingOptions' name='options'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawInBezierPath:angle:'>
<arg index='0' type='@' declared_type='NSBezierPath*' name='path'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='angle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawInBezierPath:relativeCenterPosition:'>
<arg index='0' type='@' declared_type='NSBezierPath*' name='path'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='relativeCenterPosition'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawInRect:angle:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='angle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawInRect:relativeCenterPosition:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='relativeCenterPosition'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getColor:location:atIndex:'>
<arg index='0' type='^@' declared_type='NSColor**' name='color'/>
<arg index='1' type64='^d' type='^f' declared_type='CGFloat*' name='location'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithColors:'>
<arg index='0' type='@' declared_type='NSArray*' name='colorArray'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithColors:atLocations:colorSpace:'>
<arg index='0' type='@' declared_type='NSArray*' name='colorArray'/>
<arg index='1' type64='^d' type='^f' const='true' declared_type='CGFloat*' name='locations'/>
<arg index='2' type='@' declared_type='NSColorSpace*' name='colorSpace'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithColorsAndLocations:' sentinel='0' variadic='true'>
<arg index='0' type='@' declared_type='NSColor*' name='firstColor'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithStartingColor:endingColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='startingColor'/>
<arg index='1' type='@' declared_type='NSColor*' name='endingColor'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='interpolatedColorAtLocation:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='location'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='numberOfColorStops'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='NSGraphicsContext'>
<method selector='CIContext'>
<retval type='@' declared_type='CIContext*'/>
</method>
<method selector='attributes'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='colorRenderingIntent'>
<retval type64='q' type='i' declared_type='NSColorRenderingIntent'/>
</method>
<method selector='compositingOperation'>
<retval type64='Q' type='I' declared_type='NSCompositingOperation'/>
</method>
<method selector='currentContext' class_method='true'>
<retval type='@' declared_type='NSGraphicsContext*'/>
</method>
<method selector='currentContextDrawingToScreen' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='flushGraphics'>
<retval type='v' declared_type='void'/>
</method>
<method selector='graphicsContextWithAttributes:' class_method='true'>
<arg index='0' type='@' declared_type='NSDictionary*' name='attributes'/>
<retval type='@' declared_type='NSGraphicsContext*'/>
</method>
<method selector='graphicsContextWithBitmapImageRep:' class_method='true'>
<arg index='0' type='@' declared_type='NSBitmapImageRep*' name='bitmapRep'/>
<retval type='@' declared_type='NSGraphicsContext*'/>
</method>
<method selector='graphicsContextWithGraphicsPort:flipped:' class_method='true'>
<arg index='0' type='^v' declared_type='void*' name='graphicsPort'/>
<arg index='1' type='B' declared_type='BOOL' name='initialFlippedState'/>
<retval type='@' declared_type='NSGraphicsContext*'/>
</method>
<method selector='graphicsContextWithWindow:' class_method='true'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<retval type='@' declared_type='NSGraphicsContext*'/>
</method>
<method selector='graphicsPort'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='imageInterpolation'>
<retval type64='Q' type='I' declared_type='NSImageInterpolation'/>
</method>
<method selector='isDrawingToScreen'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFlipped'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='patternPhase'>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='restoreGraphicsState' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='restoreGraphicsState'>
<retval type='v' declared_type='void'/>
</method>
<method selector='saveGraphicsState' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='saveGraphicsState'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColorRenderingIntent:'>
<arg index='0' type64='q' type='i' declared_type='NSColorRenderingIntent' name='renderingIntent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCompositingOperation:'>
<arg index='0' type64='Q' type='I' declared_type='NSCompositingOperation' name='operation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCurrentContext:' class_method='true'>
<arg index='0' type='@' declared_type='NSGraphicsContext*' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGraphicsState:' class_method='true'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='gState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageInterpolation:'>
<arg index='0' type64='Q' type='I' declared_type='NSImageInterpolation' name='interpolation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPatternPhase:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='phase'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldAntialias:'>
<arg index='0' type='B' declared_type='BOOL' name='antialias'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldAntialias'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSHelpManager'>
<method selector='contextHelpForObject:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='findString:inBook:'>
<arg index='0' type='@' declared_type='NSString*' name='query'/>
<arg index='1' type='@' declared_type='NSString*' name='book'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isContextHelpModeActive' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='openHelpAnchor:inBook:'>
<arg index='0' type='@' declared_type='NSString*' name='anchor'/>
<arg index='1' type='@' declared_type='NSString*' name='book'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='registerBooksInBundle:'>
<arg index='0' type='@' declared_type='NSBundle*' name='bundle'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeContextHelpForObject:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContextHelp:forObject:'>
<arg index='0' type='@' declared_type='NSAttributedString*' name='attrString'/>
<arg index='1' type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContextHelpModeActive:' class_method='true'>
<arg index='0' type='B' declared_type='BOOL' name='active'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedHelpManager' class_method='true'>
<retval type='@' declared_type='NSHelpManager*'/>
</method>
<method selector='showContextHelpForObject:locationHint:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='pt'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSImage'>
<method selector='CGImageForProposedRect:context:hints:'>
<arg index='0' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect*' name='proposedDestRect'/>
<arg index='1' type='@' declared_type='NSGraphicsContext*' name='referenceContext'/>
<arg index='2' type='@' declared_type='NSDictionary*' name='hints'/>
<retval type='^{CGImage=}' declared_type='CGImageRef'/>
</method>
<method selector='TIFFRepresentation'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='TIFFRepresentationUsingCompression:factor:'>
<arg index='0' type64='Q' type='I' declared_type='NSTIFFCompression' name='comp'/>
<arg index='1' type='f' declared_type='float' name='aFloat'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='accessibilityDescription'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='addRepresentation:'>
<arg index='0' type='@' declared_type='NSImageRep*' name='imageRep'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addRepresentations:'>
<arg index='0' type='@' declared_type='NSArray*' name='imageReps'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignmentRect'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='backgroundColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='bestRepresentationForDevice:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='deviceDescription'/>
<retval type='@' declared_type='NSImageRep*'/>
</method>
<method selector='bestRepresentationForRect:context:hints:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='1' type='@' declared_type='NSGraphicsContext*' name='referenceContext'/>
<arg index='2' type='@' declared_type='NSDictionary*' name='hints'/>
<retval type='@' declared_type='NSImageRep*'/>
</method>
<method selector='cacheDepthMatchesImageDepth'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cacheMode'>
<retval type64='Q' type='I' declared_type='NSImageCacheMode'/>
</method>
<method selector='canInitWithPasteboard:' class_method='true'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cancelIncrementalLoad'>
<retval type='v' declared_type='void'/>
</method>
<method selector='compositeToPoint:fromRect:operation:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='2' type64='Q' type='I' declared_type='NSCompositingOperation' name='op'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='compositeToPoint:fromRect:operation:fraction:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='2' type64='Q' type='I' declared_type='NSCompositingOperation' name='op'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='delta'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='compositeToPoint:operation:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<arg index='1' type64='Q' type='I' declared_type='NSCompositingOperation' name='op'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='compositeToPoint:operation:fraction:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<arg index='1' type64='Q' type='I' declared_type='NSCompositingOperation' name='op'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='delta'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dissolveToPoint:fraction:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='aFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dissolveToPoint:fromRect:fraction:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='aFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawAtPoint:fromRect:operation:fraction:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='fromRect'/>
<arg index='2' type64='Q' type='I' declared_type='NSCompositingOperation' name='op'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='delta'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawInRect:fromRect:operation:fraction:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='fromRect'/>
<arg index='2' type64='Q' type='I' declared_type='NSCompositingOperation' name='op'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='delta'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawInRect:fromRect:operation:fraction:respectFlipped:hints:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='dstSpacePortionRect'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='srcSpacePortionRect'/>
<arg index='2' type64='Q' type='I' declared_type='NSCompositingOperation' name='op'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='requestedAlpha'/>
<arg index='4' type='B' declared_type='BOOL' name='respectContextIsFlipped'/>
<arg index='5' type='@' declared_type='NSDictionary*' name='hints'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawRepresentation:inRect:'>
<arg index='0' type='@' declared_type='NSImageRep*' name='imageRep'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hitTestRect:withImageDestinationRect:context:hints:flipped:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='testRectDestSpace'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='imageRectDestSpace'/>
<arg index='2' type='@' declared_type='NSGraphicsContext*' name='context'/>
<arg index='3' type='@' declared_type='NSDictionary*' name='hints'/>
<arg index='4' type='B' declared_type='BOOL' name='flipped'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='imageFileTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='imageNamed:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='imagePasteboardTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='imageTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='imageUnfilteredFileTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='imageUnfilteredPasteboardTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='imageUnfilteredTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='imageWithSize:flipped:drawingHandler:' class_method='true'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='size'/>
<arg index='1' type='B' declared_type='BOOL' name='drawingHandlerShouldBeCalledWithFlippedContext'/>
<arg index='2' function_pointer='true' type='@?' declared_type='BOOL (^)(NSRect)' name='drawingHandler'>
<arg type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
<retval type='B' declared_type='BOOL'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='initByReferencingFile:'>
<arg index='0' type='@' declared_type='NSString*' name='fileName'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initByReferencingURL:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCGImage:size:'>
<arg index='0' type='^{CGImage=}' declared_type='CGImageRef' name='cgImage'/>
<arg index='1' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='size'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfFile:'>
<arg index='0' type='@' declared_type='NSString*' name='fileName'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithDataIgnoringOrientation:'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithIconRef:'>
<arg index='0' type='^{OpaqueIconRef=}' declared_type='IconRef' name='iconRef'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPasteboard:'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='aSize'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isCachedSeparately'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isDataRetained'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFlipped'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isTemplate'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isValid'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='layerContentsForContentsScale:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='layerContentsScale'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lockFocus'>
<retval type='v' declared_type='void'/>
</method>
<method selector='lockFocusFlipped:'>
<arg index='0' type='B' declared_type='BOOL' name='flipped'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='lockFocusOnRepresentation:'>
<arg index='0' type='@' declared_type='NSImageRep*' name='imageRepresentation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='matchesOnMultipleResolution'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='matchesOnlyOnBestFittingAxis'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='prefersColorMatch'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='recache'>
<retval type='v' declared_type='void'/>
</method>
<method selector='recommendedLayerContentsScale:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='preferredContentsScale'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='removeRepresentation:'>
<arg index='0' type='@' declared_type='NSImageRep*' name='imageRep'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='representations'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='scalesWhenResized'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAccessibilityDescription:'>
<arg index='0' type='@' declared_type='NSString*' name='description'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlignmentRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='aColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCacheDepthMatchesImageDepth:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCacheMode:'>
<arg index='0' type64='Q' type='I' declared_type='NSImageCacheMode' name='mode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCachedSeparately:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDataRetained:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFlipped:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMatchesOnMultipleResolution:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMatchesOnlyOnBestFittingAxis:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setName:'>
<arg index='0' type='@' declared_type='NSString*' name='string'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setPrefersColorMatch:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScalesWhenResized:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='aSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTemplate:'>
<arg index='0' type='B' declared_type='BOOL' name='isTemplate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesEPSOnResolutionMismatch:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='size'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='unlockFocus'>
<retval type='v' declared_type='void'/>
</method>
<method selector='usesEPSOnResolutionMismatch'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSImageCell'>
<method selector='imageAlignment'>
<retval type64='Q' type='I' declared_type='NSImageAlignment'/>
</method>
<method selector='imageFrameStyle'>
<retval type64='Q' type='I' declared_type='NSImageFrameStyle'/>
</method>
<method selector='imageScaling'>
<retval type64='Q' type='I' declared_type='NSImageScaling'/>
</method>
<method selector='setImageAlignment:'>
<arg index='0' type64='Q' type='I' declared_type='NSImageAlignment' name='newAlign'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageFrameStyle:'>
<arg index='0' type64='Q' type='I' declared_type='NSImageFrameStyle' name='newStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageScaling:'>
<arg index='0' type64='Q' type='I' declared_type='NSImageScaling' name='newScaling'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSImageRep'>
<method selector='CGImageForProposedRect:context:hints:'>
<arg index='0' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect*' name='proposedDestRect'/>
<arg index='1' type='@' declared_type='NSGraphicsContext*' name='context'/>
<arg index='2' type='@' declared_type='NSDictionary*' name='hints'/>
<retval type='^{CGImage=}' declared_type='CGImageRef'/>
</method>
<method selector='bitsPerSample'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='canInitWithData:' class_method='true'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canInitWithPasteboard:' class_method='true'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='colorSpaceName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='draw'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='drawAtPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='drawInRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='drawInRect:fromRect:operation:fraction:respectFlipped:hints:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='dstSpacePortionRect'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='srcSpacePortionRect'/>
<arg index='2' type64='Q' type='I' declared_type='NSCompositingOperation' name='op'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='requestedAlpha'/>
<arg index='4' type='B' declared_type='BOOL' name='respectContextIsFlipped'/>
<arg index='5' type='@' declared_type='NSDictionary*' name='hints'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasAlpha'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='imageFileTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='imagePasteboardTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='imageRepClassForData:' class_method='true'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='imageRepClassForFileType:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='type'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='imageRepClassForPasteboardType:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='type'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='imageRepClassForType:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='type'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='imageRepWithContentsOfFile:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='filename'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='imageRepWithContentsOfURL:' class_method='true'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='imageRepWithPasteboard:' class_method='true'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='imageRepsWithContentsOfFile:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='filename'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='imageRepsWithContentsOfURL:' class_method='true'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='imageRepsWithPasteboard:' class_method='true'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='imageTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='imageUnfilteredFileTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='imageUnfilteredPasteboardTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='imageUnfilteredTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='isOpaque'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pixelsHigh'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='pixelsWide'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='registerImageRepClass:' class_method='true'>
<arg index='0' type='#' declared_type='Class' name='imageRepClass'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='registeredImageRepClasses' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setAlpha:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBitsPerSample:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='anInt'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColorSpaceName:'>
<arg index='0' type='@' declared_type='NSString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpaque:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPixelsHigh:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='anInt'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPixelsWide:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='anInt'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='aSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='size'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='unregisterImageRepClass:' class_method='true'>
<arg index='0' type='#' declared_type='Class' name='imageRepClass'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSImageView'>
<method selector='allowsCutCopyPaste'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='animates'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='image'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='imageAlignment'>
<retval type64='Q' type='I' declared_type='NSImageAlignment'/>
</method>
<method selector='imageFrameStyle'>
<retval type64='Q' type='I' declared_type='NSImageFrameStyle'/>
</method>
<method selector='imageScaling'>
<retval type64='Q' type='I' declared_type='NSImageScaling'/>
</method>
<method selector='isEditable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAllowsCutCopyPaste:'>
<arg index='0' type='B' declared_type='BOOL' name='allow'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAnimates:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEditable:'>
<arg index='0' type='B' declared_type='BOOL' name='yn'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImage:'>
<arg index='0' type='@' declared_type='NSImage*' name='newImage'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageAlignment:'>
<arg index='0' type64='Q' type='I' declared_type='NSImageAlignment' name='newAlign'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageFrameStyle:'>
<arg index='0' type64='Q' type='I' declared_type='NSImageFrameStyle' name='newStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageScaling:'>
<arg index='0' type64='Q' type='I' declared_type='NSImageScaling' name='newScaling'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSInputManager'>
<method selector='currentInputManager' class_method='true'>
<retval type='@' declared_type='NSInputManager*'/>
</method>
<method selector='cycleToNextInputLanguage:' class_method='true'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cycleToNextInputServerInLanguage:' class_method='true'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='handleMouseEvent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theMouseEvent'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='image'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='initWithName:host:'>
<arg index='0' type='@' declared_type='NSString*' name='inputServerName'/>
<arg index='1' type='@' declared_type='NSString*' name='hostName'/>
<retval type='@' declared_type='NSInputManager*'/>
</method>
<method selector='language'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='localizedInputManagerName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='markedTextAbandoned:'>
<arg index='0' type='@' declared_type='id' name='cli'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='markedTextSelectionChanged:client:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='newSel'/>
<arg index='1' type='@' declared_type='id' name='cli'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='server'>
<retval type='@' declared_type='NSInputServer*'/>
</method>
<method selector='wantsToDelayTextChangeNotifications'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='wantsToHandleMouseEvents'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='wantsToInterpretAllKeystrokes'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSInputServer'>
<method selector='initWithDelegate:name:'>
<arg index='0' type='@' declared_type='id' name='aDelegate'/>
<arg index='1' type='@' declared_type='NSString*' name='name'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSLayoutConstraint'>
<method selector='constant'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:' class_method='true'>
<arg index='0' type='@' declared_type='id' name='view1'/>
<arg index='1' type64='q' type='i' declared_type='NSLayoutAttribute' name='attr1'/>
<arg index='2' type64='q' type='i' declared_type='NSLayoutRelation' name='relation'/>
<arg index='3' type='@' declared_type='id' name='view2'/>
<arg index='4' type64='q' type='i' declared_type='NSLayoutAttribute' name='attr2'/>
<arg index='5' type64='d' type='f' declared_type='CGFloat' name='multiplier'/>
<arg index='6' type64='d' type='f' declared_type='CGFloat' name='c'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='constraintsWithVisualFormat:options:metrics:views:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='format'/>
<arg index='1' type64='Q' type='I' declared_type='NSLayoutFormatOptions' name='opts'/>
<arg index='2' type='@' declared_type='NSDictionary*' name='metrics'/>
<arg index='3' type='@' declared_type='NSDictionary*' name='views'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='firstAttribute'>
<retval type64='q' type='i' declared_type='NSLayoutAttribute'/>
</method>
<method selector='firstItem'>
<retval type='@' declared_type='id'/>
</method>
<method selector='multiplier'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='priority'>
<retval type='f' declared_type='NSLayoutPriority'/>
</method>
<method selector='relation'>
<retval type64='q' type='i' declared_type='NSLayoutRelation'/>
</method>
<method selector='secondAttribute'>
<retval type64='q' type='i' declared_type='NSLayoutAttribute'/>
</method>
<method selector='secondItem'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setConstant:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='constant'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPriority:'>
<arg index='0' type='f' declared_type='NSLayoutPriority' name='priority'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldBeArchived:'>
<arg index='0' type='B' declared_type='BOOL' name='shouldBeArchived'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldBeArchived'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSLayoutManager'>
<method selector='addTemporaryAttribute:value:forCharacterRange:'>
<arg index='0' type='@' declared_type='NSString*' name='attrName'/>
<arg index='1' type='@' declared_type='id' name='value'/>
<arg index='2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addTemporaryAttributes:forCharacterRange:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='attrs'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addTextContainer:'>
<arg index='0' type='@' declared_type='NSTextContainer*' name='container'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allowsNonContiguousLayout'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='attachmentSizeForGlyphAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='attributedString'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='backgroundLayoutEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='boundingRectForGlyphRange:inTextContainer:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<arg index='1' type='@' declared_type='NSTextContainer*' name='container'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='boundsRectForTextBlock:atIndex:effectiveRange:'>
<arg index='0' type='@' declared_type='NSTextBlock*' name='block'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='2' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='effectiveGlyphRange'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='boundsRectForTextBlock:glyphRange:'>
<arg index='0' type='@' declared_type='NSTextBlock*' name='block'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='characterIndexForGlyphAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<arg index='1' type='@' declared_type='NSTextContainer*' name='container'/>
<arg index='2' type64='^d' type='^f' declared_type='CGFloat*' name='partialFraction'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='characterRangeForGlyphRange:actualGlyphRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='actualGlyphRange'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='defaultAttachmentScaling'>
<retval type64='Q' type='I' declared_type='NSImageScaling'/>
</method>
<method selector='defaultBaselineOffsetForFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='theFont'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='defaultLineHeightForFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='theFont'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='deleteGlyphsInRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawBackgroundForGlyphRange:atPoint:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphsToShow'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='origin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawGlyphsForGlyphRange:atPoint:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphsToShow'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='origin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='strikethroughVal'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='baselineOffset'/>
<arg index='3' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='lineRect'/>
<arg index='4' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='lineGlyphRange'/>
<arg index='5' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='containerOrigin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='underlineVal'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='baselineOffset'/>
<arg index='3' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='lineRect'/>
<arg index='4' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='lineGlyphRange'/>
<arg index='5' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='containerOrigin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawsOutsideLineFragmentForGlyphAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ensureGlyphsForCharacterRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ensureGlyphsForGlyphRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ensureLayoutForBoundingRect:inTextContainer:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='bounds'/>
<arg index='1' type='@' declared_type='NSTextContainer*' name='container'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ensureLayoutForCharacterRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ensureLayoutForGlyphRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ensureLayoutForTextContainer:'>
<arg index='0' type='@' declared_type='NSTextContainer*' name='container'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='extraLineFragmentRect'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='extraLineFragmentTextContainer'>
<retval type='@' declared_type='NSTextContainer*'/>
</method>
<method selector='extraLineFragmentUsedRect'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='fillBackgroundRectArray:count:forCharacterRange:color:'>
<arg index='0' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRectArray' name='rectArray'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='rectCount'/>
<arg index='2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<arg index='3' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='firstTextView'>
<retval type='@' declared_type='NSTextView*'/>
</method>
<method selector='firstUnlaidCharacterIndex'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='firstUnlaidGlyphIndex'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='fractionOfDistanceThroughGlyphForPoint:inTextContainer:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<arg index='1' type='@' declared_type='NSTextContainer*' name='container'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='getFirstUnlaidCharacterIndex:glyphIndex:'>
<arg index='0' type64='^Q' type='^I' declared_type='NSUInteger*' name='charIndex'/>
<arg index='1' type64='^Q' type='^I' declared_type='NSUInteger*' name='glyphIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getGlyphs:range:'>
<arg index='0' type='^I' declared_type='NSGlyph*' name='glyphArray'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<arg index='1' type='^I' declared_type='NSGlyph*' name='glyphBuffer'/>
<arg index='2' type64='^Q' type='^I' declared_type='NSUInteger*' name='charIndexBuffer'/>
<arg index='3' type64='^Q' type='^I' declared_type='NSGlyphInscription*' name='inscribeBuffer'/>
<arg index='4' type='^B' declared_type='BOOL*' name='elasticBuffer'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<arg index='1' type='^I' declared_type='NSGlyph*' name='glyphBuffer'/>
<arg index='2' type64='^Q' type='^I' declared_type='NSUInteger*' name='charIndexBuffer'/>
<arg index='3' type64='^Q' type='^I' declared_type='NSGlyphInscription*' name='inscribeBuffer'/>
<arg index='4' type='^B' declared_type='BOOL*' name='elasticBuffer'/>
<arg index='5' type='*' declared_type='unsigned char*' name='bidiLevelBuffer'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<arg index='1' type='B' declared_type='BOOL' name='aFlag'/>
<arg index='2' type='B' declared_type='BOOL' name='dFlag'/>
<arg index='3' type64='^d' type='^f' declared_type='CGFloat*' name='positions'/>
<arg index='4' type64='^Q' type='^I' declared_type='NSUInteger*' name='charIndexes'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='glyphAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<retval type='I' declared_type='NSGlyph'/>
</method>
<method selector='glyphAtIndex:isValidIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='1' type='^B' declared_type='BOOL*' name='isValidIndex'/>
<retval type='I' declared_type='NSGlyph'/>
</method>
<method selector='glyphGenerator'>
<retval type='@' declared_type='NSGlyphGenerator*'/>
</method>
<method selector='glyphIndexForCharacterAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='glyphIndexForPoint:inTextContainer:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<arg index='1' type='@' declared_type='NSTextContainer*' name='container'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<arg index='1' type='@' declared_type='NSTextContainer*' name='container'/>
<arg index='2' type64='^d' type='^f' declared_type='CGFloat*' name='partialFraction'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='glyphRangeForBoundingRect:inTextContainer:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='bounds'/>
<arg index='1' type='@' declared_type='NSTextContainer*' name='container'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='bounds'/>
<arg index='1' type='@' declared_type='NSTextContainer*' name='container'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='glyphRangeForCharacterRange:actualCharacterRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='actualCharRange'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='glyphRangeForTextContainer:'>
<arg index='0' type='@' declared_type='NSTextContainer*' name='container'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='hasNonContiguousLayout'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hyphenationFactor'>
<retval type='f' declared_type='float'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertGlyph:atGlyphIndex:characterIndex:'>
<arg index='0' type='I' declared_type='NSGlyph' name='glyph'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:'>
<arg index='0' type='^I' const='true' declared_type='NSGlyph*' name='glyphs'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='length'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='3' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertTextContainer:atIndex:'>
<arg index='0' type='@' declared_type='NSTextContainer*' name='container'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='intAttribute:forGlyphAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='attributeTag'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='invalidateDisplayForCharacterRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='invalidateDisplayForGlyphRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='delta'/>
<arg index='2' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='actualCharRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='invalidateGlyphsOnLayoutInvalidationForGlyphRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='invalidateLayoutForCharacterRange:actualCharacterRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='actualCharRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='invalidateLayoutForCharacterRange:isSoft:actualCharacterRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<arg index='1' type='B' declared_type='BOOL' name='flag'/>
<arg index='2' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='actualCharRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isValidGlyphIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='layoutManagerOwnsFirstResponderInWindow:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='layoutOptions'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='layoutRectForTextBlock:atIndex:effectiveRange:'>
<arg index='0' type='@' declared_type='NSTextBlock*' name='block'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='2' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='effectiveGlyphRange'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='layoutRectForTextBlock:glyphRange:'>
<arg index='0' type='@' declared_type='NSTextBlock*' name='block'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='lineFragmentRectForGlyphAtIndex:effectiveRange:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='effectiveGlyphRange'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='effectiveGlyphRange'/>
<arg index='2' type='B' declared_type='BOOL' name='flag'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='lineFragmentUsedRectForGlyphAtIndex:effectiveRange:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='effectiveGlyphRange'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='effectiveGlyphRange'/>
<arg index='2' type='B' declared_type='BOOL' name='flag'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='locationForGlyphAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='notShownAttributeForGlyphAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='numberOfGlyphs'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='rangeOfNominallySpacedGlyphsContainingIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rectArrayForCharacterRange:withinSelectedCharacterRange:inTextContainer:rectCount:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='selCharRange'/>
<arg index='2' type='@' declared_type='NSTextContainer*' name='container'/>
<arg index='3' type64='^Q' type='^I' declared_type='NSUInteger*' name='rectCount'/>
<retval type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRectArray'/>
</method>
<method selector='rectArrayForGlyphRange:withinSelectedGlyphRange:inTextContainer:rectCount:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='selGlyphRange'/>
<arg index='2' type='@' declared_type='NSTextContainer*' name='container'/>
<arg index='3' type64='^Q' type='^I' declared_type='NSUInteger*' name='rectCount'/>
<retval type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRectArray'/>
</method>
<method selector='removeTemporaryAttribute:forCharacterRange:'>
<arg index='0' type='@' declared_type='NSString*' name='attrName'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeTextContainerAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceGlyphAtIndex:withGlyph:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='1' type='I' declared_type='NSGlyph' name='newGlyph'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceTextStorage:'>
<arg index='0' type='@' declared_type='NSTextStorage*' name='newTextStorage'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rulerAccessoryViewForTextView:paragraphStyle:ruler:enabled:'>
<arg index='0' type='@' declared_type='NSTextView*' name='view'/>
<arg index='1' type='@' declared_type='NSParagraphStyle*' name='style'/>
<arg index='2' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='3' type='B' declared_type='BOOL' name='isEnabled'/>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='rulerMarkersForTextView:paragraphStyle:ruler:'>
<arg index='0' type='@' declared_type='NSTextView*' name='view'/>
<arg index='1' type='@' declared_type='NSParagraphStyle*' name='style'/>
<arg index='2' type='@' declared_type='NSRulerView*' name='ruler'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setAllowsNonContiguousLayout:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttachmentSize:forGlyphRange:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='attachmentSize'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundLayoutEnabled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBoundsRect:forTextBlock:glyphRange:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='1' type='@' declared_type='NSTextBlock*' name='block'/>
<arg index='2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCharacterIndex:forGlyphAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultAttachmentScaling:'>
<arg index='0' type64='Q' type='I' declared_type='NSImageScaling' name='scaling'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawsOutsideLineFragment:forGlyphAtIndex:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setExtraLineFragmentRect:usedRect:textContainer:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='fragmentRect'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='usedRect'/>
<arg index='2' type='@' declared_type='NSTextContainer*' name='container'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGlyphGenerator:'>
<arg index='0' type='@' declared_type='NSGlyphGenerator*' name='glyphGenerator'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHyphenationFactor:'>
<arg index='0' type='f' declared_type='float' name='factor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIntAttribute:value:forGlyphAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='attributeTag'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='val'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayoutRect:forTextBlock:glyphRange:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='1' type='@' declared_type='NSTextBlock*' name='block'/>
<arg index='2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineFragmentRect:forGlyphRange:usedRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='fragmentRect'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='usedRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocation:forStartOfGlyphRange:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='location'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocations:startingGlyphIndexes:count:forGlyphRange:'>
<arg index='0' type64='^{CGPoint=dd}' type='^{_NSPoint=ff}' declared_type='NSPointArray' name='locations'/>
<arg index='1' type64='^Q' type='^I' declared_type='NSUInteger*' name='glyphIndexes'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='count'/>
<arg index='3' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNotShownAttribute:forGlyphAtIndex:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsControlCharacters:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsInvisibleCharacters:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTemporaryAttributes:forCharacterRange:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='attrs'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextContainer:forGlyphRange:'>
<arg index='0' type='@' declared_type='NSTextContainer*' name='container'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextStorage:'>
<arg index='0' type='@' declared_type='NSTextStorage*' name='textStorage'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTypesetter:'>
<arg index='0' type='@' declared_type='NSTypesetter*' name='typesetter'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTypesetterBehavior:'>
<arg index='0' type64='q' type='i' declared_type='NSTypesetterBehavior' name='theBehavior'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesFontLeading:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesScreenFonts:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showAttachmentCell:inRect:characterIndex:'>
<arg index='0' type='@' declared_type='NSCell*' name='cell'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='attachmentIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showCGGlyphs:positions:count:font:matrix:attributes:inContext:'>
<arg index='0' type='^S' const='true' declared_type='CGGlyph*' name='glyphs'/>
<arg index='1' type64='^{CGPoint=dd}' type='^{_NSPoint=ff}' const='true' declared_type='NSPoint*' name='positions'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='glyphCount'/>
<arg index='3' type='@' declared_type='NSFont*' name='font'/>
<arg index='4' type='@' declared_type='NSAffineTransform*' name='textMatrix'/>
<arg index='5' type='@' declared_type='NSDictionary*' name='attributes'/>
<arg index='6' type='@' declared_type='NSGraphicsContext*' name='graphicsContext'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showPackedGlyphs:length:glyphRange:atPoint:font:color:printingAdjustment:'>
<arg index='0' type='*' declared_type='char*' name='glyphs'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='glyphLen'/>
<arg index='2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<arg index='3' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<arg index='4' type='@' declared_type='NSFont*' name='font'/>
<arg index='5' type='@' declared_type='NSColor*' name='color'/>
<arg index='6' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='printingAdjustment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showsControlCharacters'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showsInvisibleCharacters'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='strikethroughVal'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='lineRect'/>
<arg index='3' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='lineGlyphRange'/>
<arg index='4' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='containerOrigin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='substituteFontForFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='originalFont'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='temporaryAttribute:atCharacterIndex:effectiveRange:'>
<arg index='0' type='@' declared_type='NSString*' name='attrName'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='location'/>
<arg index='2' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='range'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='temporaryAttribute:atCharacterIndex:longestEffectiveRange:inRange:'>
<arg index='0' type='@' declared_type='NSString*' name='attrName'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='location'/>
<arg index='2' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='range'/>
<arg index='3' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='rangeLimit'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='temporaryAttributesAtCharacterIndex:effectiveRange:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='effectiveCharRange'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='temporaryAttributesAtCharacterIndex:longestEffectiveRange:inRange:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='location'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='range'/>
<arg index='2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='rangeLimit'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='textContainerChangedGeometry:'>
<arg index='0' type='@' declared_type='NSTextContainer*' name='container'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textContainerChangedTextView:'>
<arg index='0' type='@' declared_type='NSTextContainer*' name='container'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textContainerForGlyphAtIndex:effectiveRange:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='effectiveGlyphRange'/>
<retval type='@' declared_type='NSTextContainer*'/>
</method>
<method selector='textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='effectiveGlyphRange'/>
<arg index='2' type='B' declared_type='BOOL' name='flag'/>
<retval type='@' declared_type='NSTextContainer*'/>
</method>
<method selector='textContainers'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='textStorage'>
<retval type='@' declared_type='NSTextStorage*'/>
</method>
<method selector='textStorage:edited:range:changeInLength:invalidatedRange:'>
<arg index='0' type='@' declared_type='NSTextStorage*' name='str'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='editedMask'/>
<arg index='2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='newCharRange'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='delta'/>
<arg index='4' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='invalidatedCharRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textViewForBeginningOfSelection'>
<retval type='@' declared_type='NSTextView*'/>
</method>
<method selector='typesetter'>
<retval type='@' declared_type='NSTypesetter*'/>
</method>
<method selector='typesetterBehavior'>
<retval type64='q' type='i' declared_type='NSTypesetterBehavior'/>
</method>
<method selector='underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='underlineVal'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='lineRect'/>
<arg index='3' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='lineGlyphRange'/>
<arg index='4' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='containerOrigin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='usedRectForTextContainer:'>
<arg index='0' type='@' declared_type='NSTextContainer*' name='container'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='usesFontLeading'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='usesScreenFonts'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSLevelIndicator'>
<method selector='criticalValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='maxValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='minValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='numberOfMajorTickMarks'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='numberOfTickMarks'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='rectOfTickMarkAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='setCriticalValue:'>
<arg index='0' type='d' declared_type='double' name='criticalValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxValue:'>
<arg index='0' type='d' declared_type='double' name='maxValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinValue:'>
<arg index='0' type='d' declared_type='double' name='minValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfMajorTickMarks:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='count'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfTickMarks:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='count'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTickMarkPosition:'>
<arg index='0' type64='Q' type='I' declared_type='NSTickMarkPosition' name='position'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWarningValue:'>
<arg index='0' type='d' declared_type='double' name='warningValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tickMarkPosition'>
<retval type64='Q' type='I' declared_type='NSTickMarkPosition'/>
</method>
<method selector='tickMarkValueAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='warningValue'>
<retval type='d' declared_type='double'/>
</method>
</class>
<class name='NSLevelIndicatorCell'>
<method selector='criticalValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='initWithLevelIndicatorStyle:'>
<arg index='0' type64='Q' type='I' declared_type='NSLevelIndicatorStyle' name='levelIndicatorStyle'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='levelIndicatorStyle'>
<retval type64='Q' type='I' declared_type='NSLevelIndicatorStyle'/>
</method>
<method selector='maxValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='minValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='numberOfMajorTickMarks'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='numberOfTickMarks'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='rectOfTickMarkAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='setCriticalValue:'>
<arg index='0' type='d' declared_type='double' name='criticalValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImage:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLevelIndicatorStyle:'>
<arg index='0' type64='Q' type='I' declared_type='NSLevelIndicatorStyle' name='levelIndicatorStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxValue:'>
<arg index='0' type='d' declared_type='double' name='maxValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinValue:'>
<arg index='0' type='d' declared_type='double' name='minValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfMajorTickMarks:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='count'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfTickMarks:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='count'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTickMarkPosition:'>
<arg index='0' type64='Q' type='I' declared_type='NSTickMarkPosition' name='position'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWarningValue:'>
<arg index='0' type='d' declared_type='double' name='warningValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tickMarkPosition'>
<retval type64='Q' type='I' declared_type='NSTickMarkPosition'/>
</method>
<method selector='tickMarkValueAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='warningValue'>
<retval type='d' declared_type='double'/>
</method>
</class>
<class name='NSMatrix'>
<method selector='acceptsFirstMouse:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='addColumn'>
<retval type='v' declared_type='void'/>
</method>
<method selector='addColumnWithCells:'>
<arg index='0' type='@' declared_type='NSArray*' name='newCells'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addRow'>
<retval type='v' declared_type='void'/>
</method>
<method selector='addRowWithCells:'>
<arg index='0' type='@' declared_type='NSArray*' name='newCells'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allowsEmptySelection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='autorecalculatesCellSize'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='autosizesCells'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='backgroundColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='cellAtRow:column:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='col'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='cellBackgroundColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='cellClass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='cellFrameAtRow:column:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='col'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='cellSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='cellWithTag:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='anInt'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='cells'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='deselectAllCells'>
<retval type='v' declared_type='void'/>
</method>
<method selector='deselectSelectedCell'>
<retval type='v' declared_type='void'/>
</method>
<method selector='doubleAction'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='drawCellAtRow:column:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='col'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawsBackground'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='drawsCellBackground'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getNumberOfRows:columns:'>
<arg index='0' type64='^q' type='^i' declared_type='NSInteger*' name='rowCount'/>
<arg index='1' type64='^q' type='^i' declared_type='NSInteger*' name='colCount'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getRow:column:forPoint:'>
<arg index='0' type64='^q' type='^i' declared_type='NSInteger*' name='row'/>
<arg index='1' type64='^q' type='^i' declared_type='NSInteger*' name='col'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='aPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getRow:column:ofCell:'>
<arg index='0' type64='^q' type='^i' declared_type='NSInteger*' name='row'/>
<arg index='1' type64='^q' type='^i' declared_type='NSInteger*' name='col'/>
<arg index='2' type='@' declared_type='NSCell*' name='aCell'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='highlightCell:atRow:column:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='col'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithFrame:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frameRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFrame:mode:cellClass:numberOfRows:numberOfColumns:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frameRect'/>
<arg index='1' type64='Q' type='I' declared_type='NSMatrixMode' name='aMode'/>
<arg index='2' type='#' declared_type='Class' name='factoryId'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='rowsHigh'/>
<arg index='4' type64='q' type='i' declared_type='NSInteger' name='colsWide'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFrame:mode:prototype:numberOfRows:numberOfColumns:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frameRect'/>
<arg index='1' type64='Q' type='I' declared_type='NSMatrixMode' name='aMode'/>
<arg index='2' type='@' declared_type='NSCell*' name='aCell'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='rowsHigh'/>
<arg index='4' type64='q' type='i' declared_type='NSInteger' name='colsWide'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertColumn:withCells:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='1' type='@' declared_type='NSArray*' name='newCells'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertRow:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertRow:withCells:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='1' type='@' declared_type='NSArray*' name='newCells'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='intercellSpacing'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='isAutoscroll'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSelectionByRect'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyCell'>
<retval type='@' declared_type='id'/>
</method>
<method selector='makeCellAtRow:column:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='col'/>
<retval type='@' declared_type='NSCell*'/>
</method>
<method selector='mode'>
<retval type64='Q' type='I' declared_type='NSMatrixMode'/>
</method>
<method selector='mouseDown:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mouseDownFlags'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='numberOfColumns'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='numberOfRows'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='performKeyEquivalent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='prototype'>
<retval type='@' declared_type='id'/>
</method>
<method selector='putCell:atRow:column:'>
<arg index='0' type='@' declared_type='NSCell*' name='newCell'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='col'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='col'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeRow:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='renewRows:columns:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='newRows'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='newCols'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resetCursorRects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollCellToVisibleAtRow:column:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='col'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectAll:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectCellAtRow:column:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='col'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectCellWithTag:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='anInt'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='selectText:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectTextAtRow:column:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='col'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='selectedCell'>
<retval type='@' declared_type='id'/>
</method>
<method selector='selectedCells'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='selectedColumn'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='selectedRow'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='sendAction'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='sendAction:to:forAllCells:'>
<arg index='0' type=':' declared_type='SEL' name='aSelector'/>
<arg index='1' type='@' declared_type='id' name='anObject'/>
<arg index='2' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sendDoubleAction'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsEmptySelection:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutorecalculatesCellSize:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutoscroll:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutosizesCells:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCellBackgroundColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCellClass:'>
<arg index='0' type='#' declared_type='Class' name='factoryId'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCellSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='aSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDoubleAction:'>
<arg index='0' type=':' declared_type='SEL' name='aSelector'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawsBackground:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawsCellBackground:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIntercellSpacing:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='aSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKeyCell:'>
<arg index='0' type='@' declared_type='NSCell*' name='keyCell'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMode:'>
<arg index='0' type64='Q' type='I' declared_type='NSMatrixMode' name='aMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPrototype:'>
<arg index='0' type='@' declared_type='NSCell*' name='aCell'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScrollable:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectionByRect:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectionFrom:to:anchor:highlight:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='startPos'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='endPos'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='anchorPos'/>
<arg index='3' type='B' declared_type='BOOL' name='lit'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setState:atRow:column:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='value'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='col'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTabKeyTraversesCells:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setToolTip:forCell:'>
<arg index='0' type='@' declared_type='NSString*' name='toolTipString'/>
<arg index='1' type='@' declared_type='NSCell*' name='cell'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValidateSize:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sizeToCells'>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortUsingFunction:context:'>
<arg index='0' function_pointer='true' type='^?' declared_type='NSInteger (*)(id, id, void *)' name='compare'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^v' declared_type='void*'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</arg>
<arg index='1' type='^v' declared_type='void*' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortUsingSelector:'>
<arg index='0' type=':' declared_type='SEL' name='comparator'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tabKeyTraversesCells'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='textDidBeginEditing:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textDidChange:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textDidEndEditing:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textShouldBeginEditing:'>
<arg index='0' type='@' declared_type='NSText*' name='textObject'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='textShouldEndEditing:'>
<arg index='0' type='@' declared_type='NSText*' name='textObject'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='toolTipForCell:'>
<arg index='0' type='@' declared_type='NSCell*' name='cell'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSMenu'>
<method selector='addItem:'>
<arg index='0' type='@' declared_type='NSMenuItem*' name='newItem'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addItemWithTitle:action:keyEquivalent:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<arg index='1' type=':' declared_type='SEL' name='aSelector'/>
<arg index='2' type='@' declared_type='NSString*' name='charCode'/>
<retval type='@' declared_type='NSMenuItem*'/>
</method>
<method selector='allowsContextMenuPlugIns'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='attachedMenu'>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='autoenablesItems'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cancelTracking'>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancelTrackingWithoutAnimation'>
<retval type='v' declared_type='void'/>
</method>
<method selector='contextMenuRepresentation'>
<retval type='@' declared_type='id'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='font'>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='helpRequested:'>
<arg index='0' type='@' declared_type='NSEvent*' name='eventPtr'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='highlightedItem'>
<retval type='@' declared_type='NSMenuItem*'/>
</method>
<method selector='indexOfItem:'>
<arg index='0' type='@' declared_type='NSMenuItem*' name='index'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='indexOfItemWithRepresentedObject:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='indexOfItemWithSubmenu:'>
<arg index='0' type='@' declared_type='NSMenu*' name='submenu'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='indexOfItemWithTag:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='aTag'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='indexOfItemWithTarget:andAction:'>
<arg index='0' type='@' declared_type='id' name='target'/>
<arg index='1' type=':' declared_type='SEL' name='actionSelector'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='indexOfItemWithTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='aTitle'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='initWithTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='aTitle'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertItem:atIndex:'>
<arg index='0' type='@' declared_type='NSMenuItem*' name='newItem'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertItemWithTitle:action:keyEquivalent:atIndex:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<arg index='1' type=':' declared_type='SEL' name='aSelector'/>
<arg index='2' type='@' declared_type='NSString*' name='charCode'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='@' declared_type='NSMenuItem*'/>
</method>
<method selector='isAttached'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isTornOff'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='itemArray'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='itemAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='@' declared_type='NSMenuItem*'/>
</method>
<method selector='itemChanged:'>
<arg index='0' type='@' declared_type='NSMenuItem*' name='item'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='itemWithTag:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='tag'/>
<retval type='@' declared_type='NSMenuItem*'/>
</method>
<method selector='itemWithTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='aTitle'/>
<retval type='@' declared_type='NSMenuItem*'/>
</method>
<method selector='locationForSubmenu:'>
<arg index='0' type='@' declared_type='NSMenu*' name='aSubmenu'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='menuBarHeight'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='menuBarVisible' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='menuChangedMessagesEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='menuRepresentation'>
<retval type='@' declared_type='id'/>
</method>
<method selector='menuZone' class_method='true'>
<retval type='^{_NSZone=}' declared_type='NSZone*'/>
</method>
<method selector='minimumWidth'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='numberOfItems'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='performActionForItemAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performKeyEquivalent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='popUpContextMenu:withEvent:forView:' class_method='true'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<arg index='1' type='@' declared_type='NSEvent*' name='event'/>
<arg index='2' type='@' declared_type='NSView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='popUpContextMenu:withEvent:forView:withFont:' class_method='true'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<arg index='1' type='@' declared_type='NSEvent*' name='event'/>
<arg index='2' type='@' declared_type='NSView*' name='view'/>
<arg index='3' type='@' declared_type='NSFont*' name='font'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='popUpMenuPositioningItem:atLocation:inView:'>
<arg index='0' type='@' declared_type='NSMenuItem*' name='item'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='location'/>
<arg index='2' type='@' declared_type='NSView*' name='view'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='propertiesToUpdate'>
<retval type64='Q' type='I' declared_type='NSMenuProperties'/>
</method>
<method selector='removeAllItems'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeItem:'>
<arg index='0' type='@' declared_type='NSMenuItem*' name='item'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeItemAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsContextMenuPlugIns:'>
<arg index='0' type='B' declared_type='BOOL' name='allows'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutoenablesItems:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContextMenuRepresentation:'>
<arg index='0' type='@' declared_type='id' name='menuRep'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='font'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMenuBarVisible:' class_method='true'>
<arg index='0' type='B' declared_type='BOOL' name='visible'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMenuChangedMessagesEnabled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMenuRepresentation:'>
<arg index='0' type='@' declared_type='id' name='menuRep'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMenuZone:' class_method='true'>
<arg index='0' type='^{_NSZone=}' declared_type='NSZone*' name='aZone'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumWidth:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='width'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsStateColumn:'>
<arg index='0' type='B' declared_type='BOOL' name='showsState'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubmenu:forItem:'>
<arg index='0' type='@' declared_type='NSMenu*' name='aMenu'/>
<arg index='1' type='@' declared_type='NSMenuItem*' name='anItem'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSupermenu:'>
<arg index='0' type='@' declared_type='NSMenu*' name='supermenu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTearOffMenuRepresentation:'>
<arg index='0' type='@' declared_type='id' name='menuRep'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showsStateColumn'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='size'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='sizeToFit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='submenuAction:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='supermenu'>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='tearOffMenuRepresentation'>
<retval type='@' declared_type='id'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='update'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMenuItem'>
<method selector='action'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='attributedTitle'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='hasSubmenu'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='image'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='indentationLevel'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='initWithTitle:action:keyEquivalent:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<arg index='1' type=':' declared_type='SEL' name='aSelector'/>
<arg index='2' type='@' declared_type='NSString*' name='charCode'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isAlternate'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isHidden'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isHiddenOrHasHiddenAncestor'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isHighlighted'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSeparatorItem'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyEquivalent'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='keyEquivalentModifierMask'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='menu'>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='mixedStateImage'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='mnemonic'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='mnemonicLocation'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='offStateImage'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='onStateImage'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='parentItem'>
<retval type='@' declared_type='NSMenuItem*'/>
</method>
<method selector='representedObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='separatorItem' class_method='true'>
<retval type='@' declared_type='NSMenuItem*'/>
</method>
<method selector='setAction:'>
<arg index='0' type=':' declared_type='SEL' name='aSelector'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlternate:'>
<arg index='0' type='B' declared_type='BOOL' name='isAlternate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributedTitle:'>
<arg index='0' type='@' declared_type='NSAttributedString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnabled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHidden:'>
<arg index='0' type='B' declared_type='BOOL' name='hidden'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImage:'>
<arg index='0' type='@' declared_type='NSImage*' name='menuImage'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIndentationLevel:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='indentationLevel'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKeyEquivalent:'>
<arg index='0' type='@' declared_type='NSString*' name='aKeyEquivalent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKeyEquivalentModifierMask:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='mask'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMenu:'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMixedStateImage:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMnemonicLocation:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='location'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOffStateImage:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOnStateImage:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRepresentedObject:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setState:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='state'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubmenu:'>
<arg index='0' type='@' declared_type='NSMenu*' name='submenu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTag:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='anInt'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTarget:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleWithMnemonic:'>
<arg index='0' type='@' declared_type='NSString*' name='stringWithAmpersand'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setToolTip:'>
<arg index='0' type='@' declared_type='NSString*' name='toolTip'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesUserKeyEquivalents:' class_method='true'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setView:'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='state'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='submenu'>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='tag'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='target'>
<retval type='@' declared_type='id'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='toolTip'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='userKeyEquivalent'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='usesUserKeyEquivalents' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='view'>
<retval type='@' declared_type='NSView*'/>
</method>
</class>
<class name='NSMenuItemCell'>
<method selector='calcSize'>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawBorderAndBackgroundWithFrame:inView:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawImageWithFrame:inView:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawKeyEquivalentWithFrame:inView:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawSeparatorItemWithFrame:inView:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawStateImageWithFrame:inView:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawTitleWithFrame:inView:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='imageWidth'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='keyEquivalentRectForBounds:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='keyEquivalentWidth'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='menuItem'>
<retval type='@' declared_type='NSMenuItem*'/>
</method>
<method selector='menuView'>
<retval type='@' declared_type='NSMenuView*'/>
</method>
<method selector='needsDisplay'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='needsSizing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setMenuItem:'>
<arg index='0' type='@' declared_type='NSMenuItem*' name='item'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMenuView:'>
<arg index='0' type='@' declared_type='NSMenuView*' name='menuView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNeedsDisplay:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNeedsSizing:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stateImageRectForBounds:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='stateImageWidth'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='tag'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='titleRectForBounds:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='titleWidth'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='NSMovie'>
<method selector='QTMovie'>
<retval type64='@' type='^v' declared_type64='QTMovie*' declared_type='void*'/>
</method>
<method selector='URL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='canInitWithPasteboard:' class_method='true'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithMovie:'>
<arg index='0' type64='@' type='^v' declared_type64='QTMovie*' declared_type='void*' name='movie'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPasteboard:'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithURL:byReference:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='B' declared_type='BOOL' name='byRef'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='movieUnfilteredFileTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='movieUnfilteredPasteboardTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSMutableAttributedString'>
<method selector='applyFontTraits:range:'>
<arg index='0' type64='Q' type='I' declared_type='NSFontTraitMask' name='traitMask'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fixAttachmentAttributeInRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fixAttributesInRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fixFontAttributeInRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fixParagraphStyleAttributeInRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='readFromData:options:documentAttributes:'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='options'/>
<arg index='2' type='^@' declared_type='NSDictionary**' name='dict'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='readFromData:options:documentAttributes:error:'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='opts'/>
<arg index='2' type='^@' declared_type='NSDictionary**' name='dict'/>
<arg index='3' type='^@' declared_type='NSError**' name='error'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='readFromURL:options:documentAttributes:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='options'/>
<arg index='2' type='^@' declared_type='NSDictionary**' name='dict'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='readFromURL:options:documentAttributes:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='opts'/>
<arg index='2' type='^@' declared_type='NSDictionary**' name='dict'/>
<arg index='3' type='^@' declared_type='NSError**' name='error'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAlignment:range:'>
<arg index='0' type64='Q' type='I' declared_type='NSTextAlignment' name='alignment'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBaseWritingDirection:range:'>
<arg index='0' type64='q' type='i' declared_type='NSWritingDirection' name='writingDirection'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='subscriptRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='superscriptRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscriptRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateAttachmentsFromPath:'>
<arg index='0' type='@' declared_type='NSString*' name='path'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableFontCollection'>
<method selector='addQueryForDescriptors:'>
<arg index='0' type='@' declared_type='NSArray*' name='descriptors'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeQueryForDescriptors:'>
<arg index='0' type='@' declared_type='NSArray*' name='descriptors'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setExclusionDescriptors:'>
<arg index='0' type='@' declared_type='NSArray*' name='descriptors'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setQueryDescriptors:'>
<arg index='0' type='@' declared_type='NSArray*' name='descriptors'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSMutableParagraphStyle'>
<method selector='addTabStop:'>
<arg index='0' type='@' declared_type='NSTextTab*' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeTabStop:'>
<arg index='0' type='@' declared_type='NSTextTab*' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlignment:'>
<arg index='0' type64='Q' type='I' declared_type='NSTextAlignment' name='alignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBaseWritingDirection:'>
<arg index='0' type64='q' type='i' declared_type='NSWritingDirection' name='writingDirection'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultTabInterval:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='aFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFirstLineHeadIndent:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='aFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHeadIndent:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='aFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHeaderLevel:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='level'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHyphenationFactor:'>
<arg index='0' type='f' declared_type='float' name='aFactor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineBreakMode:'>
<arg index='0' type64='Q' type='I' declared_type='NSLineBreakMode' name='mode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineHeightMultiple:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='aFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineSpacing:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='aFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximumLineHeight:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='aFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinimumLineHeight:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='aFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParagraphSpacing:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='aFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParagraphSpacingBefore:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='aFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParagraphStyle:'>
<arg index='0' type='@' declared_type='NSParagraphStyle*' name='obj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTabStops:'>
<arg index='0' type='@' declared_type='NSArray*' name='array'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTailIndent:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='aFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextBlocks:'>
<arg index='0' type='@' declared_type='NSArray*' name='array'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextLists:'>
<arg index='0' type='@' declared_type='NSArray*' name='array'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTighteningFactorForTruncation:'>
<arg index='0' type='f' declared_type='float' name='aFactor'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSNib'>
<method selector='initWithContentsOfURL:'>
<arg index='0' type='@' declared_type='NSURL*' name='nibFileURL'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithNibData:bundle:'>
<arg index='0' type='@' declared_type='NSData*' name='nibData'/>
<arg index='1' type='@' declared_type='NSBundle*' name='bundle'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithNibNamed:bundle:'>
<arg index='0' type='@' declared_type='NSString*' name='nibName'/>
<arg index='1' type='@' declared_type='NSBundle*' name='bundle'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='instantiateNibWithExternalNameTable:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='externalNameTable'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='instantiateNibWithOwner:topLevelObjects:'>
<arg index='0' type='@' declared_type='id' name='owner'/>
<arg index='1' type='^@' declared_type='NSArray**' name='topLevelObjects'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='instantiateWithOwner:topLevelObjects:'>
<arg index='0' type='@' declared_type='id' name='owner'/>
<arg index='1' type='^@' declared_type='NSArray**' name='topLevelObjects'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSNibConnector'>
<method selector='destination'>
<retval type='@' declared_type='id'/>
</method>
<method selector='establishConnection'>
<retval type='v' declared_type='void'/>
</method>
<method selector='label'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='replaceObject:withObject:'>
<arg index='0' type='@' declared_type='id' name='oldObject'/>
<arg index='1' type='@' declared_type='id' name='newObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDestination:'>
<arg index='0' type='@' declared_type='id' name='destination'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabel:'>
<arg index='0' type='@' declared_type='NSString*' name='label'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSource:'>
<arg index='0' type='@' declared_type='id' name='source'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='source'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSNibControlConnector'>
<method selector='establishConnection'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSNibOutletConnector'>
<method selector='establishConnection'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSObject'>
<method selector='accessibilityActionDescription:'>
<arg index='0' type='@' declared_type='NSString*' name='action'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='accessibilityActionNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='accessibilityArrayAttributeCount:'>
<arg index='0' type='@' declared_type='NSString*' name='attribute'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='accessibilityArrayAttributeValues:index:maxCount:'>
<arg index='0' type='@' declared_type='NSString*' name='attribute'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='index'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='maxCount'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='accessibilityAttributeNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='accessibilityAttributeValue:'>
<arg index='0' type='@' declared_type='NSString*' name='attribute'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='accessibilityAttributeValue:forParameter:'>
<arg index='0' type='@' declared_type='NSString*' name='attribute'/>
<arg index='1' type='@' declared_type='id' name='parameter'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='accessibilityFocusedUIElement'>
<retval type='@' declared_type='id'/>
</method>
<method selector='accessibilityHitTest:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='accessibilityIndexOfChild:'>
<arg index='0' type='@' declared_type='id' name='child'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='accessibilityIsAttributeSettable:'>
<arg index='0' type='@' declared_type='NSString*' name='attribute'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='accessibilityIsIgnored'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='accessibilityParameterizedAttributeNames'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='accessibilityPerformAction:'>
<arg index='0' type='@' declared_type='NSString*' name='action'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='accessibilitySetOverrideValue:forAttribute:'>
<arg index='0' type='@' declared_type='id' name='value'/>
<arg index='1' type='@' declared_type='NSString*' name='attribute'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='accessibilitySetValue:forAttribute:'>
<arg index='0' type='@' declared_type='id' name='value'/>
<arg index='1' type='@' declared_type='NSString*' name='attribute'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='action'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='activeConversationChanged:toNewConversation:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='newConversation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='activeConversationWillChange:fromOldConversation:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='oldConversation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alertShowHelp:'>
<arg index='0' type='@' declared_type='NSAlert*' name='alert'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='allowsMultipleSelection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='alphaControlAddedOrRemoved:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='animatesToDestination'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='animation:didReachProgressMark:'>
<arg index='0' type='@' declared_type='NSAnimation*' name='animation'/>
<arg index='1' type='f' declared_type='NSAnimationProgress' name='progress'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='animation:valueForProgress:'>
<arg index='0' type='@' declared_type='NSAnimation*' name='animation'/>
<arg index='1' type='f' declared_type='NSAnimationProgress' name='progress'/>
<retval type='f' declared_type='float'/>
</method>
<method selector='animationDidEnd:'>
<arg index='0' type='@' declared_type='NSAnimation*' name='animation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='animationDidStop:'>
<arg index='0' type='@' declared_type='NSAnimation*' name='animation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='animationForKey:'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='animationShouldStart:'>
<arg index='0' type='@' declared_type='NSAnimation*' name='animation'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='animations'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='animator'>
<retval type='@' declared_type='id'/>
</method>
<method selector='application:delegateHandlesKey:'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='key'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='application:didDecodeRestorableState:'>
<arg index='0' type='@' declared_type='NSApplication*' name='app'/>
<arg index='1' type='@' declared_type='NSCoder*' name='coder'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='application:didFailToRegisterForRemoteNotificationsWithError:'>
<arg index='0' type='@' declared_type='NSApplication*' name='application'/>
<arg index='1' type='@' declared_type='NSError*' name='error'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='application:didReceiveRemoteNotification:'>
<arg index='0' type='@' declared_type='NSApplication*' name='application'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='userInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='application:didRegisterForRemoteNotificationsWithDeviceToken:'>
<arg index='0' type='@' declared_type='NSApplication*' name='application'/>
<arg index='1' type='@' declared_type='NSData*' name='deviceToken'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='application:openFile:'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='filename'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='application:openFileWithoutUI:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='filename'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='application:openFiles:'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<arg index='1' type='@' declared_type='NSArray*' name='filenames'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='application:openTempFile:'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='filename'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='application:printFile:'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='filename'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='application:printFiles:withSettings:showPrintPanels:'>
<arg index='0' type='@' declared_type='NSApplication*' name='application'/>
<arg index='1' type='@' declared_type='NSArray*' name='fileNames'/>
<arg index='2' type='@' declared_type='NSDictionary*' name='printSettings'/>
<arg index='3' type='B' declared_type='BOOL' name='showPrintPanels'/>
<retval type64='Q' type='I' declared_type='NSApplicationPrintReply'/>
</method>
<method selector='application:willEncodeRestorableState:'>
<arg index='0' type='@' declared_type='NSApplication*' name='app'/>
<arg index='1' type='@' declared_type='NSCoder*' name='coder'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='application:willPresentError:'>
<arg index='0' type='@' declared_type='NSApplication*' name='application'/>
<arg index='1' type='@' declared_type='NSError*' name='error'/>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='applicationDidBecomeActive:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationDidChangeScreenParameters:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationDidFinishLaunching:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationDidHide:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationDidResignActive:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationDidUnhide:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationDidUpdate:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationDockMenu:'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='applicationOpenUntitledFile:'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='applicationShouldHandleReopen:hasVisibleWindows:'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<arg index='1' type='B' declared_type='BOOL' name='flag'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='applicationShouldOpenUntitledFile:'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='applicationShouldTerminate:'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<retval type64='Q' type='I' declared_type='NSApplicationTerminateReply'/>
</method>
<method selector='applicationShouldTerminateAfterLastWindowClosed:'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='applicationWillBecomeActive:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationWillFinishLaunching:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationWillHide:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationWillResignActive:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationWillTerminate:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationWillUnhide:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationWillUpdate:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='attachColorList:'>
<arg index='0' type='@' declared_type='NSColorList*' name='colorList'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='attachment'>
<retval type='@' declared_type='NSTextAttachment*'/>
</method>
<method selector='attributedString'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='attributedSubstringForProposedRange:actualRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='aRange'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='actualRange'/>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='attributedSubstringFromRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='theRange'/>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='awakeFromNib'>
<retval type='v' declared_type='void'/>
</method>
<method selector='baselineDeltaForCharacterAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='anIndex'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='bind:toObject:withKeyPath:options:'>
<arg index='0' type='@' declared_type='NSString*' name='binding'/>
<arg index='1' type='@' declared_type='id' name='observable'/>
<arg index='2' type='@' declared_type='NSString*' name='keyPath'/>
<arg index='3' type='@' declared_type='NSDictionary*' name='options'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='browser:acceptDrop:atRow:column:dropOperation:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='id' name='info'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='4' type64='Q' type='I' declared_type='NSBrowserDropOperation' name='dropOperation'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='browser:canDragRowsWithIndexes:inColumn:withEvent:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='NSIndexSet*' name='rowIndexes'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='3' type='@' declared_type='NSEvent*' name='event'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='browser:child:ofItem:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='index'/>
<arg index='2' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='browser:createRowsForColumn:inMatrix:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='sender'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='2' type='@' declared_type='NSMatrix*' name='matrix'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='browser:didChangeLastColumn:toColumn:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='oldLastColumn'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='NSIndexSet*' name='rowIndexes'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='3' type='@' declared_type='NSEvent*' name='event'/>
<arg index='4' type64='^{CGPoint=dd}' type='^{_NSPoint=ff}' declared_type='NSPointPointer' name='dragImageOffset'/>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='browser:headerViewControllerForItem:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='NSViewController*'/>
</method>
<method selector='browser:heightOfRow:inColumn:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='columnIndex'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='browser:isColumnValid:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='sender'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='browser:isLeafItem:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='NSURL*' name='dropDestination'/>
<arg index='2' type='@' declared_type='NSIndexSet*' name='rowIndexes'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='startRow'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='endRow'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='4' type='@' declared_type='NSString*' name='searchString'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='browser:numberOfChildrenOfItem:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='browser:numberOfRowsInColumn:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='sender'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='browser:objectValueForItem:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='browser:previewViewControllerForLeafItem:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='NSViewController*'/>
</method>
<method selector='browser:selectCellWithString:inColumn:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='title'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='browser:selectRow:inColumn:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='sender'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='browser:selectionIndexesForProposedSelection:inColumn:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='NSIndexSet*' name='proposedSelectionIndexes'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='browser:setObjectValue:forItem:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='id' name='object'/>
<arg index='2' type='@' declared_type='id' name='item'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='browser:shouldEditItem:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='browser:shouldShowCellExpansionForRow:column:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='browser:shouldSizeColumn:forUserResize:toWidth:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='columnIndex'/>
<arg index='2' type='B' declared_type='BOOL' name='forUserResize'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='suggestedWidth'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='browser:shouldTypeSelectForEvent:withCurrentSearchString:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='NSEvent*' name='event'/>
<arg index='2' type='@' declared_type='NSString*' name='searchString'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='browser:sizeToFitWidthOfColumn:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='columnIndex'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='browser:titleOfColumn:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='sender'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='browser:typeSelectStringForRow:inColumn:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='browser:validateDrop:proposedRow:column:dropOperation:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='id' name='info'/>
<arg index='2' type64='^q' type='^i' declared_type='NSInteger*' name='row'/>
<arg index='3' type64='^q' type='^i' declared_type='NSInteger*' name='column'/>
<arg index='4' type64='^Q' type='^I' declared_type='NSBrowserDropOperation*' name='dropOperation'/>
<retval type64='Q' type='I' declared_type='NSDragOperation'/>
</method>
<method selector='browser:willDisplayCell:atRow:column:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='sender'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='browser:writeRowsWithIndexes:inColumn:toPasteboard:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='NSIndexSet*' name='rowIndexes'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='3' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='browserColumnConfigurationDidChange:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='browserDidScroll:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='browserWillScroll:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='buttonToolTip'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='canBeDisabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cellBaselineOffset'>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
<arg index='0' type='@' declared_type='NSTextContainer*' name='textContainer'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='lineFrag'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='position'/>
<arg index='3' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='cellSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='changeColor:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='changeFont:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='changeSpelling:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='characterIndexForPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='thePoint'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='collectionView:acceptDrop:index:dropOperation:'>
<arg index='0' type='@' declared_type='NSCollectionView*' name='collectionView'/>
<arg index='1' type='@' declared_type='id' name='draggingInfo'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='index'/>
<arg index='3' type64='q' type='i' declared_type='NSCollectionViewDropOperation' name='dropOperation'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='collectionView:canDragItemsAtIndexes:withEvent:'>
<arg index='0' type='@' declared_type='NSCollectionView*' name='collectionView'/>
<arg index='1' type='@' declared_type='NSIndexSet*' name='indexes'/>
<arg index='2' type='@' declared_type='NSEvent*' name='event'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='collectionView:draggingImageForItemsAtIndexes:withEvent:offset:'>
<arg index='0' type='@' declared_type='NSCollectionView*' name='collectionView'/>
<arg index='1' type='@' declared_type='NSIndexSet*' name='indexes'/>
<arg index='2' type='@' declared_type='NSEvent*' name='event'/>
<arg index='3' type64='^{CGPoint=dd}' type='^{_NSPoint=ff}' declared_type='NSPointPointer' name='dragImageOffset'/>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='collectionView:draggingSession:endedAtPoint:dragOperation:'>
<arg index='0' type='@' declared_type='NSCollectionView*' name='collectionView'/>
<arg index='1' type='@' declared_type='NSDraggingSession*' name='session'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<arg index='3' type64='Q' type='I' declared_type='NSDragOperation' name='operation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexes:'>
<arg index='0' type='@' declared_type='NSCollectionView*' name='collectionView'/>
<arg index='1' type='@' declared_type='NSDraggingSession*' name='session'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<arg index='3' type='@' declared_type='NSIndexSet*' name='indexes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:'>
<arg index='0' type='@' declared_type='NSCollectionView*' name='collectionView'/>
<arg index='1' type='@' declared_type='NSURL*' name='dropURL'/>
<arg index='2' type='@' declared_type='NSIndexSet*' name='indexes'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='collectionView:pasteboardWriterForItemAtIndex:'>
<arg index='0' type='@' declared_type='NSCollectionView*' name='collectionView'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='index'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='collectionView:updateDraggingItemsForDrag:'>
<arg index='0' type='@' declared_type='NSCollectionView*' name='collectionView'/>
<arg index='1' type='@' declared_type='id' name='draggingInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='collectionView:validateDrop:proposedIndex:dropOperation:'>
<arg index='0' type='@' declared_type='NSCollectionView*' name='collectionView'/>
<arg index='1' type='@' declared_type='id' name='draggingInfo'/>
<arg index='2' type64='^q' type='^i' declared_type='NSInteger*' name='proposedDropIndex'/>
<arg index='3' type64='^q' type='^i' declared_type='NSCollectionViewDropOperation*' name='proposedDropOperation'/>
<retval type64='Q' type='I' declared_type='NSDragOperation'/>
</method>
<method selector='collectionView:writeItemsAtIndexes:toPasteboard:'>
<arg index='0' type='@' declared_type='NSCollectionView*' name='collectionView'/>
<arg index='1' type='@' declared_type='NSIndexSet*' name='indexes'/>
<arg index='2' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='comboBox:completedString:'>
<arg index='0' type='@' declared_type='NSComboBox*' name='aComboBox'/>
<arg index='1' type='@' declared_type='NSString*' name='string'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='comboBox:indexOfItemWithStringValue:'>
<arg index='0' type='@' declared_type='NSComboBox*' name='aComboBox'/>
<arg index='1' type='@' declared_type='NSString*' name='string'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='comboBox:objectValueForItemAtIndex:'>
<arg index='0' type='@' declared_type='NSComboBox*' name='aComboBox'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='comboBoxCell:completedString:'>
<arg index='0' type='@' declared_type='NSComboBoxCell*' name='aComboBoxCell'/>
<arg index='1' type='@' declared_type='NSString*' name='uncompletedString'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='comboBoxCell:indexOfItemWithStringValue:'>
<arg index='0' type='@' declared_type='NSComboBoxCell*' name='aComboBoxCell'/>
<arg index='1' type='@' declared_type='NSString*' name='string'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='comboBoxCell:objectValueForItemAtIndex:'>
<arg index='0' type='@' declared_type='NSComboBoxCell*' name='aComboBoxCell'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='comboBoxSelectionDidChange:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='comboBoxSelectionIsChanging:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='comboBoxWillDismiss:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='comboBoxWillPopUp:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='commitEditing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='commitEditingAndReturnError:'>
<arg index='0' type='^@' declared_type='NSError**' name='error'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<arg index='1' type=':' declared_type='SEL' name='didCommitSelector'/>
<arg index='2' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='concludeDragOperation:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='confinementRectForMenu:onScreen:'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<arg index='1' type='@' declared_type='NSScreen*' name='screen'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='contentView'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='contentViewAtIndex:effectiveCharacterRange:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='index'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='outRange'/>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='control:didFailToFormatString:errorDescription:'>
<arg index='0' type='@' declared_type='NSControl*' name='control'/>
<arg index='1' type='@' declared_type='NSString*' name='string'/>
<arg index='2' type='@' declared_type='NSString*' name='error'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='control:didFailToValidatePartialString:errorDescription:'>
<arg index='0' type='@' declared_type='NSControl*' name='control'/>
<arg index='1' type='@' declared_type='NSString*' name='string'/>
<arg index='2' type='@' declared_type='NSString*' name='error'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='control:isValidObject:'>
<arg index='0' type='@' declared_type='NSControl*' name='control'/>
<arg index='1' type='@' declared_type='id' name='obj'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='control:textShouldBeginEditing:'>
<arg index='0' type='@' declared_type='NSControl*' name='control'/>
<arg index='1' type='@' declared_type='NSText*' name='fieldEditor'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='control:textShouldEndEditing:'>
<arg index='0' type='@' declared_type='NSControl*' name='control'/>
<arg index='1' type='@' declared_type='NSText*' name='fieldEditor'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='control:textView:completions:forPartialWordRange:indexOfSelectedItem:'>
<arg index='0' type='@' declared_type='NSControl*' name='control'/>
<arg index='1' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='2' type='@' declared_type='NSArray*' name='words'/>
<arg index='3' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<arg index='4' type64='^q' type='^i' declared_type='NSInteger*' name='index'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='control:textView:doCommandBySelector:'>
<arg index='0' type='@' declared_type='NSControl*' name='control'/>
<arg index='1' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='2' type=':' declared_type='SEL' name='commandSelector'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='controlTextDidBeginEditing:'>
<arg index='0' type='@' declared_type='NSNotification*' name='obj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='controlTextDidChange:'>
<arg index='0' type='@' declared_type='NSNotification*' name='obj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='controlTextDidEndEditing:'>
<arg index='0' type='@' declared_type='NSNotification*' name='obj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='conversationIdentifier'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='currentMode'>
<retval type64='q' type='i' declared_type='NSColorPanelMode'/>
</method>
<method selector='customWindowsToEnterFullScreenForWindow:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='customWindowsToExitFullScreenForWindow:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='datePickerCell:validateProposedDateValue:timeInterval:'>
<arg index='0' type='@' declared_type='NSDatePickerCell*' name='aDatePickerCell'/>
<arg index='1' type='^@' declared_type='NSDate**' name='proposedDateValue'/>
<arg index='2' type='^d' declared_type='NSTimeInterval*' name='proposedTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='defaultAnimationForKey:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='defaultPlaceholderForMarker:withBinding:' class_method='true'>
<arg index='0' type='@' declared_type='id' name='marker'/>
<arg index='1' type='@' declared_type='NSString*' name='binding'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='detachColorList:'>
<arg index='0' type='@' declared_type='NSColorList*' name='colorList'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='detachableWindowForPopover:'>
<arg index='0' type='@' declared_type='NSPopover*' name='popover'/>
<retval type='@' declared_type='NSWindow*'/>
</method>
<method selector='didReplaceCharacters'>
<retval type='v' declared_type='void'/>
</method>
<method selector='discardEditing'>
<retval type='v' declared_type='void'/>
</method>
<method selector='doCommandBySelector:'>
<arg index='0' type=':' declared_type='SEL' name='aSelector'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='doCommandBySelector:client:'>
<arg index='0' type=':' declared_type='SEL' name='aSelector'/>
<arg index='1' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dockMenu'>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='draggedImage'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='draggedImage:beganAt:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='draggedImage:endedAt:deposited:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<arg index='2' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='draggedImage:endedAt:operation:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<arg index='2' type64='Q' type='I' declared_type='NSDragOperation' name='operation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='draggedImage:movedTo:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='draggedImageLocation'>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='draggingDestinationWindow'>
<retval type='@' declared_type='NSWindow*'/>
</method>
<method selector='draggingEnded:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='draggingEntered:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type64='Q' type='I' declared_type='NSDragOperation'/>
</method>
<method selector='draggingExited:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='draggingFormation'>
<retval type64='q' type='i' declared_type='NSDraggingFormation'/>
</method>
<method selector='draggingLocation'>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='draggingPasteboard'>
<retval type='@' declared_type='NSPasteboard*'/>
</method>
<method selector='draggingSequenceNumber'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='draggingSession:endedAtPoint:operation:'>
<arg index='0' type='@' declared_type='NSDraggingSession*' name='session'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<arg index='2' type64='Q' type='I' declared_type='NSDragOperation' name='operation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='draggingSession:movedToPoint:'>
<arg index='0' type='@' declared_type='NSDraggingSession*' name='session'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='draggingSession:sourceOperationMaskForDraggingContext:'>
<arg index='0' type='@' declared_type='NSDraggingSession*' name='session'/>
<arg index='1' type64='q' type='i' declared_type='NSDraggingContext' name='context'/>
<retval type64='Q' type='I' declared_type='NSDragOperation'/>
</method>
<method selector='draggingSession:willBeginAtPoint:'>
<arg index='0' type='@' declared_type='NSDraggingSession*' name='session'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='draggingSource'>
<retval type='@' declared_type='id'/>
</method>
<method selector='draggingSourceOperationMask'>
<retval type64='Q' type='I' declared_type='NSDragOperation'/>
</method>
<method selector='draggingSourceOperationMaskForLocal:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type64='Q' type='I' declared_type='NSDragOperation'/>
</method>
<method selector='draggingUpdated:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type64='Q' type='I' declared_type='NSDragOperation'/>
</method>
<method selector='drawCharactersInRange:forContentView:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='1' type='@' declared_type='NSView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawWithFrame:inView:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawWithFrame:inView:characterIndex:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawWithFrame:inView:characterIndex:layoutManager:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<arg index='3' type='@' declared_type='NSLayoutManager*' name='layoutManager'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawerDidClose:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawerDidOpen:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawerShouldClose:'>
<arg index='0' type='@' declared_type='NSDrawer*' name='sender'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='drawerShouldOpen:'>
<arg index='0' type='@' declared_type='NSDrawer*' name='sender'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='drawerWillClose:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawerWillOpen:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawerWillResizeContents:toSize:'>
<arg index='0' type='@' declared_type='NSDrawer*' name='sender'/>
<arg index='1' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='contentSize'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='drawsVerticallyForCharacterAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='enumerateDraggingItemsWithOptions:forView:classes:searchOptions:usingBlock:'>
<arg index='0' type64='Q' type='I' declared_type='NSDraggingItemEnumerationOptions' name='enumOpts'/>
<arg index='1' type='@' declared_type='NSView*' name='view'/>
<arg index='2' type='@' declared_type='NSArray*' name='classArray'/>
<arg index='3' type='@' declared_type='NSDictionary*' name='searchOptions'/>
<arg index='4' function_pointer='true' type='@?' declared_type='void (^)(NSDraggingItem *, NSInteger, BOOL *)' name='block'>
<arg type='@' declared_type='NSDraggingItem*'/>
<arg type64='q' type='i' declared_type='NSInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='exposeBinding:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='binding'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='exposedBindings'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='findBarView'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='findBarViewDidChangeHeight'>
<retval type='v' declared_type='void'/>
</method>
<method selector='firstRectForCharacterRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='theRange'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='firstRectForCharacterRange:actualRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='aRange'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='actualRange'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='firstSelectedRange'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='fontManager:willIncludeFont:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='fontName'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fractionOfDistanceThroughGlyphForPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='aPoint'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='hasMarkedText'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='highlight:withFrame:inView:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='2' type='@' declared_type='NSView*' name='controlView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='identifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='ignoreModifierKeysForDraggingSession:'>
<arg index='0' type='@' declared_type='NSDraggingSession*' name='session'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ignoreModifierKeysWhileDragging'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ignoreSpelling:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='image:didLoadPartOfRepresentation:withValidRows:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<arg index='1' type='@' declared_type='NSImageRep*' name='rep'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='rows'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='image:didLoadRepresentation:withStatus:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<arg index='1' type='@' declared_type='NSImageRep*' name='rep'/>
<arg index='2' type64='Q' type='I' declared_type='NSImageLoadStatus' name='status'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='image:didLoadRepresentationHeader:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<arg index='1' type='@' declared_type='NSImageRep*' name='rep'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='image:willLoadRepresentation:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<arg index='1' type='@' declared_type='NSImageRep*' name='rep'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='imageDidNotDraw:inRect:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='infoForBinding:'>
<arg index='0' type='@' declared_type='NSString*' name='binding'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='initWithPasteboardPropertyList:ofType:'>
<arg index='0' type='@' declared_type='id' name='propertyList'/>
<arg index='1' type='@' declared_type='NSString*' name='type'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPickerMask:colorPanel:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='mask'/>
<arg index='1' type='@' declared_type='NSColorPanel*' name='owningColorPanel'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='inputClientBecomeActive:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='inputClientDisabled:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='inputClientEnabled:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='inputClientResignActive:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:'>
<arg index='0' type='^I' const='true' declared_type='NSGlyph*' name='glyphs'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='length'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='3' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertNewButtonImage:in:'>
<arg index='0' type='@' declared_type='NSImage*' name='newButtonImage'/>
<arg index='1' type='@' declared_type='NSButtonCell*' name='buttonCell'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertText:'>
<arg index='0' type='@' declared_type='id' name='aString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertText:client:'>
<arg index='0' type='@' declared_type='id' name='aString'/>
<arg index='1' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertText:replacementRange:'>
<arg index='0' type='@' declared_type='id' name='aString'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='replacementRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isEditable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isExplicitlyIncluded'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFindBarVisible'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSelectable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='key'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='keyPathsForValuesAffectingPreview'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='layer:shouldInheritContentsScale:fromWindow:'>
<arg index='0' type='@' declared_type='CALayer*' name='layer'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='newScale'/>
<arg index='2' type='@' declared_type='NSWindow*' name='window'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='layoutManager:didCompleteLayoutForTextContainer:atEnd:'>
<arg index='0' type='@' declared_type='NSLayoutManager*' name='layoutManager'/>
<arg index='1' type='@' declared_type='NSTextContainer*' name='textContainer'/>
<arg index='2' type='B' declared_type='BOOL' name='layoutFinishedFlag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:'>
<arg index='0' type='@' declared_type='NSLayoutManager*' name='layoutManager'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='attrs'/>
<arg index='2' type='B' declared_type='BOOL' name='toScreen'/>
<arg index='3' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<arg index='4' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='effectiveCharRange'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='layoutManagerDidInvalidateLayout:'>
<arg index='0' type='@' declared_type='NSLayoutManager*' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='layoutOptions'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='layoutOrientation'>
<retval type64='q' type='i' declared_type='NSTextLayoutOrientation'/>
</method>
<method selector='localizedKey'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='localizedSummaryItems'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='localizedTitlesForItem:'>
<arg index='0' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='markedRange'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='markedTextAbandoned:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='markedTextSelectionChanged:client:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='newSel'/>
<arg index='1' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='menu:updateItem:atIndex:shouldCancel:'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<arg index='1' type='@' declared_type='NSMenuItem*' name='item'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='index'/>
<arg index='3' type='B' declared_type='BOOL' name='shouldCancel'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='menu:willHighlightItem:'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<arg index='1' type='@' declared_type='NSMenuItem*' name='item'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='menuDidClose:'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='menuHasKeyEquivalent:forEvent:target:action:'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<arg index='1' type='@' declared_type='NSEvent*' name='event'/>
<arg index='2' type='^@' declared_type='id*' name='target'/>
<arg index='3' type='^:' declared_type='SEL*' name='action'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='menuNeedsUpdate:'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='menuWillOpen:'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='minContentSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='mouseDownOnCharacterIndex:atCoordinate:withModifier:client:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='theIndex'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='thePoint'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='theFlags'/>
<arg index='3' type='@' declared_type='id' name='sender'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='theIndex'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='thePoint'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='theFlags'/>
<arg index='3' type='@' declared_type='id' name='sender'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mouseUpOnCharacterIndex:atCoordinate:withModifier:client:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='theIndex'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='thePoint'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='theFlags'/>
<arg index='3' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='namesOfPromisedFilesDroppedAtDestination:'>
<arg index='0' type='@' declared_type='NSURL*' name='dropDestination'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='numberOfItemsInComboBox:'>
<arg index='0' type='@' declared_type='NSComboBox*' name='aComboBox'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='numberOfItemsInComboBoxCell:'>
<arg index='0' type='@' declared_type='NSComboBoxCell*' name='comboBoxCell'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='numberOfItemsInMenu:'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='numberOfRowsInTableView:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='numberOfValidItemsForDrop'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='objectDidBeginEditing:'>
<arg index='0' type='@' declared_type='id' name='editor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='objectDidEndEditing:'>
<arg index='0' type='@' declared_type='id' name='editor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='optionDescriptionsForBinding:'>
<arg index='0' type='@' declared_type='NSString*' name='aBinding'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='outlineView:acceptDrop:item:childIndex:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='info'/>
<arg index='2' type='@' declared_type='id' name='item'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='outlineView:child:ofItem:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='index'/>
<arg index='2' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='outlineView:dataCellForTableColumn:item:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='NSCell*'/>
</method>
<method selector='outlineView:didAddRowView:forRow:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableRowView*' name='rowView'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='outlineView:didClickTableColumn:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='outlineView:didDragTableColumn:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='outlineView:didRemoveRowView:forRow:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableRowView*' name='rowView'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='outlineView:draggingSession:endedAtPoint:operation:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSDraggingSession*' name='session'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<arg index='3' type64='Q' type='I' declared_type='NSDragOperation' name='operation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='outlineView:draggingSession:willBeginAtPoint:forItems:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSDraggingSession*' name='session'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<arg index='3' type='@' declared_type='NSArray*' name='draggedItems'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='outlineView:heightOfRowByItem:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='outlineView:isGroupItem:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='outlineView:isItemExpandable:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='outlineView:itemForPersistentObject:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='object'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='outlineView:mouseDownInHeaderOfTableColumn:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSURL*' name='dropDestination'/>
<arg index='2' type='@' declared_type='NSArray*' name='items'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='outlineView:nextTypeSelectMatchFromItem:toItem:forString:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='startItem'/>
<arg index='2' type='@' declared_type='id' name='endItem'/>
<arg index='3' type='@' declared_type='NSString*' name='searchString'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='outlineView:numberOfChildrenOfItem:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='outlineView:objectValueForTableColumn:byItem:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='outlineView:pasteboardWriterForItem:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='outlineView:persistentObjectForItem:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='outlineView:rowViewForItem:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='NSTableRowView*'/>
</method>
<method selector='outlineView:selectionIndexesForProposedSelection:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSIndexSet*' name='proposedSelectionIndexes'/>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='outlineView:setObjectValue:forTableColumn:byItem:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='object'/>
<arg index='2' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='3' type='@' declared_type='id' name='item'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='outlineView:shouldCollapseItem:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='outlineView:shouldEditTableColumn:item:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='outlineView:shouldExpandItem:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='outlineView:shouldReorderColumn:toColumn:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='columnIndex'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='newColumnIndex'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='outlineView:shouldSelectItem:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='outlineView:shouldSelectTableColumn:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='outlineView:shouldShowCellExpansionForTableColumn:item:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='outlineView:shouldShowOutlineCellForItem:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='outlineView:shouldTrackCell:forTableColumn:item:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSCell*' name='cell'/>
<arg index='2' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='3' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='outlineView:shouldTypeSelectForEvent:withCurrentSearchString:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSEvent*' name='event'/>
<arg index='2' type='@' declared_type='NSString*' name='searchString'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='outlineView:sizeToFitWidthOfColumn:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='outlineView:sortDescriptorsDidChange:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSArray*' name='oldDescriptors'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSCell*' name='cell'/>
<arg index='2' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRectPointer' name='rect'/>
<arg index='3' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='4' type='@' declared_type='id' name='item'/>
<arg index='5' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='mouseLocation'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='outlineView:typeSelectStringForTableColumn:item:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='outlineView:updateDraggingItemsForDrag:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='draggingInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='outlineView:validateDrop:proposedItem:proposedChildIndex:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='info'/>
<arg index='2' type='@' declared_type='id' name='item'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type64='Q' type='I' declared_type='NSDragOperation'/>
</method>
<method selector='outlineView:viewForTableColumn:item:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='outlineView:willDisplayCell:forTableColumn:item:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='3' type='@' declared_type='id' name='item'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='outlineView:willDisplayOutlineCell:forTableColumn:item:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='3' type='@' declared_type='id' name='item'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='outlineView:writeItems:toPasteboard:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSArray*' name='items'/>
<arg index='2' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='outlineViewColumnDidMove:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='outlineViewColumnDidResize:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='outlineViewItemDidCollapse:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='outlineViewItemDidExpand:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='outlineViewItemWillCollapse:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='outlineViewItemWillExpand:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='outlineViewSelectionDidChange:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='outlineViewSelectionIsChanging:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pageController:didTransitionToObject:'>
<arg index='0' type='@' declared_type='NSPageController*' name='pageController'/>
<arg index='1' type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pageController:frameForObject:'>
<arg index='0' type='@' declared_type='NSPageController*' name='pageController'/>
<arg index='1' type='@' declared_type='id' name='object'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='pageController:identifierForObject:'>
<arg index='0' type='@' declared_type='NSPageController*' name='pageController'/>
<arg index='1' type='@' declared_type='id' name='object'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pageController:prepareViewController:withObject:'>
<arg index='0' type='@' declared_type='NSPageController*' name='pageController'/>
<arg index='1' type='@' declared_type='NSViewController*' name='viewController'/>
<arg index='2' type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pageController:viewControllerForIdentifier:'>
<arg index='0' type='@' declared_type='NSPageController*' name='pageController'/>
<arg index='1' type='@' declared_type='NSString*' name='identifier'/>
<retval type='@' declared_type='NSViewController*'/>
</method>
<method selector='pageControllerDidEndLiveTransition:'>
<arg index='0' type='@' declared_type='NSPageController*' name='pageController'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pageControllerWillStartLiveTransition:'>
<arg index='0' type='@' declared_type='NSPageController*' name='pageController'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='panel:compareFilename:with:caseSensitive:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='name1'/>
<arg index='2' type='@' declared_type='NSString*' name='name2'/>
<arg index='3' type='B' declared_type='BOOL' name='caseSensitive'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</method>
<method selector='panel:didChangeToDirectoryURL:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type='@' declared_type='NSURL*' name='url'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='panel:directoryDidChange:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='path'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='panel:isValidFilename:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='filename'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='panel:shouldEnableURL:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type='@' declared_type='NSURL*' name='url'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='panel:shouldShowFilename:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='filename'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='panel:userEnteredFilename:confirmed:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='filename'/>
<arg index='2' type='B' declared_type='BOOL' name='okFlag'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='panel:validateURL:error:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type='@' declared_type='NSURL*' name='url'/>
<arg index='2' type='^@' declared_type='NSError**' name='outError'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='panel:willExpand:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type='B' declared_type='BOOL' name='expanding'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='panelSelectionDidChange:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pasteboard:item:provideDataForType:'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<arg index='1' type='@' declared_type='NSPasteboardItem*' name='item'/>
<arg index='2' type='@' declared_type='NSString*' name='type'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pasteboard:provideDataForType:'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='type'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pasteboardChangedOwner:'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pasteboardFinishedWithDataProvider:'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pasteboardPropertyListForType:'>
<arg index='0' type='@' declared_type='NSString*' name='type'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='pathCell:willDisplayOpenPanel:'>
<arg index='0' type='@' declared_type='NSPathCell*' name='pathCell'/>
<arg index='1' type='@' declared_type='NSOpenPanel*' name='openPanel'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pathCell:willPopUpMenu:'>
<arg index='0' type='@' declared_type='NSPathCell*' name='pathCell'/>
<arg index='1' type='@' declared_type='NSMenu*' name='menu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pathControl:acceptDrop:'>
<arg index='0' type='@' declared_type='NSPathControl*' name='pathControl'/>
<arg index='1' type='@' declared_type='id' name='info'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pathControl:shouldDragPathComponentCell:withPasteboard:'>
<arg index='0' type='@' declared_type='NSPathControl*' name='pathControl'/>
<arg index='1' type='@' declared_type='NSPathComponentCell*' name='pathComponentCell'/>
<arg index='2' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pathControl:validateDrop:'>
<arg index='0' type='@' declared_type='NSPathControl*' name='pathControl'/>
<arg index='1' type='@' declared_type='id' name='info'/>
<retval type64='Q' type='I' declared_type='NSDragOperation'/>
</method>
<method selector='pathControl:willDisplayOpenPanel:'>
<arg index='0' type='@' declared_type='NSPathControl*' name='pathControl'/>
<arg index='1' type='@' declared_type='NSOpenPanel*' name='openPanel'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pathControl:willPopUpMenu:'>
<arg index='0' type='@' declared_type='NSPathControl*' name='pathControl'/>
<arg index='1' type='@' declared_type='NSMenu*' name='menu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performActionForItem:'>
<arg index='0' type='@' declared_type='id' name='item'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performDragOperation:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='popoverDidClose:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='popoverDidShow:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='popoverShouldClose:'>
<arg index='0' type='@' declared_type='NSPopover*' name='popover'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='popoverWillClose:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='popoverWillShow:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='prepareForDragOperation:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='provideNewButtonImage'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='provideNewView:'>
<arg index='0' type='B' declared_type='BOOL' name='initialRequest'/>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='readSelectionFromPasteboard:'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='readableTypesForPasteboard:' class_method='true'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='readingOptionsForType:pasteboard:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='type'/>
<arg index='1' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type64='Q' type='I' declared_type='NSPasteboardReadingOptions'/>
</method>
<method selector='rectsForCharacterRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='replaceCharactersInRange:withString:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='1' type='@' declared_type='NSString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='restoreWindowWithIdentifier:state:completionHandler:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='identifier'/>
<arg index='1' type='@' declared_type='NSCoder*' name='state'/>
<arg index='2' function_pointer='true' type='@?' declared_type='void (^)(NSWindow *, NSError *)' name='completionHandler'>
<arg type='@' declared_type='NSWindow*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='rootItemForBrowser:'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='ruleEditor:child:forCriterion:withRowType:'>
<arg index='0' type='@' declared_type='NSRuleEditor*' name='editor'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='index'/>
<arg index='2' type='@' declared_type='id' name='criterion'/>
<arg index='3' type64='Q' type='I' declared_type='NSRuleEditorRowType' name='rowType'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='ruleEditor:displayValueForCriterion:inRow:'>
<arg index='0' type='@' declared_type='NSRuleEditor*' name='editor'/>
<arg index='1' type='@' declared_type='id' name='criterion'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='ruleEditor:numberOfChildrenForCriterion:withRowType:'>
<arg index='0' type='@' declared_type='NSRuleEditor*' name='editor'/>
<arg index='1' type='@' declared_type='id' name='criterion'/>
<arg index='2' type64='Q' type='I' declared_type='NSRuleEditorRowType' name='rowType'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:'>
<arg index='0' type='@' declared_type='NSRuleEditor*' name='editor'/>
<arg index='1' type='@' declared_type='id' name='criterion'/>
<arg index='2' type='@' declared_type='id' name='value'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='ruleEditorRowsDidChange:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollRangeToVisible:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchForItemsWithSearchString:resultLimit:matchedItemHandler:'>
<arg index='0' type='@' declared_type='NSString*' name='searchString'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='resultLimit'/>
<arg index='2' function_pointer='true' type='@?' declared_type='void (^)(NSArray *)' name='handleMatchedItems'>
<arg type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectedRange'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='selectedRanges'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='selectionShouldChangeInOutlineView:'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='selectionShouldChangeInTableView:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAnimatesToDestination:'>
<arg index='0' type='B' declared_type='BOOL' name='animatesToDestination'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAnimations:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='animations'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttachment:'>
<arg index='0' type='@' declared_type='NSTextAttachment*' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='newColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultPlaceholder:forMarker:withBinding:' class_method='true'>
<arg index='0' type='@' declared_type='id' name='placeholder'/>
<arg index='1' type='@' declared_type='id' name='marker'/>
<arg index='2' type='@' declared_type='NSString*' name='binding'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDockTile:'>
<arg index='0' type='@' declared_type='NSDockTile*' name='dockTile'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDraggingFormation:'>
<arg index='0' type64='q' type='i' declared_type='NSDraggingFormation' name='draggingFormation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFindBarView:'>
<arg index='0' type='@' declared_type='NSView*' name='findBarView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFindBarVisible:'>
<arg index='0' type='B' declared_type='BOOL' name='findBarVisible'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIdentifier:'>
<arg index='0' type='@' declared_type='NSString*' name='identifier'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIntAttribute:value:forGlyphAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='attributeTag'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='val'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKey:'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocalizedKey:'>
<arg index='0' type='@' declared_type='NSString*' name='localizedKey'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMarkedText:selectedRange:'>
<arg index='0' type='@' declared_type='id' name='aString'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='selRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMarkedText:selectedRange:replacementRange:'>
<arg index='0' type='@' declared_type='id' name='aString'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='selectedRange'/>
<arg index='2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='replacementRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMode:'>
<arg index='0' type64='q' type='i' declared_type='NSColorPanelMode' name='mode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfValidItemsForDrop:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='numberOfValidItemsForDrop'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedRanges:'>
<arg index='0' type='@' declared_type='NSArray*' name='selectedRanges'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:'>
<arg index='0' type='@' declared_type='id' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharingService:didFailToShareItems:error:'>
<arg index='0' type='@' declared_type='NSSharingService*' name='sharingService'/>
<arg index='1' type='@' declared_type='NSArray*' name='items'/>
<arg index='2' type='@' declared_type='NSError*' name='error'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharingService:didShareItems:'>
<arg index='0' type='@' declared_type='NSSharingService*' name='sharingService'/>
<arg index='1' type='@' declared_type='NSArray*' name='items'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharingService:sourceFrameOnScreenForShareItem:'>
<arg index='0' type='@' declared_type='NSSharingService*' name='sharingService'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='sharingService:sourceWindowForShareItems:sharingContentScope:'>
<arg index='0' type='@' declared_type='NSSharingService*' name='sharingService'/>
<arg index='1' type='@' declared_type='NSArray*' name='items'/>
<arg index='2' type64='^q' type='^i' declared_type='NSSharingContentScope*' name='sharingContentScope'/>
<retval type='@' declared_type='NSWindow*'/>
</method>
<method selector='sharingService:transitionImageForShareItem:contentRect:'>
<arg index='0' type='@' declared_type='NSSharingService*' name='sharingService'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<arg index='2' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect*' name='contentRect'/>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='sharingService:willShareItems:'>
<arg index='0' type='@' declared_type='NSSharingService*' name='sharingService'/>
<arg index='1' type='@' declared_type='NSArray*' name='items'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharingServicePicker:delegateForSharingService:'>
<arg index='0' type='@' declared_type='NSSharingServicePicker*' name='sharingServicePicker'/>
<arg index='1' type='@' declared_type='NSSharingService*' name='sharingService'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='sharingServicePicker:didChooseSharingService:'>
<arg index='0' type='@' declared_type='NSSharingServicePicker*' name='sharingServicePicker'/>
<arg index='1' type='@' declared_type='NSSharingService*' name='service'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharingServicePicker:sharingServicesForItems:proposedSharingServices:'>
<arg index='0' type='@' declared_type='NSSharingServicePicker*' name='sharingServicePicker'/>
<arg index='1' type='@' declared_type='NSArray*' name='items'/>
<arg index='2' type='@' declared_type='NSArray*' name='proposedServices'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='shouldReplaceCharactersInRanges:withStrings:'>
<arg index='0' type='@' declared_type='NSArray*' name='ranges'/>
<arg index='1' type='@' declared_type='NSArray*' name='strings'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showAllHelpTopicsForSearchString:'>
<arg index='0' type='@' declared_type='NSString*' name='searchString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='slideDraggedImageTo:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sound:didFinishPlaying:'>
<arg index='0' type='@' declared_type='NSSound*' name='sound'/>
<arg index='1' type='B' declared_type='BOOL' name='aBool'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='speechRecognizer:didRecognizeCommand:'>
<arg index='0' type='@' declared_type='NSSpeechRecognizer*' name='sender'/>
<arg index='1' type='@' declared_type='id' name='command'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='speechSynthesizer:didEncounterErrorAtIndex:ofString:message:'>
<arg index='0' type='@' declared_type='NSSpeechSynthesizer*' name='sender'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='characterIndex'/>
<arg index='2' type='@' declared_type='NSString*' name='string'/>
<arg index='3' type='@' declared_type='NSString*' name='message'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='speechSynthesizer:didEncounterSyncMessage:'>
<arg index='0' type='@' declared_type='NSSpeechSynthesizer*' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='message'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='speechSynthesizer:didFinishSpeaking:'>
<arg index='0' type='@' declared_type='NSSpeechSynthesizer*' name='sender'/>
<arg index='1' type='B' declared_type='BOOL' name='finishedSpeaking'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='speechSynthesizer:willSpeakPhoneme:'>
<arg index='0' type='@' declared_type='NSSpeechSynthesizer*' name='sender'/>
<arg index='1' type='s' declared_type='short' name='phonemeOpcode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='speechSynthesizer:willSpeakWord:ofString:'>
<arg index='0' type='@' declared_type='NSSpeechSynthesizer*' name='sender'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='characterRange'/>
<arg index='2' type='@' declared_type='NSString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='splitView:additionalEffectiveRectOfDividerAtIndex:'>
<arg index='0' type='@' declared_type='NSSplitView*' name='splitView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='dividerIndex'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='splitView:canCollapseSubview:'>
<arg index='0' type='@' declared_type='NSSplitView*' name='splitView'/>
<arg index='1' type='@' declared_type='NSView*' name='subview'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='splitView:constrainMaxCoordinate:ofSubviewAt:'>
<arg index='0' type='@' declared_type='NSSplitView*' name='splitView'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='proposedMaximumPosition'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='dividerIndex'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='splitView:constrainMinCoordinate:ofSubviewAt:'>
<arg index='0' type='@' declared_type='NSSplitView*' name='splitView'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='proposedMinimumPosition'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='dividerIndex'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='splitView:constrainSplitPosition:ofSubviewAt:'>
<arg index='0' type='@' declared_type='NSSplitView*' name='splitView'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='proposedPosition'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='dividerIndex'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:'>
<arg index='0' type='@' declared_type='NSSplitView*' name='splitView'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='proposedEffectiveRect'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='drawnRect'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='dividerIndex'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='splitView:resizeSubviewsWithOldSize:'>
<arg index='0' type='@' declared_type='NSSplitView*' name='splitView'/>
<arg index='1' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='oldSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='splitView:shouldAdjustSizeOfSubview:'>
<arg index='0' type='@' declared_type='NSSplitView*' name='splitView'/>
<arg index='1' type='@' declared_type='NSView*' name='view'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:'>
<arg index='0' type='@' declared_type='NSSplitView*' name='splitView'/>
<arg index='1' type='@' declared_type='NSView*' name='subview'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='dividerIndex'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='splitView:shouldHideDividerAtIndex:'>
<arg index='0' type='@' declared_type='NSSplitView*' name='splitView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='dividerIndex'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='splitViewDidResizeSubviews:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='splitViewWillResizeSubviews:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='string'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringAtIndex:effectiveRange:endsWithSearchBoundary:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='characterIndex'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='outRange'/>
<arg index='2' type='^B' declared_type='BOOL*' name='outFlag'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringLength'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='supportsMode:'>
<arg index='0' type64='q' type='i' declared_type='NSColorPanelMode' name='mode'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tabView:didSelectTabViewItem:'>
<arg index='0' type='@' declared_type='NSTabView*' name='tabView'/>
<arg index='1' type='@' declared_type='NSTabViewItem*' name='tabViewItem'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tabView:shouldSelectTabViewItem:'>
<arg index='0' type='@' declared_type='NSTabView*' name='tabView'/>
<arg index='1' type='@' declared_type='NSTabViewItem*' name='tabViewItem'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tabView:willSelectTabViewItem:'>
<arg index='0' type='@' declared_type='NSTabView*' name='tabView'/>
<arg index='1' type='@' declared_type='NSTabViewItem*' name='tabViewItem'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tabViewDidChangeNumberOfTabViewItems:'>
<arg index='0' type='@' declared_type='NSTabView*' name='tabView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView:acceptDrop:row:dropOperation:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='id' name='info'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='3' type64='Q' type='I' declared_type='NSTableViewDropOperation' name='dropOperation'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tableView:dataCellForTableColumn:row:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='@' declared_type='NSCell*'/>
</method>
<method selector='tableView:didAddRowView:forRow:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableRowView*' name='rowView'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView:didClickTableColumn:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView:didDragTableColumn:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView:didRemoveRowView:forRow:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableRowView*' name='rowView'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView:draggingSession:endedAtPoint:operation:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSDraggingSession*' name='session'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<arg index='3' type64='Q' type='I' declared_type='NSDragOperation' name='operation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView:draggingSession:willBeginAtPoint:forRowIndexes:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSDraggingSession*' name='session'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<arg index='3' type='@' declared_type='NSIndexSet*' name='rowIndexes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView:heightOfRow:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='tableView:isGroupRow:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tableView:mouseDownInHeaderOfTableColumn:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSURL*' name='dropDestination'/>
<arg index='2' type='@' declared_type='NSIndexSet*' name='indexSet'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='tableView:nextTypeSelectMatchFromRow:toRow:forString:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='startRow'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='endRow'/>
<arg index='3' type='@' declared_type='NSString*' name='searchString'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='tableView:objectValueForTableColumn:row:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='tableView:pasteboardWriterForRow:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='tableView:rowViewForRow:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='@' declared_type='NSTableRowView*'/>
</method>
<method selector='tableView:selectionIndexesForProposedSelection:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSIndexSet*' name='proposedSelectionIndexes'/>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='tableView:setObjectValue:forTableColumn:row:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='id' name='object'/>
<arg index='2' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView:shouldEditTableColumn:row:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tableView:shouldReorderColumn:toColumn:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='columnIndex'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='newColumnIndex'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tableView:shouldSelectRow:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tableView:shouldSelectTableColumn:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tableView:shouldShowCellExpansionForTableColumn:row:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tableView:shouldTrackCell:forTableColumn:row:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSCell*' name='cell'/>
<arg index='2' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tableView:shouldTypeSelectForEvent:withCurrentSearchString:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSEvent*' name='event'/>
<arg index='2' type='@' declared_type='NSString*' name='searchString'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tableView:sizeToFitWidthOfColumn:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='tableView:sortDescriptorsDidChange:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSArray*' name='oldDescriptors'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSCell*' name='cell'/>
<arg index='2' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRectPointer' name='rect'/>
<arg index='3' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='4' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='5' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='mouseLocation'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='tableView:typeSelectStringForTableColumn:row:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='tableView:updateDraggingItemsForDrag:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='id' name='draggingInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView:validateDrop:proposedRow:proposedDropOperation:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='id' name='info'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='3' type64='Q' type='I' declared_type='NSTableViewDropOperation' name='dropOperation'/>
<retval type64='Q' type='I' declared_type='NSDragOperation'/>
</method>
<method selector='tableView:viewForTableColumn:row:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='tableView:willDisplayCell:forTableColumn:row:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView:writeRows:toPasteboard:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSArray*' name='rows'/>
<arg index='2' type='@' declared_type='NSPasteboard*' name='pboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tableView:writeRowsWithIndexes:toPasteboard:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSIndexSet*' name='rowIndexes'/>
<arg index='2' type='@' declared_type='NSPasteboard*' name='pboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tableViewColumnDidMove:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableViewColumnDidResize:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableViewSelectionDidChange:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableViewSelectionIsChanging:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tag'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='terminate:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textDidBeginEditing:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textDidChange:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textDidEndEditing:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textShouldBeginEditing:'>
<arg index='0' type='@' declared_type='NSText*' name='textObject'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='textShouldEndEditing:'>
<arg index='0' type='@' declared_type='NSText*' name='textObject'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='textStorageDidProcessEditing:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textStorageWillProcessEditing:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textView:URLForContentsOfTextAttachment:atIndex:'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='NSTextAttachment*' name='textAttachment'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='textView:clickedOnCell:inRect:'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textView:clickedOnCell:inRect:atIndex:'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='3' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textView:clickedOnLink:'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='id' name='link'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='textView:clickedOnLink:atIndex:'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='id' name='link'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='textView:completions:forPartialWordRange:indexOfSelectedItem:'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='NSArray*' name='words'/>
<arg index='2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<arg index='3' type64='^q' type='^i' declared_type='NSInteger*' name='index'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='textView:didCheckTextInRange:types:options:results:orthography:wordCount:'>
<arg index='0' type='@' declared_type='NSTextView*' name='view'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='2' type='Q' declared_type='NSTextCheckingTypes' name='checkingTypes'/>
<arg index='3' type='@' declared_type='NSDictionary*' name='options'/>
<arg index='4' type='@' declared_type='NSArray*' name='results'/>
<arg index='5' type='@' declared_type='NSOrthography*' name='orthography'/>
<arg index='6' type64='q' type='i' declared_type='NSInteger' name='wordCount'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='textView:doCommandBySelector:'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type=':' declared_type='SEL' name='commandSelector'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='textView:doubleClickedOnCell:inRect:'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textView:doubleClickedOnCell:inRect:atIndex:'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='3' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textView:draggedCell:inRect:event:'>
<arg index='0' type='@' declared_type='NSTextView*' name='view'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='3' type='@' declared_type='NSEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textView:draggedCell:inRect:event:atIndex:'>
<arg index='0' type='@' declared_type='NSTextView*' name='view'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='3' type='@' declared_type='NSEvent*' name='event'/>
<arg index='4' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textView:menu:forEvent:atIndex:'>
<arg index='0' type='@' declared_type='NSTextView*' name='view'/>
<arg index='1' type='@' declared_type='NSMenu*' name='menu'/>
<arg index='2' type='@' declared_type='NSEvent*' name='event'/>
<arg index='3' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='textView:shouldChangeTextInRange:replacementString:'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='affectedCharRange'/>
<arg index='2' type='@' declared_type='NSString*' name='replacementString'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='textView:shouldChangeTextInRanges:replacementStrings:'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='NSArray*' name='affectedRanges'/>
<arg index='2' type='@' declared_type='NSArray*' name='replacementStrings'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='textView:shouldChangeTypingAttributes:toAttributes:'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='oldTypingAttributes'/>
<arg index='2' type='@' declared_type='NSDictionary*' name='newTypingAttributes'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='textView:shouldSetSpellingState:range:'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='value'/>
<arg index='2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='affectedCharRange'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='textView:willChangeSelectionFromCharacterRange:toCharacterRange:'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='oldSelectedCharRange'/>
<arg index='2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='newSelectedCharRange'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='NSArray*' name='oldSelectedCharRanges'/>
<arg index='2' type='@' declared_type='NSArray*' name='newSelectedCharRanges'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='textView:willCheckTextInRange:options:types:'>
<arg index='0' type='@' declared_type='NSTextView*' name='view'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='2' type='@' declared_type='NSDictionary*' name='options'/>
<arg index='3' type='^Q' declared_type='NSTextCheckingTypes*' name='checkingTypes'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='textView:willDisplayToolTip:forCharacterAtIndex:'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='NSString*' name='tooltip'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='characterIndex'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='textView:willShowSharingServicePicker:forItems:'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='NSSharingServicePicker*' name='servicePicker'/>
<arg index='2' type='@' declared_type='NSArray*' name='items'/>
<retval type='@' declared_type='NSSharingServicePicker*'/>
</method>
<method selector='textView:writablePasteboardTypesForCell:atIndex:'>
<arg index='0' type='@' declared_type='NSTextView*' name='view'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='textView:writeCell:atIndex:toPasteboard:type:'>
<arg index='0' type='@' declared_type='NSTextView*' name='view'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<arg index='3' type='@' declared_type='NSPasteboard*' name='pboard'/>
<arg index='4' type='@' declared_type='NSString*' name='type'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='textViewDidChangeSelection:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textViewDidChangeTypingAttributes:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:'>
<arg index='0' type='@' declared_type='NSTokenField*' name='tokenField'/>
<arg index='1' type='@' declared_type='NSString*' name='substring'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='tokenIndex'/>
<arg index='3' type64='^q' type='^i' declared_type='NSInteger*' name='selectedIndex'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='tokenField:displayStringForRepresentedObject:'>
<arg index='0' type='@' declared_type='NSTokenField*' name='tokenField'/>
<arg index='1' type='@' declared_type='id' name='representedObject'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='tokenField:editingStringForRepresentedObject:'>
<arg index='0' type='@' declared_type='NSTokenField*' name='tokenField'/>
<arg index='1' type='@' declared_type='id' name='representedObject'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='tokenField:hasMenuForRepresentedObject:'>
<arg index='0' type='@' declared_type='NSTokenField*' name='tokenField'/>
<arg index='1' type='@' declared_type='id' name='representedObject'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tokenField:menuForRepresentedObject:'>
<arg index='0' type='@' declared_type='NSTokenField*' name='tokenField'/>
<arg index='1' type='@' declared_type='id' name='representedObject'/>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='tokenField:readFromPasteboard:'>
<arg index='0' type='@' declared_type='NSTokenField*' name='tokenField'/>
<arg index='1' type='@' declared_type='NSPasteboard*' name='pboard'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='tokenField:representedObjectForEditingString:'>
<arg index='0' type='@' declared_type='NSTokenField*' name='tokenField'/>
<arg index='1' type='@' declared_type='NSString*' name='editingString'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='tokenField:shouldAddObjects:atIndex:'>
<arg index='0' type='@' declared_type='NSTokenField*' name='tokenField'/>
<arg index='1' type='@' declared_type='NSArray*' name='tokens'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='index'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='tokenField:styleForRepresentedObject:'>
<arg index='0' type='@' declared_type='NSTokenField*' name='tokenField'/>
<arg index='1' type='@' declared_type='id' name='representedObject'/>
<retval type64='Q' type='I' declared_type='NSTokenStyle'/>
</method>
<method selector='tokenField:writeRepresentedObjects:toPasteboard:'>
<arg index='0' type='@' declared_type='NSTokenField*' name='tokenField'/>
<arg index='1' type='@' declared_type='NSArray*' name='objects'/>
<arg index='2' type='@' declared_type='NSPasteboard*' name='pboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:'>
<arg index='0' type='@' declared_type='NSTokenFieldCell*' name='tokenFieldCell'/>
<arg index='1' type='@' declared_type='NSString*' name='substring'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='tokenIndex'/>
<arg index='3' type64='^q' type='^i' declared_type='NSInteger*' name='selectedIndex'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='tokenFieldCell:displayStringForRepresentedObject:'>
<arg index='0' type='@' declared_type='NSTokenFieldCell*' name='tokenFieldCell'/>
<arg index='1' type='@' declared_type='id' name='representedObject'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='tokenFieldCell:editingStringForRepresentedObject:'>
<arg index='0' type='@' declared_type='NSTokenFieldCell*' name='tokenFieldCell'/>
<arg index='1' type='@' declared_type='id' name='representedObject'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='tokenFieldCell:hasMenuForRepresentedObject:'>
<arg index='0' type='@' declared_type='NSTokenFieldCell*' name='tokenFieldCell'/>
<arg index='1' type='@' declared_type='id' name='representedObject'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tokenFieldCell:menuForRepresentedObject:'>
<arg index='0' type='@' declared_type='NSTokenFieldCell*' name='tokenFieldCell'/>
<arg index='1' type='@' declared_type='id' name='representedObject'/>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='tokenFieldCell:readFromPasteboard:'>
<arg index='0' type='@' declared_type='NSTokenFieldCell*' name='tokenFieldCell'/>
<arg index='1' type='@' declared_type='NSPasteboard*' name='pboard'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='tokenFieldCell:representedObjectForEditingString:'>
<arg index='0' type='@' declared_type='NSTokenFieldCell*' name='tokenFieldCell'/>
<arg index='1' type='@' declared_type='NSString*' name='editingString'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='tokenFieldCell:shouldAddObjects:atIndex:'>
<arg index='0' type='@' declared_type='NSTokenFieldCell*' name='tokenFieldCell'/>
<arg index='1' type='@' declared_type='NSArray*' name='tokens'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='index'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='tokenFieldCell:styleForRepresentedObject:'>
<arg index='0' type='@' declared_type='NSTokenFieldCell*' name='tokenFieldCell'/>
<arg index='1' type='@' declared_type='id' name='representedObject'/>
<retval type64='Q' type='I' declared_type='NSTokenStyle'/>
</method>
<method selector='tokenFieldCell:writeRepresentedObjects:toPasteboard:'>
<arg index='0' type='@' declared_type='NSTokenFieldCell*' name='tokenFieldCell'/>
<arg index='1' type='@' declared_type='NSArray*' name='objects'/>
<arg index='2' type='@' declared_type='NSPasteboard*' name='pboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:'>
<arg index='0' type='@' declared_type='NSToolbar*' name='toolbar'/>
<arg index='1' type='@' declared_type='NSString*' name='itemIdentifier'/>
<arg index='2' type='B' declared_type='BOOL' name='flag'/>
<retval type='@' declared_type='NSToolbarItem*'/>
</method>
<method selector='toolbarAllowedItemIdentifiers:'>
<arg index='0' type='@' declared_type='NSToolbar*' name='toolbar'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='toolbarDefaultItemIdentifiers:'>
<arg index='0' type='@' declared_type='NSToolbar*' name='toolbar'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='toolbarDidRemoveItem:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='toolbarSelectableItemIdentifiers:'>
<arg index='0' type='@' declared_type='NSToolbar*' name='toolbar'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='toolbarWillAddItem:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='2' type='@' declared_type='NSView*' name='controlView'/>
<arg index='3' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<arg index='4' type='B' declared_type='BOOL' name='flag'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='trackMouse:inRect:ofView:untilMouseUp:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='2' type='@' declared_type='NSView*' name='controlView'/>
<arg index='3' type='B' declared_type='BOOL' name='flag'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='unbind:'>
<arg index='0' type='@' declared_type='NSString*' name='binding'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='undoManagerForTextView:'>
<arg index='0' type='@' declared_type='NSTextView*' name='view'/>
<retval type='@' declared_type='NSUndoManager*'/>
</method>
<method selector='unmarkText'>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateDraggingItemsForDrag:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='validAttributesForMarkedText'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='validModesForFontPanel:'>
<arg index='0' type='@' declared_type='NSFontPanel*' name='fontPanel'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='validateMenuItem:'>
<arg index='0' type='@' declared_type='NSMenuItem*' name='menuItem'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='validateToolbarItem:'>
<arg index='0' type='@' declared_type='NSToolbarItem*' name='theItem'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='validateUserInterfaceItem:'>
<arg index='0' type='@' declared_type='id' name='anItem'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='value'>
<retval type='@' declared_type='id'/>
</method>
<method selector='valueClassForBinding:'>
<arg index='0' type='@' declared_type='NSString*' name='binding'/>
<retval type='#' declared_type='Class'/>
</method>
<method selector='view:stringForToolTip:point:userData:'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<arg index='1' type64='q' type='i' declared_type='NSToolTipTag' name='tag'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<arg index='3' type='^v' declared_type='void*' name='data'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='viewSizeChanged:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='visibleCharacterRanges'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='wantsPeriodicDraggingUpdates'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='wantsToDelayTextChangeNotifications'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='wantsToHandleMouseEvents'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='wantsToInterpretAllKeystrokes'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='wantsToTrackMouse'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='2' type='@' declared_type='NSView*' name='controlView'/>
<arg index='3' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='window:didDecodeRestorableState:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type='@' declared_type='NSCoder*' name='state'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='window:shouldDragDocumentWithEvent:from:withPasteboard:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type='@' declared_type='NSEvent*' name='event'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='dragImageLocation'/>
<arg index='3' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='window:shouldPopUpDocumentPathMenu:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type='@' declared_type='NSMenu*' name='menu'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='window:startCustomAnimationToEnterFullScreenWithDuration:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type='d' declared_type='NSTimeInterval' name='duration'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='window:startCustomAnimationToExitFullScreenWithDuration:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type='d' declared_type='NSTimeInterval' name='duration'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='window:willEncodeRestorableState:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type='@' declared_type='NSCoder*' name='state'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='window:willPositionSheet:usingRect:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type='@' declared_type='NSWindow*' name='sheet'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='window:willResizeForVersionBrowserWithMaxPreferredSize:maxAllowedSize:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='maxPreferredFrameSize'/>
<arg index='2' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='maxAllowedFrameSize'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='window:willUseFullScreenContentSize:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='proposedSize'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='window:willUseFullScreenPresentationOptions:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type64='Q' type='I' declared_type='NSApplicationPresentationOptions' name='proposedOptions'/>
<retval type64='Q' type='I' declared_type='NSApplicationPresentationOptions'/>
</method>
<method selector='windowDidBecomeKey:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowDidBecomeMain:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowDidChangeBackingProperties:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowDidChangeScreen:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowDidChangeScreenProfile:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowDidDeminiaturize:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowDidEndLiveResize:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowDidEndSheet:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowDidEnterFullScreen:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowDidEnterVersionBrowser:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowDidExitFullScreen:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowDidExitVersionBrowser:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowDidExpose:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowDidFailToEnterFullScreen:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowDidFailToExitFullScreen:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowDidMiniaturize:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowDidMove:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowDidResignKey:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowDidResignMain:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowDidResize:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowDidUpdate:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowLevel'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='windowShouldClose:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='windowShouldZoom:toFrame:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='newFrame'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='windowWillBeginSheet:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowWillClose:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowWillEnterFullScreen:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowWillEnterVersionBrowser:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowWillExitFullScreen:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowWillExitVersionBrowser:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowWillMiniaturize:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowWillMove:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowWillResize:toSize:'>
<arg index='0' type='@' declared_type='NSWindow*' name='sender'/>
<arg index='1' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='frameSize'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='windowWillReturnFieldEditor:toObject:'>
<arg index='0' type='@' declared_type='NSWindow*' name='sender'/>
<arg index='1' type='@' declared_type='id' name='client'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='windowWillReturnUndoManager:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<retval type='@' declared_type='NSUndoManager*'/>
</method>
<method selector='windowWillStartLiveResize:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowWillUseStandardFrame:defaultFrame:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='newFrame'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='writableTypesForPasteboard:'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='writeSelectionToPasteboard:types:'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pboard'/>
<arg index='1' type='@' declared_type='NSArray*' name='types'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writingOptionsForType:pasteboard:'>
<arg index='0' type='@' declared_type='NSString*' name='type'/>
<arg index='1' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type64='Q' type='I' declared_type='NSPasteboardWritingOptions'/>
</method>
</class>
<class name='NSObjectController'>
<method selector='add:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addObject:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='automaticallyPreparesContent'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canAdd'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canRemove'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='content'>
<retval type='@' declared_type='id'/>
</method>
<method selector='defaultFetchRequest'>
<retval type='@' declared_type='NSFetchRequest*'/>
</method>
<method selector='entityName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fetch:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fetchPredicate'>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='fetchWithRequest:merge:error:'>
<arg index='0' type='@' declared_type='NSFetchRequest*' name='fetchRequest'/>
<arg index='1' type='B' declared_type='BOOL' name='merge'/>
<arg index='2' type='^@' declared_type='NSError**' name='error'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithContent:'>
<arg index='0' type='@' declared_type='id' name='content'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEditable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='newObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='objectClass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='prepareContent'>
<retval type='v' declared_type='void'/>
</method>
<method selector='remove:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObject:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectedObjects'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='selection'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAutomaticallyPreparesContent:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContent:'>
<arg index='0' type='@' declared_type='id' name='content'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEditable:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEntityName:'>
<arg index='0' type='@' declared_type='NSString*' name='entityName'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFetchPredicate:'>
<arg index='0' type='@' declared_type='NSPredicate*' name='predicate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' type='@' declared_type='NSManagedObjectContext*' name='managedObjectContext'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectClass:'>
<arg index='0' type='#' declared_type='Class' name='objectClass'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesLazyFetching:'>
<arg index='0' type='B' declared_type='BOOL' name='enabled'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='usesLazyFetching'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='validateUserInterfaceItem:'>
<arg index='0' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSOpenGLContext'>
<method selector='CGLContextObj'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='clearCurrentContext' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='clearDrawable'>
<retval type='v' declared_type='void'/>
</method>
<method selector='copyAttributesFromContext:withMask:'>
<arg index='0' type='@' declared_type='NSOpenGLContext*' name='context'/>
<arg index='1' type='I' declared_type='GLbitfield' name='mask'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='createTexture:fromView:internalFormat:'>
<arg index='0' type='I' declared_type='GLenum' name='target'/>
<arg index='1' type='@' declared_type='NSView*' name='view'/>
<arg index='2' type='I' declared_type='GLenum' name='format'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='currentContext' class_method='true'>
<retval type='@' declared_type='NSOpenGLContext*'/>
</method>
<method selector='currentVirtualScreen'>
<retval type='i' declared_type='GLint'/>
</method>
<method selector='flushBuffer'>
<retval type='v' declared_type='void'/>
</method>
<method selector='getValues:forParameter:'>
<arg index='0' type='^i' declared_type='GLint*' name='vals'/>
<arg index='1' type='i' declared_type='NSOpenGLContextParameter' name='param'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithCGLContextObj:'>
<arg index='0' type='^v' declared_type='void*' name='context'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFormat:shareContext:'>
<arg index='0' type='@' declared_type='NSOpenGLPixelFormat*' name='format'/>
<arg index='1' type='@' declared_type='NSOpenGLContext*' name='share'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='makeCurrentContext'>
<retval type='v' declared_type='void'/>
</method>
<method selector='pixelBuffer'>
<retval type='@' declared_type='NSOpenGLPixelBuffer*'/>
</method>
<method selector='pixelBufferCubeMapFace'>
<retval type='I' declared_type='GLenum'/>
</method>
<method selector='pixelBufferMipMapLevel'>
<retval type='i' declared_type='GLint'/>
</method>
<method selector='setCurrentVirtualScreen:'>
<arg index='0' type='i' declared_type='GLint' name='screen'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFullScreen'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOffScreen:width:height:rowbytes:'>
<arg index='0' type='^v' declared_type='void*' name='baseaddr'/>
<arg index='1' type='i' declared_type='GLsizei' name='width'/>
<arg index='2' type='i' declared_type='GLsizei' name='height'/>
<arg index='3' type='i' declared_type='GLint' name='rowbytes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPixelBuffer:cubeMapFace:mipMapLevel:currentVirtualScreen:'>
<arg index='0' type='@' declared_type='NSOpenGLPixelBuffer*' name='pixelBuffer'/>
<arg index='1' type='I' declared_type='GLenum' name='face'/>
<arg index='2' type='i' declared_type='GLint' name='level'/>
<arg index='3' type='i' declared_type='GLint' name='screen'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextureImageToPixelBuffer:colorBuffer:'>
<arg index='0' type='@' declared_type='NSOpenGLPixelBuffer*' name='pixelBuffer'/>
<arg index='1' type='I' declared_type='GLenum' name='source'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValues:forParameter:'>
<arg index='0' type='^i' const='true' declared_type='GLint*' name='vals'/>
<arg index='1' type='i' declared_type='NSOpenGLContextParameter' name='param'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setView:'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='update'>
<retval type='v' declared_type='void'/>
</method>
<method selector='view'>
<retval type='@' declared_type='NSView*'/>
</method>
</class>
<class name='NSOpenGLLayer'>
<method selector='canDrawInOpenGLContext:pixelFormat:forLayerTime:displayTime:'>
<arg index='0' type='@' declared_type='NSOpenGLContext*' name='context'/>
<arg index='1' type='@' declared_type='NSOpenGLPixelFormat*' name='pixelFormat'/>
<arg index='2' type='d' declared_type='CFTimeInterval' name='t'/>
<arg index='3' type='^{_CVTimeStamp=IiqQdq{CVSMPTETime=ssIIIssss}QQ}' const='true' declared_type='CVTimeStamp*' name='ts'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='drawInOpenGLContext:pixelFormat:forLayerTime:displayTime:'>
<arg index='0' type='@' declared_type='NSOpenGLContext*' name='context'/>
<arg index='1' type='@' declared_type='NSOpenGLPixelFormat*' name='pixelFormat'/>
<arg index='2' type='d' declared_type='CFTimeInterval' name='t'/>
<arg index='3' type='^{_CVTimeStamp=IiqQdq{CVSMPTETime=ssIIIssss}QQ}' const='true' declared_type='CVTimeStamp*' name='ts'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='openGLContext'>
<retval type='@' declared_type='NSOpenGLContext*'/>
</method>
<method selector='openGLContextForPixelFormat:'>
<arg index='0' type='@' declared_type='NSOpenGLPixelFormat*' name='pixelFormat'/>
<retval type='@' declared_type='NSOpenGLContext*'/>
</method>
<method selector='openGLPixelFormat'>
<retval type='@' declared_type='NSOpenGLPixelFormat*'/>
</method>
<method selector='openGLPixelFormatForDisplayMask:'>
<arg index='0' type='I' declared_type='uint32_t' name='mask'/>
<retval type='@' declared_type='NSOpenGLPixelFormat*'/>
</method>
<method selector='setOpenGLContext:'>
<arg index='0' type='@' declared_type='NSOpenGLContext*' name='openGLContext'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpenGLPixelFormat:'>
<arg index='0' type='@' declared_type='NSOpenGLPixelFormat*' name='openGLPixelFormat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setView:'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='view'>
<retval type='@' declared_type='NSView*'/>
</method>
</class>
<class name='NSOpenGLPixelBuffer'>
<method selector='CGLPBufferObj'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='initWithCGLPBufferObj:'>
<arg index='0' type='^v' declared_type='void*' name='pbuffer'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithTextureTarget:textureInternalFormat:textureMaxMipMapLevel:pixelsWide:pixelsHigh:'>
<arg index='0' type='I' declared_type='GLenum' name='target'/>
<arg index='1' type='I' declared_type='GLenum' name='format'/>
<arg index='2' type='i' declared_type='GLint' name='maxLevel'/>
<arg index='3' type='i' declared_type='GLsizei' name='pixelsWide'/>
<arg index='4' type='i' declared_type='GLsizei' name='pixelsHigh'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='pixelsHigh'>
<retval type='i' declared_type='GLsizei'/>
</method>
<method selector='pixelsWide'>
<retval type='i' declared_type='GLsizei'/>
</method>
<method selector='textureInternalFormat'>
<retval type='I' declared_type='GLenum'/>
</method>
<method selector='textureMaxMipMapLevel'>
<retval type='i' declared_type='GLint'/>
</method>
<method selector='textureTarget'>
<retval type='I' declared_type='GLenum'/>
</method>
</class>
<class name='NSOpenGLPixelFormat'>
<method selector='CGLPixelFormatObj'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='attributes'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='getValues:forAttribute:forVirtualScreen:'>
<arg index='0' type='^i' declared_type='GLint*' name='vals'/>
<arg index='1' type='I' declared_type='NSOpenGLPixelFormatAttribute' name='attrib'/>
<arg index='2' type='i' declared_type='GLint' name='screen'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithAttributes:'>
<arg index='0' type='^I' const='true' declared_type='NSOpenGLPixelFormatAttribute*' name='attribs'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCGLPixelFormatObj:'>
<arg index='0' type='^v' declared_type='void*' name='format'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:'>
<arg index='0' type='@' declared_type='NSData*' name='attribs'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='numberOfVirtualScreens'>
<retval type='i' declared_type='GLint'/>
</method>
<method selector='setAttributes:'>
<arg index='0' type='@' declared_type='NSData*' name='attribs'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSOpenGLView'>
<method selector='clearGLContext'>
<retval type='v' declared_type='void'/>
</method>
<method selector='defaultPixelFormat' class_method='true'>
<retval type='@' declared_type='NSOpenGLPixelFormat*'/>
</method>
<method selector='initWithFrame:pixelFormat:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frameRect'/>
<arg index='1' type='@' declared_type='NSOpenGLPixelFormat*' name='format'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='openGLContext'>
<retval type='@' declared_type='NSOpenGLContext*'/>
</method>
<method selector='pixelFormat'>
<retval type='@' declared_type='NSOpenGLPixelFormat*'/>
</method>
<method selector='prepareOpenGL'>
<retval type='v' declared_type='void'/>
</method>
<method selector='reshape'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpenGLContext:'>
<arg index='0' type='@' declared_type='NSOpenGLContext*' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPixelFormat:'>
<arg index='0' type='@' declared_type='NSOpenGLPixelFormat*' name='pixelFormat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='update'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSOpenPanel'>
<method selector='URLs'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='allowsMultipleSelection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='beginForDirectory:file:types:modelessDelegate:didEndSelector:contextInfo:'>
<arg index='0' type='@' declared_type='NSString*' name='path'/>
<arg index='1' type='@' declared_type='NSString*' name='name'/>
<arg index='2' type='@' declared_type='NSArray*' name='fileTypes'/>
<arg index='3' type='@' declared_type='id' name='delegate'/>
<arg index='4' type=':' declared_type='SEL' name='didEndSelector'/>
<arg index='5' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginSheetForDirectory:file:types:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
<arg index='0' type='@' declared_type='NSString*' name='path'/>
<arg index='1' type='@' declared_type='NSString*' name='name'/>
<arg index='2' type='@' declared_type='NSArray*' name='fileTypes'/>
<arg index='3' type='@' declared_type='NSWindow*' name='docWindow'/>
<arg index='4' type='@' declared_type='id' name='delegate'/>
<arg index='5' type=':' declared_type='SEL' name='didEndSelector'/>
<arg index='6' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='canChooseDirectories'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canChooseFiles'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='filenames'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='openPanel' class_method='true'>
<retval type='@' declared_type='NSOpenPanel*'/>
</method>
<method selector='resolvesAliases'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='runModalForDirectory:file:types:'>
<arg index='0' type='@' declared_type='NSString*' name='path'/>
<arg index='1' type='@' declared_type='NSString*' name='name'/>
<arg index='2' type='@' declared_type='NSArray*' name='fileTypes'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='runModalForTypes:'>
<arg index='0' type='@' declared_type='NSArray*' name='fileTypes'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCanChooseDirectories:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCanChooseFiles:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResolvesAliases:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSOutlineView'>
<method selector='autoresizesOutlineColumn'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='autosaveExpandedItems'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='collapseItem:'>
<arg index='0' type='@' declared_type='id' name='item'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='collapseItem:collapseChildren:'>
<arg index='0' type='@' declared_type='id' name='item'/>
<arg index='1' type='B' declared_type='BOOL' name='collapseChildren'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dataSource'>
<retval type='@' declared_type='id'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='expandItem:'>
<arg index='0' type='@' declared_type='id' name='item'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='expandItem:expandChildren:'>
<arg index='0' type='@' declared_type='id' name='item'/>
<arg index='1' type='B' declared_type='BOOL' name='expandChildren'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='frameOfOutlineCellAtRow:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='indentationMarkerFollowsCell'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='indentationPerLevel'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='insertItemsAtIndexes:inParent:withAnimation:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='indexes'/>
<arg index='1' type='@' declared_type='id' name='parent'/>
<arg index='2' type64='Q' type='I' declared_type='NSTableViewAnimationOptions' name='animationOptions'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isExpandable:'>
<arg index='0' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isItemExpanded:'>
<arg index='0' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='itemAtRow:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='levelForItem:'>
<arg index='0' type='@' declared_type='id' name='item'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='levelForRow:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='moveItemAtIndex:inParent:toIndex:inParent:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='fromIndex'/>
<arg index='1' type='@' declared_type='id' name='oldParent'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='toIndex'/>
<arg index='3' type='@' declared_type='id' name='newParent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='outlineTableColumn'>
<retval type='@' declared_type='NSTableColumn*'/>
</method>
<method selector='parentForItem:'>
<arg index='0' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='reloadItem:'>
<arg index='0' type='@' declared_type='id' name='item'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reloadItem:reloadChildren:'>
<arg index='0' type='@' declared_type='id' name='item'/>
<arg index='1' type='B' declared_type='BOOL' name='reloadChildren'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeItemsAtIndexes:inParent:withAnimation:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='indexes'/>
<arg index='1' type='@' declared_type='id' name='parent'/>
<arg index='2' type64='Q' type='I' declared_type='NSTableViewAnimationOptions' name='animationOptions'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rowForItem:'>
<arg index='0' type='@' declared_type='id' name='item'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='setAutoresizesOutlineColumn:'>
<arg index='0' type='B' declared_type='BOOL' name='resize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutosaveExpandedItems:'>
<arg index='0' type='B' declared_type='BOOL' name='save'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDataSource:'>
<arg index='0' type='@' declared_type='id' name='aSource'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDropItem:dropChildIndex:'>
<arg index='0' type='@' declared_type='id' name='item'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIndentationMarkerFollowsCell:'>
<arg index='0' type='B' declared_type='BOOL' name='drawInCell'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIndentationPerLevel:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='indentationPerLevel'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOutlineTableColumn:'>
<arg index='0' type='@' declared_type='NSTableColumn*' name='outlineTableColumn'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldCollapseAutoExpandedItemsForDeposited:'>
<arg index='0' type='B' declared_type='BOOL' name='deposited'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSPDFImageRep'>
<method selector='PDFRepresentation'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='bounds'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='currentPage'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='imageRepWithData:' class_method='true'>
<arg index='0' type='@' declared_type='NSData*' name='pdfData'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:'>
<arg index='0' type='@' declared_type='NSData*' name='pdfData'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='pageCount'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='setCurrentPage:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='page'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSPICTImageRep'>
<method selector='PICTRepresentation'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='boundingBox'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='imageRepWithData:' class_method='true'>
<arg index='0' type='@' declared_type='NSData*' name='pictData'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:'>
<arg index='0' type='@' declared_type='NSData*' name='pictData'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSPageController'>
<method selector='arrangedObjects'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='completeTransition'>
<retval type='v' declared_type='void'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='navigateBack:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='navigateForward:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='navigateForwardToObject:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectedIndex'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='selectedViewController'>
<retval type='@' declared_type='NSViewController*'/>
</method>
<method selector='setArrangedObjects:'>
<arg index='0' type='@' declared_type='NSArray*' name='arrangedObjects'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='selectedIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTransitionStyle:'>
<arg index='0' type64='q' type='i' declared_type='NSPageControllerTransitionStyle' name='transitionStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='takeSelectedIndexFrom:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='transitionStyle'>
<retval type64='q' type='i' declared_type='NSPageControllerTransitionStyle'/>
</method>
</class>
<class name='NSPageLayout'>
<method selector='accessoryControllers'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='accessoryView'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='addAccessoryController:'>
<arg index='0' type='@' declared_type='NSViewController*' name='accessoryController'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:'>
<arg index='0' type='@' declared_type='NSPrintInfo*' name='printInfo'/>
<arg index='1' type='@' declared_type='NSWindow*' name='docWindow'/>
<arg index='2' type='@' declared_type='id' name='delegate'/>
<arg index='3' type=':' declared_type='SEL' name='didEndSelector'/>
<arg index='4' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pageLayout' class_method='true'>
<retval type='@' declared_type='NSPageLayout*'/>
</method>
<method selector='printInfo'>
<retval type='@' declared_type='NSPrintInfo*'/>
</method>
<method selector='readPrintInfo'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAccessoryController:'>
<arg index='0' type='@' declared_type='NSViewController*' name='accessoryController'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='runModal'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='runModalWithPrintInfo:'>
<arg index='0' type='@' declared_type='NSPrintInfo*' name='printInfo'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='setAccessoryView:'>
<arg index='0' type='@' declared_type='NSView*' name='accessoryView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='writePrintInfo'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSPanel'>
<method selector='becomesKeyOnlyIfNeeded'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFloatingPanel'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setBecomesKeyOnlyIfNeeded:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFloatingPanel:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWorksWhenModal:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='worksWhenModal'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSParagraphStyle'>
<method selector='alignment'>
<retval type64='Q' type='I' declared_type='NSTextAlignment'/>
</method>
<method selector='baseWritingDirection'>
<retval type64='q' type='i' declared_type='NSWritingDirection'/>
</method>
<method selector='defaultParagraphStyle' class_method='true'>
<retval type='@' declared_type='NSParagraphStyle*'/>
</method>
<method selector='defaultTabInterval'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='defaultWritingDirectionForLanguage:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='languageName'/>
<retval type64='q' type='i' declared_type='NSWritingDirection'/>
</method>
<method selector='firstLineHeadIndent'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='headIndent'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='headerLevel'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='hyphenationFactor'>
<retval type='f' declared_type='float'/>
</method>
<method selector='lineBreakMode'>
<retval type64='Q' type='I' declared_type='NSLineBreakMode'/>
</method>
<method selector='lineHeightMultiple'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='lineSpacing'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='maximumLineHeight'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='minimumLineHeight'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='paragraphSpacing'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='paragraphSpacingBefore'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='tabStops'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='tailIndent'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='textBlocks'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='textLists'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='tighteningFactorForTruncation'>
<retval type='f' declared_type='float'/>
</method>
</class>
<class name='NSPasteboard'>
<method selector='addTypes:owner:'>
<arg index='0' type='@' declared_type='NSArray*' name='newTypes'/>
<arg index='1' type='@' declared_type='id' name='newOwner'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='availableTypeFromArray:'>
<arg index='0' type='@' declared_type='NSArray*' name='types'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='canReadItemWithDataConformingToTypes:'>
<arg index='0' type='@' declared_type='NSArray*' name='types'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canReadObjectForClasses:options:'>
<arg index='0' type='@' declared_type='NSArray*' name='classArray'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='options'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='changeCount'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='clearContents'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='dataForType:'>
<arg index='0' type='@' declared_type='NSString*' name='dataType'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='declareTypes:owner:'>
<arg index='0' type='@' declared_type='NSArray*' name='newTypes'/>
<arg index='1' type='@' declared_type='id' name='newOwner'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='generalPasteboard' class_method='true'>
<retval type='@' declared_type='NSPasteboard*'/>
</method>
<method selector='indexOfPasteboardItem:'>
<arg index='0' type='@' declared_type='NSPasteboardItem*' name='pasteboardItem'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pasteboardByFilteringData:ofType:' class_method='true'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<arg index='1' type='@' declared_type='NSString*' name='type'/>
<retval type='@' declared_type='NSPasteboard*'/>
</method>
<method selector='pasteboardByFilteringFile:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='filename'/>
<retval type='@' declared_type='NSPasteboard*'/>
</method>
<method selector='pasteboardByFilteringTypesInPasteboard:' class_method='true'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pboard'/>
<retval type='@' declared_type='NSPasteboard*'/>
</method>
<method selector='pasteboardItems'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='pasteboardWithName:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<retval type='@' declared_type='NSPasteboard*'/>
</method>
<method selector='pasteboardWithUniqueName' class_method='true'>
<retval type='@' declared_type='NSPasteboard*'/>
</method>
<method selector='propertyListForType:'>
<arg index='0' type='@' declared_type='NSString*' name='dataType'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='readFileContentsType:toFile:'>
<arg index='0' type='@' declared_type='NSString*' name='type'/>
<arg index='1' type='@' declared_type='NSString*' name='filename'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='readFileWrapper'>
<retval type='@' declared_type='NSFileWrapper*'/>
</method>
<method selector='readObjectsForClasses:options:'>
<arg index='0' type='@' declared_type='NSArray*' name='classArray'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='options'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='releaseGlobally'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setData:forType:'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<arg index='1' type='@' declared_type='NSString*' name='dataType'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setPropertyList:forType:'>
<arg index='0' type='@' declared_type='id' name='plist'/>
<arg index='1' type='@' declared_type='NSString*' name='dataType'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setString:forType:'>
<arg index='0' type='@' declared_type='NSString*' name='string'/>
<arg index='1' type='@' declared_type='NSString*' name='dataType'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='stringForType:'>
<arg index='0' type='@' declared_type='NSString*' name='dataType'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='types'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='typesFilterableTo:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='type'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='writeFileContents:'>
<arg index='0' type='@' declared_type='NSString*' name='filename'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeFileWrapper:'>
<arg index='0' type='@' declared_type='NSFileWrapper*' name='wrapper'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeObjects:'>
<arg index='0' type='@' declared_type='NSArray*' name='objects'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSPasteboardItem'>
<method selector='availableTypeFromArray:'>
<arg index='0' type='@' declared_type='NSArray*' name='types'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='dataForType:'>
<arg index='0' type='@' declared_type='NSString*' name='type'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='propertyListForType:'>
<arg index='0' type='@' declared_type='NSString*' name='type'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setData:forType:'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<arg index='1' type='@' declared_type='NSString*' name='type'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDataProvider:forTypes:'>
<arg index='0' type='@' declared_type='id' name='dataProvider'/>
<arg index='1' type='@' declared_type='NSArray*' name='types'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setPropertyList:forType:'>
<arg index='0' type='@' declared_type='id' name='propertyList'/>
<arg index='1' type='@' declared_type='NSString*' name='type'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setString:forType:'>
<arg index='0' type='@' declared_type='NSString*' name='string'/>
<arg index='1' type='@' declared_type='NSString*' name='type'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='stringForType:'>
<arg index='0' type='@' declared_type='NSString*' name='type'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='types'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSPathCell'>
<method selector='URL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='allowedTypes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='backgroundColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='clickedPathComponentCell'>
<retval type='@' declared_type='NSPathComponentCell*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='doubleAction'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='mouseEntered:withFrame:inView:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frame'/>
<arg index='2' type='@' declared_type='NSView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mouseExited:withFrame:inView:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frame'/>
<arg index='2' type='@' declared_type='NSView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pathComponentCellAtPoint:withFrame:inView:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frame'/>
<arg index='2' type='@' declared_type='NSView*' name='view'/>
<retval type='@' declared_type='NSPathComponentCell*'/>
</method>
<method selector='pathComponentCellClass' class_method='true'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='pathComponentCells'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='pathStyle'>
<retval type64='q' type='i' declared_type='NSPathStyle'/>
</method>
<method selector='placeholderAttributedString'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='placeholderString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='rectOfPathComponentCell:withFrame:inView:'>
<arg index='0' type='@' declared_type='NSPathComponentCell*' name='cell'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frame'/>
<arg index='2' type='@' declared_type='NSView*' name='view'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='setAllowedTypes:'>
<arg index='0' type='@' declared_type='NSArray*' name='allowedTypes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setControlSize:'>
<arg index='0' type64='Q' type='I' declared_type='NSControlSize' name='size'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDoubleAction:'>
<arg index='0' type=':' declared_type='SEL' name='action'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectValue:'>
<arg index='0' type='@' declared_type='id' name='obj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPathComponentCells:'>
<arg index='0' type='@' declared_type='NSArray*' name='cells'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPathStyle:'>
<arg index='0' type64='q' type='i' declared_type='NSPathStyle' name='style'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlaceholderAttributedString:'>
<arg index='0' type='@' declared_type='NSAttributedString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlaceholderString:'>
<arg index='0' type='@' declared_type='NSString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setURL:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSPathComponentCell'>
<method selector='URL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='image'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='setImage:'>
<arg index='0' type='@' declared_type='NSImage*' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setURL:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSPathControl'>
<method selector='URL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='backgroundColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='clickedPathComponentCell'>
<retval type='@' declared_type='NSPathComponentCell*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='doubleAction'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='menu'>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='pathComponentCells'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='pathStyle'>
<retval type64='q' type='i' declared_type='NSPathStyle'/>
</method>
<method selector='setBackgroundColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDoubleAction:'>
<arg index='0' type=':' declared_type='SEL' name='action'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDraggingSourceOperationMask:forLocal:'>
<arg index='0' type64='Q' type='I' declared_type='NSDragOperation' name='mask'/>
<arg index='1' type='B' declared_type='BOOL' name='isLocal'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMenu:'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPathComponentCells:'>
<arg index='0' type='@' declared_type='NSArray*' name='cells'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPathStyle:'>
<arg index='0' type64='q' type='i' declared_type='NSPathStyle' name='style'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setURL:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSPersistentDocument'>
<method selector='configurePersistentStoreCoordinatorForURL:ofType:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSString*' name='fileType'/>
<arg index='2' type='^@' declared_type='NSError**' name='error'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSString*' name='fileType'/>
<arg index='2' type='@' declared_type='NSString*' name='configuration'/>
<arg index='3' type='@' declared_type='NSDictionary*' name='storeOptions'/>
<arg index='4' type='^@' declared_type='NSError**' name='error'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='managedObjectContext'>
<retval type='@' declared_type='NSManagedObjectContext*'/>
</method>
<method selector='managedObjectModel'>
<retval type='@' declared_type='id'/>
</method>
<method selector='persistentStoreTypeForFileType:'>
<arg index='0' type='@' declared_type='NSString*' name='fileType'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='readFromURL:ofType:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='absoluteURL'/>
<arg index='1' type='@' declared_type='NSString*' name='typeName'/>
<arg index='2' type='^@' declared_type='NSError**' name='error'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='revertToContentsOfURL:ofType:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='inAbsoluteURL'/>
<arg index='1' type='@' declared_type='NSString*' name='inTypeName'/>
<arg index='2' type='^@' declared_type='NSError**' name='outError'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setManagedObjectContext:'>
<arg index='0' type='@' declared_type='NSManagedObjectContext*' name='managedObjectContext'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='writeToURL:ofType:forSaveOperation:originalContentsURL:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='absoluteURL'/>
<arg index='1' type='@' declared_type='NSString*' name='typeName'/>
<arg index='2' type64='Q' type='I' declared_type='NSSaveOperationType' name='saveOperation'/>
<arg index='3' type='@' declared_type='NSURL*' name='absoluteOriginalContentsURL'/>
<arg index='4' type='^@' declared_type='NSError**' name='error'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSPopUpButton'>
<method selector='addItemWithTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addItemsWithTitles:'>
<arg index='0' type='@' declared_type='NSArray*' name='itemTitles'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='autoenablesItems'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='indexOfItem:'>
<arg index='0' type='@' declared_type='NSMenuItem*' name='item'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='indexOfItemWithRepresentedObject:'>
<arg index='0' type='@' declared_type='id' name='obj'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='indexOfItemWithTag:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='tag'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='indexOfItemWithTarget:andAction:'>
<arg index='0' type='@' declared_type='id' name='target'/>
<arg index='1' type=':' declared_type='SEL' name='actionSelector'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='indexOfItemWithTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='indexOfSelectedItem'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='initWithFrame:pullsDown:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='buttonFrame'/>
<arg index='1' type='B' declared_type='BOOL' name='flag'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertItemWithTitle:atIndex:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='itemArray'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='itemAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='@' declared_type='NSMenuItem*'/>
</method>
<method selector='itemTitleAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='itemTitles'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='itemWithTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<retval type='@' declared_type='NSMenuItem*'/>
</method>
<method selector='lastItem'>
<retval type='@' declared_type='NSMenuItem*'/>
</method>
<method selector='menu'>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='numberOfItems'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='preferredEdge'>
<retval type64='Q' type='i' declared_type='NSRectEdge'/>
</method>
<method selector='pullsDown'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeAllItems'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeItemAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeItemWithTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectItem:'>
<arg index='0' type='@' declared_type='NSMenuItem*' name='item'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectItemAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectItemWithTag:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='tag'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='selectItemWithTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectedItem'>
<retval type='@' declared_type='NSMenuItem*'/>
</method>
<method selector='setAutoenablesItems:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMenu:'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreferredEdge:'>
<arg index='0' type64='Q' type='i' declared_type='NSRectEdge' name='edge'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPullsDown:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='synchronizeTitleAndSelectedItem'>
<retval type='v' declared_type='void'/>
</method>
<method selector='titleOfSelectedItem'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSPopUpButtonCell'>
<method selector='addItemWithTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addItemsWithTitles:'>
<arg index='0' type='@' declared_type='NSArray*' name='itemTitles'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='altersStateOfSelectedItem'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='arrowPosition'>
<retval type64='Q' type='I' declared_type='NSPopUpArrowPosition'/>
</method>
<method selector='attachPopUpWithFrame:inView:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='autoenablesItems'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='dismissPopUp'>
<retval type='v' declared_type='void'/>
</method>
<method selector='indexOfItem:'>
<arg index='0' type='@' declared_type='NSMenuItem*' name='item'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='indexOfItemWithRepresentedObject:'>
<arg index='0' type='@' declared_type='id' name='obj'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='indexOfItemWithTag:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='tag'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='indexOfItemWithTarget:andAction:'>
<arg index='0' type='@' declared_type='id' name='target'/>
<arg index='1' type=':' declared_type='SEL' name='actionSelector'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='indexOfItemWithTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='indexOfSelectedItem'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='initTextCell:pullsDown:'>
<arg index='0' type='@' declared_type='NSString*' name='stringValue'/>
<arg index='1' type='B' declared_type='BOOL' name='pullDown'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertItemWithTitle:atIndex:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='itemArray'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='itemAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='@' declared_type='NSMenuItem*'/>
</method>
<method selector='itemTitleAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='itemTitles'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='itemWithTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<retval type='@' declared_type='NSMenuItem*'/>
</method>
<method selector='lastItem'>
<retval type='@' declared_type='NSMenuItem*'/>
</method>
<method selector='menu'>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='numberOfItems'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='objectValue'>
<retval type='@' declared_type='id'/>
</method>
<method selector='performClickWithFrame:inView:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frame'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='preferredEdge'>
<retval type64='Q' type='i' declared_type='NSRectEdge'/>
</method>
<method selector='pullsDown'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeAllItems'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeItemAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeItemWithTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectItem:'>
<arg index='0' type='@' declared_type='NSMenuItem*' name='item'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectItemAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectItemWithTag:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='tag'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='selectItemWithTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectedItem'>
<retval type='@' declared_type='NSMenuItem*'/>
</method>
<method selector='setAltersStateOfSelectedItem:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setArrowPosition:'>
<arg index='0' type64='Q' type='I' declared_type='NSPopUpArrowPosition' name='position'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutoenablesItems:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMenu:'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectValue:'>
<arg index='0' type='@' declared_type='id' name='obj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreferredEdge:'>
<arg index='0' type64='Q' type='i' declared_type='NSRectEdge' name='edge'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPullsDown:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesItemFromMenu:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='synchronizeTitleAndSelectedItem'>
<retval type='v' declared_type='void'/>
</method>
<method selector='titleOfSelectedItem'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='usesItemFromMenu'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSPopover'>
<method selector='animates'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='appearance'>
<retval type64='q' type='i' declared_type='NSPopoverAppearance'/>
</method>
<method selector='behavior'>
<retval type64='q' type='i' declared_type='NSPopoverBehavior'/>
</method>
<method selector='close'>
<retval type='v' declared_type='void'/>
</method>
<method selector='contentSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='contentViewController'>
<retval type='@' declared_type='NSViewController*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isShown'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='performClose:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='positioningRect'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='setAnimates:'>
<arg index='0' type='B' declared_type='BOOL' name='animates'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAppearance:'>
<arg index='0' type64='q' type='i' declared_type='NSPopoverAppearance' name='appearance'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBehavior:'>
<arg index='0' type64='q' type='i' declared_type='NSPopoverBehavior' name='behavior'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='contentSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentViewController:'>
<arg index='0' type='@' declared_type='NSViewController*' name='contentViewController'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPositioningRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='positioningRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showRelativeToRect:ofView:preferredEdge:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='positioningRect'/>
<arg index='1' type='@' declared_type='NSView*' name='positioningView'/>
<arg index='2' type64='Q' type='i' declared_type='NSRectEdge' name='preferredEdge'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSPredicateEditor'>
<method selector='rowTemplates'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setRowTemplates:'>
<arg index='0' type='@' declared_type='NSArray*' name='rowTemplates'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSPredicateEditorRowTemplate'>
<method selector='compoundTypes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='displayableSubpredicatesOfPredicate:'>
<arg index='0' type='@' declared_type='NSPredicate*' name='predicate'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='initWithCompoundTypes:'>
<arg index='0' type='@' declared_type='NSArray*' name='compoundTypes'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithLeftExpressions:rightExpressionAttributeType:modifier:operators:options:'>
<arg index='0' type='@' declared_type='NSArray*' name='leftExpressions'/>
<arg index='1' type64='Q' type='I' declared_type='NSAttributeType' name='attributeType'/>
<arg index='2' type64='Q' type='I' declared_type='NSComparisonPredicateModifier' name='modifier'/>
<arg index='3' type='@' declared_type='NSArray*' name='operators'/>
<arg index='4' type64='Q' type='I' declared_type='NSUInteger' name='options'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithLeftExpressions:rightExpressions:modifier:operators:options:'>
<arg index='0' type='@' declared_type='NSArray*' name='leftExpressions'/>
<arg index='1' type='@' declared_type='NSArray*' name='rightExpressions'/>
<arg index='2' type64='Q' type='I' declared_type='NSComparisonPredicateModifier' name='modifier'/>
<arg index='3' type='@' declared_type='NSArray*' name='operators'/>
<arg index='4' type64='Q' type='I' declared_type='NSUInteger' name='options'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='leftExpressions'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='matchForPredicate:'>
<arg index='0' type='@' declared_type='NSPredicate*' name='predicate'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='modifier'>
<retval type64='Q' type='I' declared_type='NSComparisonPredicateModifier'/>
</method>
<method selector='operators'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='options'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='predicateWithSubpredicates:'>
<arg index='0' type='@' declared_type='NSArray*' name='subpredicates'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='rightExpressionAttributeType'>
<retval type64='Q' type='I' declared_type='NSAttributeType'/>
</method>
<method selector='rightExpressions'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='setPredicate:'>
<arg index='0' type='@' declared_type='NSPredicate*' name='predicate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='templateViews'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='templatesWithAttributeKeyPaths:inEntityDescription:' class_method='true'>
<arg index='0' type='@' declared_type='NSArray*' name='keyPaths'/>
<arg index='1' type='@' declared_type='NSEntityDescription*' name='entityDescription'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSPrintInfo'>
<method selector='PMPageFormat'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='PMPrintSession'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='PMPrintSettings'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='bottomMargin'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='defaultPrinter' class_method='true'>
<retval type='@' declared_type='NSPrinter*'/>
</method>
<method selector='dictionary'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='horizontalPagination'>
<retval type64='Q' type='I' declared_type='NSPrintingPaginationMode'/>
</method>
<method selector='imageablePageBounds'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='initWithDictionary:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='attributes'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isHorizontallyCentered'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSelectionOnly'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isVerticallyCentered'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='jobDisposition'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='leftMargin'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='localizedPaperName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='orientation'>
<retval type64='Q' type='I' declared_type='NSPrintingOrientation'/>
</method>
<method selector='paperName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='paperSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='printSettings'>
<retval type='@' declared_type='NSMutableDictionary*'/>
</method>
<method selector='printer'>
<retval type='@' declared_type='NSPrinter*'/>
</method>
<method selector='rightMargin'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='scalingFactor'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='setBottomMargin:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='margin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultPrinter:' class_method='true'>
<arg index='0' type='@' declared_type='NSPrinter*' name='printer'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHorizontalPagination:'>
<arg index='0' type64='Q' type='I' declared_type='NSPrintingPaginationMode' name='mode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHorizontallyCentered:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setJobDisposition:'>
<arg index='0' type='@' declared_type='NSString*' name='disposition'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLeftMargin:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='margin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOrientation:'>
<arg index='0' type64='Q' type='I' declared_type='NSPrintingOrientation' name='orientation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPaperName:'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPaperSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='size'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPrinter:'>
<arg index='0' type='@' declared_type='NSPrinter*' name='printer'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRightMargin:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='margin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScalingFactor:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='scalingFactor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectionOnly:'>
<arg index='0' type='B' declared_type='BOOL' name='selectionOnly'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSharedPrintInfo:' class_method='true'>
<arg index='0' type='@' declared_type='NSPrintInfo*' name='printInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTopMargin:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='margin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUpPrintOperationDefaultValues'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVerticalPagination:'>
<arg index='0' type64='Q' type='I' declared_type='NSPrintingPaginationMode' name='mode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVerticallyCentered:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedPrintInfo' class_method='true'>
<retval type='@' declared_type='NSPrintInfo*'/>
</method>
<method selector='sizeForPaperName:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='topMargin'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='updateFromPMPageFormat'>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateFromPMPrintSettings'>
<retval type='v' declared_type='void'/>
</method>
<method selector='verticalPagination'>
<retval type64='Q' type='I' declared_type='NSPrintingPaginationMode'/>
</method>
</class>
<class name='NSPrintOperation'>
<method selector='EPSOperationWithView:insideRect:toData:' class_method='true'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='2' type='@' declared_type='NSMutableData*' name='data'/>
<retval type='@' declared_type='NSPrintOperation*'/>
</method>
<method selector='EPSOperationWithView:insideRect:toData:printInfo:' class_method='true'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='2' type='@' declared_type='NSMutableData*' name='data'/>
<arg index='3' type='@' declared_type='NSPrintInfo*' name='printInfo'/>
<retval type='@' declared_type='NSPrintOperation*'/>
</method>
<method selector='EPSOperationWithView:insideRect:toPath:printInfo:' class_method='true'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='2' type='@' declared_type='NSString*' name='path'/>
<arg index='3' type='@' declared_type='NSPrintInfo*' name='printInfo'/>
<retval type='@' declared_type='NSPrintOperation*'/>
</method>
<method selector='PDFOperationWithView:insideRect:toData:' class_method='true'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='2' type='@' declared_type='NSMutableData*' name='data'/>
<retval type='@' declared_type='NSPrintOperation*'/>
</method>
<method selector='PDFOperationWithView:insideRect:toData:printInfo:' class_method='true'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='2' type='@' declared_type='NSMutableData*' name='data'/>
<arg index='3' type='@' declared_type='NSPrintInfo*' name='printInfo'/>
<retval type='@' declared_type='NSPrintOperation*'/>
</method>
<method selector='PDFOperationWithView:insideRect:toPath:printInfo:' class_method='true'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='2' type='@' declared_type='NSString*' name='path'/>
<arg index='3' type='@' declared_type='NSPrintInfo*' name='printInfo'/>
<retval type='@' declared_type='NSPrintOperation*'/>
</method>
<method selector='accessoryView'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='canSpawnSeparateThread'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cleanUpOperation'>
<retval type='v' declared_type='void'/>
</method>
<method selector='context'>
<retval type='@' declared_type='NSGraphicsContext*'/>
</method>
<method selector='createContext'>
<retval type='@' declared_type='NSGraphicsContext*'/>
</method>
<method selector='currentOperation' class_method='true'>
<retval type='@' declared_type='NSPrintOperation*'/>
</method>
<method selector='currentPage'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='deliverResult'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='destroyContext'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isCopyingOperation'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='jobStyleHint'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='jobTitle'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pageOrder'>
<retval type64='q' type='i' declared_type='NSPrintingPageOrder'/>
</method>
<method selector='pageRange'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='preferredRenderingQuality'>
<retval type64='q' type='i' declared_type='NSPrintRenderingQuality'/>
</method>
<method selector='printInfo'>
<retval type='@' declared_type='NSPrintInfo*'/>
</method>
<method selector='printOperationWithView:' class_method='true'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<retval type='@' declared_type='NSPrintOperation*'/>
</method>
<method selector='printOperationWithView:printInfo:' class_method='true'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<arg index='1' type='@' declared_type='NSPrintInfo*' name='printInfo'/>
<retval type='@' declared_type='NSPrintOperation*'/>
</method>
<method selector='printPanel'>
<retval type='@' declared_type='NSPrintPanel*'/>
</method>
<method selector='runOperation'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='runOperationModalForWindow:delegate:didRunSelector:contextInfo:'>
<arg index='0' type='@' declared_type='NSWindow*' name='docWindow'/>
<arg index='1' type='@' declared_type='id' name='delegate'/>
<arg index='2' type=':' declared_type='SEL' name='didRunSelector'/>
<arg index='3' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAccessoryView:'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCanSpawnSeparateThread:'>
<arg index='0' type='B' declared_type='BOOL' name='canSpawnSeparateThread'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCurrentOperation:' class_method='true'>
<arg index='0' type='@' declared_type='NSPrintOperation*' name='operation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setJobStyleHint:'>
<arg index='0' type='@' declared_type='NSString*' name='hint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setJobTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='jobTitle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPageOrder:'>
<arg index='0' type64='q' type='i' declared_type='NSPrintingPageOrder' name='pageOrder'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPrintInfo:'>
<arg index='0' type='@' declared_type='NSPrintInfo*' name='printInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPrintPanel:'>
<arg index='0' type='@' declared_type='NSPrintPanel*' name='panel'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowPanels:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsPrintPanel:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsProgressPanel:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showPanels'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showsPrintPanel'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showsProgressPanel'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='view'>
<retval type='@' declared_type='NSView*'/>
</method>
</class>
<class name='NSPrintPanel'>
<method selector='accessoryControllers'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='accessoryView'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='addAccessoryController:'>
<arg index='0' type='@' declared_type='NSViewController*' name='accessoryController'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:'>
<arg index='0' type='@' declared_type='NSPrintInfo*' name='printInfo'/>
<arg index='1' type='@' declared_type='NSWindow*' name='docWindow'/>
<arg index='2' type='@' declared_type='id' name='delegate'/>
<arg index='3' type=':' declared_type='SEL' name='didEndSelector'/>
<arg index='4' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='defaultButtonTitle'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='finalWritePrintInfo'>
<retval type='v' declared_type='void'/>
</method>
<method selector='helpAnchor'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='jobStyleHint'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='options'>
<retval type64='q' type='i' declared_type='NSPrintPanelOptions'/>
</method>
<method selector='printInfo'>
<retval type='@' declared_type='NSPrintInfo*'/>
</method>
<method selector='printPanel' class_method='true'>
<retval type='@' declared_type='NSPrintPanel*'/>
</method>
<method selector='removeAccessoryController:'>
<arg index='0' type='@' declared_type='NSViewController*' name='accessoryController'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='runModal'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='runModalWithPrintInfo:'>
<arg index='0' type='@' declared_type='NSPrintInfo*' name='printInfo'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='setAccessoryView:'>
<arg index='0' type='@' declared_type='NSView*' name='accessoryView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultButtonTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='defaultButtonTitle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHelpAnchor:'>
<arg index='0' type='@' declared_type='NSString*' name='helpAnchor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setJobStyleHint:'>
<arg index='0' type='@' declared_type='NSString*' name='hint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOptions:'>
<arg index='0' type64='q' type='i' declared_type='NSPrintPanelOptions' name='options'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateFromPrintInfo'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSPrinter'>
<method selector='acceptsBinary'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='booleanForKey:inTable:'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<arg index='1' type='@' declared_type='NSString*' name='table'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='deviceDescription'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='domain'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='floatForKey:inTable:'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<arg index='1' type='@' declared_type='NSString*' name='table'/>
<retval type='f' declared_type='float'/>
</method>
<method selector='host'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='imageRectForPaper:'>
<arg index='0' type='@' declared_type='NSString*' name='paperName'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='intForKey:inTable:'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<arg index='1' type='@' declared_type='NSString*' name='table'/>
<retval type='i' declared_type='int'/>
</method>
<method selector='isColor'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFontAvailable:'>
<arg index='0' type='@' declared_type='NSString*' name='faceName'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isKey:inTable:'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<arg index='1' type='@' declared_type='NSString*' name='table'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isOutputStackInReverseOrder'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='languageLevel'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='note'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pageSizeForPaper:'>
<arg index='0' type='@' declared_type='NSString*' name='paperName'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='printerNames' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='printerTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='printerWithName:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<retval type='@' declared_type='NSPrinter*'/>
</method>
<method selector='printerWithName:domain:includeUnavailable:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<arg index='1' type='@' declared_type='NSString*' name='domain'/>
<arg index='2' type='B' declared_type='BOOL' name='flag'/>
<retval type='@' declared_type='NSPrinter*'/>
</method>
<method selector='printerWithType:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='type'/>
<retval type='@' declared_type='NSPrinter*'/>
</method>
<method selector='rectForKey:inTable:'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<arg index='1' type='@' declared_type='NSString*' name='table'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='sizeForKey:inTable:'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<arg index='1' type='@' declared_type='NSString*' name='table'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='statusForTable:'>
<arg index='0' type='@' declared_type='NSString*' name='tableName'/>
<retval type64='Q' type='I' declared_type='NSPrinterTableStatus'/>
</method>
<method selector='stringForKey:inTable:'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<arg index='1' type='@' declared_type='NSString*' name='table'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='stringListForKey:inTable:'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<arg index='1' type='@' declared_type='NSString*' name='table'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='type'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSProgressIndicator'>
<method selector='animate:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='animationDelay'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='controlSize'>
<retval type64='Q' type='I' declared_type='NSControlSize'/>
</method>
<method selector='controlTint'>
<retval type64='Q' type='I' declared_type='NSControlTint'/>
</method>
<method selector='doubleValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='incrementBy:'>
<arg index='0' type='d' declared_type='double' name='delta'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isBezeled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isDisplayedWhenStopped'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isIndeterminate'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='maxValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='minValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='setAnimationDelay:'>
<arg index='0' type='d' declared_type='NSTimeInterval' name='delay'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBezeled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setControlSize:'>
<arg index='0' type64='Q' type='I' declared_type='NSControlSize' name='size'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setControlTint:'>
<arg index='0' type64='Q' type='I' declared_type='NSControlTint' name='tint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayedWhenStopped:'>
<arg index='0' type='B' declared_type='BOOL' name='isDisplayed'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDoubleValue:'>
<arg index='0' type='d' declared_type='double' name='doubleValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIndeterminate:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxValue:'>
<arg index='0' type='d' declared_type='double' name='newMaximum'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinValue:'>
<arg index='0' type='d' declared_type='double' name='newMinimum'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStyle:'>
<arg index='0' type64='Q' type='I' declared_type='NSProgressIndicatorStyle' name='style'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesThreadedAnimation:'>
<arg index='0' type='B' declared_type='BOOL' name='threadedAnimation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sizeToFit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='startAnimation:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopAnimation:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='style'>
<retval type64='Q' type='I' declared_type='NSProgressIndicatorStyle'/>
</method>
<method selector='usesThreadedAnimation'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSResponder'>
<method selector='acceptsFirstResponder'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='becomeFirstResponder'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='beginGestureWithEvent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cancelOperation:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='capitalizeWord:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='centerSelectionInVisibleArea:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='changeCaseOfLetter:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='complete:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cursorUpdate:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='deleteBackward:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='deleteBackwardByDecomposingPreviousCharacter:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='deleteForward:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='deleteToBeginningOfLine:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='deleteToBeginningOfParagraph:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='deleteToEndOfLine:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='deleteToEndOfParagraph:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='deleteToMark:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='deleteWordBackward:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='deleteWordForward:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='doCommandBySelector:'>
<arg index='0' type=':' declared_type='SEL' name='aSelector'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeRestorableStateWithCoder:'>
<arg index='0' type='@' declared_type='NSCoder*' name='coder'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='endGestureWithEvent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='flagsChanged:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='flushBufferedKeyEvents'>
<retval type='v' declared_type='void'/>
</method>
<method selector='helpRequested:'>
<arg index='0' type='@' declared_type='NSEvent*' name='eventPtr'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='indent:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertBacktab:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertContainerBreak:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertDoubleQuoteIgnoringSubstitution:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertLineBreak:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertNewline:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertNewlineIgnoringFieldEditor:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertParagraphSeparator:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertSingleQuoteIgnoringSubstitution:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertTab:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertTabIgnoringFieldEditor:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertText:'>
<arg index='0' type='@' declared_type='id' name='insertString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='interfaceStyle'>
<retval type64='Q' type='I' declared_type='NSInterfaceStyle'/>
</method>
<method selector='interpretKeyEvents:'>
<arg index='0' type='@' declared_type='NSArray*' name='eventArray'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='invalidateRestorableState'>
<retval type='v' declared_type='void'/>
</method>
<method selector='keyDown:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='keyUp:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='lowercaseWord:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='magnifyWithEvent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeBaseWritingDirectionLeftToRight:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeBaseWritingDirectionNatural:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeBaseWritingDirectionRightToLeft:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeTextWritingDirectionLeftToRight:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeTextWritingDirectionNatural:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeTextWritingDirectionRightToLeft:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='menu'>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='mouseDown:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mouseDragged:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mouseEntered:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mouseExited:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mouseMoved:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mouseUp:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveBackward:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveBackwardAndModifySelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveDown:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveDownAndModifySelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveForward:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveForwardAndModifySelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveLeft:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveLeftAndModifySelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveParagraphBackwardAndModifySelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveParagraphForwardAndModifySelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveRight:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveRightAndModifySelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveToBeginningOfDocument:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveToBeginningOfDocumentAndModifySelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveToBeginningOfLine:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveToBeginningOfLineAndModifySelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveToBeginningOfParagraph:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveToBeginningOfParagraphAndModifySelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveToEndOfDocument:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveToEndOfDocumentAndModifySelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveToEndOfLine:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveToEndOfLineAndModifySelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveToEndOfParagraph:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveToEndOfParagraphAndModifySelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveToLeftEndOfLine:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveToLeftEndOfLineAndModifySelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveToRightEndOfLine:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveToRightEndOfLineAndModifySelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveUp:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveUpAndModifySelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveWordBackward:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveWordBackwardAndModifySelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveWordForward:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveWordForwardAndModifySelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveWordLeft:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveWordLeftAndModifySelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveWordRight:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveWordRightAndModifySelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='nextResponder'>
<retval type='@' declared_type='NSResponder*'/>
</method>
<method selector='noResponderFor:'>
<arg index='0' type=':' declared_type='SEL' name='eventSelector'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='otherMouseDown:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='otherMouseDragged:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='otherMouseUp:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pageDown:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pageDownAndModifySelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pageUp:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pageUpAndModifySelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performKeyEquivalent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='performMnemonic:'>
<arg index='0' type='@' declared_type='NSString*' name='theString'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='performTextFinderAction:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='presentError:'>
<arg index='0' type='@' declared_type='NSError*' name='error'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
<arg index='0' type='@' declared_type='NSError*' name='error'/>
<arg index='1' type='@' declared_type='NSWindow*' name='window'/>
<arg index='2' type='@' declared_type='id' name='delegate'/>
<arg index='3' type=':' declared_type='SEL' name='didPresentSelector'/>
<arg index='4' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='quickLookPreviewItems:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='quickLookWithEvent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resignFirstResponder'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='restorableStateKeyPaths' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='restoreStateWithCoder:'>
<arg index='0' type='@' declared_type='NSCoder*' name='coder'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rightMouseDown:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rightMouseDragged:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rightMouseUp:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rotateWithEvent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollLineDown:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollLineUp:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollPageDown:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollPageUp:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollToBeginningOfDocument:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollToEndOfDocument:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollWheel:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectAll:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectLine:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectParagraph:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectToMark:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectWord:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInterfaceStyle:'>
<arg index='0' type64='Q' type='I' declared_type='NSInterfaceStyle' name='interfaceStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMark:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMenu:'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNextResponder:'>
<arg index='0' type='@' declared_type='NSResponder*' name='aResponder'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldBeTreatedAsInkEvent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showContextHelp:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='smartMagnifyWithEvent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='supplementalTargetForAction:sender:'>
<arg index='0' type=':' declared_type='SEL' name='action'/>
<arg index='1' type='@' declared_type='id' name='sender'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='swapWithMark:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='swipeWithEvent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tabletPoint:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tabletProximity:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesBeganWithEvent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesCancelledWithEvent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesEndedWithEvent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='touchesMovedWithEvent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='transpose:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='transposeWords:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tryToPerform:with:'>
<arg index='0' type=':' declared_type='SEL' name='anAction'/>
<arg index='1' type='@' declared_type='id' name='anObject'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='undoManager'>
<retval type='@' declared_type='NSUndoManager*'/>
</method>
<method selector='uppercaseWord:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='validRequestorForSendType:returnType:'>
<arg index='0' type='@' declared_type='NSString*' name='sendType'/>
<arg index='1' type='@' declared_type='NSString*' name='returnType'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='validateProposedFirstResponder:forEvent:'>
<arg index='0' type='@' declared_type='NSResponder*' name='responder'/>
<arg index='1' type='@' declared_type='NSEvent*' name='event'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='wantsForwardedScrollEventsForAxis:'>
<arg index='0' type64='q' type='i' declared_type='NSEventGestureAxis' name='axis'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='wantsScrollEventsForSwipeTrackingOnAxis:'>
<arg index='0' type64='q' type='i' declared_type='NSEventGestureAxis' name='axis'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='willPresentError:'>
<arg index='0' type='@' declared_type='NSError*' name='error'/>
<retval type='@' declared_type='NSError*'/>
</method>
<method selector='yank:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSRuleEditor'>
<method selector='addRow:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='canRemoveAllRows'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='criteriaForRow:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='criteriaKeyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='displayValuesForRow:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='displayValuesKeyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='formattingDictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='formattingStringsFilename'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='insertRowAtIndex:withType:asSubrowOfRow:animate:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='rowIndex'/>
<arg index='1' type64='Q' type='I' declared_type='NSRuleEditorRowType' name='rowType'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='parentRow'/>
<arg index='3' type='B' declared_type='BOOL' name='shouldAnimate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isEditable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='nestingMode'>
<retval type64='Q' type='I' declared_type='NSRuleEditorNestingMode'/>
</method>
<method selector='numberOfRows'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='parentRowForRow:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='rowIndex'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='predicate'>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='predicateForRow:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='@' declared_type='NSPredicate*'/>
</method>
<method selector='reloadCriteria'>
<retval type='v' declared_type='void'/>
</method>
<method selector='reloadPredicate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeRowAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='rowIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeRowsAtIndexes:includeSubrows:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='rowIndexes'/>
<arg index='1' type='B' declared_type='BOOL' name='includeSubrows'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rowClass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='rowForDisplayValue:'>
<arg index='0' type='@' declared_type='id' name='displayValue'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='rowHeight'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='rowTypeForRow:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='rowIndex'/>
<retval type64='Q' type='I' declared_type='NSRuleEditorRowType'/>
</method>
<method selector='rowTypeKeyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='selectRowIndexes:byExtendingSelection:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='indexes'/>
<arg index='1' type='B' declared_type='BOOL' name='extend'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectedRowIndexes'>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='setCanRemoveAllRows:'>
<arg index='0' type='B' declared_type='BOOL' name='val'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCriteria:andDisplayValues:forRowAtIndex:'>
<arg index='0' type='@' declared_type='NSArray*' name='criteria'/>
<arg index='1' type='@' declared_type='NSArray*' name='values'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='rowIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCriteriaKeyPath:'>
<arg index='0' type='@' declared_type='NSString*' name='keyPath'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayValuesKeyPath:'>
<arg index='0' type='@' declared_type='NSString*' name='keyPath'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEditable:'>
<arg index='0' type='B' declared_type='BOOL' name='editable'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFormattingDictionary:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='dictionary'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFormattingStringsFilename:'>
<arg index='0' type='@' declared_type='NSString*' name='stringsFilename'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNestingMode:'>
<arg index='0' type64='Q' type='I' declared_type='NSRuleEditorNestingMode' name='mode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRowClass:'>
<arg index='0' type='#' declared_type='Class' name='rowClass'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRowHeight:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='height'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRowTypeKeyPath:'>
<arg index='0' type='@' declared_type='NSString*' name='keyPath'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubrowsKeyPath:'>
<arg index='0' type='@' declared_type='NSString*' name='keyPath'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='subrowIndexesForRow:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='rowIndex'/>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='subrowsKeyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSRulerMarker'>
<method selector='drawRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='image'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='imageOrigin'>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='imageRectInRuler'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='initWithRulerView:markerLocation:image:imageOrigin:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='location'/>
<arg index='2' type='@' declared_type='NSImage*' name='image'/>
<arg index='3' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='imageOrigin'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isDragging'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMovable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRemovable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='markerLocation'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='representedObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='ruler'>
<retval type='@' declared_type='NSRulerView*'/>
</method>
<method selector='setImage:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageOrigin:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='imageOrigin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMarkerLocation:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='location'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMovable:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRemovable:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRepresentedObject:'>
<arg index='0' type='@' declared_type='id' name='representedObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='thicknessRequiredInRuler'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='trackMouse:adding:'>
<arg index='0' type='@' declared_type='NSEvent*' name='mouseDownEvent'/>
<arg index='1' type='B' declared_type='BOOL' name='isAdding'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSRulerView'>
<method selector='accessoryView'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='addMarker:'>
<arg index='0' type='@' declared_type='NSRulerMarker*' name='marker'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='baselineLocation'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='clientView'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='drawHashMarksAndLabelsInRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawMarkersInRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithScrollView:orientation:'>
<arg index='0' type='@' declared_type='NSScrollView*' name='scrollView'/>
<arg index='1' type64='Q' type='I' declared_type='NSRulerOrientation' name='orientation'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='invalidateHashMarks'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isFlipped'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='markers'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='measurementUnits'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='moveRulerlineFromLocation:toLocation:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='oldLocation'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='newLocation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='orientation'>
<retval type64='Q' type='I' declared_type='NSRulerOrientation'/>
</method>
<method selector='originOffset'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='registerUnitWithName:abbreviation:unitToPointsConversionFactor:stepUpCycle:stepDownCycle:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='unitName'/>
<arg index='1' type='@' declared_type='NSString*' name='abbreviation'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='conversionFactor'/>
<arg index='3' type='@' declared_type='NSArray*' name='stepUpCycle'/>
<arg index='4' type='@' declared_type='NSArray*' name='stepDownCycle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeMarker:'>
<arg index='0' type='@' declared_type='NSRulerMarker*' name='marker'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='requiredThickness'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='reservedThicknessForAccessoryView'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='reservedThicknessForMarkers'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='ruleThickness'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='scrollView'>
<retval type='@' declared_type='NSScrollView*'/>
</method>
<method selector='setAccessoryView:'>
<arg index='0' type='@' declared_type='NSView*' name='accessory'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setClientView:'>
<arg index='0' type='@' declared_type='NSView*' name='client'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMarkers:'>
<arg index='0' type='@' declared_type='NSArray*' name='markers'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMeasurementUnits:'>
<arg index='0' type='@' declared_type='NSString*' name='unitName'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOrientation:'>
<arg index='0' type64='Q' type='I' declared_type='NSRulerOrientation' name='orientation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOriginOffset:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='offset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReservedThicknessForAccessoryView:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='thickness'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReservedThicknessForMarkers:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='thickness'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRuleThickness:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='thickness'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScrollView:'>
<arg index='0' type='@' declared_type='NSScrollView*' name='scrollView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='trackMarker:withMouseEvent:'>
<arg index='0' type='@' declared_type='NSRulerMarker*' name='marker'/>
<arg index='1' type='@' declared_type='NSEvent*' name='event'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSRunningApplication'>
<method selector='activateWithOptions:'>
<arg index='0' type64='Q' type='I' declared_type='NSApplicationActivationOptions' name='options'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='activationPolicy'>
<retval type64='q' type='i' declared_type='NSApplicationActivationPolicy'/>
</method>
<method selector='bundleIdentifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='bundleURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='currentApplication' class_method='true'>
<retval type='@' declared_type='NSRunningApplication*'/>
</method>
<method selector='executableArchitecture'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='executableURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='forceTerminate'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hide'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='icon'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='isActive'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFinishedLaunching'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isHidden'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isTerminated'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='launchDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='localizedName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='ownsMenuBar'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='processIdentifier'>
<retval type='i' declared_type='pid_t'/>
</method>
<method selector='runningApplicationWithProcessIdentifier:' class_method='true'>
<arg index='0' type='i' declared_type='pid_t' name='pid'/>
<retval type='@' declared_type='NSRunningApplication*'/>
</method>
<method selector='runningApplicationsWithBundleIdentifier:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='bundleIdentifier'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='terminate'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='terminateAutomaticallyTerminableApplications' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unhide'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSSavePanel'>
<method selector='URL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='accessoryView'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='allowedFileTypes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='allowsOtherFileTypes'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
<arg index='0' type='@' declared_type='NSString*' name='path'/>
<arg index='1' type='@' declared_type='NSString*' name='name'/>
<arg index='2' type='@' declared_type='NSWindow*' name='docWindow'/>
<arg index='3' type='@' declared_type='id' name='delegate'/>
<arg index='4' type=':' declared_type='SEL' name='didEndSelector'/>
<arg index='5' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginSheetModalForWindow:completionHandler:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' function_pointer='true' type='@?' declared_type='void (^)(NSInteger)' name='handler'>
<arg type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginWithCompletionHandler:'>
<arg index='0' function_pointer='true' type='@?' declared_type='void (^)(NSInteger)' name='handler'>
<arg type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='canCreateDirectories'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canSelectHiddenExtension'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cancel:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='directory'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='directoryURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='filename'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='isExpanded'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isExtensionHidden'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='message'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='nameFieldLabel'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='nameFieldStringValue'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='ok:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='prompt'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='requiredFileType'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='runModal'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='runModalForDirectory:file:'>
<arg index='0' type='@' declared_type='NSString*' name='path'/>
<arg index='1' type='@' declared_type='NSString*' name='name'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='savePanel' class_method='true'>
<retval type='@' declared_type='NSSavePanel*'/>
</method>
<method selector='selectText:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAccessoryView:'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowedFileTypes:'>
<arg index='0' type='@' declared_type='NSArray*' name='types'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsOtherFileTypes:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCanCreateDirectories:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCanSelectHiddenExtension:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDirectory:'>
<arg index='0' type='@' declared_type='NSString*' name='path'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDirectoryURL:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setExtensionHidden:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMessage:'>
<arg index='0' type='@' declared_type='NSString*' name='message'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNameFieldLabel:'>
<arg index='0' type='@' declared_type='NSString*' name='label'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNameFieldStringValue:'>
<arg index='0' type='@' declared_type='NSString*' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPrompt:'>
<arg index='0' type='@' declared_type='NSString*' name='prompt'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRequiredFileType:'>
<arg index='0' type='@' declared_type='NSString*' name='type'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsHiddenFiles:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTreatsFilePackagesAsDirectories:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showsHiddenFiles'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='treatsFilePackagesAsDirectories'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='validateVisibleColumns'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSScreen'>
<method selector='backingAlignedRect:options:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg index='1' type='Q' declared_type='NSAlignmentOptions' name='options'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='backingScaleFactor'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='colorSpace'>
<retval type='@' declared_type='NSColorSpace*'/>
</method>
<method selector='convertRectFromBacking:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='convertRectToBacking:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='deepestScreen' class_method='true'>
<retval type='@' declared_type='NSScreen*'/>
</method>
<method selector='depth'>
<retval type='i' declared_type='NSWindowDepth'/>
</method>
<method selector='deviceDescription'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='frame'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='mainScreen' class_method='true'>
<retval type='@' declared_type='NSScreen*'/>
</method>
<method selector='screens' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='supportedWindowDepths'>
<retval type='^i' const='true' declared_type='NSWindowDepth*'/>
</method>
<method selector='userSpaceScaleFactor'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='visibleFrame'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
</class>
<class name='NSScrollView'>
<method selector='allowsMagnification'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='autohidesScrollers'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='backgroundColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='borderType'>
<retval type64='Q' type='I' declared_type='NSBorderType'/>
</method>
<method selector='contentSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='contentSizeForFrameSize:hasHorizontalScroller:hasVerticalScroller:borderType:' class_method='true'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='fSize'/>
<arg index='1' type='B' declared_type='BOOL' name='hFlag'/>
<arg index='2' type='B' declared_type='BOOL' name='vFlag'/>
<arg index='3' type64='Q' type='I' declared_type='NSBorderType' name='aType'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='contentSizeForFrameSize:horizontalScrollerClass:verticalScrollerClass:borderType:controlSize:scrollerStyle:' class_method='true'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='fSize'/>
<arg index='1' type='#' declared_type='Class' name='horizontalScrollerClass'/>
<arg index='2' type='#' declared_type='Class' name='verticalScrollerClass'/>
<arg index='3' type64='Q' type='I' declared_type='NSBorderType' name='aType'/>
<arg index='4' type64='Q' type='I' declared_type='NSControlSize' name='controlSize'/>
<arg index='5' type64='q' type='i' declared_type='NSScrollerStyle' name='scrollerStyle'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='contentView'>
<retval type='@' declared_type='NSClipView*'/>
</method>
<method selector='documentCursor'>
<retval type='@' declared_type='NSCursor*'/>
</method>
<method selector='documentView'>
<retval type='@' declared_type='id'/>
</method>
<method selector='documentVisibleRect'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='drawsBackground'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='findBarPosition'>
<retval type64='q' type='i' declared_type='NSScrollViewFindBarPosition'/>
</method>
<method selector='flashScrollers'>
<retval type='v' declared_type='void'/>
</method>
<method selector='frameSizeForContentSize:hasHorizontalScroller:hasVerticalScroller:borderType:' class_method='true'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='cSize'/>
<arg index='1' type='B' declared_type='BOOL' name='hFlag'/>
<arg index='2' type='B' declared_type='BOOL' name='vFlag'/>
<arg index='3' type64='Q' type='I' declared_type='NSBorderType' name='aType'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='frameSizeForContentSize:horizontalScrollerClass:verticalScrollerClass:borderType:controlSize:scrollerStyle:' class_method='true'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='cSize'/>
<arg index='1' type='#' declared_type='Class' name='horizontalScrollerClass'/>
<arg index='2' type='#' declared_type='Class' name='verticalScrollerClass'/>
<arg index='3' type64='Q' type='I' declared_type='NSBorderType' name='aType'/>
<arg index='4' type64='Q' type='I' declared_type='NSControlSize' name='controlSize'/>
<arg index='5' type64='q' type='i' declared_type='NSScrollerStyle' name='scrollerStyle'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='hasHorizontalRuler'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasHorizontalScroller'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasVerticalRuler'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasVerticalScroller'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='horizontalLineScroll'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='horizontalPageScroll'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='horizontalRulerView'>
<retval type='@' declared_type='NSRulerView*'/>
</method>
<method selector='horizontalScrollElasticity'>
<retval type64='q' type='i' declared_type='NSScrollElasticity'/>
</method>
<method selector='horizontalScroller'>
<retval type='@' declared_type='NSScroller*'/>
</method>
<method selector='lineScroll'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='magnification'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='magnifyToFitRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='maxMagnification'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='minMagnification'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='pageScroll'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='reflectScrolledClipView:'>
<arg index='0' type='@' declared_type='NSClipView*' name='cView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rulerViewClass' class_method='true'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='rulersVisible'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scrollWheel:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollerKnobStyle'>
<retval type64='q' type='i' declared_type='NSScrollerKnobStyle'/>
</method>
<method selector='scrollerStyle'>
<retval type64='q' type='i' declared_type='NSScrollerStyle'/>
</method>
<method selector='scrollsDynamically'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAllowsMagnification:'>
<arg index='0' type='B' declared_type='BOOL' name='allowsMagnification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutohidesScrollers:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBorderType:'>
<arg index='0' type64='Q' type='I' declared_type='NSBorderType' name='aType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentView:'>
<arg index='0' type='@' declared_type='NSClipView*' name='contentView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDocumentCursor:'>
<arg index='0' type='@' declared_type='NSCursor*' name='anObj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDocumentView:'>
<arg index='0' type='@' declared_type='NSView*' name='aView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawsBackground:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFindBarPosition:'>
<arg index='0' type64='q' type='i' declared_type='NSScrollViewFindBarPosition' name='position'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHasHorizontalRuler:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHasHorizontalScroller:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHasVerticalRuler:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHasVerticalScroller:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHorizontalLineScroll:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHorizontalPageScroll:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHorizontalRulerView:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHorizontalScrollElasticity:'>
<arg index='0' type64='q' type='i' declared_type='NSScrollElasticity' name='elasticity'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHorizontalScroller:'>
<arg index='0' type='@' declared_type='NSScroller*' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineScroll:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMagnification:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='magnification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMagnification:centeredAtPoint:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='magnification'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxMagnification:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='maxMagnification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinMagnification:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='minMagnification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPageScroll:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRulerViewClass:' class_method='true'>
<arg index='0' type='#' declared_type='Class' name='rulerViewClass'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRulersVisible:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScrollerKnobStyle:'>
<arg index='0' type64='q' type='i' declared_type='NSScrollerKnobStyle' name='newScrollerKnobStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScrollerStyle:'>
<arg index='0' type64='q' type='i' declared_type='NSScrollerStyle' name='newScrollerStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScrollsDynamically:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesPredominantAxisScrolling:'>
<arg index='0' type='B' declared_type='BOOL' name='predominantAxisScrolling'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVerticalLineScroll:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVerticalPageScroll:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVerticalRulerView:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVerticalScrollElasticity:'>
<arg index='0' type64='q' type='i' declared_type='NSScrollElasticity' name='elasticity'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVerticalScroller:'>
<arg index='0' type='@' declared_type='NSScroller*' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tile'>
<retval type='v' declared_type='void'/>
</method>
<method selector='usesPredominantAxisScrolling'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='verticalLineScroll'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='verticalPageScroll'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='verticalRulerView'>
<retval type='@' declared_type='NSRulerView*'/>
</method>
<method selector='verticalScrollElasticity'>
<retval type64='q' type='i' declared_type='NSScrollElasticity'/>
</method>
<method selector='verticalScroller'>
<retval type='@' declared_type='NSScroller*'/>
</method>
</class>
<class name='NSScroller'>
<method selector='arrowsPosition'>
<retval type64='Q' type='I' declared_type='NSScrollArrowPosition'/>
</method>
<method selector='checkSpaceForParts'>
<retval type='v' declared_type='void'/>
</method>
<method selector='controlSize'>
<retval type64='Q' type='I' declared_type='NSControlSize'/>
</method>
<method selector='controlTint'>
<retval type64='Q' type='I' declared_type='NSControlTint'/>
</method>
<method selector='drawArrow:highlight:'>
<arg index='0' type64='Q' type='I' declared_type='NSScrollerArrow' name='whichArrow'/>
<arg index='1' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawKnob'>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawKnobSlotInRect:highlight:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='slotRect'/>
<arg index='1' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawParts'>
<retval type='v' declared_type='void'/>
</method>
<method selector='highlight:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='hitPart'>
<retval type64='Q' type='I' declared_type='NSScrollerPart'/>
</method>
<method selector='isCompatibleWithOverlayScrollers' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='knobProportion'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='knobStyle'>
<retval type64='q' type='i' declared_type='NSScrollerKnobStyle'/>
</method>
<method selector='preferredScrollerStyle' class_method='true'>
<retval type64='q' type='i' declared_type='NSScrollerStyle'/>
</method>
<method selector='rectForPart:'>
<arg index='0' type64='Q' type='I' declared_type='NSScrollerPart' name='partCode'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='scrollerStyle'>
<retval type64='q' type='i' declared_type='NSScrollerStyle'/>
</method>
<method selector='scrollerWidth' class_method='true'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='scrollerWidthForControlSize:' class_method='true'>
<arg index='0' type64='Q' type='I' declared_type='NSControlSize' name='controlSize'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='scrollerWidthForControlSize:scrollerStyle:' class_method='true'>
<arg index='0' type64='Q' type='I' declared_type='NSControlSize' name='controlSize'/>
<arg index='1' type64='q' type='i' declared_type='NSScrollerStyle' name='scrollerStyle'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='setArrowsPosition:'>
<arg index='0' type64='Q' type='I' declared_type='NSScrollArrowPosition' name='where'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setControlSize:'>
<arg index='0' type64='Q' type='I' declared_type='NSControlSize' name='controlSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setControlTint:'>
<arg index='0' type64='Q' type='I' declared_type='NSControlTint' name='controlTint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFloatValue:knobProportion:'>
<arg index='0' type='f' declared_type='float' name='aFloat'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='proportion'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKnobProportion:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='proportion'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKnobStyle:'>
<arg index='0' type64='q' type='i' declared_type='NSScrollerKnobStyle' name='newKnobStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScrollerStyle:'>
<arg index='0' type64='q' type='i' declared_type='NSScrollerStyle' name='newScrollerStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='testPart:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='thePoint'/>
<retval type64='Q' type='I' declared_type='NSScrollerPart'/>
</method>
<method selector='trackKnob:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='trackScrollButtons:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='usableParts'>
<retval type64='Q' type='I' declared_type='NSUsableScrollerParts'/>
</method>
</class>
<class name='NSSearchField'>
<method selector='recentSearches'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='recentsAutosaveName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setRecentSearches:'>
<arg index='0' type='@' declared_type='NSArray*' name='searches'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRecentsAutosaveName:'>
<arg index='0' type='@' declared_type='NSString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSSearchFieldCell'>
<method selector='cancelButtonCell'>
<retval type='@' declared_type='NSButtonCell*'/>
</method>
<method selector='cancelButtonRectForBounds:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='maximumRecents'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='recentSearches'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='recentsAutosaveName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='resetCancelButtonCell'>
<retval type='v' declared_type='void'/>
</method>
<method selector='resetSearchButtonCell'>
<retval type='v' declared_type='void'/>
</method>
<method selector='searchButtonCell'>
<retval type='@' declared_type='NSButtonCell*'/>
</method>
<method selector='searchButtonRectForBounds:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='searchMenuTemplate'>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='searchTextRectForBounds:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='sendsSearchStringImmediately'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='sendsWholeSearchString'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setCancelButtonCell:'>
<arg index='0' type='@' declared_type='NSButtonCell*' name='cell'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaximumRecents:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='maxRecents'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRecentSearches:'>
<arg index='0' type='@' declared_type='NSArray*' name='searches'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRecentsAutosaveName:'>
<arg index='0' type='@' declared_type='NSString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSearchButtonCell:'>
<arg index='0' type='@' declared_type='NSButtonCell*' name='cell'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSearchMenuTemplate:'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSendsSearchStringImmediately:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSendsWholeSearchString:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSSecureTextFieldCell'>
<method selector='echosBullets'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setEchosBullets:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSSegmentedCell'>
<method selector='drawSegment:inFrame:withView:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frame'/>
<arg index='2' type='@' declared_type='NSView*' name='controlView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='imageForSegment:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='imageScalingForSegment:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type64='Q' type='I' declared_type='NSImageScaling'/>
</method>
<method selector='interiorBackgroundStyleForSegment:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type64='q' type='i' declared_type='NSBackgroundStyle'/>
</method>
<method selector='isEnabledForSegment:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSelectedForSegment:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='labelForSegment:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='makeNextSegmentKey'>
<retval type='v' declared_type='void'/>
</method>
<method selector='makePreviousSegmentKey'>
<retval type='v' declared_type='void'/>
</method>
<method selector='menuForSegment:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='segmentCount'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='segmentStyle'>
<retval type64='q' type='i' declared_type='NSSegmentStyle'/>
</method>
<method selector='selectSegmentWithTag:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='tag'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='selectedSegment'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='setEnabled:forSegment:'>
<arg index='0' type='B' declared_type='BOOL' name='enabled'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImage:forSegment:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageScaling:forSegment:'>
<arg index='0' type64='Q' type='I' declared_type='NSImageScaling' name='scaling'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabel:forSegment:'>
<arg index='0' type='@' declared_type='NSString*' name='label'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMenu:forSegment:'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSegmentCount:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='count'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSegmentStyle:'>
<arg index='0' type64='q' type='i' declared_type='NSSegmentStyle' name='segmentStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelected:forSegment:'>
<arg index='0' type='B' declared_type='BOOL' name='selected'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedSegment:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='selectedSegment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTag:forSegment:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='tag'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setToolTip:forSegment:'>
<arg index='0' type='@' declared_type='NSString*' name='toolTip'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTrackingMode:'>
<arg index='0' type64='Q' type='I' declared_type='NSSegmentSwitchTracking' name='trackingMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWidth:forSegment:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='width'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tagForSegment:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='toolTipForSegment:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='trackingMode'>
<retval type64='Q' type='I' declared_type='NSSegmentSwitchTracking'/>
</method>
<method selector='widthForSegment:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='NSSegmentedControl'>
<method selector='imageForSegment:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='imageScalingForSegment:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type64='Q' type='I' declared_type='NSImageScaling'/>
</method>
<method selector='isEnabledForSegment:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSelectedForSegment:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='labelForSegment:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='menuForSegment:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='segmentCount'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='segmentStyle'>
<retval type64='q' type='i' declared_type='NSSegmentStyle'/>
</method>
<method selector='selectSegmentWithTag:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='tag'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='selectedSegment'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='setEnabled:forSegment:'>
<arg index='0' type='B' declared_type='BOOL' name='enabled'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImage:forSegment:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageScaling:forSegment:'>
<arg index='0' type64='Q' type='I' declared_type='NSImageScaling' name='scaling'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabel:forSegment:'>
<arg index='0' type='@' declared_type='NSString*' name='label'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMenu:forSegment:'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSegmentCount:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='count'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSegmentStyle:'>
<arg index='0' type64='q' type='i' declared_type='NSSegmentStyle' name='segmentStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelected:forSegment:'>
<arg index='0' type='B' declared_type='BOOL' name='selected'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedSegment:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='selectedSegment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWidth:forSegment:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='width'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='widthForSegment:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='segment'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='NSShadow'>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='set'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShadowBlurRadius:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='val'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShadowColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShadowOffset:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='offset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shadowBlurRadius'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='shadowColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='shadowOffset'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
</class>
<class name='NSSharingService'>
<method selector='alternateImage'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='canPerformWithItems:'>
<arg index='0' type='@' declared_type='NSArray*' name='items'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='image'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='initWithTitle:image:alternateImage:handler:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<arg index='1' type='@' declared_type='NSImage*' name='image'/>
<arg index='2' type='@' declared_type='NSImage*' name='alternateImage'/>
<arg index='3' function_pointer='true' type='@?' declared_type='void (^)(void)' name='block'>
<retval type='v' declared_type='void'/>
</arg>
<retval type='@' declared_type='id'/>
</method>
<method selector='performWithItems:'>
<arg index='0' type='@' declared_type='NSArray*' name='items'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharingServiceNamed:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='serviceName'/>
<retval type='@' declared_type='NSSharingService*'/>
</method>
<method selector='sharingServicesForItems:' class_method='true'>
<arg index='0' type='@' declared_type='NSArray*' name='items'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSSharingServicePicker'>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithItems:'>
<arg index='0' type='@' declared_type='NSArray*' name='items'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showRelativeToRect:ofView:preferredEdge:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='1' type='@' declared_type='NSView*' name='view'/>
<arg index='2' type64='Q' type='i' declared_type='NSRectEdge' name='preferredEdge'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSSlider'>
<method selector='acceptsFirstMouse:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='allowsTickMarkValuesOnly'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='altIncrementValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='closestTickMarkValueToValue:'>
<arg index='0' type='d' declared_type='double' name='value'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='image'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='indexOfTickMarkAtPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='isVertical'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='knobThickness'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='maxValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='minValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='numberOfTickMarks'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='rectOfTickMarkAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='setAllowsTickMarkValuesOnly:'>
<arg index='0' type='B' declared_type='BOOL' name='yorn'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAltIncrementValue:'>
<arg index='0' type='d' declared_type='double' name='incValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImage:'>
<arg index='0' type='@' declared_type='NSImage*' name='backgroundImage'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKnobThickness:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='aFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxValue:'>
<arg index='0' type='d' declared_type='double' name='aDouble'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinValue:'>
<arg index='0' type='d' declared_type='double' name='aDouble'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfTickMarks:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='count'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTickMarkPosition:'>
<arg index='0' type64='Q' type='I' declared_type='NSTickMarkPosition' name='position'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleCell:'>
<arg index='0' type='@' declared_type='NSCell*' name='aCell'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='newColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='fontObj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tickMarkPosition'>
<retval type64='Q' type='I' declared_type='NSTickMarkPosition'/>
</method>
<method selector='tickMarkValueAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='titleCell'>
<retval type='@' declared_type='id'/>
</method>
<method selector='titleColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='titleFont'>
<retval type='@' declared_type='NSFont*'/>
</method>
</class>
<class name='NSSliderCell'>
<method selector='allowsTickMarkValuesOnly'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='altIncrementValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='closestTickMarkValueToValue:'>
<arg index='0' type='d' declared_type='double' name='value'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='drawBarInside:flipped:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg index='1' type='B' declared_type='BOOL' name='flipped'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawKnob'>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawKnob:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='knobRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='indexOfTickMarkAtPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='isVertical'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='knobRectFlipped:'>
<arg index='0' type='B' declared_type='BOOL' name='flipped'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='knobThickness'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='maxValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='minValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='numberOfTickMarks'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='prefersTrackingUntilMouseUp' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='rectOfTickMarkAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='setAllowsTickMarkValuesOnly:'>
<arg index='0' type='B' declared_type='BOOL' name='yorn'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAltIncrementValue:'>
<arg index='0' type='d' declared_type='double' name='incValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKnobThickness:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='aFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxValue:'>
<arg index='0' type='d' declared_type='double' name='aDouble'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinValue:'>
<arg index='0' type='d' declared_type='double' name='aDouble'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfTickMarks:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='count'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSliderType:'>
<arg index='0' type64='Q' type='I' declared_type='NSSliderType' name='sliderType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTickMarkPosition:'>
<arg index='0' type64='Q' type='I' declared_type='NSTickMarkPosition' name='position'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleCell:'>
<arg index='0' type='@' declared_type='NSCell*' name='aCell'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='newColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='fontObj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sliderType'>
<retval type64='Q' type='I' declared_type='NSSliderType'/>
</method>
<method selector='tickMarkPosition'>
<retval type64='Q' type='I' declared_type='NSTickMarkPosition'/>
</method>
<method selector='tickMarkValueAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='titleCell'>
<retval type='@' declared_type='id'/>
</method>
<method selector='titleColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='titleFont'>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='trackRect'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
</class>
<class name='NSSound'>
<method selector='canInitWithPasteboard:' class_method='true'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='channelMapping'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='currentTime'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='duration'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='initWithContentsOfFile:byReference:'>
<arg index='0' type='@' declared_type='NSString*' name='path'/>
<arg index='1' type='B' declared_type='BOOL' name='byRef'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentsOfURL:byReference:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='B' declared_type='BOOL' name='byRef'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:'>
<arg index='0' type='@' declared_type='NSData*' name='data'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPasteboard:'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isPlaying'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='loops'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='name'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='pause'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='play'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='playbackDeviceIdentifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='resume'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setChannelMapping:'>
<arg index='0' type='@' declared_type='NSArray*' name='channelMapping'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCurrentTime:'>
<arg index='0' type='d' declared_type='NSTimeInterval' name='seconds'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='aDelegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLoops:'>
<arg index='0' type='B' declared_type='BOOL' name='val'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setName:'>
<arg index='0' type='@' declared_type='NSString*' name='string'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setPlaybackDeviceIdentifier:'>
<arg index='0' type='@' declared_type='NSString*' name='deviceUID'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVolume:'>
<arg index='0' type='f' declared_type='float' name='volume'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='soundNamed:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='soundUnfilteredFileTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='soundUnfilteredPasteboardTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='soundUnfilteredTypes' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='stop'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='volume'>
<retval type='f' declared_type='float'/>
</method>
<method selector='writeToPasteboard:'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSSpeechRecognizer'>
<method selector='blocksOtherRecognizers'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='commands'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='displayedCommandsTitle'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='listensInForegroundOnly'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setBlocksOtherRecognizers:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCommands:'>
<arg index='0' type='@' declared_type='NSArray*' name='commands'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayedCommandsTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setListensInForegroundOnly:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startListening'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopListening'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSSpeechSynthesizer'>
<method selector='addSpeechDictionary:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='speechDictionary'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='attributesForVoice:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='voice'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='availableVoices' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='continueSpeaking'>
<retval type='v' declared_type='void'/>
</method>
<method selector='defaultVoice' class_method='true'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithVoice:'>
<arg index='0' type='@' declared_type='NSString*' name='voice'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isAnyApplicationSpeaking' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSpeaking'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='objectForProperty:error:'>
<arg index='0' type='@' declared_type='NSString*' name='property'/>
<arg index='1' type='^@' declared_type='NSError**' name='outError'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='pauseSpeakingAtBoundary:'>
<arg index='0' type64='Q' type='I' declared_type='NSSpeechBoundary' name='boundary'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='phonemesFromText:'>
<arg index='0' type='@' declared_type='NSString*' name='text'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='rate'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObject:forProperty:error:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<arg index='1' type='@' declared_type='NSString*' name='property'/>
<arg index='2' type='^@' declared_type='NSError**' name='outError'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setRate:'>
<arg index='0' type='f' declared_type='float' name='rate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesFeedbackWindow:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVoice:'>
<arg index='0' type='@' declared_type='NSString*' name='voice'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setVolume:'>
<arg index='0' type='f' declared_type='float' name='volume'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startSpeakingString:'>
<arg index='0' type='@' declared_type='NSString*' name='string'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='startSpeakingString:toURL:'>
<arg index='0' type='@' declared_type='NSString*' name='string'/>
<arg index='1' type='@' declared_type='NSURL*' name='url'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='stopSpeaking'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopSpeakingAtBoundary:'>
<arg index='0' type64='Q' type='I' declared_type='NSSpeechBoundary' name='boundary'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='usesFeedbackWindow'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='voice'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='volume'>
<retval type='f' declared_type='float'/>
</method>
</class>
<class name='NSSpellChecker'>
<method selector='accessoryView'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='automaticallyIdentifiesLanguages'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='availableLanguages'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='checkGrammarOfString:startingAt:language:wrap:inSpellDocumentWithTag:details:'>
<arg index='0' type='@' declared_type='NSString*' name='stringToCheck'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='startingOffset'/>
<arg index='2' type='@' declared_type='NSString*' name='language'/>
<arg index='3' type='B' declared_type='BOOL' name='wrapFlag'/>
<arg index='4' type64='q' type='i' declared_type='NSInteger' name='tag'/>
<arg index='5' type='^@' declared_type='NSArray**' name='details'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='checkSpellingOfString:startingAt:'>
<arg index='0' type='@' declared_type='NSString*' name='stringToCheck'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='startingOffset'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='checkSpellingOfString:startingAt:language:wrap:inSpellDocumentWithTag:wordCount:'>
<arg index='0' type='@' declared_type='NSString*' name='stringToCheck'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='startingOffset'/>
<arg index='2' type='@' declared_type='NSString*' name='language'/>
<arg index='3' type='B' declared_type='BOOL' name='wrapFlag'/>
<arg index='4' type64='q' type='i' declared_type='NSInteger' name='tag'/>
<arg index='5' type64='^q' type='^i' declared_type='NSInteger*' name='wordCount'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='checkString:range:types:options:inSpellDocumentWithTag:orthography:wordCount:'>
<arg index='0' type='@' declared_type='NSString*' name='stringToCheck'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='2' type='Q' declared_type='NSTextCheckingTypes' name='checkingTypes'/>
<arg index='3' type='@' declared_type='NSDictionary*' name='options'/>
<arg index='4' type64='q' type='i' declared_type='NSInteger' name='tag'/>
<arg index='5' type='^@' declared_type='NSOrthography**' name='orthography'/>
<arg index='6' type64='^q' type='^i' declared_type='NSInteger*' name='wordCount'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='closeSpellDocumentWithTag:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='tag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='completionsForPartialWordRange:inString:language:inSpellDocumentWithTag:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='1' type='@' declared_type='NSString*' name='string'/>
<arg index='2' type='@' declared_type='NSString*' name='language'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='tag'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='correctionForWordRange:inString:language:inSpellDocumentWithTag:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='1' type='@' declared_type='NSString*' name='string'/>
<arg index='2' type='@' declared_type='NSString*' name='language'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='tag'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='countWordsInString:language:'>
<arg index='0' type='@' declared_type='NSString*' name='stringToCount'/>
<arg index='1' type='@' declared_type='NSString*' name='language'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='dismissCorrectionIndicatorForView:'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='forgetWord:'>
<arg index='0' type='@' declared_type='NSString*' name='word'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='guessesForWord:'>
<arg index='0' type='@' declared_type='NSString*' name='word'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='guessesForWordRange:inString:language:inSpellDocumentWithTag:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='1' type='@' declared_type='NSString*' name='string'/>
<arg index='2' type='@' declared_type='NSString*' name='language'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='tag'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='hasLearnedWord:'>
<arg index='0' type='@' declared_type='NSString*' name='word'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ignoreWord:inSpellDocumentWithTag:'>
<arg index='0' type='@' declared_type='NSString*' name='wordToIgnore'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='tag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='ignoredWordsInSpellDocumentWithTag:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='tag'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='isAutomaticSpellingCorrectionEnabled' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isAutomaticTextReplacementEnabled' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='language'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='languageForWordRange:inString:orthography:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='1' type='@' declared_type='NSString*' name='string'/>
<arg index='2' type='@' declared_type='NSOrthography*' name='orthography'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='learnWord:'>
<arg index='0' type='@' declared_type='NSString*' name='word'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='menuForResult:string:options:atLocation:inView:'>
<arg index='0' type='@' declared_type='NSTextCheckingResult*' name='result'/>
<arg index='1' type='@' declared_type='NSString*' name='checkedString'/>
<arg index='2' type='@' declared_type='NSDictionary*' name='options'/>
<arg index='3' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='location'/>
<arg index='4' type='@' declared_type='NSView*' name='view'/>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='recordResponse:toCorrection:forWord:language:inSpellDocumentWithTag:'>
<arg index='0' type64='q' type='i' declared_type='NSCorrectionResponse' name='response'/>
<arg index='1' type='@' declared_type='NSString*' name='correction'/>
<arg index='2' type='@' declared_type='NSString*' name='word'/>
<arg index='3' type='@' declared_type='NSString*' name='language'/>
<arg index='4' type64='q' type='i' declared_type='NSInteger' name='tag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='requestCheckingOfString:range:types:options:inSpellDocumentWithTag:completionHandler:'>
<arg index='0' type='@' declared_type='NSString*' name='stringToCheck'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='2' type='Q' declared_type='NSTextCheckingTypes' name='checkingTypes'/>
<arg index='3' type='@' declared_type='NSDictionary*' name='options'/>
<arg index='4' type64='q' type='i' declared_type='NSInteger' name='tag'/>
<arg index='5' function_pointer='true' type='@?' declared_type='void (^)(NSInteger, NSArray *, NSOrthography *, NSInteger)' name='completionHandler'>
<arg type64='q' type='i' declared_type='NSInteger'/>
<arg type='@' declared_type='NSArray*'/>
<arg type='@' declared_type='NSOrthography*'/>
<arg type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='setAccessoryView:'>
<arg index='0' type='@' declared_type='NSView*' name='aView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutomaticallyIdentifiesLanguages:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIgnoredWords:inSpellDocumentWithTag:'>
<arg index='0' type='@' declared_type='NSArray*' name='words'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='tag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLanguage:'>
<arg index='0' type='@' declared_type='NSString*' name='language'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setSubstitutionsPanelAccessoryViewController:'>
<arg index='0' type='@' declared_type='NSViewController*' name='accessoryController'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWordFieldStringValue:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedSpellChecker' class_method='true'>
<retval type='@' declared_type='NSSpellChecker*'/>
</method>
<method selector='sharedSpellCheckerExists' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showCorrectionIndicatorOfType:primaryString:alternativeStrings:forStringInRect:view:completionHandler:'>
<arg index='0' type64='q' type='i' declared_type='NSCorrectionIndicatorType' name='type'/>
<arg index='1' type='@' declared_type='NSString*' name='primaryString'/>
<arg index='2' type='@' declared_type='NSArray*' name='alternativeStrings'/>
<arg index='3' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rectOfTypedString'/>
<arg index='4' type='@' declared_type='NSView*' name='view'/>
<arg index='5' function_pointer='true' type='@?' declared_type='void (^)(NSString *)' name='completionBlock'>
<arg type='@' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='spellingPanel'>
<retval type='@' declared_type='NSPanel*'/>
</method>
<method selector='substitutionsPanel'>
<retval type='@' declared_type='NSPanel*'/>
</method>
<method selector='substitutionsPanelAccessoryViewController'>
<retval type='@' declared_type='NSViewController*'/>
</method>
<method selector='uniqueSpellDocumentTag' class_method='true'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='unlearnWord:'>
<arg index='0' type='@' declared_type='NSString*' name='word'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updatePanels'>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateSpellingPanelWithGrammarString:detail:'>
<arg index='0' type='@' declared_type='NSString*' name='string'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='detail'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateSpellingPanelWithMisspelledWord:'>
<arg index='0' type='@' declared_type='NSString*' name='word'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='userPreferredLanguages'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='userQuotesArrayForLanguage:'>
<arg index='0' type='@' declared_type='NSString*' name='language'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='userReplacementsDictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSSplitView'>
<method selector='adjustSubviews'>
<retval type='v' declared_type='void'/>
</method>
<method selector='autosaveName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dividerColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='dividerStyle'>
<retval type64='q' type='i' declared_type='NSSplitViewDividerStyle'/>
</method>
<method selector='dividerThickness'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='drawDividerInRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='holdingPriorityForSubviewAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='subviewIndex'/>
<retval type='f' declared_type='NSLayoutPriority'/>
</method>
<method selector='isPaneSplitter'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSubviewCollapsed:'>
<arg index='0' type='@' declared_type='NSView*' name='subview'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isVertical'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='maxPossiblePositionOfDividerAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='dividerIndex'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='minPossiblePositionOfDividerAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='dividerIndex'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='setAutosaveName:'>
<arg index='0' type='@' declared_type='NSString*' name='autosaveName'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDividerStyle:'>
<arg index='0' type64='q' type='i' declared_type='NSSplitViewDividerStyle' name='dividerStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHoldingPriority:forSubviewAtIndex:'>
<arg index='0' type='f' declared_type='NSLayoutPriority' name='priority'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='subviewIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsPaneSplitter:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:ofDividerAtIndex:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='position'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='dividerIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVertical:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSStatusBar'>
<method selector='isVertical'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='removeStatusItem:'>
<arg index='0' type='@' declared_type='NSStatusItem*' name='item'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='statusItemWithLength:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='length'/>
<retval type='@' declared_type='NSStatusItem*'/>
</method>
<method selector='systemStatusBar' class_method='true'>
<retval type='@' declared_type='NSStatusBar*'/>
</method>
<method selector='thickness'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='NSStatusItem'>
<method selector='action'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='alternateImage'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='attributedTitle'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='doubleAction'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='drawStatusBarBackgroundInRect:withHighlight:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='1' type='B' declared_type='BOOL' name='highlight'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='highlightMode'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='image'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='isEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='length'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='menu'>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='popUpStatusItemMenu:'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sendActionOn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='mask'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='setAction:'>
<arg index='0' type=':' declared_type='SEL' name='action'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlternateImage:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributedTitle:'>
<arg index='0' type='@' declared_type='NSAttributedString*' name='title'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDoubleAction:'>
<arg index='0' type=':' declared_type='SEL' name='action'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnabled:'>
<arg index='0' type='B' declared_type='BOOL' name='enabled'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHighlightMode:'>
<arg index='0' type='B' declared_type='BOOL' name='highlightMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImage:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLength:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='length'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMenu:'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTarget:'>
<arg index='0' type='@' declared_type='id' name='target'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setToolTip:'>
<arg index='0' type='@' declared_type='NSString*' name='toolTip'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setView:'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='statusBar'>
<retval type='@' declared_type='NSStatusBar*'/>
</method>
<method selector='target'>
<retval type='@' declared_type='id'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='toolTip'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='view'>
<retval type='@' declared_type='NSView*'/>
</method>
</class>
<class name='NSStepper'>
<method selector='autorepeat'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='increment'>
<retval type='d' declared_type='double'/>
</method>
<method selector='maxValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='minValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='setAutorepeat:'>
<arg index='0' type='B' declared_type='BOOL' name='autorepeat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIncrement:'>
<arg index='0' type='d' declared_type='double' name='increment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxValue:'>
<arg index='0' type='d' declared_type='double' name='maxValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinValue:'>
<arg index='0' type='d' declared_type='double' name='minValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValueWraps:'>
<arg index='0' type='B' declared_type='BOOL' name='valueWraps'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='valueWraps'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSStepperCell'>
<method selector='autorepeat'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='increment'>
<retval type='d' declared_type='double'/>
</method>
<method selector='maxValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='minValue'>
<retval type='d' declared_type='double'/>
</method>
<method selector='setAutorepeat:'>
<arg index='0' type='B' declared_type='BOOL' name='autorepeat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIncrement:'>
<arg index='0' type='d' declared_type='double' name='increment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxValue:'>
<arg index='0' type='d' declared_type='double' name='maxValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinValue:'>
<arg index='0' type='d' declared_type='double' name='minValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValueWraps:'>
<arg index='0' type='B' declared_type='BOOL' name='valueWraps'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='valueWraps'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSString'>
<method selector='boundingRectWithSize:options:attributes:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='size'/>
<arg index='1' type64='q' type='i' declared_type='NSStringDrawingOptions' name='options'/>
<arg index='2' type='@' declared_type='NSDictionary*' name='attributes'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='drawAtPoint:withAttributes:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='attrs'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawInRect:withAttributes:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='attrs'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawWithRect:options:attributes:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='1' type64='q' type='i' declared_type='NSStringDrawingOptions' name='options'/>
<arg index='2' type='@' declared_type='NSDictionary*' name='attributes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sizeWithAttributes:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='attrs'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
</class>
<class name='NSTabView'>
<method selector='addTabViewItem:'>
<arg index='0' type='@' declared_type='NSTabViewItem*' name='tabViewItem'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allowsTruncatedLabels'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='contentRect'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='controlSize'>
<retval type64='Q' type='I' declared_type='NSControlSize'/>
</method>
<method selector='controlTint'>
<retval type64='Q' type='I' declared_type='NSControlTint'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='drawsBackground'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='font'>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='indexOfTabViewItem:'>
<arg index='0' type='@' declared_type='NSTabViewItem*' name='tabViewItem'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='indexOfTabViewItemWithIdentifier:'>
<arg index='0' type='@' declared_type='id' name='identifier'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='insertTabViewItem:atIndex:'>
<arg index='0' type='@' declared_type='NSTabViewItem*' name='tabViewItem'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='minimumSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='numberOfTabViewItems'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='removeTabViewItem:'>
<arg index='0' type='@' declared_type='NSTabViewItem*' name='tabViewItem'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectFirstTabViewItem:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectLastTabViewItem:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectNextTabViewItem:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectPreviousTabViewItem:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectTabViewItem:'>
<arg index='0' type='@' declared_type='NSTabViewItem*' name='tabViewItem'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectTabViewItemAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectTabViewItemWithIdentifier:'>
<arg index='0' type='@' declared_type='id' name='identifier'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectedTabViewItem'>
<retval type='@' declared_type='NSTabViewItem*'/>
</method>
<method selector='setAllowsTruncatedLabels:'>
<arg index='0' type='B' declared_type='BOOL' name='allowTruncatedLabels'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setControlSize:'>
<arg index='0' type64='Q' type='I' declared_type='NSControlSize' name='controlSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setControlTint:'>
<arg index='0' type64='Q' type='I' declared_type='NSControlTint' name='controlTint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawsBackground:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='font'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTabViewType:'>
<arg index='0' type64='Q' type='I' declared_type='NSTabViewType' name='tabViewType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tabViewItemAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='@' declared_type='NSTabViewItem*'/>
</method>
<method selector='tabViewItemAtPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<retval type='@' declared_type='NSTabViewItem*'/>
</method>
<method selector='tabViewItems'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='tabViewType'>
<retval type64='Q' type='I' declared_type='NSTabViewType'/>
</method>
<method selector='takeSelectedTabViewItemFromSender:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSTabViewItem'>
<method selector='color'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='drawLabel:inRect:'>
<arg index='0' type='B' declared_type='BOOL' name='shouldTruncateLabel'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='labelRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='identifier'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithIdentifier:'>
<arg index='0' type='@' declared_type='id' name='identifier'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initialFirstResponder'>
<retval type='@' declared_type='id'/>
</method>
<method selector='label'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIdentifier:'>
<arg index='0' type='@' declared_type='id' name='identifier'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInitialFirstResponder:'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabel:'>
<arg index='0' type='@' declared_type='NSString*' name='label'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setToolTip:'>
<arg index='0' type='@' declared_type='NSString*' name='toolTip'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setView:'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sizeOfLabel:'>
<arg index='0' type='B' declared_type='BOOL' name='computeMin'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='tabState'>
<retval type64='Q' type='I' declared_type='NSTabState'/>
</method>
<method selector='tabView'>
<retval type='@' declared_type='NSTabView*'/>
</method>
<method selector='toolTip'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='view'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSTableCellView'>
<method selector='backgroundStyle'>
<retval type64='q' type='i' declared_type='NSBackgroundStyle'/>
</method>
<method selector='draggingImageComponents'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='imageView'>
<retval type='@' declared_type='NSImageView*'/>
</method>
<method selector='objectValue'>
<retval type='@' declared_type='id'/>
</method>
<method selector='rowSizeStyle'>
<retval type64='q' type='i' declared_type='NSTableViewRowSizeStyle'/>
</method>
<method selector='setBackgroundStyle:'>
<arg index='0' type64='q' type='i' declared_type='NSBackgroundStyle' name='backgroundStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImageView:'>
<arg index='0' type='@' declared_type='NSImageView*' name='imageView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setObjectValue:'>
<arg index='0' type='@' declared_type='id' name='objectValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRowSizeStyle:'>
<arg index='0' type64='q' type='i' declared_type='NSTableViewRowSizeStyle' name='rowSizeStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextField:'>
<arg index='0' type='@' declared_type='NSTextField*' name='textField'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textField'>
<retval type='@' declared_type='NSTextField*'/>
</method>
</class>
<class name='NSTableColumn'>
<method selector='dataCell'>
<retval type='@' declared_type='id'/>
</method>
<method selector='dataCellForRow:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='headerCell'>
<retval type='@' declared_type='id'/>
</method>
<method selector='headerToolTip'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='identifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithIdentifier:'>
<arg index='0' type='@' declared_type='NSString*' name='identifier'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEditable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isHidden'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isResizable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='maxWidth'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='minWidth'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='resizingMask'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='setDataCell:'>
<arg index='0' type='@' declared_type='NSCell*' name='cell'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEditable:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHeaderCell:'>
<arg index='0' type='@' declared_type='NSCell*' name='cell'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHeaderToolTip:'>
<arg index='0' type='@' declared_type='NSString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHidden:'>
<arg index='0' type='B' declared_type='BOOL' name='hidden'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIdentifier:'>
<arg index='0' type='@' declared_type='NSString*' name='identifier'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxWidth:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='maxWidth'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinWidth:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='minWidth'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResizable:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResizingMask:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='resizingMask'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSortDescriptorPrototype:'>
<arg index='0' type='@' declared_type='NSSortDescriptor*' name='sortDescriptor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTableView:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWidth:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='width'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sizeToFit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortDescriptorPrototype'>
<retval type='@' declared_type='NSSortDescriptor*'/>
</method>
<method selector='tableView'>
<retval type='@' declared_type='NSTableView*'/>
</method>
<method selector='width'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='NSTableHeaderCell'>
<method selector='drawSortIndicatorWithFrame:inView:ascending:priority:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<arg index='2' type='B' declared_type='BOOL' name='ascending'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='priority'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortIndicatorRectForBounds:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='theRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
</class>
<class name='NSTableHeaderView'>
<method selector='columnAtPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='draggedColumn'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='draggedDistance'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='headerRectOfColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='resizedColumn'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='setTableView:'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tableView'>
<retval type='@' declared_type='NSTableView*'/>
</method>
</class>
<class name='NSTableRowView'>
<method selector='backgroundColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='draggingDestinationFeedbackStyle'>
<retval type64='q' type='i' declared_type='NSTableViewDraggingDestinationFeedbackStyle'/>
</method>
<method selector='drawBackgroundInRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='dirtyRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawDraggingDestinationFeedbackInRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='dirtyRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawSelectionInRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='dirtyRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawSeparatorInRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='dirtyRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='indentationForDropOperation'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='interiorBackgroundStyle'>
<retval type64='q' type='i' declared_type='NSBackgroundStyle'/>
</method>
<method selector='isEmphasized'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFloating'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isGroupRowStyle'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSelected'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isTargetForDropOperation'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='numberOfColumns'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='selectionHighlightStyle'>
<retval type64='q' type='i' declared_type='NSTableViewSelectionHighlightStyle'/>
</method>
<method selector='setBackgroundColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='backgroundColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDraggingDestinationFeedbackStyle:'>
<arg index='0' type64='q' type='i' declared_type='NSTableViewDraggingDestinationFeedbackStyle' name='draggingDestinationFeedbackStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEmphasized:'>
<arg index='0' type='B' declared_type='BOOL' name='emphasized'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFloating:'>
<arg index='0' type='B' declared_type='BOOL' name='floating'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGroupRowStyle:'>
<arg index='0' type='B' declared_type='BOOL' name='groupRowStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIndentationForDropOperation:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='indentationForDropOperation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelected:'>
<arg index='0' type='B' declared_type='BOOL' name='selected'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectionHighlightStyle:'>
<arg index='0' type64='q' type='i' declared_type='NSTableViewSelectionHighlightStyle' name='selectionHighlightStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTargetForDropOperation:'>
<arg index='0' type='B' declared_type='BOOL' name='targetForDropOperation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewAtColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSTableView'>
<method selector='addTableColumn:'>
<arg index='0' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allowsColumnReordering'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='allowsColumnResizing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='allowsColumnSelection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='allowsEmptySelection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='allowsMultipleSelection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='allowsTypeSelect'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='autoresizesAllColumnsToFit'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='autosaveName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='autosaveTableColumns'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='backgroundColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='beginUpdates'>
<retval type='v' declared_type='void'/>
</method>
<method selector='canDragRowsWithIndexes:atPoint:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='rowIndexes'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='mouseDownPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='clickedColumn'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='clickedRow'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='columnAtPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='columnAutoresizingStyle'>
<retval type64='Q' type='I' declared_type='NSTableViewColumnAutoresizingStyle'/>
</method>
<method selector='columnForView:'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='columnIndexesInRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='columnWithIdentifier:'>
<arg index='0' type='@' declared_type='NSString*' name='identifier'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='columnsInRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='cornerView'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='dataSource'>
<retval type='@' declared_type='id'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='deselectAll:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='deselectColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='deselectRow:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='doubleAction'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='dragImageForRows:event:dragImageOffset:'>
<arg index='0' type='@' declared_type='NSArray*' name='dragRows'/>
<arg index='1' type='@' declared_type='NSEvent*' name='dragEvent'/>
<arg index='2' type64='^{CGPoint=dd}' type='^{_NSPoint=ff}' declared_type='NSPointPointer' name='dragImageOffset'/>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='dragImageForRowsWithIndexes:tableColumns:event:offset:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='dragRows'/>
<arg index='1' type='@' declared_type='NSArray*' name='tableColumns'/>
<arg index='2' type='@' declared_type='NSEvent*' name='dragEvent'/>
<arg index='3' type64='^{CGPoint=dd}' type='^{_NSPoint=ff}' declared_type='NSPointPointer' name='dragImageOffset'/>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='draggingDestinationFeedbackStyle'>
<retval type64='q' type='i' declared_type='NSTableViewDraggingDestinationFeedbackStyle'/>
</method>
<method selector='drawBackgroundInClipRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='clipRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawGridInClipRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='clipRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawRow:clipRect:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='clipRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawsGrid'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='editColumn:row:withEvent:select:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='2' type='@' declared_type='NSEvent*' name='theEvent'/>
<arg index='3' type='B' declared_type='BOOL' name='select'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='editedColumn'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='editedRow'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='effectiveRowSizeStyle'>
<retval type64='q' type='i' declared_type='NSTableViewRowSizeStyle'/>
</method>
<method selector='endUpdates'>
<retval type='v' declared_type='void'/>
</method>
<method selector='enumerateAvailableRowViewsUsingBlock:'>
<arg index='0' function_pointer='true' type='@?' declared_type='void (^)(NSTableRowView *, NSInteger)' name='handler'>
<arg type='@' declared_type='NSTableRowView*'/>
<arg type64='q' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='floatsGroupRows'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='focusedColumn'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='frameOfCellAtColumn:row:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='gridColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='gridStyleMask'>
<retval type64='Q' type='I' declared_type='NSTableViewGridLineStyle'/>
</method>
<method selector='headerView'>
<retval type='@' declared_type='NSTableHeaderView*'/>
</method>
<method selector='highlightSelectionInClipRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='clipRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='highlightedTableColumn'>
<retval type='@' declared_type='NSTableColumn*'/>
</method>
<method selector='indicatorImageInTableColumn:'>
<arg index='0' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='insertRowsAtIndexes:withAnimation:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='indexes'/>
<arg index='1' type64='Q' type='I' declared_type='NSTableViewAnimationOptions' name='animationOptions'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='intercellSpacing'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='isColumnSelected:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRowSelected:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='makeViewWithIdentifier:owner:'>
<arg index='0' type='@' declared_type='NSString*' name='identifier'/>
<arg index='1' type='@' declared_type='id' name='owner'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='moveColumn:toColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='oldIndex'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='newIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveRowAtIndex:toIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='oldIndex'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='newIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='noteHeightOfRowsWithIndexesChanged:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='indexSet'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='noteNumberOfRowsChanged'>
<retval type='v' declared_type='void'/>
</method>
<method selector='numberOfColumns'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='numberOfRows'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='numberOfSelectedColumns'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='numberOfSelectedRows'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='performClickOnCellAtColumn:row:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='preparedCellAtColumn:row:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='@' declared_type='NSCell*'/>
</method>
<method selector='rectOfColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='rectOfRow:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='registerNib:forIdentifier:'>
<arg index='0' type='@' declared_type='NSNib*' name='nib'/>
<arg index='1' type='@' declared_type='NSString*' name='identifier'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='registeredNibsByIdentifier'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='reloadData'>
<retval type='v' declared_type='void'/>
</method>
<method selector='reloadDataForRowIndexes:columnIndexes:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='rowIndexes'/>
<arg index='1' type='@' declared_type='NSIndexSet*' name='columnIndexes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeRowsAtIndexes:withAnimation:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='indexes'/>
<arg index='1' type64='Q' type='I' declared_type='NSTableViewAnimationOptions' name='animationOptions'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeTableColumn:'>
<arg index='0' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rowAtPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='rowForView:'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='rowHeight'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='rowSizeStyle'>
<retval type64='q' type='i' declared_type='NSTableViewRowSizeStyle'/>
</method>
<method selector='rowViewAtRow:makeIfNecessary:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='1' type='B' declared_type='BOOL' name='makeIfNecessary'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rowsInRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='scrollColumnToVisible:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollRowToVisible:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectAll:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectColumn:byExtendingSelection:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='1' type='B' declared_type='BOOL' name='extend'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectColumnIndexes:byExtendingSelection:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='indexes'/>
<arg index='1' type='B' declared_type='BOOL' name='extend'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectRow:byExtendingSelection:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='1' type='B' declared_type='BOOL' name='extend'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectRowIndexes:byExtendingSelection:'>
<arg index='0' type='@' declared_type='NSIndexSet*' name='indexes'/>
<arg index='1' type='B' declared_type='BOOL' name='extend'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectedColumn'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='selectedColumnEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='selectedColumnIndexes'>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='selectedRow'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='selectedRowEnumerator'>
<retval type='@' declared_type='NSEnumerator*'/>
</method>
<method selector='selectedRowIndexes'>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method selector='selectionHighlightStyle'>
<retval type64='q' type='i' declared_type='NSTableViewSelectionHighlightStyle'/>
</method>
<method selector='setAllowsColumnReordering:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsColumnResizing:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsColumnSelection:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsEmptySelection:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsMultipleSelection:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsTypeSelect:'>
<arg index='0' type='B' declared_type='BOOL' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutoresizesAllColumnsToFit:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutosaveName:'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutosaveTableColumns:'>
<arg index='0' type='B' declared_type='BOOL' name='save'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColumnAutoresizingStyle:'>
<arg index='0' type64='Q' type='I' declared_type='NSTableViewColumnAutoresizingStyle' name='style'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCornerView:'>
<arg index='0' type='@' declared_type='NSView*' name='cornerView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDataSource:'>
<arg index='0' type='@' declared_type='id' name='aSource'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDoubleAction:'>
<arg index='0' type=':' declared_type='SEL' name='aSelector'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDraggingDestinationFeedbackStyle:'>
<arg index='0' type64='q' type='i' declared_type='NSTableViewDraggingDestinationFeedbackStyle' name='style'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDraggingSourceOperationMask:forLocal:'>
<arg index='0' type64='Q' type='I' declared_type='NSDragOperation' name='mask'/>
<arg index='1' type='B' declared_type='BOOL' name='isLocal'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawsGrid:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDropRow:dropOperation:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='1' type64='Q' type='I' declared_type='NSTableViewDropOperation' name='dropOperation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFloatsGroupRows:'>
<arg index='0' type='B' declared_type='BOOL' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFocusedColumn:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='focusedColumn'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGridColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGridStyleMask:'>
<arg index='0' type64='Q' type='I' declared_type='NSTableViewGridLineStyle' name='gridStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHeaderView:'>
<arg index='0' type='@' declared_type='NSTableHeaderView*' name='headerView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHighlightedTableColumn:'>
<arg index='0' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIndicatorImage:inTableColumn:'>
<arg index='0' type='@' declared_type='NSImage*' name='anImage'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIntercellSpacing:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='aSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRowHeight:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='rowHeight'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRowSizeStyle:'>
<arg index='0' type64='q' type='i' declared_type='NSTableViewRowSizeStyle' name='rowSizeStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectionHighlightStyle:'>
<arg index='0' type64='q' type='i' declared_type='NSTableViewSelectionHighlightStyle' name='selectionHighlightStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSortDescriptors:'>
<arg index='0' type='@' declared_type='NSArray*' name='array'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesAlternatingRowBackgroundColors:'>
<arg index='0' type='B' declared_type='BOOL' name='useAlternatingRowColors'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVerticalMotionCanBeginDrag:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldFocusCell:atColumn:row:'>
<arg index='0' type='@' declared_type='NSCell*' name='cell'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='sizeLastColumnToFit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='sizeToFit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='tableColumnWithIdentifier:'>
<arg index='0' type='@' declared_type='NSString*' name='identifier'/>
<retval type='@' declared_type='NSTableColumn*'/>
</method>
<method selector='tableColumns'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='textDidBeginEditing:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textDidChange:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textDidEndEditing:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textShouldBeginEditing:'>
<arg index='0' type='@' declared_type='NSText*' name='textObject'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='textShouldEndEditing:'>
<arg index='0' type='@' declared_type='NSText*' name='textObject'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='tile'>
<retval type='v' declared_type='void'/>
</method>
<method selector='usesAlternatingRowBackgroundColors'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='verticalMotionCanBeginDrag'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='viewAtColumn:row:makeIfNecessary:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='2' type='B' declared_type='BOOL' name='makeIfNecessary'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSText'>
<method selector='RTFDFromRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='RTFFromRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='alignCenter:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignLeft:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignRight:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alignment'>
<retval type64='Q' type='I' declared_type='NSTextAlignment'/>
</method>
<method selector='backgroundColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='baseWritingDirection'>
<retval type64='q' type='i' declared_type='NSWritingDirection'/>
</method>
<method selector='changeFont:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='checkSpelling:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='copy:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='copyFont:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='copyRuler:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cut:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='delete:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawsBackground'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='font'>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='importsGraphics'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEditable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFieldEditor'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isHorizontallyResizable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRichText'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRulerVisible'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSelectable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isVerticallyResizable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='maxSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='minSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='paste:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pasteFont:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pasteRuler:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='readRTFDFromFile:'>
<arg index='0' type='@' declared_type='NSString*' name='path'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='replaceCharactersInRange:withRTF:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='1' type='@' declared_type='NSData*' name='rtfData'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceCharactersInRange:withRTFD:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='1' type='@' declared_type='NSData*' name='rtfdData'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceCharactersInRange:withString:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='1' type='@' declared_type='NSString*' name='aString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollRangeToVisible:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectAll:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectedRange'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='setAlignment:'>
<arg index='0' type64='Q' type='I' declared_type='NSTextAlignment' name='mode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBaseWritingDirection:'>
<arg index='0' type64='q' type='i' declared_type='NSWritingDirection' name='writingDirection'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawsBackground:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEditable:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFieldEditor:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='obj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFont:range:'>
<arg index='0' type='@' declared_type='NSFont*' name='font'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHorizontallyResizable:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImportsGraphics:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='newMaxSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='newMinSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRichText:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectable:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setString:'>
<arg index='0' type='@' declared_type='NSString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextColor:range:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesFontPanel:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVerticallyResizable:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showGuessPanel:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sizeToFit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='string'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='subscript:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='superscript:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='toggleRuler:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='underline:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unscript:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='usesFontPanel'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeRTFDToFile:atomically:'>
<arg index='0' type='@' declared_type='NSString*' name='path'/>
<arg index='1' type='B' declared_type='BOOL' name='flag'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSTextAlternatives'>
<method selector='alternativeStrings'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='initWithPrimaryString:alternativeStrings:'>
<arg index='0' type='@' declared_type='NSString*' name='primaryString'/>
<arg index='1' type='@' declared_type='NSArray*' name='alternativeStrings'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='noteSelectedAlternativeString:'>
<arg index='0' type='@' declared_type='NSString*' name='alternativeString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='primaryString'>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='NSTextAttachment'>
<method selector='attachmentCell'>
<retval type='@' declared_type='id'/>
</method>
<method selector='fileWrapper'>
<retval type='@' declared_type='NSFileWrapper*'/>
</method>
<method selector='initWithFileWrapper:'>
<arg index='0' type='@' declared_type='NSFileWrapper*' name='fileWrapper'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setAttachmentCell:'>
<arg index='0' type='@' declared_type='id' name='cell'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFileWrapper:'>
<arg index='0' type='@' declared_type='NSFileWrapper*' name='fileWrapper'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSTextBlock'>
<method selector='backgroundColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='borderColorForEdge:'>
<arg index='0' type64='Q' type='i' declared_type='NSRectEdge' name='edge'/>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='boundsRectForContentRect:inRect:textContainer:characterRange:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='contentRect'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='2' type='@' declared_type='NSTextContainer*' name='textContainer'/>
<arg index='3' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='contentWidth'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='contentWidthValueType'>
<retval type64='Q' type='I' declared_type='NSTextBlockValueType'/>
</method>
<method selector='drawBackgroundWithFrame:inView:characterRange:layoutManager:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frameRect'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<arg index='2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<arg index='3' type='@' declared_type='NSLayoutManager*' name='layoutManager'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='rectForLayoutAtPoint:inRect:textContainer:characterRange:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='startingPoint'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='2' type='@' declared_type='NSTextContainer*' name='textContainer'/>
<arg index='3' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='setBackgroundColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBorderColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBorderColor:forEdge:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<arg index='1' type64='Q' type='i' declared_type='NSRectEdge' name='edge'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentWidth:type:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='val'/>
<arg index='1' type64='Q' type='I' declared_type='NSTextBlockValueType' name='type'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setValue:type:forDimension:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='val'/>
<arg index='1' type64='Q' type='I' declared_type='NSTextBlockValueType' name='type'/>
<arg index='2' type64='Q' type='I' declared_type='NSTextBlockDimension' name='dimension'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVerticalAlignment:'>
<arg index='0' type64='Q' type='I' declared_type='NSTextBlockVerticalAlignment' name='alignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWidth:type:forLayer:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='val'/>
<arg index='1' type64='Q' type='I' declared_type='NSTextBlockValueType' name='type'/>
<arg index='2' type64='q' type='i' declared_type='NSTextBlockLayer' name='layer'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWidth:type:forLayer:edge:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='val'/>
<arg index='1' type64='Q' type='I' declared_type='NSTextBlockValueType' name='type'/>
<arg index='2' type64='q' type='i' declared_type='NSTextBlockLayer' name='layer'/>
<arg index='3' type64='Q' type='i' declared_type='NSRectEdge' name='edge'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='valueForDimension:'>
<arg index='0' type64='Q' type='I' declared_type='NSTextBlockDimension' name='dimension'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='valueTypeForDimension:'>
<arg index='0' type64='Q' type='I' declared_type='NSTextBlockDimension' name='dimension'/>
<retval type64='Q' type='I' declared_type='NSTextBlockValueType'/>
</method>
<method selector='verticalAlignment'>
<retval type64='Q' type='I' declared_type='NSTextBlockVerticalAlignment'/>
</method>
<method selector='widthForLayer:edge:'>
<arg index='0' type64='q' type='i' declared_type='NSTextBlockLayer' name='layer'/>
<arg index='1' type64='Q' type='i' declared_type='NSRectEdge' name='edge'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='widthValueTypeForLayer:edge:'>
<arg index='0' type64='q' type='i' declared_type='NSTextBlockLayer' name='layer'/>
<arg index='1' type64='Q' type='i' declared_type='NSRectEdge' name='edge'/>
<retval type64='Q' type='I' declared_type='NSTextBlockValueType'/>
</method>
</class>
<class name='NSTextContainer'>
<method selector='containerSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='containsPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='heightTracksTextView'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithContainerSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='size'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isSimpleRectangularTextContainer'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='layoutManager'>
<retval type='@' declared_type='NSLayoutManager*'/>
</method>
<method selector='lineFragmentPadding'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='lineFragmentRectForProposedRect:sweepDirection:movementDirection:remainingRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='proposedRect'/>
<arg index='1' type64='Q' type='I' declared_type='NSLineSweepDirection' name='sweepDirection'/>
<arg index='2' type64='Q' type='I' declared_type='NSLineMovementDirection' name='movementDirection'/>
<arg index='3' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRectPointer' name='remainingRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='replaceLayoutManager:'>
<arg index='0' type='@' declared_type='NSLayoutManager*' name='newLayoutManager'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContainerSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='size'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHeightTracksTextView:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayoutManager:'>
<arg index='0' type='@' declared_type='NSLayoutManager*' name='layoutManager'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineFragmentPadding:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='pad'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextView:'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWidthTracksTextView:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textView'>
<retval type='@' declared_type='NSTextView*'/>
</method>
<method selector='widthTracksTextView'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSTextField'>
<method selector='acceptsFirstResponder'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='allowsEditingTextAttributes'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='backgroundColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='bezelStyle'>
<retval type64='Q' type='I' declared_type='NSTextFieldBezelStyle'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='drawsBackground'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='importsGraphics'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isBezeled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isBordered'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEditable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSelectable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='preferredMaxLayoutWidth'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='selectText:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsEditingTextAttributes:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBezelStyle:'>
<arg index='0' type64='Q' type='I' declared_type='NSTextFieldBezelStyle' name='style'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBezeled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBordered:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawsBackground:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEditable:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImportsGraphics:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreferredMaxLayoutWidth:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='width'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectable:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleWithMnemonic:'>
<arg index='0' type='@' declared_type='NSString*' name='stringWithAmpersand'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='textDidBeginEditing:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textDidChange:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textDidEndEditing:'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textShouldBeginEditing:'>
<arg index='0' type='@' declared_type='NSText*' name='textObject'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='textShouldEndEditing:'>
<arg index='0' type='@' declared_type='NSText*' name='textObject'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSTextFieldCell'>
<method selector='allowedInputSourceLocales'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='backgroundColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='bezelStyle'>
<retval type64='Q' type='I' declared_type='NSTextFieldBezelStyle'/>
</method>
<method selector='drawsBackground'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='placeholderAttributedString'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='placeholderString'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setAllowedInputSourceLocales:'>
<arg index='0' type='@' declared_type='NSArray*' name='localeIdentifiers'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBezelStyle:'>
<arg index='0' type64='Q' type='I' declared_type='NSTextFieldBezelStyle' name='style'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawsBackground:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlaceholderAttributedString:'>
<arg index='0' type='@' declared_type='NSAttributedString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlaceholderString:'>
<arg index='0' type='@' declared_type='NSString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUpFieldEditorAttributes:'>
<arg index='0' type='@' declared_type='NSText*' name='textObj'/>
<retval type='@' declared_type='NSText*'/>
</method>
<method selector='setWantsNotificationForMarkedText:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
</class>
<class name='NSTextFinder'>
<method selector='cancelFindIndicator'>
<retval type='v' declared_type='void'/>
</method>
<method selector='client'>
<retval type='@' declared_type='id'/>
</method>
<method selector='drawIncrementalMatchHighlightInRect:' class_method='true'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='findBarContainer'>
<retval type='@' declared_type='id'/>
</method>
<method selector='findIndicatorNeedsUpdate'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='incrementalMatchRanges'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='incrementalSearchingShouldDimContentView'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isIncrementalSearchingEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='noteClientStringWillChange'>
<retval type='v' declared_type='void'/>
</method>
<method selector='performAction:'>
<arg index='0' type64='q' type='i' declared_type='NSTextFinderAction' name='op'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setClient:'>
<arg index='0' type='@' declared_type='id' name='client'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFindBarContainer:'>
<arg index='0' type='@' declared_type='id' name='findBarContainer'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFindIndicatorNeedsUpdate:'>
<arg index='0' type='B' declared_type='BOOL' name='findIndicatorNeedsUpdate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIncrementalSearchingEnabled:'>
<arg index='0' type='B' declared_type='BOOL' name='incrementalSearchingEnabled'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIncrementalSearchingShouldDimContentView:'>
<arg index='0' type='B' declared_type='BOOL' name='incrementalSearchingShouldDimContentView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='validateAction:'>
<arg index='0' type64='q' type='i' declared_type='NSTextFinderAction' name='op'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSTextInputContext'>
<method selector='acceptsGlyphInfo'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='activate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='allowedInputSourceLocales'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='client'>
<retval type='@' declared_type='id'/>
</method>
<method selector='currentInputContext' class_method='true'>
<retval type='@' declared_type='NSTextInputContext*'/>
</method>
<method selector='deactivate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='discardMarkedText'>
<retval type='v' declared_type='void'/>
</method>
<method selector='handleEvent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithClient:'>
<arg index='0' type='@' declared_type='id' name='theClient'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='invalidateCharacterCoordinates'>
<retval type='v' declared_type='void'/>
</method>
<method selector='keyboardInputSources'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='localizedNameForInputSource:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='inputSourceIdentifier'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='selectedKeyboardInputSource'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setAcceptsGlyphInfo:'>
<arg index='0' type='B' declared_type='BOOL' name='acceptsGlyphInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowedInputSourceLocales:'>
<arg index='0' type='@' declared_type='NSArray*' name='allowedInputSourceLocales'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedKeyboardInputSource:'>
<arg index='0' type='@' declared_type='NSString*' name='selectedKeyboardInputSource'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSTextList'>
<method selector='initWithMarkerFormat:options:'>
<arg index='0' type='@' declared_type='NSString*' name='format'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='mask'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='listOptions'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='markerForItemNumber:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='itemNum'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='markerFormat'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setStartingItemNumber:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='itemNum'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startingItemNumber'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='NSTextStorage'>
<method selector='addLayoutManager:'>
<arg index='0' type='@' declared_type='NSLayoutManager*' name='obj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='attributeRuns'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='changeInLength'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='characters'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='edited:range:changeInLength:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='editedMask'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='delta'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='editedMask'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='editedRange'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='ensureAttributesAreFixedInRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fixesAttributesLazily'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='font'>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='foregroundColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='invalidateAttributesInRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='layoutManagers'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='paragraphs'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='processEditing'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeLayoutManager:'>
<arg index='0' type='@' declared_type='NSLayoutManager*' name='obj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributeRuns:'>
<arg index='0' type='@' declared_type='NSArray*' name='attributeRuns'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCharacters:'>
<arg index='0' type='@' declared_type='NSArray*' name='characters'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='font'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setForegroundColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParagraphs:'>
<arg index='0' type='@' declared_type='NSArray*' name='paragraphs'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWords:'>
<arg index='0' type='@' declared_type='NSArray*' name='words'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='words'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSTextTab'>
<method selector='alignment'>
<retval type64='Q' type='I' declared_type='NSTextAlignment'/>
</method>
<method selector='initWithTextAlignment:location:options:'>
<arg index='0' type64='Q' type='I' declared_type='NSTextAlignment' name='alignment'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='loc'/>
<arg index='2' type='@' declared_type='NSDictionary*' name='options'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithType:location:'>
<arg index='0' type64='Q' type='I' declared_type='NSTextTabType' name='type'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='loc'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='location'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='options'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='tabStopType'>
<retval type64='Q' type='I' declared_type='NSTextTabType'/>
</method>
</class>
<class name='NSTextTable'>
<method selector='boundsRectForBlock:contentRect:inRect:textContainer:characterRange:'>
<arg index='0' type='@' declared_type='NSTextTableBlock*' name='block'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='contentRect'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='3' type='@' declared_type='NSTextContainer*' name='textContainer'/>
<arg index='4' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='collapsesBorders'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='drawBackgroundForBlock:withFrame:inView:characterRange:layoutManager:'>
<arg index='0' type='@' declared_type='NSTextTableBlock*' name='block'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frameRect'/>
<arg index='2' type='@' declared_type='NSView*' name='controlView'/>
<arg index='3' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<arg index='4' type='@' declared_type='NSLayoutManager*' name='layoutManager'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='hidesEmptyCells'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='layoutAlgorithm'>
<retval type64='Q' type='I' declared_type='NSTextTableLayoutAlgorithm'/>
</method>
<method selector='numberOfColumns'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='rectForBlock:layoutAtPoint:inRect:textContainer:characterRange:'>
<arg index='0' type='@' declared_type='NSTextTableBlock*' name='block'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='startingPoint'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='3' type='@' declared_type='NSTextContainer*' name='textContainer'/>
<arg index='4' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='setCollapsesBorders:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHidesEmptyCells:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayoutAlgorithm:'>
<arg index='0' type64='Q' type='I' declared_type='NSTextTableLayoutAlgorithm' name='algorithm'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfColumns:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='numCols'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSTextTableBlock'>
<method selector='columnSpan'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='initWithTable:startingRow:rowSpan:startingColumn:columnSpan:'>
<arg index='0' type='@' declared_type='NSTextTable*' name='table'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='rowSpan'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='col'/>
<arg index='4' type64='q' type='i' declared_type='NSInteger' name='colSpan'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rowSpan'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='startingColumn'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='startingRow'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='table'>
<retval type='@' declared_type='NSTextTable*'/>
</method>
</class>
<class name='NSTextView'>
<method selector='acceptableDragTypes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='acceptsGlyphInfo'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='alignJustified:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allowedInputSourceLocales'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='allowsDocumentBackgroundColorChange'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='allowsImageEditing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='allowsUndo'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='backgroundColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='breakUndoCoalescing'>
<retval type='v' declared_type='void'/>
</method>
<method selector='changeAttributes:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='changeColor:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='changeDocumentBackgroundColor:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='changeLayoutOrientation:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='characterIndexForInsertionAtPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='checkTextInDocument:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='checkTextInRange:types:options:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='1' type='Q' declared_type='NSTextCheckingTypes' name='checkingTypes'/>
<arg index='2' type='@' declared_type='NSDictionary*' name='options'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='checkTextInSelection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cleanUpAfterDragOperation'>
<retval type='v' declared_type='void'/>
</method>
<method selector='clickedOnLink:atIndex:'>
<arg index='0' type='@' declared_type='id' name='link'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='complete:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='completionsForPartialWordRange:indexOfSelectedItem:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<arg index='1' type64='^q' type='^i' declared_type='NSInteger*' name='index'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='defaultParagraphStyle'>
<retval type='@' declared_type='NSParagraphStyle*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='didChangeText'>
<retval type='v' declared_type='void'/>
</method>
<method selector='displaysLinkToolTips'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='dragImageForSelectionWithEvent:origin:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<arg index='1' type64='^{CGPoint=dd}' type='^{_NSPoint=ff}' declared_type='NSPointPointer' name='origin'/>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='dragOperationForDraggingInfo:type:'>
<arg index='0' type='@' declared_type='id' name='dragInfo'/>
<arg index='1' type='@' declared_type='NSString*' name='type'/>
<retval type64='Q' type='I' declared_type='NSDragOperation'/>
</method>
<method selector='dragSelectionWithEvent:offset:slideBack:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<arg index='1' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='mouseOffset'/>
<arg index='2' type='B' declared_type='BOOL' name='slideBack'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='drawInsertionPointInRect:color:turnedOn:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='1' type='@' declared_type='NSColor*' name='color'/>
<arg index='2' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawViewBackgroundInRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawsBackground'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='enabledTextCheckingTypes'>
<retval type='Q' declared_type='NSTextCheckingTypes'/>
</method>
<method selector='handleTextCheckingResults:forRange:types:options:orthography:wordCount:'>
<arg index='0' type='@' declared_type='NSArray*' name='results'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='2' type='Q' declared_type='NSTextCheckingTypes' name='checkingTypes'/>
<arg index='3' type='@' declared_type='NSDictionary*' name='options'/>
<arg index='4' type='@' declared_type='NSOrthography*' name='orthography'/>
<arg index='5' type64='q' type='i' declared_type='NSInteger' name='wordCount'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='importsGraphics'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithFrame:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frameRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithFrame:textContainer:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frameRect'/>
<arg index='1' type='@' declared_type='NSTextContainer*' name='container'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertCompletion:forPartialWordRange:movement:isFinal:'>
<arg index='0' type='@' declared_type='NSString*' name='word'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='movement'/>
<arg index='3' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertText:'>
<arg index='0' type='@' declared_type='id' name='insertString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertionPointColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='invalidateTextContainerOrigin'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isAutomaticDashSubstitutionEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isAutomaticDataDetectionEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isAutomaticLinkDetectionEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isAutomaticQuoteSubstitutionEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isAutomaticSpellingCorrectionEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isAutomaticTextReplacementEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isCoalescingUndo'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isContinuousSpellCheckingEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEditable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFieldEditor'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isGrammarCheckingEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isIncrementalSearchingEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRichText'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRulerVisible'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSelectable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='layoutManager'>
<retval type='@' declared_type='NSLayoutManager*'/>
</method>
<method selector='linkTextAttributes'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='loosenKerning:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='lowerBaseline:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='markedTextAttributes'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='orderFrontLinkPanel:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='orderFrontListPanel:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='orderFrontSharingServicePicker:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='orderFrontSpacingPanel:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='orderFrontSubstitutionsPanel:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='orderFrontTablePanel:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='outline:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pasteAsPlainText:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pasteAsRichText:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performFindPanelAction:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='preferredPasteboardTypeFromArray:restrictedToTypesFromArray:'>
<arg index='0' type='@' declared_type='NSArray*' name='availableTypes'/>
<arg index='1' type='@' declared_type='NSArray*' name='allowedTypes'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='quickLookPreviewableItemsInRanges:'>
<arg index='0' type='@' declared_type='NSArray*' name='ranges'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='raiseBaseline:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rangeForUserCharacterAttributeChange'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeForUserCompletion'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeForUserParagraphAttributeChange'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangeForUserTextChange'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='rangesForUserCharacterAttributeChange'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='rangesForUserParagraphAttributeChange'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='rangesForUserTextChange'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='readSelectionFromPasteboard:'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='readSelectionFromPasteboard:type:'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pboard'/>
<arg index='1' type='@' declared_type='NSString*' name='type'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='readablePasteboardTypes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='registerForServices' class_method='true'>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceTextContainer:'>
<arg index='0' type='@' declared_type='NSTextContainer*' name='newContainer'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rulerView:didAddMarker:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='1' type='@' declared_type='NSRulerMarker*' name='marker'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rulerView:didMoveMarker:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='1' type='@' declared_type='NSRulerMarker*' name='marker'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rulerView:didRemoveMarker:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='1' type='@' declared_type='NSRulerMarker*' name='marker'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rulerView:handleMouseDown:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='1' type='@' declared_type='NSEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rulerView:shouldAddMarker:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='1' type='@' declared_type='NSRulerMarker*' name='marker'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='rulerView:shouldMoveMarker:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='1' type='@' declared_type='NSRulerMarker*' name='marker'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='rulerView:shouldRemoveMarker:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='1' type='@' declared_type='NSRulerMarker*' name='marker'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='rulerView:willAddMarker:atLocation:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='1' type='@' declared_type='NSRulerMarker*' name='marker'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='location'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='rulerView:willMoveMarker:toLocation:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='1' type='@' declared_type='NSRulerMarker*' name='marker'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='location'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='selectedRanges'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='selectedTextAttributes'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='selectionAffinity'>
<retval type64='Q' type='I' declared_type='NSSelectionAffinity'/>
</method>
<method selector='selectionGranularity'>
<retval type64='Q' type='I' declared_type='NSSelectionGranularity'/>
</method>
<method selector='selectionRangeForProposedRange:granularity:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='proposedCharRange'/>
<arg index='1' type64='Q' type='I' declared_type='NSSelectionGranularity' name='granularity'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='setAcceptsGlyphInfo:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlignment:range:'>
<arg index='0' type64='Q' type='I' declared_type='NSTextAlignment' name='alignment'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowedInputSourceLocales:'>
<arg index='0' type='@' declared_type='NSArray*' name='localeIdentifiers'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsDocumentBackgroundColorChange:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsImageEditing:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsUndo:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutomaticDashSubstitutionEnabled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutomaticDataDetectionEnabled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutomaticLinkDetectionEnabled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutomaticQuoteSubstitutionEnabled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutomaticSpellingCorrectionEnabled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutomaticTextReplacementEnabled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBaseWritingDirection:range:'>
<arg index='0' type64='q' type='i' declared_type='NSWritingDirection' name='writingDirection'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setConstrainedFrameSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='desiredSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContinuousSpellCheckingEnabled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultParagraphStyle:'>
<arg index='0' type='@' declared_type='NSParagraphStyle*' name='paragraphStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplaysLinkToolTips:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawsBackground:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEditable:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnabledTextCheckingTypes:'>
<arg index='0' type='Q' declared_type='NSTextCheckingTypes' name='checkingTypes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFieldEditor:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGrammarCheckingEnabled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImportsGraphics:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIncrementalSearchingEnabled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInsertionPointColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayoutOrientation:'>
<arg index='0' type64='q' type='i' declared_type='NSTextLayoutOrientation' name='theOrientation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLinkTextAttributes:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='attributeDictionary'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMarkedTextAttributes:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='attributeDictionary'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNeedsDisplayInRect:avoidAdditionalLayout:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='1' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRichText:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRulerVisible:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectable:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedRange:affinity:stillSelecting:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<arg index='1' type64='Q' type='I' declared_type='NSSelectionAffinity' name='affinity'/>
<arg index='2' type='B' declared_type='BOOL' name='stillSelectingFlag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedRanges:'>
<arg index='0' type='@' declared_type='NSArray*' name='ranges'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedRanges:affinity:stillSelecting:'>
<arg index='0' type='@' declared_type='NSArray*' name='ranges'/>
<arg index='1' type64='Q' type='I' declared_type='NSSelectionAffinity' name='affinity'/>
<arg index='2' type='B' declared_type='BOOL' name='stillSelectingFlag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedTextAttributes:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='attributeDictionary'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectionGranularity:'>
<arg index='0' type64='Q' type='I' declared_type='NSSelectionGranularity' name='granularity'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSmartInsertDeleteEnabled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSpellingState:range:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='value'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextContainer:'>
<arg index='0' type='@' declared_type='NSTextContainer*' name='container'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextContainerInset:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='inset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTypingAttributes:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='attrs'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesFindBar:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesFindPanel:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesFontPanel:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesInspectorBar:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesRuler:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldChangeTextInRange:replacementString:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='affectedCharRange'/>
<arg index='1' type='@' declared_type='NSString*' name='replacementString'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='shouldChangeTextInRanges:replacementStrings:'>
<arg index='0' type='@' declared_type='NSArray*' name='affectedRanges'/>
<arg index='1' type='@' declared_type='NSArray*' name='replacementStrings'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='shouldDrawInsertionPoint'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showFindIndicatorForRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='smartDeleteRangeForProposedRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='proposedCharRange'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='smartInsertAfterStringForString:replacingRange:'>
<arg index='0' type='@' declared_type='NSString*' name='pasteString'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRangeToReplace'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='smartInsertBeforeStringForString:replacingRange:'>
<arg index='0' type='@' declared_type='NSString*' name='pasteString'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRangeToReplace'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='smartInsertDeleteEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='smartInsertForString:replacingRange:beforeString:afterString:'>
<arg index='0' type='@' declared_type='NSString*' name='pasteString'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRangeToReplace'/>
<arg index='2' type='^@' declared_type='NSString**' name='beforeString'/>
<arg index='3' type='^@' declared_type='NSString**' name='afterString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='spellCheckerDocumentTag'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='startSpeaking:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopSpeaking:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textContainer'>
<retval type='@' declared_type='NSTextContainer*'/>
</method>
<method selector='textContainerInset'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='textContainerOrigin'>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='textStorage'>
<retval type='@' declared_type='NSTextStorage*'/>
</method>
<method selector='tightenKerning:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='toggleAutomaticDashSubstitution:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='toggleAutomaticDataDetection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='toggleAutomaticLinkDetection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='toggleAutomaticQuoteSubstitution:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='toggleAutomaticSpellingCorrection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='toggleAutomaticTextReplacement:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='toggleBaseWritingDirection:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='toggleContinuousSpellChecking:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='toggleGrammarChecking:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='toggleQuickLookPreviewPanel:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='toggleSmartInsertDelete:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='toggleTraditionalCharacterShape:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='turnOffKerning:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='turnOffLigatures:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='typingAttributes'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='updateDragTypeRegistration'>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateFontPanel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateInsertionPointStateAndRestartTimer:'>
<arg index='0' type='B' declared_type='BOOL' name='restartFlag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateQuickLookPreviewPanel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateRuler'>
<retval type='v' declared_type='void'/>
</method>
<method selector='useAllLigatures:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='useStandardKerning:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='useStandardLigatures:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='usesFindBar'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='usesFindPanel'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='usesFontPanel'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='usesInspectorBar'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='usesRuler'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='validRequestorForSendType:returnType:'>
<arg index='0' type='@' declared_type='NSString*' name='sendType'/>
<arg index='1' type='@' declared_type='NSString*' name='returnType'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='writablePasteboardTypes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='writeSelectionToPasteboard:type:'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pboard'/>
<arg index='1' type='@' declared_type='NSString*' name='type'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='writeSelectionToPasteboard:types:'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pboard'/>
<arg index='1' type='@' declared_type='NSArray*' name='types'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='NSTokenField'>
<method selector='completionDelay'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='defaultCompletionDelay' class_method='true'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='defaultTokenizingCharacterSet' class_method='true'>
<retval type='@' declared_type='NSCharacterSet*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setCompletionDelay:'>
<arg index='0' type='d' declared_type='NSTimeInterval' name='delay'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTokenStyle:'>
<arg index='0' type64='Q' type='I' declared_type='NSTokenStyle' name='style'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTokenizingCharacterSet:'>
<arg index='0' type='@' declared_type='NSCharacterSet*' name='characterSet'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tokenStyle'>
<retval type64='Q' type='I' declared_type='NSTokenStyle'/>
</method>
<method selector='tokenizingCharacterSet'>
<retval type='@' declared_type='NSCharacterSet*'/>
</method>
</class>
<class name='NSTokenFieldCell'>
<method selector='completionDelay'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='defaultCompletionDelay' class_method='true'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='defaultTokenizingCharacterSet' class_method='true'>
<retval type='@' declared_type='NSCharacterSet*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setCompletionDelay:'>
<arg index='0' type='d' declared_type='NSTimeInterval' name='delay'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTokenStyle:'>
<arg index='0' type64='Q' type='I' declared_type='NSTokenStyle' name='style'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTokenizingCharacterSet:'>
<arg index='0' type='@' declared_type='NSCharacterSet*' name='characterSet'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tokenStyle'>
<retval type64='Q' type='I' declared_type='NSTokenStyle'/>
</method>
<method selector='tokenizingCharacterSet'>
<retval type='@' declared_type='NSCharacterSet*'/>
</method>
</class>
<class name='NSToolbar'>
<method selector='allowsUserCustomization'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='autosavesConfiguration'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='configurationDictionary'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='customizationPaletteIsRunning'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='displayMode'>
<retval type64='Q' type='I' declared_type='NSToolbarDisplayMode'/>
</method>
<method selector='fullScreenAccessoryView'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='fullScreenAccessoryViewMaxHeight'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='fullScreenAccessoryViewMinHeight'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='identifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='initWithIdentifier:'>
<arg index='0' type='@' declared_type='NSString*' name='identifier'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertItemWithItemIdentifier:atIndex:'>
<arg index='0' type='@' declared_type='NSString*' name='itemIdentifier'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isVisible'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='items'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removeItemAtIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='runCustomizationPalette:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectedItemIdentifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setAllowsUserCustomization:'>
<arg index='0' type='B' declared_type='BOOL' name='allowCustomization'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutosavesConfiguration:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setConfigurationFromDictionary:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='configDict'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplayMode:'>
<arg index='0' type64='Q' type='I' declared_type='NSToolbarDisplayMode' name='displayMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFullScreenAccessoryView:'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFullScreenAccessoryViewMaxHeight:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='maxHeight'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFullScreenAccessoryViewMinHeight:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='minHeight'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectedItemIdentifier:'>
<arg index='0' type='@' declared_type='NSString*' name='itemIdentifier'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsBaselineSeparator:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSizeMode:'>
<arg index='0' type64='Q' type='I' declared_type='NSToolbarSizeMode' name='sizeMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVisible:'>
<arg index='0' type='B' declared_type='BOOL' name='shown'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showsBaselineSeparator'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='sizeMode'>
<retval type64='Q' type='I' declared_type='NSToolbarSizeMode'/>
</method>
<method selector='validateVisibleItems'>
<retval type='v' declared_type='void'/>
</method>
<method selector='visibleItems'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSToolbarItem'>
<method selector='action'>
<retval type=':' declared_type='SEL'/>
</method>
<method selector='allowsDuplicatesInToolbar'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='autovalidates'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='image'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='initWithItemIdentifier:'>
<arg index='0' type='@' declared_type='NSString*' name='itemIdentifier'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='itemIdentifier'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='label'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='maxSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='menuFormRepresentation'>
<retval type='@' declared_type='NSMenuItem*'/>
</method>
<method selector='minSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='paletteLabel'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='setAction:'>
<arg index='0' type=':' declared_type='SEL' name='action'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutovalidates:'>
<arg index='0' type='B' declared_type='BOOL' name='resistance'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEnabled:'>
<arg index='0' type='B' declared_type='BOOL' name='enabled'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setImage:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabel:'>
<arg index='0' type='@' declared_type='NSString*' name='label'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='size'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMenuFormRepresentation:'>
<arg index='0' type='@' declared_type='NSMenuItem*' name='menuItem'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='size'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPaletteLabel:'>
<arg index='0' type='@' declared_type='NSString*' name='paletteLabel'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTag:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='tag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTarget:'>
<arg index='0' type='@' declared_type='id' name='target'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setToolTip:'>
<arg index='0' type='@' declared_type='NSString*' name='toolTip'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setView:'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVisibilityPriority:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='visibilityPriority'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tag'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='target'>
<retval type='@' declared_type='id'/>
</method>
<method selector='toolTip'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='toolbar'>
<retval type='@' declared_type='NSToolbar*'/>
</method>
<method selector='validate'>
<retval type='v' declared_type='void'/>
</method>
<method selector='view'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='visibilityPriority'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='NSToolbarItemGroup'>
<method selector='setSubitems:'>
<arg index='0' type='@' declared_type='NSArray*' name='subitems'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='subitems'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSTouch'>
<method selector='device'>
<retval type='@' declared_type='id'/>
</method>
<method selector='deviceSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='identity'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isResting'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='normalizedPosition'>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='phase'>
<retval type64='Q' type='I' declared_type='NSTouchPhase'/>
</method>
</class>
<class name='NSTrackingArea'>
<method selector='initWithRect:options:owner:userInfo:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='1' type64='Q' type='I' declared_type='NSTrackingAreaOptions' name='options'/>
<arg index='2' type='@' declared_type='id' name='owner'/>
<arg index='3' type='@' declared_type='NSDictionary*' name='userInfo'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='options'>
<retval type64='Q' type='I' declared_type='NSTrackingAreaOptions'/>
</method>
<method selector='owner'>
<retval type='@' declared_type='id'/>
</method>
<method selector='rect'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='userInfo'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
</class>
<class name='NSTreeController'>
<method selector='add:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addChild:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSelectionIndexPaths:'>
<arg index='0' type='@' declared_type='NSArray*' name='indexPaths'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='alwaysUsesMultipleValuesMarker'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='arrangedObjects'>
<retval type='@' declared_type='id'/>
</method>
<method selector='avoidsEmptySelection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canAddChild'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canInsert'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canInsertChild'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='childrenKeyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='childrenKeyPathForNode:'>
<arg index='0' type='@' declared_type='NSTreeNode*' name='node'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='content'>
<retval type='@' declared_type='id'/>
</method>
<method selector='countKeyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='countKeyPathForNode:'>
<arg index='0' type='@' declared_type='NSTreeNode*' name='node'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='insert:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertChild:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertObject:atArrangedObjectIndexPath:'>
<arg index='0' type='@' declared_type='id' name='object'/>
<arg index='1' type='@' declared_type='NSIndexPath*' name='indexPath'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertObjects:atArrangedObjectIndexPaths:'>
<arg index='0' type='@' declared_type='NSArray*' name='objects'/>
<arg index='1' type='@' declared_type='NSArray*' name='indexPaths'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='leafKeyPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='leafKeyPathForNode:'>
<arg index='0' type='@' declared_type='NSTreeNode*' name='node'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='moveNode:toIndexPath:'>
<arg index='0' type='@' declared_type='NSTreeNode*' name='node'/>
<arg index='1' type='@' declared_type='NSIndexPath*' name='indexPath'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='moveNodes:toIndexPath:'>
<arg index='0' type='@' declared_type='NSArray*' name='nodes'/>
<arg index='1' type='@' declared_type='NSIndexPath*' name='startingIndexPath'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='preservesSelection'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='rearrangeObjects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='remove:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectAtArrangedObjectIndexPath:'>
<arg index='0' type='@' declared_type='NSIndexPath*' name='indexPath'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeObjectsAtArrangedObjectIndexPaths:'>
<arg index='0' type='@' declared_type='NSArray*' name='indexPaths'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeSelectionIndexPaths:'>
<arg index='0' type='@' declared_type='NSArray*' name='indexPaths'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='selectedNodes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='selectedObjects'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='selectionIndexPath'>
<retval type='@' declared_type='NSIndexPath*'/>
</method>
<method selector='selectionIndexPaths'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='selectsInsertedObjects'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAlwaysUsesMultipleValuesMarker:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAvoidsEmptySelection:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setChildrenKeyPath:'>
<arg index='0' type='@' declared_type='NSString*' name='keyPath'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContent:'>
<arg index='0' type='@' declared_type='id' name='content'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCountKeyPath:'>
<arg index='0' type='@' declared_type='NSString*' name='keyPath'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLeafKeyPath:'>
<arg index='0' type='@' declared_type='NSString*' name='keyPath'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreservesSelection:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSelectionIndexPath:'>
<arg index='0' type='@' declared_type='NSIndexPath*' name='indexPath'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setSelectionIndexPaths:'>
<arg index='0' type='@' declared_type='NSArray*' name='indexPaths'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setSelectsInsertedObjects:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSortDescriptors:'>
<arg index='0' type='@' declared_type='NSArray*' name='sortDescriptors'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortDescriptors'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSTreeNode'>
<method selector='childNodes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='descendantNodeAtIndexPath:'>
<arg index='0' type='@' declared_type='NSIndexPath*' name='indexPath'/>
<retval type='@' declared_type='NSTreeNode*'/>
</method>
<method selector='indexPath'>
<retval type='@' declared_type='NSIndexPath*'/>
</method>
<method selector='initWithRepresentedObject:'>
<arg index='0' type='@' declared_type='id' name='modelObject'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isLeaf'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mutableChildNodes'>
<retval type='@' declared_type='NSMutableArray*'/>
</method>
<method selector='parentNode'>
<retval type='@' declared_type='NSTreeNode*'/>
</method>
<method selector='representedObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='sortWithSortDescriptors:recursively:'>
<arg index='0' type='@' declared_type='NSArray*' name='sortDescriptors'/>
<arg index='1' type='B' declared_type='BOOL' name='recursively'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='treeNodeWithRepresentedObject:' class_method='true'>
<arg index='0' type='@' declared_type='id' name='modelObject'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSTypesetter'>
<method selector='actionForControlCharacterAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type64='Q' type='I' declared_type='NSTypesetterControlCharacterAction'/>
</method>
<method selector='attributedString'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='attributesForExtraLineFragment'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='baselineOffsetInLayoutManager:glyphIndex:'>
<arg index='0' type='@' declared_type='NSLayoutManager*' name='layoutMgr'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='beginLineWithGlyphAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginParagraph'>
<retval type='v' declared_type='void'/>
</method>
<method selector='bidiProcessingEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='1' type='@' declared_type='NSTextContainer*' name='textContainer'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='proposedRect'/>
<arg index='3' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='glyphPosition'/>
<arg index='4' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='characterRangeForGlyphRange:actualGlyphRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='actualGlyphRange'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='currentParagraphStyle'>
<retval type='@' declared_type='NSParagraphStyle*'/>
</method>
<method selector='currentTextContainer'>
<retval type='@' declared_type='NSTextContainer*'/>
</method>
<method selector='defaultTypesetterBehavior' class_method='true'>
<retval type64='q' type='i' declared_type='NSTypesetterBehavior'/>
</method>
<method selector='deleteGlyphsInRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='endLineWithGlyphRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='lineGlyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='endParagraph'>
<retval type='v' declared_type='void'/>
</method>
<method selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphsRange'/>
<arg index='1' type='^I' declared_type='NSGlyph*' name='glyphBuffer'/>
<arg index='2' type64='^Q' type='^I' declared_type='NSUInteger*' name='charIndexBuffer'/>
<arg index='3' type64='^Q' type='^I' declared_type='NSGlyphInscription*' name='inscribeBuffer'/>
<arg index='4' type='^B' declared_type='BOOL*' name='elasticBuffer'/>
<arg index='5' type='*' declared_type='unsigned char*' name='bidiLevelBuffer'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:'>
<arg index='0' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRectPointer' name='lineFragmentRect'/>
<arg index='1' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRectPointer' name='lineFragmentUsedRect'/>
<arg index='2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='paragraphSeparatorGlyphRange'/>
<arg index='3' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='lineOrigin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getLineFragmentRect:usedRect:remainingRect:forStartingGlyphAtIndex:proposedRect:lineSpacing:paragraphSpacingBefore:paragraphSpacingAfter:'>
<arg index='0' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRectPointer' name='lineFragmentRect'/>
<arg index='1' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRectPointer' name='lineFragmentUsedRect'/>
<arg index='2' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRectPointer' name='remainingRect'/>
<arg index='3' type64='Q' type='I' declared_type='NSUInteger' name='startingGlyphIndex'/>
<arg index='4' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='proposedRect'/>
<arg index='5' type64='d' type='f' declared_type='CGFloat' name='lineSpacing'/>
<arg index='6' type64='d' type='f' declared_type='CGFloat' name='paragraphSpacingBefore'/>
<arg index='7' type64='d' type='f' declared_type='CGFloat' name='paragraphSpacingAfter'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='glyphRangeForCharacterRange:actualCharacterRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='actualCharRange'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='hyphenCharacterForGlyphAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<retval type64='I' type='L' declared_type='UTF32Char'/>
</method>
<method selector='hyphenationFactor'>
<retval type='f' declared_type='float'/>
</method>
<method selector='hyphenationFactorForGlyphAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<retval type='f' declared_type='float'/>
</method>
<method selector='insertGlyph:atGlyphIndex:characterIndex:'>
<arg index='0' type='I' declared_type='NSGlyph' name='glyph'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='characterIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='layoutCharactersInRange:forLayoutManager:maximumNumberOfLineFragments:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='characterRange'/>
<arg index='1' type='@' declared_type='NSLayoutManager*' name='layoutManager'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='maxNumLines'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:'>
<arg index='0' type='@' declared_type='NSLayoutManager*' name='layoutManager'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='startGlyphIndex'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='maxNumLines'/>
<arg index='3' type64='^Q' type='^I' declared_type='NSUInteger*' name='nextGlyph'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='layoutManager'>
<retval type='@' declared_type='NSLayoutManager*'/>
</method>
<method selector='layoutParagraphAtPoint:'>
<arg index='0' type64='^{CGPoint=dd}' type='^{_NSPoint=ff}' declared_type='NSPointPointer' name='lineFragmentOrigin'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='lineFragmentPadding'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='paragraphCharacterRange'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='paragraphGlyphRange'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='paragraphSeparatorCharacterRange'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='paragraphSeparatorGlyphRange'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method selector='paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='printingAdjustmentInLayoutManager:forNominallySpacedGlyphRange:packedGlyphs:count:' class_method='true'>
<arg index='0' type='@' declared_type='NSLayoutManager*' name='layoutMgr'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='nominallySpacedGlyphsRange'/>
<arg index='2' type='*' const='true' declared_type='unsigned char*' name='packedGlyphs'/>
<arg index='3' type64='Q' type='I' declared_type='NSUInteger' name='packedGlyphsCount'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='setAttachmentSize:forGlyphRange:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='attachmentSize'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAttributedString:'>
<arg index='0' type='@' declared_type='NSAttributedString*' name='attrString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBidiLevels:forGlyphRange:'>
<arg index='0' type='*' const='true' declared_type='uint8_t*' name='levels'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBidiProcessingEnabled:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawsOutsideLineFragment:forGlyphRange:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHardInvalidation:forGlyphRange:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHyphenationFactor:'>
<arg index='0' type='f' declared_type='float' name='factor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineFragmentPadding:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='padding'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='fragmentRect'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='usedRect'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='baselineOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocation:withAdvancements:forStartOfGlyphRange:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='location'/>
<arg index='1' type64='^d' type='^f' const='true' declared_type='CGFloat*' name='advancements'/>
<arg index='2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNotShownAttribute:forGlyphRange:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParagraphGlyphRange:separatorGlyphRange:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='paragraphRange'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='paragraphSeparatorRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTypesetterBehavior:'>
<arg index='0' type64='q' type='i' declared_type='NSTypesetterBehavior' name='behavior'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesFontLeading:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedSystemTypesetter' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='sharedSystemTypesetterForBehavior:' class_method='true'>
<arg index='0' type64='q' type='i' declared_type='NSTypesetterBehavior' name='theBehavior'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='shouldBreakLineByHyphenatingBeforeCharacterAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='shouldBreakLineByWordBeforeCharacterAtIndex:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='substituteFontForFont:'>
<arg index='0' type='@' declared_type='NSFont*' name='originalFont'/>
<retval type='@' declared_type='NSFont*'/>
</method>
<method selector='substituteGlyphsInRange:withGlyphs:'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<arg index='1' type='^I' declared_type='NSGlyph*' name='glyphs'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textContainers'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='textTabForGlyphLocation:writingDirection:maxLocation:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='glyphLocation'/>
<arg index='1' type64='q' type='i' declared_type='NSWritingDirection' name='direction'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='maxLocation'/>
<retval type='@' declared_type='NSTextTab*'/>
</method>
<method selector='typesetterBehavior'>
<retval type64='q' type='i' declared_type='NSTypesetterBehavior'/>
</method>
<method selector='usesFontLeading'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'>
<arg index='0' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRectPointer' name='lineRect'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='glyphRange'/>
<arg index='2' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRectPointer' name='usedRect'/>
<arg index='3' type64='^d' type='^f' declared_type='CGFloat*' name='baselineOffset'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSURL'>
<method selector='URLFromPasteboard:' class_method='true'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pasteBoard'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='writeToPasteboard:'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pasteBoard'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSUserDefaultsController'>
<method selector='appliesImmediately'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='defaults'>
<retval type='@' declared_type='NSUserDefaults*'/>
</method>
<method selector='hasUnappliedChanges'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithDefaults:initialValues:'>
<arg index='0' type='@' declared_type='NSUserDefaults*' name='defaults'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='initialValues'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initialValues'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='revert:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='revertToInitialValues:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='save:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAppliesImmediately:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInitialValues:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='initialValues'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharedUserDefaultsController' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='values'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSView'>
<method selector='acceptsFirstMouse:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='acceptsTouchEvents'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='addConstraint:'>
<arg index='0' type='@' declared_type='NSLayoutConstraint*' name='constraint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addConstraints:'>
<arg index='0' type='@' declared_type='NSArray*' name='constraints'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addCursorRect:cursor:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg index='1' type='@' declared_type='NSCursor*' name='anObj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSubview:'>
<arg index='0' type='@' declared_type='NSView*' name='aView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addSubview:positioned:relativeTo:'>
<arg index='0' type='@' declared_type='NSView*' name='aView'/>
<arg index='1' type64='q' type='i' declared_type='NSWindowOrderingMode' name='place'/>
<arg index='2' type='@' declared_type='NSView*' name='otherView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addToolTipRect:owner:userData:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg index='1' type='@' declared_type='id' name='anObject'/>
<arg index='2' type='^v' declared_type='void*' name='data'/>
<retval type64='q' type='i' declared_type='NSToolTipTag'/>
</method>
<method selector='addTrackingArea:'>
<arg index='0' type='@' declared_type='NSTrackingArea*' name='trackingArea'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addTrackingRect:owner:userData:assumeInside:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg index='1' type='@' declared_type='id' name='anObject'/>
<arg index='2' type='^v' declared_type='void*' name='data'/>
<arg index='3' type='B' declared_type='BOOL' name='flag'/>
<retval type64='q' type='i' declared_type='NSTrackingRectTag'/>
</method>
<method selector='adjustPageHeightNew:top:bottom:limit:'>
<arg index='0' type64='^d' type='^f' declared_type='CGFloat*' name='newBottom'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='oldTop'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='oldBottom'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='bottomLimit'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='adjustPageWidthNew:left:right:limit:'>
<arg index='0' type64='^d' type='^f' declared_type='CGFloat*' name='newRight'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='oldLeft'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='oldRight'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='rightLimit'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='adjustScroll:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='newVisible'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='alignmentRectForFrame:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frame'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='alignmentRectInsets'>
<retval type64='{_NSEdgeInsets=dddd}' type='{_NSEdgeInsets=ffff}' declared_type='NSEdgeInsets'/>
</method>
<method selector='allocateGState'>
<retval type='v' declared_type='void'/>
</method>
<method selector='alphaValue'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='ancestorSharedWithView:'>
<arg index='0' type='@' declared_type='NSView*' name='aView'/>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='autoresizesSubviews'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='autoresizingMask'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='autoscroll:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='backgroundFilters'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='backingAlignedRect:options:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg index='1' type='Q' declared_type='NSAlignmentOptions' name='options'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='baselineOffsetFromBottom'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='beginDocument'>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginDraggingSessionWithItems:event:source:'>
<arg index='0' type='@' declared_type='NSArray*' name='items'/>
<arg index='1' type='@' declared_type='NSEvent*' name='event'/>
<arg index='2' type='@' declared_type='id' name='source'/>
<retval type='@' declared_type='NSDraggingSession*'/>
</method>
<method selector='beginPageInRect:atPlacement:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='location'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='bitmapImageRepForCachingDisplayInRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='@' declared_type='NSBitmapImageRep*'/>
</method>
<method selector='bounds'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='boundsRotation'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='cacheDisplayInRect:toBitmapImageRep:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='1' type='@' declared_type='NSBitmapImageRep*' name='bitmapImageRep'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='canBecomeKeyView'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canDraw'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canDrawConcurrently'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='centerScanRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='compositingFilter'>
<retval type='@' declared_type='CIFilter*'/>
</method>
<method selector='constraints'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='constraintsAffectingLayoutForOrientation:'>
<arg index='0' type64='q' type='i' declared_type='NSLayoutConstraintOrientation' name='orientation'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='contentCompressionResistancePriorityForOrientation:'>
<arg index='0' type64='q' type='i' declared_type='NSLayoutConstraintOrientation' name='orientation'/>
<retval type='f' declared_type='NSLayoutPriority'/>
</method>
<method selector='contentFilters'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='contentHuggingPriorityForOrientation:'>
<arg index='0' type64='q' type='i' declared_type='NSLayoutConstraintOrientation' name='orientation'/>
<retval type='f' declared_type='NSLayoutPriority'/>
</method>
<method selector='convertPoint:fromView:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='aPoint'/>
<arg index='1' type='@' declared_type='NSView*' name='aView'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='convertPoint:toView:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='aPoint'/>
<arg index='1' type='@' declared_type='NSView*' name='aView'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='convertPointFromBacking:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='aPoint'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='convertPointFromBase:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='aPoint'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='convertPointFromLayer:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='aPoint'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='convertPointToBacking:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='aPoint'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='convertPointToBase:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='aPoint'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='convertPointToLayer:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='aPoint'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='convertRect:fromView:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg index='1' type='@' declared_type='NSView*' name='aView'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='convertRect:toView:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg index='1' type='@' declared_type='NSView*' name='aView'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='convertRectFromBacking:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='convertRectFromBase:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='convertRectFromLayer:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='convertRectToBacking:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='convertRectToBase:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='convertRectToLayer:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='convertSize:fromView:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='aSize'/>
<arg index='1' type='@' declared_type='NSView*' name='aView'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='convertSize:toView:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='aSize'/>
<arg index='1' type='@' declared_type='NSView*' name='aView'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='convertSizeFromBacking:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='aSize'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='convertSizeFromBase:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='aSize'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='convertSizeFromLayer:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='aSize'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='convertSizeToBacking:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='aSize'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='convertSizeToBase:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='aSize'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='convertSizeToLayer:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='aSize'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='dataWithEPSInsideRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='dataWithPDFInsideRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='defaultFocusRingType' class_method='true'>
<retval type64='Q' type='I' declared_type='NSFocusRingType'/>
</method>
<method selector='defaultMenu' class_method='true'>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='didAddSubview:'>
<arg index='0' type='@' declared_type='NSView*' name='subview'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='discardCursorRects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='display'>
<retval type='v' declared_type='void'/>
</method>
<method selector='displayIfNeeded'>
<retval type='v' declared_type='void'/>
</method>
<method selector='displayIfNeededIgnoringOpacity'>
<retval type='v' declared_type='void'/>
</method>
<method selector='displayIfNeededInRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='displayIfNeededInRectIgnoringOpacity:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='displayRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='displayRectIgnoringOpacity:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='displayRectIgnoringOpacity:inContext:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg index='1' type='@' declared_type='NSGraphicsContext*' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dragFile:fromRect:slideBack:event:'>
<arg index='0' type='@' declared_type='NSString*' name='filename'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='2' type='B' declared_type='BOOL' name='aFlag'/>
<arg index='3' type='@' declared_type='NSEvent*' name='event'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='dragImage:at:offset:event:pasteboard:source:slideBack:'>
<arg index='0' type='@' declared_type='NSImage*' name='anImage'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='viewLocation'/>
<arg index='2' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='initialOffset'/>
<arg index='3' type='@' declared_type='NSEvent*' name='event'/>
<arg index='4' type='@' declared_type='NSPasteboard*' name='pboard'/>
<arg index='5' type='@' declared_type='id' name='sourceObj'/>
<arg index='6' type='B' declared_type='BOOL' name='slideFlag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dragPromisedFilesOfTypes:fromRect:source:slideBack:event:'>
<arg index='0' type='@' declared_type='NSArray*' name='typeArray'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='2' type='@' declared_type='id' name='sourceObject'/>
<arg index='3' type='B' declared_type='BOOL' name='aFlag'/>
<arg index='4' type='@' declared_type='NSEvent*' name='event'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='drawFocusRingMask'>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawPageBorderWithSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='borderSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='dirtyRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawSheetBorderWithSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='borderSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='enclosingMenuItem'>
<retval type='@' declared_type='NSMenuItem*'/>
</method>
<method selector='enclosingScrollView'>
<retval type='@' declared_type='NSScrollView*'/>
</method>
<method selector='endDocument'>
<retval type='v' declared_type='void'/>
</method>
<method selector='endPage'>
<retval type='v' declared_type='void'/>
</method>
<method selector='enterFullScreenMode:withOptions:'>
<arg index='0' type='@' declared_type='NSScreen*' name='screen'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='options'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='exerciseAmbiguityInLayout'>
<retval type='v' declared_type='void'/>
</method>
<method selector='exitFullScreenModeWithOptions:'>
<arg index='0' type='@' declared_type='NSDictionary*' name='options'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fittingSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='focusRingMaskBounds'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='focusRingType'>
<retval type64='Q' type='I' declared_type='NSFocusRingType'/>
</method>
<method selector='focusView' class_method='true'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='frame'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='frameCenterRotation'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='frameForAlignmentRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='alignmentRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='frameRotation'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='gState'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='getRectsBeingDrawn:count:'>
<arg index='0' type64='^^{CGRect}' type='^^{_NSRect}' const='true' declared_type='NSRect**' name='rects'/>
<arg index='1' type64='^q' type='^i' declared_type='NSInteger*' name='count'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getRectsExposedDuringLiveResize:count:'>
<arg index='0' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect*' name='exposedRects'/>
<arg index='1' type64='^q' type='^i' declared_type='NSInteger*' name='count'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='hasAmbiguousLayout'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='heightAdjustLimit'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='hitTest:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='aPoint'/>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='inLiveResize'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithFrame:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frameRect'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='inputContext'>
<retval type='@' declared_type='NSTextInputContext*'/>
</method>
<method selector='intrinsicContentSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='invalidateIntrinsicContentSize'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isDescendantOf:'>
<arg index='0' type='@' declared_type='NSView*' name='aView'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isDrawingFindIndicator'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFlipped'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isHidden'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isHiddenOrHasHiddenAncestor'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isInFullScreenMode'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isOpaque'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRotatedFromBase'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRotatedOrScaledFromBase'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='knowsPageRange:'>
<arg index='0' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='range'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='layer'>
<retval type='@' declared_type='CALayer*'/>
</method>
<method selector='layerContentsPlacement'>
<retval type64='q' type='i' declared_type='NSViewLayerContentsPlacement'/>
</method>
<method selector='layerContentsRedrawPolicy'>
<retval type64='q' type='i' declared_type='NSViewLayerContentsRedrawPolicy'/>
</method>
<method selector='layout'>
<retval type='v' declared_type='void'/>
</method>
<method selector='layoutSubtreeIfNeeded'>
<retval type='v' declared_type='void'/>
</method>
<method selector='locationOfPrintRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='lockFocus'>
<retval type='v' declared_type='void'/>
</method>
<method selector='lockFocusIfCanDraw'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lockFocusIfCanDrawInContext:'>
<arg index='0' type='@' declared_type='NSGraphicsContext*' name='context'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='makeBackingLayer'>
<retval type='@' declared_type='CALayer*'/>
</method>
<method selector='menuForEvent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method selector='mouse:inRect:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='aPoint'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='mouseDownCanMoveWindow'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='needsDisplay'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='needsLayout'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='needsPanelToBecomeKey'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='needsToDrawRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='needsUpdateConstraints'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='nextKeyView'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='nextValidKeyView'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='noteFocusRingMaskChanged'>
<retval type='v' declared_type='void'/>
</method>
<method selector='opaqueAncestor'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='pageFooter'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='pageHeader'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method selector='performKeyEquivalent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='performMnemonic:'>
<arg index='0' type='@' declared_type='NSString*' name='theString'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='postsBoundsChangedNotifications'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='postsFrameChangedNotifications'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='preservesContentDuringLiveResize'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='previousKeyView'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='previousValidKeyView'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='print:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='printJobTitle'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='rectForPage:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='page'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='rectForSmartMagnificationAtPoint:inRect:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='location'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='visibleRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='rectPreservedDuringLiveResize'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='reflectScrolledClipView:'>
<arg index='0' type='@' declared_type='NSClipView*' name='aClipView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='registerForDraggedTypes:'>
<arg index='0' type='@' declared_type='NSArray*' name='newTypes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='registeredDraggedTypes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='releaseGState'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAllToolTips'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeConstraint:'>
<arg index='0' type='@' declared_type='NSLayoutConstraint*' name='constraint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeConstraints:'>
<arg index='0' type='@' declared_type='NSArray*' name='constraints'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeCursorRect:cursor:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg index='1' type='@' declared_type='NSCursor*' name='anObj'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeFromSuperview'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeFromSuperviewWithoutNeedingDisplay'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeToolTip:'>
<arg index='0' type64='q' type='i' declared_type='NSToolTipTag' name='tag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeTrackingArea:'>
<arg index='0' type='@' declared_type='NSTrackingArea*' name='trackingArea'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeTrackingRect:'>
<arg index='0' type64='q' type='i' declared_type='NSTrackingRectTag' name='tag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='renewGState'>
<retval type='v' declared_type='void'/>
</method>
<method selector='replaceSubview:with:'>
<arg index='0' type='@' declared_type='NSView*' name='oldView'/>
<arg index='1' type='@' declared_type='NSView*' name='newView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='requiresConstraintBasedLayout' class_method='true'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='resetCursorRects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='resizeSubviewsWithOldSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='oldSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resizeWithOldSuperviewSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='oldSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rotateByAngle:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='angle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rulerView:didAddMarker:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='1' type='@' declared_type='NSRulerMarker*' name='marker'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rulerView:didMoveMarker:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='1' type='@' declared_type='NSRulerMarker*' name='marker'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rulerView:didRemoveMarker:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='1' type='@' declared_type='NSRulerMarker*' name='marker'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rulerView:handleMouseDown:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='1' type='@' declared_type='NSEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rulerView:locationForPoint:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='aPoint'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='rulerView:pointForLocation:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='aPoint'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='rulerView:shouldAddMarker:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='1' type='@' declared_type='NSRulerMarker*' name='marker'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='rulerView:shouldMoveMarker:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='1' type='@' declared_type='NSRulerMarker*' name='marker'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='rulerView:shouldRemoveMarker:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='1' type='@' declared_type='NSRulerMarker*' name='marker'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='rulerView:willAddMarker:atLocation:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='1' type='@' declared_type='NSRulerMarker*' name='marker'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='location'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='rulerView:willMoveMarker:toLocation:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='1' type='@' declared_type='NSRulerMarker*' name='marker'/>
<arg index='2' type64='d' type='f' declared_type='CGFloat' name='location'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='rulerView:willSetClientView:'>
<arg index='0' type='@' declared_type='NSRulerView*' name='ruler'/>
<arg index='1' type='@' declared_type='NSView*' name='newClient'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scaleUnitSquareToSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='newUnitSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollClipView:toPoint:'>
<arg index='0' type='@' declared_type='NSClipView*' name='aClipView'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='aPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='aPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollRect:by:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg index='1' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='delta'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scrollRectToVisible:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAcceptsTouchEvents:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlphaValue:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='viewAlpha'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutoresizesSubviews:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutoresizingMask:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='mask'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundFilters:'>
<arg index='0' type='@' declared_type='NSArray*' name='filters'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBounds:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBoundsOrigin:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='newOrigin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBoundsRotation:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='angle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBoundsSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='newSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCanDrawConcurrently:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCompositingFilter:'>
<arg index='0' type='@' declared_type='CIFilter*' name='filter'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentCompressionResistancePriority:forOrientation:'>
<arg index='0' type='f' declared_type='NSLayoutPriority' name='priority'/>
<arg index='1' type64='q' type='i' declared_type='NSLayoutConstraintOrientation' name='orientation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentFilters:'>
<arg index='0' type='@' declared_type='NSArray*' name='filters'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentHuggingPriority:forOrientation:'>
<arg index='0' type='f' declared_type='NSLayoutPriority' name='priority'/>
<arg index='1' type64='q' type='i' declared_type='NSLayoutConstraintOrientation' name='orientation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFocusRingType:'>
<arg index='0' type64='Q' type='I' declared_type='NSFocusRingType' name='focusRingType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFrame:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frameRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFrameCenterRotation:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='angle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFrameOrigin:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='newOrigin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFrameRotation:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='angle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFrameSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='newSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHidden:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setKeyboardFocusRingNeedsDisplayInRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayer:'>
<arg index='0' type='@' declared_type='CALayer*' name='newLayer'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayerContentsPlacement:'>
<arg index='0' type64='q' type='i' declared_type='NSViewLayerContentsPlacement' name='newPlacement'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayerContentsRedrawPolicy:'>
<arg index='0' type64='q' type='i' declared_type='NSViewLayerContentsRedrawPolicy' name='newPolicy'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNeedsDisplay:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNeedsDisplayInRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='invalidRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNeedsLayout:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNeedsUpdateConstraints:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNextKeyView:'>
<arg index='0' type='@' declared_type='NSView*' name='next'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPostsBoundsChangedNotifications:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPostsFrameChangedNotifications:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShadow:'>
<arg index='0' type='@' declared_type='NSShadow*' name='shadow'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSubviews:'>
<arg index='0' type='@' declared_type='NSArray*' name='newSubviews'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setToolTip:'>
<arg index='0' type='@' declared_type='NSString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTranslatesAutoresizingMaskIntoConstraints:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUpGState'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWantsBestResolutionOpenGLSurface:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWantsLayer:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWantsRestingTouches:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shadow'>
<retval type='@' declared_type='NSShadow*'/>
</method>
<method selector='shouldDelayWindowOrderingForEvent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='shouldDrawColor'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showDefinitionForAttributedString:atPoint:'>
<arg index='0' type='@' declared_type='NSAttributedString*' name='attrString'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='textBaselineOrigin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='showDefinitionForAttributedString:range:options:baselineOriginProvider:'>
<arg index='0' type='@' declared_type='NSAttributedString*' name='attrString'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='targetRange'/>
<arg index='2' type='@' declared_type='NSDictionary*' name='options'/>
<arg index='3' function_pointer='true' type='@?' declared_type='NSPoint (^)(NSRange)' name='originProvider'>
<arg type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='sortSubviewsUsingFunction:context:'>
<arg index='0' function_pointer='true' type='^?' declared_type='NSComparisonResult (*)(id, id, void *)' name='compare'>
<arg type='@' declared_type='id'/>
<arg type='@' declared_type='id'/>
<arg type='^v' declared_type='void*'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</arg>
<arg index='1' type='^v' declared_type='void*' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='subviews'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='superview'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='tag'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='toolTip'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='trackingAreas'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='translateOriginToPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='translation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='translateRectsNeedingDisplayInRect:by:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='clipRect'/>
<arg index='1' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='delta'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='translatesAutoresizingMaskIntoConstraints'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='unlockFocus'>
<retval type='v' declared_type='void'/>
</method>
<method selector='unregisterDraggedTypes'>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateConstraints'>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateConstraintsForSubtreeIfNeeded'>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateLayer'>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateTrackingAreas'>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewDidChangeBackingProperties'>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewDidEndLiveResize'>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewDidHide'>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewDidMoveToSuperview'>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewDidMoveToWindow'>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewDidUnhide'>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewWillDraw'>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewWillMoveToSuperview:'>
<arg index='0' type='@' declared_type='NSView*' name='newSuperview'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewWillMoveToWindow:'>
<arg index='0' type='@' declared_type='NSWindow*' name='newWindow'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewWillStartLiveResize'>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewWithTag:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='aTag'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='visibleRect'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='wantsBestResolutionOpenGLSurface'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='wantsDefaultClipping'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='wantsLayer'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='wantsRestingTouches'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='wantsUpdateLayer'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='widthAdjustLimit'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='willRemoveSubview:'>
<arg index='0' type='@' declared_type='NSView*' name='subview'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='window'>
<retval type='@' declared_type='NSWindow*'/>
</method>
<method selector='writeEPSInsideRect:toPasteboard:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='1' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='writePDFInsideRect:toPasteboard:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='1' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSViewAnimation'>
<method selector='initWithViewAnimations:'>
<arg index='0' type='@' declared_type='NSArray*' name='viewAnimations'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setViewAnimations:'>
<arg index='0' type='@' declared_type='NSArray*' name='viewAnimations'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewAnimations'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='NSViewController'>
<method selector='commitEditing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<arg index='1' type=':' declared_type='SEL' name='didCommitSelector'/>
<arg index='2' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='discardEditing'>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithNibName:bundle:'>
<arg index='0' type='@' declared_type='NSString*' name='nibNameOrNil'/>
<arg index='1' type='@' declared_type='NSBundle*' name='nibBundleOrNil'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='loadView'>
<retval type='v' declared_type='void'/>
</method>
<method selector='nibBundle'>
<retval type='@' declared_type='NSBundle*'/>
</method>
<method selector='nibName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='representedObject'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setRepresentedObject:'>
<arg index='0' type='@' declared_type='id' name='representedObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setView:'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='view'>
<retval type='@' declared_type='NSView*'/>
</method>
</class>
<class name='NSWindow'>
<method selector='acceptsMouseMovedEvents'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='addChildWindow:ordered:'>
<arg index='0' type='@' declared_type='NSWindow*' name='childWin'/>
<arg index='1' type64='q' type='i' declared_type='NSWindowOrderingMode' name='place'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allowsConcurrentViewDrawing'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='allowsToolTipsWhenApplicationIsInactive'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='alphaValue'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='anchorAttributeForOrientation:'>
<arg index='0' type64='q' type='i' declared_type='NSLayoutConstraintOrientation' name='orientation'/>
<retval type64='q' type='i' declared_type='NSLayoutAttribute'/>
</method>
<method selector='animationBehavior'>
<retval type64='q' type='i' declared_type='NSWindowAnimationBehavior'/>
</method>
<method selector='animationResizeTime:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='newFrame'/>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='areCursorRectsEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='aspectRatio'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='attachedSheet'>
<retval type='@' declared_type='NSWindow*'/>
</method>
<method selector='autorecalculatesContentBorderThicknessForEdge:'>
<arg index='0' type64='Q' type='i' declared_type='NSRectEdge' name='edge'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='autorecalculatesKeyViewLoop'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='backgroundColor'>
<retval type='@' declared_type='NSColor*'/>
</method>
<method selector='backingAlignedRect:options:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<arg index='1' type='Q' declared_type='NSAlignmentOptions' name='options'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='backingLocation'>
<retval type64='Q' type='I' declared_type='NSWindowBackingLocation'/>
</method>
<method selector='backingScaleFactor'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='backingType'>
<retval type64='Q' type='I' declared_type='NSBackingStoreType'/>
</method>
<method selector='becomeKeyWindow'>
<retval type='v' declared_type='void'/>
</method>
<method selector='becomeMainWindow'>
<retval type='v' declared_type='void'/>
</method>
<method selector='cacheImageInRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='canBeVisibleOnAllSpaces'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canBecomeKeyWindow'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canBecomeMainWindow'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canBecomeVisibleWithoutLogin'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canHide'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='canStoreColor'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cascadeTopLeftFromPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='topLeftPoint'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='center'>
<retval type='v' declared_type='void'/>
</method>
<method selector='childWindows'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='close'>
<retval type='v' declared_type='void'/>
</method>
<method selector='collectionBehavior'>
<retval type64='Q' type='I' declared_type='NSWindowCollectionBehavior'/>
</method>
<method selector='colorSpace'>
<retval type='@' declared_type='NSColorSpace*'/>
</method>
<method selector='constrainFrameRect:toScreen:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frameRect'/>
<arg index='1' type='@' declared_type='NSScreen*' name='screen'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='contentAspectRatio'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='contentBorderThicknessForEdge:'>
<arg index='0' type64='Q' type='i' declared_type='NSRectEdge' name='edge'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='contentMaxSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='contentMinSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='contentRectForFrameRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frameRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='contentRectForFrameRect:styleMask:' class_method='true'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='fRect'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='aStyle'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='contentResizeIncrements'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='contentView'>
<retval type='@' declared_type='id'/>
</method>
<method selector='convertBaseToScreen:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='aPoint'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='convertRectFromBacking:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='convertRectFromScreen:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='convertRectToBacking:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='convertRectToScreen:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='convertScreenToBase:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='aPoint'/>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='currentEvent'>
<retval type='@' declared_type='NSEvent*'/>
</method>
<method selector='dataWithEPSInsideRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='dataWithPDFInsideRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='deepestScreen'>
<retval type='@' declared_type='NSScreen*'/>
</method>
<method selector='defaultButtonCell'>
<retval type='@' declared_type='NSButtonCell*'/>
</method>
<method selector='defaultDepthLimit' class_method='true'>
<retval type='i' declared_type='NSWindowDepth'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='deminiaturize:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='depthLimit'>
<retval type='i' declared_type='NSWindowDepth'/>
</method>
<method selector='deviceDescription'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='disableCursorRects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='disableFlushWindow'>
<retval type='v' declared_type='void'/>
</method>
<method selector='disableKeyEquivalentForDefaultButtonCell'>
<retval type='v' declared_type='void'/>
</method>
<method selector='disableScreenUpdatesUntilFlush'>
<retval type='v' declared_type='void'/>
</method>
<method selector='disableSnapshotRestoration'>
<retval type='v' declared_type='void'/>
</method>
<method selector='discardCachedImage'>
<retval type='v' declared_type='void'/>
</method>
<method selector='discardCursorRects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='discardEventsMatchingMask:beforeEvent:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='mask'/>
<arg index='1' type='@' declared_type='NSEvent*' name='lastEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='display'>
<retval type='v' declared_type='void'/>
</method>
<method selector='displayIfNeeded'>
<retval type='v' declared_type='void'/>
</method>
<method selector='displaysWhenScreenProfileChanges'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='dockTile'>
<retval type='@' declared_type='NSDockTile*'/>
</method>
<method selector='dragImage:at:offset:event:pasteboard:source:slideBack:'>
<arg index='0' type='@' declared_type='NSImage*' name='anImage'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='baseLocation'/>
<arg index='2' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='initialOffset'/>
<arg index='3' type='@' declared_type='NSEvent*' name='event'/>
<arg index='4' type='@' declared_type='NSPasteboard*' name='pboard'/>
<arg index='5' type='@' declared_type='id' name='sourceObj'/>
<arg index='6' type='B' declared_type='BOOL' name='slideFlag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawers'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='enableCursorRects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='enableFlushWindow'>
<retval type='v' declared_type='void'/>
</method>
<method selector='enableKeyEquivalentForDefaultButtonCell'>
<retval type='v' declared_type='void'/>
</method>
<method selector='enableSnapshotRestoration'>
<retval type='v' declared_type='void'/>
</method>
<method selector='endEditingFor:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fieldEditor:forObject:'>
<arg index='0' type='B' declared_type='BOOL' name='createFlag'/>
<arg index='1' type='@' declared_type='id' name='anObject'/>
<retval type='@' declared_type='NSText*'/>
</method>
<method selector='firstResponder'>
<retval type='@' declared_type='NSResponder*'/>
</method>
<method selector='flushWindow'>
<retval type='v' declared_type='void'/>
</method>
<method selector='flushWindowIfNeeded'>
<retval type='v' declared_type='void'/>
</method>
<method selector='frame'>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='frameAutosaveName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='frameRectForContentRect:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='contentRect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='frameRectForContentRect:styleMask:' class_method='true'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cRect'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='aStyle'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method selector='gState'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='graphicsContext'>
<retval type='@' declared_type='NSGraphicsContext*'/>
</method>
<method selector='handleCloseScriptCommand:'>
<arg index='0' type='@' declared_type='NSCloseCommand*' name='command'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='handlePrintScriptCommand:'>
<arg index='0' type='@' declared_type='NSScriptCommand*' name='command'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='handleSaveScriptCommand:'>
<arg index='0' type='@' declared_type='NSScriptCommand*' name='command'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='hasCloseBox'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasDynamicDepthLimit'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasShadow'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasTitleBar'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hidesOnDeactivate'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='ignoresMouseEvents'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='inLiveResize'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithContentRect:styleMask:backing:defer:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='contentRect'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='aStyle'/>
<arg index='2' type64='Q' type='I' declared_type='NSBackingStoreType' name='bufferingType'/>
<arg index='3' type='B' declared_type='BOOL' name='flag'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithContentRect:styleMask:backing:defer:screen:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='contentRect'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='aStyle'/>
<arg index='2' type64='Q' type='I' declared_type='NSBackingStoreType' name='bufferingType'/>
<arg index='3' type='B' declared_type='BOOL' name='flag'/>
<arg index='4' type='@' declared_type='NSScreen*' name='screen'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithWindowRef:'>
<arg index='0' type='^v' declared_type='void*' name='windowRef'/>
<retval type='@' declared_type='NSWindow*'/>
</method>
<method selector='initialFirstResponder'>
<retval type='@' declared_type='NSView*'/>
</method>
<method selector='invalidateCursorRectsForView:'>
<arg index='0' type='@' declared_type='NSView*' name='aView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='invalidateShadow'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isAutodisplay'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isDocumentEdited'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isExcludedFromWindowsMenu'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFloatingPanel'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFlushWindowDisabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isKeyWindow'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMainWindow'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMiniaturizable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMiniaturized'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isModalPanel'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMovable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isMovableByWindowBackground'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isOnActiveSpace'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isOneShot'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isOpaque'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isReleasedWhenClosed'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isResizable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isRestorable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSheet'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isVisible'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isZoomable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isZoomed'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='keyDown:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='keyViewSelectionDirection'>
<retval type64='Q' type='I' declared_type='NSSelectionDirection'/>
</method>
<method selector='layoutIfNeeded'>
<retval type='v' declared_type='void'/>
</method>
<method selector='level'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='makeFirstResponder:'>
<arg index='0' type='@' declared_type='NSResponder*' name='aResponder'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='makeKeyAndOrderFront:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeKeyWindow'>
<retval type='v' declared_type='void'/>
</method>
<method selector='makeMainWindow'>
<retval type='v' declared_type='void'/>
</method>
<method selector='maxSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='menuChanged:' class_method='true'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='minFrameWidthWithTitle:styleMask:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='aTitle'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='aStyle'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='minSize'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='miniaturize:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='miniwindowImage'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='miniwindowTitle'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='mouseLocationOutsideOfEventStream'>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method selector='nextEventMatchingMask:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='mask'/>
<retval type='@' declared_type='NSEvent*'/>
</method>
<method selector='nextEventMatchingMask:untilDate:inMode:dequeue:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='mask'/>
<arg index='1' type='@' declared_type='NSDate*' name='expiration'/>
<arg index='2' type='@' declared_type='NSString*' name='mode'/>
<arg index='3' type='B' declared_type='BOOL' name='deqFlag'/>
<retval type='@' declared_type='NSEvent*'/>
</method>
<method selector='orderBack:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='orderFront:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='orderFrontRegardless'>
<retval type='v' declared_type='void'/>
</method>
<method selector='orderOut:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='orderWindow:relativeTo:'>
<arg index='0' type64='q' type='i' declared_type='NSWindowOrderingMode' name='place'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='otherWin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='orderedIndex'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='parentWindow'>
<retval type='@' declared_type='NSWindow*'/>
</method>
<method selector='performClose:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performMiniaturize:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='performZoom:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='postEvent:atStart:'>
<arg index='0' type='@' declared_type='NSEvent*' name='event'/>
<arg index='1' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='preferredBackingLocation'>
<retval type64='Q' type='I' declared_type='NSWindowBackingLocation'/>
</method>
<method selector='preservesContentDuringLiveResize'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='preventsApplicationTerminationWhenModal'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='print:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='recalculateKeyViewLoop'>
<retval type='v' declared_type='void'/>
</method>
<method selector='registerForDraggedTypes:'>
<arg index='0' type='@' declared_type='NSArray*' name='newTypes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeChildWindow:'>
<arg index='0' type='@' declared_type='NSWindow*' name='childWin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeFrameUsingName:' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='representedFilename'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='representedURL'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='resetCursorRects'>
<retval type='v' declared_type='void'/>
</method>
<method selector='resignKeyWindow'>
<retval type='v' declared_type='void'/>
</method>
<method selector='resignMainWindow'>
<retval type='v' declared_type='void'/>
</method>
<method selector='resizeFlags'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='resizeIncrements'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method selector='restorationClass'>
<retval type='#' declared_type='Class*'/>
</method>
<method selector='restoreCachedImage'>
<retval type='v' declared_type='void'/>
</method>
<method selector='runToolbarCustomizationPalette:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='saveFrameUsingName:'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='screen'>
<retval type='@' declared_type='NSScreen*'/>
</method>
<method selector='selectKeyViewFollowingView:'>
<arg index='0' type='@' declared_type='NSView*' name='aView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectKeyViewPrecedingView:'>
<arg index='0' type='@' declared_type='NSView*' name='aView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectNextKeyView:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='selectPreviousKeyView:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sendEvent:'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAcceptsMouseMovedEvents:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsConcurrentViewDrawing:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsToolTipsWhenApplicationIsInactive:'>
<arg index='0' type='B' declared_type='BOOL' name='allowWhenInactive'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlphaValue:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='windowAlpha'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAnchorAttribute:forOrientation:'>
<arg index='0' type64='q' type='i' declared_type='NSLayoutAttribute' name='attr'/>
<arg index='1' type64='q' type='i' declared_type='NSLayoutConstraintOrientation' name='orientation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAnimationBehavior:'>
<arg index='0' type64='q' type='i' declared_type='NSWindowAnimationBehavior' name='newAnimationBehavior'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAspectRatio:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='ratio'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutodisplay:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutorecalculatesContentBorderThickness:forEdge:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<arg index='1' type64='Q' type='i' declared_type='NSRectEdge' name='edge'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutorecalculatesKeyViewLoop:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundColor:'>
<arg index='0' type='@' declared_type='NSColor*' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackingType:'>
<arg index='0' type64='Q' type='I' declared_type='NSBackingStoreType' name='bufferingType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCanBeVisibleOnAllSpaces:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCanBecomeVisibleWithoutLogin:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCanHide:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCollectionBehavior:'>
<arg index='0' type64='Q' type='I' declared_type='NSWindowCollectionBehavior' name='behavior'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColorSpace:'>
<arg index='0' type='@' declared_type='NSColorSpace*' name='colorSpace'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentAspectRatio:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='ratio'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentBorderThickness:forEdge:'>
<arg index='0' type64='d' type='f' declared_type='CGFloat' name='thickness'/>
<arg index='1' type64='Q' type='i' declared_type='NSRectEdge' name='edge'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentMaxSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='size'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentMinSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='size'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentResizeIncrements:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='increments'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='aSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentView:'>
<arg index='0' type='@' declared_type='NSView*' name='aView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDefaultButtonCell:'>
<arg index='0' type='@' declared_type='NSButtonCell*' name='defButt'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg index='0' type='@' declared_type='id' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDepthLimit:'>
<arg index='0' type='i' declared_type='NSWindowDepth' name='limit'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplaysWhenScreenProfileChanges:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDocumentEdited:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDynamicDepthLimit:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setExcludedFromWindowsMenu:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFrame:display:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frameRect'/>
<arg index='1' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFrame:display:animate:'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='frameRect'/>
<arg index='1' type='B' declared_type='BOOL' name='displayFlag'/>
<arg index='2' type='B' declared_type='BOOL' name='animateFlag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFrameAutosaveName:'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setFrameFromString:'>
<arg index='0' type='@' declared_type='NSString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFrameOrigin:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='aPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFrameTopLeftPoint:'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='aPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFrameUsingName:'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setFrameUsingName:force:'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<arg index='1' type='B' declared_type='BOOL' name='force'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setHasShadow:'>
<arg index='0' type='B' declared_type='BOOL' name='hasShadow'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHidesOnDeactivate:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIgnoresMouseEvents:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInitialFirstResponder:'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsMiniaturized:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsVisible:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsZoomed:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLevel:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='newLevel'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaxSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='size'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinSize:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='size'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMiniwindowImage:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMiniwindowTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='title'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMovable:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMovableByWindowBackground:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOneShot:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOpaque:'>
<arg index='0' type='B' declared_type='BOOL' name='isOpaque'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOrderedIndex:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setParentWindow:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreferredBackingLocation:'>
<arg index='0' type64='Q' type='I' declared_type='NSWindowBackingLocation' name='backingLocation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreservesContentDuringLiveResize:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreventsApplicationTerminationWhenModal:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReleasedWhenClosed:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRepresentedFilename:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRepresentedURL:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResizeIncrements:'>
<arg index='0' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='increments'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRestorable:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRestorationClass:'>
<arg index='0' type='#' declared_type='Class*' name='restorationClass'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSharingType:'>
<arg index='0' type64='Q' type='I' declared_type='NSWindowSharingType' name='type'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsResizeIndicator:'>
<arg index='0' type='B' declared_type='BOOL' name='show'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShowsToolbarButton:'>
<arg index='0' type='B' declared_type='BOOL' name='show'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStyleMask:'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='styleMask'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg index='0' type='@' declared_type='NSString*' name='aString'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleWithRepresentedFilename:'>
<arg index='0' type='@' declared_type='NSString*' name='filename'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setToolbar:'>
<arg index='0' type='@' declared_type='NSToolbar*' name='toolbar'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setViewsNeedDisplay:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWindowController:'>
<arg index='0' type='@' declared_type='NSWindowController*' name='windowController'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sharingType'>
<retval type64='Q' type='I' declared_type='NSWindowSharingType'/>
</method>
<method selector='showsResizeIndicator'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showsToolbarButton'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='standardWindowButton:'>
<arg index='0' type64='Q' type='I' declared_type='NSWindowButton' name='b'/>
<retval type='@' declared_type='NSButton*'/>
</method>
<method selector='standardWindowButton:forStyleMask:' class_method='true'>
<arg index='0' type64='Q' type='I' declared_type='NSWindowButton' name='b'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='styleMask'/>
<retval type='@' declared_type='NSButton*'/>
</method>
<method selector='stringWithSavedFrame'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='styleMask'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='toggleFullScreen:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='toggleToolbarShown:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='toolbar'>
<retval type='@' declared_type='NSToolbar*'/>
</method>
<method selector='tryToPerform:with:'>
<arg index='0' type=':' declared_type='SEL' name='anAction'/>
<arg index='1' type='@' declared_type='id' name='anObject'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='unregisterDraggedTypes'>
<retval type='v' declared_type='void'/>
</method>
<method selector='update'>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateConstraintsIfNeeded'>
<retval type='v' declared_type='void'/>
</method>
<method selector='useOptimizedDrawing:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='userSpaceScaleFactor'>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method selector='validRequestorForSendType:returnType:'>
<arg index='0' type='@' declared_type='NSString*' name='sendType'/>
<arg index='1' type='@' declared_type='NSString*' name='returnType'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='viewsNeedDisplay'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='visualizeConstraints:'>
<arg index='0' type='@' declared_type='NSArray*' name='constraints'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowController'>
<retval type='@' declared_type='id'/>
</method>
<method selector='windowNumber'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='windowNumberAtPoint:belowWindowWithWindowNumber:' class_method='true'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='windowNumber'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='windowNumbersWithOptions:' class_method='true'>
<arg index='0' type64='Q' type='I' declared_type='NSWindowNumberListOptions' name='options'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='windowRef'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='worksWhenModal'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='zoom:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSWindowController'>
<method selector='close'>
<retval type='v' declared_type='void'/>
</method>
<method selector='document'>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithWindow:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithWindowNibName:'>
<arg index='0' type='@' declared_type='NSString*' name='windowNibName'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithWindowNibName:owner:'>
<arg index='0' type='@' declared_type='NSString*' name='windowNibName'/>
<arg index='1' type='@' declared_type='id' name='owner'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithWindowNibPath:owner:'>
<arg index='0' type='@' declared_type='NSString*' name='windowNibPath'/>
<arg index='1' type='@' declared_type='id' name='owner'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isWindowLoaded'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='loadWindow'>
<retval type='v' declared_type='void'/>
</method>
<method selector='owner'>
<retval type='@' declared_type='id'/>
</method>
<method selector='setDocument:'>
<arg index='0' type='@' declared_type='NSDocument*' name='document'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDocumentEdited:'>
<arg index='0' type='B' declared_type='BOOL' name='dirtyFlag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldCascadeWindows:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldCloseDocument:'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWindow:'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWindowFrameAutosaveName:'>
<arg index='0' type='@' declared_type='NSString*' name='name'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldCascadeWindows'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='shouldCloseDocument'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='showWindow:'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='synchronizeWindowTitleWithDocumentName'>
<retval type='v' declared_type='void'/>
</method>
<method selector='window'>
<retval type='@' declared_type='NSWindow*'/>
</method>
<method selector='windowDidLoad'>
<retval type='v' declared_type='void'/>
</method>
<method selector='windowFrameAutosaveName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='windowNibName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='windowNibPath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='windowTitleForDocumentDisplayName:'>
<arg index='0' type='@' declared_type='NSString*' name='displayName'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='windowWillLoad'>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSWorkspace'>
<method selector='URLForApplicationToOpenURL:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='URLForApplicationWithBundleIdentifier:'>
<arg index='0' type='@' declared_type='NSString*' name='bundleIdentifier'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='absolutePathForAppBundleWithIdentifier:'>
<arg index='0' type='@' declared_type='NSString*' name='bundleIdentifier'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='activateFileViewerSelectingURLs:'>
<arg index='0' type='@' declared_type='NSArray*' name='fileURLs'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='activeApplication'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='checkForRemovableMedia'>
<retval type='v' declared_type='void'/>
</method>
<method selector='desktopImageOptionsForScreen:'>
<arg index='0' type='@' declared_type='NSScreen*' name='screen'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method selector='desktopImageURLForScreen:'>
<arg index='0' type='@' declared_type='NSScreen*' name='screen'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='duplicateURLs:completionHandler:'>
<arg index='0' type='@' declared_type='NSArray*' name='URLs'/>
<arg index='1' function_pointer='true' type='@?' declared_type='void (^)(NSDictionary *, NSError *)' name='handler'>
<arg type='@' declared_type='NSDictionary*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='extendPowerOffBy:'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='requested'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method selector='fileLabelColors'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='fileLabels'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='fileSystemChanged'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='filenameExtension:isValidForType:'>
<arg index='0' type='@' declared_type='NSString*' name='filenameExtension'/>
<arg index='1' type='@' declared_type='NSString*' name='typeName'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='findApplications'>
<retval type='v' declared_type='void'/>
</method>
<method selector='frontmostApplication'>
<retval type='@' declared_type='NSRunningApplication*'/>
</method>
<method selector='fullPathForApplication:'>
<arg index='0' type='@' declared_type='NSString*' name='appName'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='getFileSystemInfoForPath:isRemovable:isWritable:isUnmountable:description:type:'>
<arg index='0' type='@' declared_type='NSString*' name='fullPath'/>
<arg index='1' type='^B' declared_type='BOOL*' name='removableFlag'/>
<arg index='2' type='^B' declared_type='BOOL*' name='writableFlag'/>
<arg index='3' type='^B' declared_type='BOOL*' name='unmountableFlag'/>
<arg index='4' type='^@' declared_type='NSString**' name='description'/>
<arg index='5' type='^@' declared_type='NSString**' name='fileSystemType'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getInfoForFile:application:type:'>
<arg index='0' type='@' declared_type='NSString*' name='fullPath'/>
<arg index='1' type='^@' declared_type='NSString**' name='appName'/>
<arg index='2' type='^@' declared_type='NSString**' name='type'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hideOtherApplications'>
<retval type='v' declared_type='void'/>
</method>
<method selector='iconForFile:'>
<arg index='0' type='@' declared_type='NSString*' name='fullPath'/>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='iconForFileType:'>
<arg index='0' type='@' declared_type='NSString*' name='fileType'/>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='iconForFiles:'>
<arg index='0' type='@' declared_type='NSArray*' name='fullPaths'/>
<retval type='@' declared_type='NSImage*'/>
</method>
<method selector='isFilePackageAtPath:'>
<arg index='0' type='@' declared_type='NSString*' name='fullPath'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='launchAppWithBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifier:'>
<arg index='0' type='@' declared_type='NSString*' name='bundleIdentifier'/>
<arg index='1' type64='Q' type='I' declared_type='NSWorkspaceLaunchOptions' name='options'/>
<arg index='2' type='@' declared_type='NSAppleEventDescriptor*' name='descriptor'/>
<arg index='3' type='^@' declared_type='NSNumber**' name='identifier'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='launchApplication:'>
<arg index='0' type='@' declared_type='NSString*' name='appName'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='launchApplication:showIcon:autolaunch:'>
<arg index='0' type='@' declared_type='NSString*' name='appName'/>
<arg index='1' type='B' declared_type='BOOL' name='showIcon'/>
<arg index='2' type='B' declared_type='BOOL' name='autolaunch'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='launchApplicationAtURL:options:configuration:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type64='Q' type='I' declared_type='NSWorkspaceLaunchOptions' name='options'/>
<arg index='2' type='@' declared_type='NSDictionary*' name='configuration'/>
<arg index='3' type='^@' declared_type='NSError**' name='error'/>
<retval type='@' declared_type='NSRunningApplication*'/>
</method>
<method selector='launchedApplications'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='localizedDescriptionForType:'>
<arg index='0' type='@' declared_type='NSString*' name='typeName'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='menuBarOwningApplication'>
<retval type='@' declared_type='NSRunningApplication*'/>
</method>
<method selector='mountNewRemovableMedia'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='mountedLocalVolumePaths'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='mountedRemovableMedia'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='noteFileSystemChanged'>
<retval type='v' declared_type='void'/>
</method>
<method selector='noteFileSystemChanged:'>
<arg index='0' type='@' declared_type='NSString*' name='path'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='noteUserDefaultsChanged'>
<retval type='v' declared_type='void'/>
</method>
<method selector='notificationCenter'>
<retval type='@' declared_type='NSNotificationCenter*'/>
</method>
<method selector='openFile:'>
<arg index='0' type='@' declared_type='NSString*' name='fullPath'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='openFile:fromImage:at:inView:'>
<arg index='0' type='@' declared_type='NSString*' name='fullPath'/>
<arg index='1' type='@' declared_type='NSImage*' name='anImage'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<arg index='3' type='@' declared_type='NSView*' name='aView'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='openFile:withApplication:'>
<arg index='0' type='@' declared_type='NSString*' name='fullPath'/>
<arg index='1' type='@' declared_type='NSString*' name='appName'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='openFile:withApplication:andDeactivate:'>
<arg index='0' type='@' declared_type='NSString*' name='fullPath'/>
<arg index='1' type='@' declared_type='NSString*' name='appName'/>
<arg index='2' type='B' declared_type='BOOL' name='flag'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='openTempFile:'>
<arg index='0' type='@' declared_type='NSString*' name='fullPath'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='openURL:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='openURLs:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:'>
<arg index='0' type='@' declared_type='NSArray*' name='urls'/>
<arg index='1' type='@' declared_type='NSString*' name='bundleIdentifier'/>
<arg index='2' type64='Q' type='I' declared_type='NSWorkspaceLaunchOptions' name='options'/>
<arg index='3' type='@' declared_type='NSAppleEventDescriptor*' name='descriptor'/>
<arg index='4' type='^@' declared_type='NSArray**' name='identifiers'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='performFileOperation:source:destination:files:tag:'>
<arg index='0' type='@' declared_type='NSString*' name='operation'/>
<arg index='1' type='@' declared_type='NSString*' name='source'/>
<arg index='2' type='@' declared_type='NSString*' name='destination'/>
<arg index='3' type='@' declared_type='NSArray*' name='files'/>
<arg index='4' type64='^q' type='^i' declared_type='NSInteger*' name='tag'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='preferredFilenameExtensionForType:'>
<arg index='0' type='@' declared_type='NSString*' name='typeName'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='recycleURLs:completionHandler:'>
<arg index='0' type='@' declared_type='NSArray*' name='URLs'/>
<arg index='1' function_pointer='true' type='@?' declared_type='void (^)(NSDictionary *, NSError *)' name='handler'>
<arg type='@' declared_type='NSDictionary*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='runningApplications'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='selectFile:inFileViewerRootedAtPath:'>
<arg index='0' type='@' declared_type='NSString*' name='fullPath'/>
<arg index='1' type='@' declared_type='NSString*' name='rootFullPath'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDesktopImageURL:forScreen:options:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='@' declared_type='NSScreen*' name='screen'/>
<arg index='2' type='@' declared_type='NSDictionary*' name='options'/>
<arg index='3' type='^@' declared_type='NSError**' name='error'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setIcon:forFile:options:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<arg index='1' type='@' declared_type='NSString*' name='fullPath'/>
<arg index='2' type64='Q' type='I' declared_type='NSWorkspaceIconCreationOptions' name='options'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='sharedWorkspace' class_method='true'>
<retval type='@' declared_type='NSWorkspace*'/>
</method>
<method selector='showSearchResultsForQueryString:'>
<arg index='0' type='@' declared_type='NSString*' name='queryString'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='slideImage:from:to:'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='fromPoint'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='toPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='type:conformsToType:'>
<arg index='0' type='@' declared_type='NSString*' name='firstTypeName'/>
<arg index='1' type='@' declared_type='NSString*' name='secondTypeName'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='typeOfFile:error:'>
<arg index='0' type='@' declared_type='NSString*' name='absoluteFilePath'/>
<arg index='1' type='^@' declared_type='NSError**' name='outError'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='unmountAndEjectDeviceAtPath:'>
<arg index='0' type='@' declared_type='NSString*' name='path'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='unmountAndEjectDeviceAtURL:error:'>
<arg index='0' type='@' declared_type='NSURL*' name='url'/>
<arg index='1' type='^@' declared_type='NSError**' name='error'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='userDefaultsChanged'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<informal_protocol name='NSAccessibility'>
<method type64='@24@0:8@16' selector='accessibilityActionDescription:' type='@12@0:4@8'>
<arg index='0' type='@' declared_type='NSString*' name='action'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='@16@0:8' selector='accessibilityActionNames' type='@8@0:4'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='Q24@0:8@16' selector='accessibilityArrayAttributeCount:' type='I12@0:4@8'>
<arg index='0' type='@' declared_type='NSString*' name='attribute'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method type64='@40@0:8@16Q24Q32' selector='accessibilityArrayAttributeValues:index:maxCount:' type='@20@0:4@8I12I16'>
<arg index='0' type='@' declared_type='NSString*' name='attribute'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='index'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='maxCount'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='@16@0:8' selector='accessibilityAttributeNames' type='@8@0:4'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='@24@0:8@16' selector='accessibilityAttributeValue:' type='@12@0:4@8'>
<arg index='0' type='@' declared_type='NSString*' name='attribute'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@32@0:8@16@24' selector='accessibilityAttributeValue:forParameter:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSString*' name='attribute'/>
<arg index='1' type='@' declared_type='id' name='parameter'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@16@0:8' selector='accessibilityFocusedUIElement' type='@8@0:4'>
<retval type='@' declared_type='id'/>
</method>
<method type64='@32@0:8{CGPoint=dd}16' selector='accessibilityHitTest:' type='@16@0:4{_NSPoint=ff}8'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='Q24@0:8@16' selector='accessibilityIndexOfChild:' type='I12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='child'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method type64='B24@0:8@16' selector='accessibilityIsAttributeSettable:' type='B12@0:4@8'>
<arg index='0' type='@' declared_type='NSString*' name='attribute'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B16@0:8' selector='accessibilityIsIgnored' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@16@0:8' selector='accessibilityParameterizedAttributeNames' type='@8@0:4'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='v24@0:8@16' selector='accessibilityPerformAction:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSString*' name='action'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='accessibilitySetValue:forAttribute:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='id' name='value'/>
<arg index='1' type='@' declared_type='NSString*' name='attribute'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSAccessibilityAdditions'>
<method type64='B32@0:8@16@24' selector='accessibilitySetOverrideValue:forAttribute:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='id' name='value'/>
<arg index='1' type='@' declared_type='NSString*' name='attribute'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSAlertDelegate'>
<method type64='B24@0:8@16' selector='alertShowHelp:' type='B12@0:4@8'>
<arg index='0' type='@' declared_type='NSAlert*' name='alert'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSAnimatablePropertyContainer'>
<method type64='@24@0:8@16' selector='animationForKey:' type='@12@0:4@8'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@16@0:8' selector='animations' type='@8@0:4'>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method type64='@16@0:8' selector='animator' type='@8@0:4'>
<retval type='@' declared_type='id'/>
</method>
<method type64='@24@0:8@16' selector='defaultAnimationForKey:' type='@12@0:4@8' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='v24@0:8@16' selector='setAnimations:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSDictionary*' name='animations'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSAnimationDelegate'>
<method type64='v28@0:8@16f24' selector='animation:didReachProgressMark:' type='v16@0:4@8f12'>
<arg index='0' type='@' declared_type='NSAnimation*' name='animation'/>
<arg index='1' type='f' declared_type='NSAnimationProgress' name='progress'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='f28@0:8@16f24' selector='animation:valueForProgress:' type='f16@0:4@8f12'>
<arg index='0' type='@' declared_type='NSAnimation*' name='animation'/>
<arg index='1' type='f' declared_type='NSAnimationProgress' name='progress'/>
<retval type='f' declared_type='float'/>
</method>
<method type64='v24@0:8@16' selector='animationDidEnd:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSAnimation*' name='animation'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='animationDidStop:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSAnimation*' name='animation'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B24@0:8@16' selector='animationShouldStart:' type='B12@0:4@8'>
<arg index='0' type='@' declared_type='NSAnimation*' name='animation'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSApplicationDelegate'>
<method type64='v32@0:8@16@24' selector='application:didDecodeRestorableState:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSApplication*' name='app'/>
<arg index='1' type='@' declared_type='NSCoder*' name='coder'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='application:didFailToRegisterForRemoteNotificationsWithError:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSApplication*' name='application'/>
<arg index='1' type='@' declared_type='NSError*' name='error'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='application:didReceiveRemoteNotification:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSApplication*' name='application'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='userInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='application:didRegisterForRemoteNotificationsWithDeviceToken:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSApplication*' name='application'/>
<arg index='1' type='@' declared_type='NSData*' name='deviceToken'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B32@0:8@16@24' selector='application:openFile:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='filename'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B32@0:8@16@24' selector='application:openFileWithoutUI:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='filename'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v32@0:8@16@24' selector='application:openFiles:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<arg index='1' type='@' declared_type='NSArray*' name='filenames'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B32@0:8@16@24' selector='application:openTempFile:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='filename'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B32@0:8@16@24' selector='application:printFile:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='filename'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='Q44@0:8@16@24@32B40' selector='application:printFiles:withSettings:showPrintPanels:' type='I24@0:4@8@12@16B20'>
<arg index='0' type='@' declared_type='NSApplication*' name='application'/>
<arg index='1' type='@' declared_type='NSArray*' name='fileNames'/>
<arg index='2' type='@' declared_type='NSDictionary*' name='printSettings'/>
<arg index='3' type='B' declared_type='BOOL' name='showPrintPanels'/>
<retval type64='Q' type='I' declared_type='NSApplicationPrintReply'/>
</method>
<method type64='v32@0:8@16@24' selector='application:willEncodeRestorableState:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSApplication*' name='app'/>
<arg index='1' type='@' declared_type='NSCoder*' name='coder'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@32@0:8@16@24' selector='application:willPresentError:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSApplication*' name='application'/>
<arg index='1' type='@' declared_type='NSError*' name='error'/>
<retval type='@' declared_type='NSError*'/>
</method>
<method type64='v24@0:8@16' selector='applicationDidBecomeActive:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='applicationDidChangeScreenParameters:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='applicationDidFinishLaunching:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='applicationDidHide:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='applicationDidResignActive:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='applicationDidUnhide:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='applicationDidUpdate:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@24@0:8@16' selector='applicationDockMenu:' type='@12@0:4@8'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method type64='B24@0:8@16' selector='applicationOpenUntitledFile:' type='B12@0:4@8'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B28@0:8@16B24' selector='applicationShouldHandleReopen:hasVisibleWindows:' type='B16@0:4@8B12'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<arg index='1' type='B' declared_type='BOOL' name='flag'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B24@0:8@16' selector='applicationShouldOpenUntitledFile:' type='B12@0:4@8'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='Q24@0:8@16' selector='applicationShouldTerminate:' type='I12@0:4@8'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<retval type64='Q' type='I' declared_type='NSApplicationTerminateReply'/>
</method>
<method type64='B24@0:8@16' selector='applicationShouldTerminateAfterLastWindowClosed:' type='B12@0:4@8'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v24@0:8@16' selector='applicationWillBecomeActive:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='applicationWillFinishLaunching:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='applicationWillHide:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='applicationWillResignActive:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='applicationWillTerminate:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='applicationWillUnhide:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='applicationWillUpdate:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSApplicationScriptingDelegation'>
<method type64='B32@0:8@16@24' selector='application:delegateHandlesKey:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSApplication*' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='key'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSBrowserDelegate'>
<method type64='B56@0:8@16@24q32q40Q48' selector='browser:acceptDrop:atRow:column:dropOperation:' type='B28@0:4@8@12i16i20I24'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='id' name='info'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='4' type64='Q' type='I' declared_type='NSBrowserDropOperation' name='dropOperation'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B48@0:8@16@24q32@40' selector='browser:canDragRowsWithIndexes:inColumn:withEvent:' type='B24@0:4@8@12i16@20'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='NSIndexSet*' name='rowIndexes'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='3' type='@' declared_type='NSEvent*' name='event'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@40@0:8@16q24@32' selector='browser:child:ofItem:' type='@20@0:4@8i12@16'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='index'/>
<arg index='2' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='v40@0:8@16q24@32' selector='browser:createRowsForColumn:inMatrix:' type='v20@0:4@8i12@16'>
<arg index='0' type='@' declared_type='NSBrowser*' name='sender'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='2' type='@' declared_type='NSMatrix*' name='matrix'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8@16q24q32' selector='browser:didChangeLastColumn:toColumn:' type='v20@0:4@8i12i16'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='oldLastColumn'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@56@0:8@16@24q32@40^{CGPoint=dd}48' selector='browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:' type='@28@0:4@8@12i16@20^{_NSPoint=ff}24'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='NSIndexSet*' name='rowIndexes'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='3' type='@' declared_type='NSEvent*' name='event'/>
<arg index='4' type64='^{CGPoint=dd}' type='^{_NSPoint=ff}' declared_type='NSPointPointer' name='dragImageOffset'/>
<retval type='@' declared_type='NSImage*'/>
</method>
<method type64='@32@0:8@16@24' selector='browser:headerViewControllerForItem:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='NSViewController*'/>
</method>
<method type64='d40@0:8@16q24q32' selector='browser:heightOfRow:inColumn:' type='f20@0:4@8i12i16'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='columnIndex'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method type64='B32@0:8@16q24' selector='browser:isColumnValid:' type='B16@0:4@8i12'>
<arg index='0' type='@' declared_type='NSBrowser*' name='sender'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B32@0:8@16@24' selector='browser:isLeafItem:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@48@0:8@16@24@32q40' selector='browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:' type='@24@0:4@8@12@16i20'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='NSURL*' name='dropDestination'/>
<arg index='2' type='@' declared_type='NSIndexSet*' name='rowIndexes'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='q56@0:8@16q24q32q40@48' selector='browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:' type='i28@0:4@8i12i16i20@24'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='startRow'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='endRow'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='4' type='@' declared_type='NSString*' name='searchString'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method type64='q32@0:8@16@24' selector='browser:numberOfChildrenOfItem:' type='i16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method type64='q32@0:8@16q24' selector='browser:numberOfRowsInColumn:' type='i16@0:4@8i12'>
<arg index='0' type='@' declared_type='NSBrowser*' name='sender'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method type64='@32@0:8@16@24' selector='browser:objectValueForItem:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@32@0:8@16@24' selector='browser:previewViewControllerForLeafItem:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='NSViewController*'/>
</method>
<method type64='B40@0:8@16@24q32' selector='browser:selectCellWithString:inColumn:' type='B20@0:4@8@12i16'>
<arg index='0' type='@' declared_type='NSBrowser*' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='title'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B40@0:8@16q24q32' selector='browser:selectRow:inColumn:' type='B20@0:4@8i12i16'>
<arg index='0' type='@' declared_type='NSBrowser*' name='sender'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@40@0:8@16@24q32' selector='browser:selectionIndexesForProposedSelection:inColumn:' type='@20@0:4@8@12i16'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='NSIndexSet*' name='proposedSelectionIndexes'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method type64='v40@0:8@16@24@32' selector='browser:setObjectValue:forItem:' type='v20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='id' name='object'/>
<arg index='2' type='@' declared_type='id' name='item'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B32@0:8@16@24' selector='browser:shouldEditItem:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B40@0:8@16q24q32' selector='browser:shouldShowCellExpansionForRow:column:' type='B20@0:4@8i12i16'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='d44@0:8@16q24B32d36' selector='browser:shouldSizeColumn:forUserResize:toWidth:' type='f24@0:4@8i12B16f20'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='columnIndex'/>
<arg index='2' type='B' declared_type='BOOL' name='forUserResize'/>
<arg index='3' type64='d' type='f' declared_type='CGFloat' name='suggestedWidth'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method type64='B40@0:8@16@24@32' selector='browser:shouldTypeSelectForEvent:withCurrentSearchString:' type='B20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='NSEvent*' name='event'/>
<arg index='2' type='@' declared_type='NSString*' name='searchString'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='d32@0:8@16q24' selector='browser:sizeToFitWidthOfColumn:' type='f16@0:4@8i12'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='columnIndex'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method type64='@32@0:8@16q24' selector='browser:titleOfColumn:' type='@16@0:4@8i12'>
<arg index='0' type='@' declared_type='NSBrowser*' name='sender'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='@40@0:8@16q24q32' selector='browser:typeSelectStringForRow:inColumn:' type='@20@0:4@8i12i16'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='Q56@0:8@16@24^q32^q40^Q48' selector='browser:validateDrop:proposedRow:column:dropOperation:' type='I28@0:4@8@12^i16^i20^I24'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='id' name='info'/>
<arg index='2' type64='^q' type='^i' declared_type='NSInteger*' name='row'/>
<arg index='3' type64='^q' type='^i' declared_type='NSInteger*' name='column'/>
<arg index='4' type64='^Q' type='^I' declared_type='NSBrowserDropOperation*' name='dropOperation'/>
<retval type64='Q' type='I' declared_type='NSDragOperation'/>
</method>
<method type64='v48@0:8@16@24q32q40' selector='browser:willDisplayCell:atRow:column:' type='v24@0:4@8@12i16i20'>
<arg index='0' type='@' declared_type='NSBrowser*' name='sender'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B48@0:8@16@24q32@40' selector='browser:writeRowsWithIndexes:inColumn:toPasteboard:' type='B24@0:4@8@12i16@20'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<arg index='1' type='@' declared_type='NSIndexSet*' name='rowIndexes'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='column'/>
<arg index='3' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v24@0:8@16' selector='browserColumnConfigurationDidChange:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='browserDidScroll:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSBrowser*' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='browserWillScroll:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSBrowser*' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@24@0:8@16' selector='rootItemForBrowser:' type='@12@0:4@8'>
<arg index='0' type='@' declared_type='NSBrowser*' name='browser'/>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSChangeSpelling'>
<method type64='v24@0:8@16' selector='changeSpelling:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSCollectionViewDelegate'>
<method type64='B48@0:8@16@24q32q40' selector='collectionView:acceptDrop:index:dropOperation:' type='B24@0:4@8@12i16i20'>
<arg index='0' type='@' declared_type='NSCollectionView*' name='collectionView'/>
<arg index='1' type='@' declared_type='id' name='draggingInfo'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='index'/>
<arg index='3' type64='q' type='i' declared_type='NSCollectionViewDropOperation' name='dropOperation'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B40@0:8@16@24@32' selector='collectionView:canDragItemsAtIndexes:withEvent:' type='B20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSCollectionView*' name='collectionView'/>
<arg index='1' type='@' declared_type='NSIndexSet*' name='indexes'/>
<arg index='2' type='@' declared_type='NSEvent*' name='event'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@48@0:8@16@24@32^{CGPoint=dd}40' selector='collectionView:draggingImageForItemsAtIndexes:withEvent:offset:' type='@24@0:4@8@12@16^{_NSPoint=ff}20'>
<arg index='0' type='@' declared_type='NSCollectionView*' name='collectionView'/>
<arg index='1' type='@' declared_type='NSIndexSet*' name='indexes'/>
<arg index='2' type='@' declared_type='NSEvent*' name='event'/>
<arg index='3' type64='^{CGPoint=dd}' type='^{_NSPoint=ff}' declared_type='NSPointPointer' name='dragImageOffset'/>
<retval type='@' declared_type='NSImage*'/>
</method>
<method type64='v56@0:8@16@24{CGPoint=dd}32Q48' selector='collectionView:draggingSession:endedAtPoint:dragOperation:' type='v28@0:4@8@12{_NSPoint=ff}16I24'>
<arg index='0' type='@' declared_type='NSCollectionView*' name='collectionView'/>
<arg index='1' type='@' declared_type='NSDraggingSession*' name='session'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<arg index='3' type64='Q' type='I' declared_type='NSDragOperation' name='operation'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v56@0:8@16@24{CGPoint=dd}32@48' selector='collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexes:' type='v28@0:4@8@12{_NSPoint=ff}16@24'>
<arg index='0' type='@' declared_type='NSCollectionView*' name='collectionView'/>
<arg index='1' type='@' declared_type='NSDraggingSession*' name='session'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<arg index='3' type='@' declared_type='NSIndexSet*' name='indexes'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@40@0:8@16@24@32' selector='collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:' type='@20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSCollectionView*' name='collectionView'/>
<arg index='1' type='@' declared_type='NSURL*' name='dropURL'/>
<arg index='2' type='@' declared_type='NSIndexSet*' name='indexes'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='@32@0:8@16Q24' selector='collectionView:pasteboardWriterForItemAtIndex:' type='@16@0:4@8I12'>
<arg index='0' type='@' declared_type='NSCollectionView*' name='collectionView'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='index'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='v32@0:8@16@24' selector='collectionView:updateDraggingItemsForDrag:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSCollectionView*' name='collectionView'/>
<arg index='1' type='@' declared_type='id' name='draggingInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='Q48@0:8@16@24^q32^q40' selector='collectionView:validateDrop:proposedIndex:dropOperation:' type='I24@0:4@8@12^i16^i20'>
<arg index='0' type='@' declared_type='NSCollectionView*' name='collectionView'/>
<arg index='1' type='@' declared_type='id' name='draggingInfo'/>
<arg index='2' type64='^q' type='^i' declared_type='NSInteger*' name='proposedDropIndex'/>
<arg index='3' type64='^q' type='^i' declared_type='NSCollectionViewDropOperation*' name='proposedDropOperation'/>
<retval type64='Q' type='I' declared_type='NSDragOperation'/>
</method>
<method type64='B40@0:8@16@24@32' selector='collectionView:writeItemsAtIndexes:toPasteboard:' type='B20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSCollectionView*' name='collectionView'/>
<arg index='1' type='@' declared_type='NSIndexSet*' name='indexes'/>
<arg index='2' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSColorPanelResponderMethod'>
<method type64='v24@0:8@16' selector='changeColor:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSColorPickingCustom'>
<method type64='q16@0:8' selector='currentMode' type='i8@0:4'>
<retval type64='q' type='i' declared_type='NSColorPanelMode'/>
</method>
<method type64='@20@0:8B16' selector='provideNewView:' type='@12@0:4B8'>
<arg index='0' type='B' declared_type='BOOL' name='initialRequest'/>
<retval type='@' declared_type='NSView*'/>
</method>
<method type64='v24@0:8@16' selector='setColor:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSColor*' name='newColor'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B24@0:8q16' selector='supportsMode:' type='B12@0:4i8'>
<arg index='0' type64='q' type='i' declared_type='NSColorPanelMode' name='mode'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSColorPickingDefault'>
<method type64='v24@0:8@16' selector='alphaControlAddedOrRemoved:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='attachColorList:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSColorList*' name='colorList'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@16@0:8' selector='buttonToolTip' type='@8@0:4'>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='v24@0:8@16' selector='detachColorList:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSColorList*' name='colorList'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@32@0:8Q16@24' selector='initWithPickerMask:colorPanel:' type='@16@0:4I8@12'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='mask'/>
<arg index='1' type='@' declared_type='NSColorPanel*' name='owningColorPanel'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='v32@0:8@16@24' selector='insertNewButtonImage:in:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSImage*' name='newButtonImage'/>
<arg index='1' type='@' declared_type='NSButtonCell*' name='buttonCell'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='{CGSize=dd}16@0:8' selector='minContentSize' type='{_NSSize=ff}8@0:4'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method type64='@16@0:8' selector='provideNewButtonImage' type='@8@0:4'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method type64='v24@0:8q16' selector='setMode:' type='v12@0:4i8'>
<arg index='0' type64='q' type='i' declared_type='NSColorPanelMode' name='mode'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='viewSizeChanged:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSComboBoxCellDataSource'>
<method type64='@32@0:8@16@24' selector='comboBoxCell:completedString:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSComboBoxCell*' name='aComboBoxCell'/>
<arg index='1' type='@' declared_type='NSString*' name='uncompletedString'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='Q32@0:8@16@24' selector='comboBoxCell:indexOfItemWithStringValue:' type='I16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSComboBoxCell*' name='aComboBoxCell'/>
<arg index='1' type='@' declared_type='NSString*' name='string'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method type64='@32@0:8@16q24' selector='comboBoxCell:objectValueForItemAtIndex:' type='@16@0:4@8i12'>
<arg index='0' type='@' declared_type='NSComboBoxCell*' name='aComboBoxCell'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='q24@0:8@16' selector='numberOfItemsInComboBoxCell:' type='i12@0:4@8'>
<arg index='0' type='@' declared_type='NSComboBoxCell*' name='comboBoxCell'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
</informal_protocol>
<informal_protocol name='NSComboBoxDataSource'>
<method type64='@32@0:8@16@24' selector='comboBox:completedString:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSComboBox*' name='aComboBox'/>
<arg index='1' type='@' declared_type='NSString*' name='string'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='Q32@0:8@16@24' selector='comboBox:indexOfItemWithStringValue:' type='I16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSComboBox*' name='aComboBox'/>
<arg index='1' type='@' declared_type='NSString*' name='string'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method type64='@32@0:8@16q24' selector='comboBox:objectValueForItemAtIndex:' type='@16@0:4@8i12'>
<arg index='0' type='@' declared_type='NSComboBox*' name='aComboBox'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='q24@0:8@16' selector='numberOfItemsInComboBox:' type='i12@0:4@8'>
<arg index='0' type='@' declared_type='NSComboBox*' name='aComboBox'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
</informal_protocol>
<informal_protocol name='NSComboBoxDelegate'>
<method type64='v24@0:8@16' selector='comboBoxSelectionDidChange:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='comboBoxSelectionIsChanging:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='comboBoxWillDismiss:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='comboBoxWillPopUp:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSControlSubclassNotifications'>
<method type64='v24@0:8@16' selector='controlTextDidBeginEditing:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='obj'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='controlTextDidChange:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='obj'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='controlTextDidEndEditing:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='obj'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSControlTextEditingDelegate'>
<method type64='B40@0:8@16@24@32' selector='control:didFailToFormatString:errorDescription:' type='B20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSControl*' name='control'/>
<arg index='1' type='@' declared_type='NSString*' name='string'/>
<arg index='2' type='@' declared_type='NSString*' name='error'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v40@0:8@16@24@32' selector='control:didFailToValidatePartialString:errorDescription:' type='v20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSControl*' name='control'/>
<arg index='1' type='@' declared_type='NSString*' name='string'/>
<arg index='2' type='@' declared_type='NSString*' name='error'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B32@0:8@16@24' selector='control:isValidObject:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSControl*' name='control'/>
<arg index='1' type='@' declared_type='id' name='obj'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B32@0:8@16@24' selector='control:textShouldBeginEditing:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSControl*' name='control'/>
<arg index='1' type='@' declared_type='NSText*' name='fieldEditor'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B32@0:8@16@24' selector='control:textShouldEndEditing:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSControl*' name='control'/>
<arg index='1' type='@' declared_type='NSText*' name='fieldEditor'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@64@0:8@16@24@32{_NSRange=QQ}40^q56' selector='control:textView:completions:forPartialWordRange:indexOfSelectedItem:' type='@32@0:4@8@12@16{_NSRange=II}20^i28'>
<arg index='0' type='@' declared_type='NSControl*' name='control'/>
<arg index='1' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='2' type='@' declared_type='NSArray*' name='words'/>
<arg index='3' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<arg index='4' type64='^q' type='^i' declared_type='NSInteger*' name='index'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='B40@0:8@16@24:32' selector='control:textView:doCommandBySelector:' type='B20@0:4@8@12:16'>
<arg index='0' type='@' declared_type='NSControl*' name='control'/>
<arg index='1' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='2' type=':' declared_type='SEL' name='commandSelector'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSDatePickerCellDelegate'>
<method type64='v40@0:8@16^@24^d32' selector='datePickerCell:validateProposedDateValue:timeInterval:' type='v20@0:4@8^@12^d16'>
<arg index='0' type='@' declared_type='NSDatePickerCell*' name='aDatePickerCell'/>
<arg index='1' type='^@' declared_type='NSDate**' name='proposedDateValue'/>
<arg index='2' type='^d' declared_type='NSTimeInterval*' name='proposedTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSDictionaryControllerKeyValuePair'>
<method type64='B16@0:8' selector='isExplicitlyIncluded' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@16@0:8' selector='key' type='@8@0:4'>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='@16@0:8' selector='localizedKey' type='@8@0:4'>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='v24@0:8@16' selector='setKey:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSString*' name='key'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='setLocalizedKey:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSString*' name='localizedKey'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='setValue:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='value'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@16@0:8' selector='value' type='@8@0:4'>
<retval type='@' declared_type='id'/>
</method>
</informal_protocol>
<informal_protocol name='NSDockTilePlugIn'>
<method type64='@16@0:8' selector='dockMenu' type='@8@0:4'>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method type64='v24@0:8@16' selector='setDockTile:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSDockTile*' name='dockTile'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSDraggingDestination'>
<method type64='v24@0:8@16' selector='concludeDragOperation:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='draggingEnded:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='Q24@0:8@16' selector='draggingEntered:' type='I12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type64='Q' type='I' declared_type='NSDragOperation'/>
</method>
<method type64='v24@0:8@16' selector='draggingExited:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='Q24@0:8@16' selector='draggingUpdated:' type='I12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type64='Q' type='I' declared_type='NSDragOperation'/>
</method>
<method type64='B24@0:8@16' selector='performDragOperation:' type='B12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B24@0:8@16' selector='prepareForDragOperation:' type='B12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v24@0:8@16' selector='updateDraggingItemsForDrag:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B16@0:8' selector='wantsPeriodicDraggingUpdates' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSDraggingInfo'>
<method type64='B16@0:8' selector='animatesToDestination' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@16@0:8' selector='draggedImage' type='@8@0:4'>
<retval type='@' declared_type='NSImage*'/>
</method>
<method type64='{CGPoint=dd}16@0:8' selector='draggedImageLocation' type='{_NSPoint=ff}8@0:4'>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method type64='@16@0:8' selector='draggingDestinationWindow' type='@8@0:4'>
<retval type='@' declared_type='NSWindow*'/>
</method>
<method type64='q16@0:8' selector='draggingFormation' type='i8@0:4'>
<retval type64='q' type='i' declared_type='NSDraggingFormation'/>
</method>
<method type64='{CGPoint=dd}16@0:8' selector='draggingLocation' type='{_NSPoint=ff}8@0:4'>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method type64='@16@0:8' selector='draggingPasteboard' type='@8@0:4'>
<retval type='@' declared_type='NSPasteboard*'/>
</method>
<method type64='q16@0:8' selector='draggingSequenceNumber' type='i8@0:4'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method type64='@16@0:8' selector='draggingSource' type='@8@0:4'>
<retval type='@' declared_type='id'/>
</method>
<method type64='Q16@0:8' selector='draggingSourceOperationMask' type='I8@0:4'>
<retval type64='Q' type='I' declared_type='NSDragOperation'/>
</method>
<method type64='v56@0:8Q16@24@32@40@?48' selector='enumerateDraggingItemsWithOptions:forView:classes:searchOptions:usingBlock:' type='v28@0:4I8@12@16@20@?24'>
<arg index='0' type64='Q' type='I' declared_type='NSDraggingItemEnumerationOptions' name='enumOpts'/>
<arg index='1' type='@' declared_type='NSView*' name='view'/>
<arg index='2' type='@' declared_type='NSArray*' name='classArray'/>
<arg index='3' type='@' declared_type='NSDictionary*' name='searchOptions'/>
<arg index='4' function_pointer='true' type='@?' declared_type='void (^)(NSDraggingItem *, NSInteger, BOOL *)' name='block'>
<arg type='@' declared_type='NSDraggingItem*'/>
<arg type64='q' type='i' declared_type='NSInteger'/>
<arg type='^B' declared_type='BOOL*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method type64='@24@0:8@16' selector='namesOfPromisedFilesDroppedAtDestination:' type='@12@0:4@8'>
<arg index='0' type='@' declared_type='NSURL*' name='dropDestination'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='q16@0:8' selector='numberOfValidItemsForDrop' type='i8@0:4'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method type64='v20@0:8B16' selector='setAnimatesToDestination:' type='v12@0:4B8'>
<arg index='0' type='B' declared_type='BOOL' name='animatesToDestination'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8q16' selector='setDraggingFormation:' type='v12@0:4i8'>
<arg index='0' type64='q' type='i' declared_type='NSDraggingFormation' name='draggingFormation'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8q16' selector='setNumberOfValidItemsForDrop:' type='v12@0:4i8'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='numberOfValidItemsForDrop'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8{CGPoint=dd}16' selector='slideDraggedImageTo:' type='v16@0:4{_NSPoint=ff}8'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSDraggingSource'>
<method type64='v48@0:8@16{CGPoint=dd}24Q40' selector='draggingSession:endedAtPoint:operation:' type='v24@0:4@8{_NSPoint=ff}12I20'>
<arg index='0' type='@' declared_type='NSDraggingSession*' name='session'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<arg index='2' type64='Q' type='I' declared_type='NSDragOperation' name='operation'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8@16{CGPoint=dd}24' selector='draggingSession:movedToPoint:' type='v20@0:4@8{_NSPoint=ff}12'>
<arg index='0' type='@' declared_type='NSDraggingSession*' name='session'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='Q32@0:8@16q24' selector='draggingSession:sourceOperationMaskForDraggingContext:' type='I16@0:4@8i12'>
<arg index='0' type='@' declared_type='NSDraggingSession*' name='session'/>
<arg index='1' type64='q' type='i' declared_type='NSDraggingContext' name='context'/>
<retval type64='Q' type='I' declared_type='NSDragOperation'/>
</method>
<method type64='v40@0:8@16{CGPoint=dd}24' selector='draggingSession:willBeginAtPoint:' type='v20@0:4@8{_NSPoint=ff}12'>
<arg index='0' type='@' declared_type='NSDraggingSession*' name='session'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B24@0:8@16' selector='ignoreModifierKeysForDraggingSession:' type='B12@0:4@8'>
<arg index='0' type='@' declared_type='NSDraggingSession*' name='session'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSDraggingSourceDeprecated'>
<method type64='v40@0:8@16{CGPoint=dd}24' selector='draggedImage:beganAt:' type='v20@0:4@8{_NSPoint=ff}12'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v44@0:8@16{CGPoint=dd}24B40' selector='draggedImage:endedAt:deposited:' type='v24@0:4@8{_NSPoint=ff}12B20'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<arg index='2' type='B' declared_type='BOOL' name='flag'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v48@0:8@16{CGPoint=dd}24Q40' selector='draggedImage:endedAt:operation:' type='v24@0:4@8{_NSPoint=ff}12I20'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<arg index='2' type64='Q' type='I' declared_type='NSDragOperation' name='operation'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8@16{CGPoint=dd}24' selector='draggedImage:movedTo:' type='v20@0:4@8{_NSPoint=ff}12'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='Q20@0:8B16' selector='draggingSourceOperationMaskForLocal:' type='I12@0:4B8'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<retval type64='Q' type='I' declared_type='NSDragOperation'/>
</method>
<method type64='B16@0:8' selector='ignoreModifierKeysWhileDragging' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@24@0:8@16' selector='namesOfPromisedFilesDroppedAtDestination:' type='@12@0:4@8'>
<arg index='0' type='@' declared_type='NSURL*' name='dropDestination'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</informal_protocol>
<informal_protocol name='NSDrawerDelegate'>
<method type64='v24@0:8@16' selector='drawerDidClose:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='drawerDidOpen:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B24@0:8@16' selector='drawerShouldClose:' type='B12@0:4@8'>
<arg index='0' type='@' declared_type='NSDrawer*' name='sender'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B24@0:8@16' selector='drawerShouldOpen:' type='B12@0:4@8'>
<arg index='0' type='@' declared_type='NSDrawer*' name='sender'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v24@0:8@16' selector='drawerWillClose:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='drawerWillOpen:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='{CGSize=dd}40@0:8@16{CGSize=dd}24' selector='drawerWillResizeContents:toSize:' type='{_NSSize=ff}20@0:4@8{_NSSize=ff}12'>
<arg index='0' type='@' declared_type='NSDrawer*' name='sender'/>
<arg index='1' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='contentSize'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
</informal_protocol>
<informal_protocol name='NSEditor'>
<method type64='B16@0:8' selector='commitEditing' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B24@0:8^@16' selector='commitEditingAndReturnError:' type='B12@0:4^@8'>
<arg index='0' type='^@' declared_type='NSError**' name='error'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v40@0:8@16:24^v32' selector='commitEditingWithDelegate:didCommitSelector:contextInfo:' type='v20@0:4@8:12^v16'>
<arg index='0' type='@' declared_type='id' name='delegate'/>
<arg index='1' type=':' declared_type='SEL' name='didCommitSelector'/>
<arg index='2' type='^v' declared_type='void*' name='contextInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v16@0:8' selector='discardEditing' type='v8@0:4'>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSEditorRegistration'>
<method type64='v24@0:8@16' selector='objectDidBeginEditing:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='editor'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='objectDidEndEditing:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='editor'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSFontManagerDelegate'>
<method type64='B32@0:8@16@24' selector='fontManager:willIncludeFont:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='fontName'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSFontManagerResponderMethod'>
<method type64='v24@0:8@16' selector='changeFont:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSFontPanelValidationAdditions'>
<method type64='Q24@0:8@16' selector='validModesForFontPanel:' type='I12@0:4@8'>
<arg index='0' type='@' declared_type='NSFontPanel*' name='fontPanel'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
</informal_protocol>
<informal_protocol name='NSGlyphStorage'>
<method type64='@16@0:8' selector='attributedString' type='@8@0:4'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method type64='v48@0:8r^I16Q24Q32Q40' selector='insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:' type='v24@0:4r^I8I12I16I20'>
<arg index='0' type='^I' const='true' declared_type='NSGlyph*' name='glyphs'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='length'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<arg index='3' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='Q16@0:8' selector='layoutOptions' type='I8@0:4'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method type64='v40@0:8q16q24Q32' selector='setIntAttribute:value:forGlyphAtIndex:' type='v20@0:4i8i12I16'>
<arg index='0' type64='q' type='i' declared_type='NSInteger' name='attributeTag'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='val'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='glyphIndex'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSIgnoreMisspelledWords'>
<method type64='v24@0:8@16' selector='ignoreSpelling:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSImageDelegate'>
<method type64='v40@0:8@16@24q32' selector='image:didLoadPartOfRepresentation:withValidRows:' type='v20@0:4@8@12i16'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<arg index='1' type='@' declared_type='NSImageRep*' name='rep'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='rows'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8@16@24Q32' selector='image:didLoadRepresentation:withStatus:' type='v20@0:4@8@12I16'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<arg index='1' type='@' declared_type='NSImageRep*' name='rep'/>
<arg index='2' type64='Q' type='I' declared_type='NSImageLoadStatus' name='status'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='image:didLoadRepresentationHeader:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<arg index='1' type='@' declared_type='NSImageRep*' name='rep'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='image:willLoadRepresentation:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSImage*' name='image'/>
<arg index='1' type='@' declared_type='NSImageRep*' name='rep'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24' selector='imageDidNotDraw:inRect:' type='@28@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='aRect'/>
<retval type='@' declared_type='NSImage*'/>
</method>
</informal_protocol>
<informal_protocol name='NSInputServerMouseTracker'>
<method type64='B56@0:8Q16{CGPoint=dd}24Q40@48' selector='mouseDownOnCharacterIndex:atCoordinate:withModifier:client:' type='B28@0:4I8{_NSPoint=ff}12I20@24'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='theIndex'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='thePoint'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='theFlags'/>
<arg index='3' type='@' declared_type='id' name='sender'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B56@0:8Q16{CGPoint=dd}24Q40@48' selector='mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:' type='B28@0:4I8{_NSPoint=ff}12I20@24'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='theIndex'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='thePoint'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='theFlags'/>
<arg index='3' type='@' declared_type='id' name='sender'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v56@0:8Q16{CGPoint=dd}24Q40@48' selector='mouseUpOnCharacterIndex:atCoordinate:withModifier:client:' type='v28@0:4I8{_NSPoint=ff}12I20@24'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='theIndex'/>
<arg index='1' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='thePoint'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='theFlags'/>
<arg index='3' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSInputServiceProvider'>
<method type64='v32@0:8@16q24' selector='activeConversationChanged:toNewConversation:' type='v16@0:4@8i12'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='newConversation'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16q24' selector='activeConversationWillChange:fromOldConversation:' type='v16@0:4@8i12'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='oldConversation'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B16@0:8' selector='canBeDisabled' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v32@0:8:16@24' selector='doCommandBySelector:client:' type='v16@0:4:8@12'>
<arg index='0' type=':' declared_type='SEL' name='aSelector'/>
<arg index='1' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='inputClientBecomeActive:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='inputClientDisabled:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='inputClientEnabled:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='inputClientResignActive:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='insertText:client:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='id' name='aString'/>
<arg index='1' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='markedTextAbandoned:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8{_NSRange=QQ}16@32' selector='markedTextSelectionChanged:client:' type='v20@0:4{_NSRange=II}8@16'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='newSel'/>
<arg index='1' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='terminate:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B16@0:8' selector='wantsToDelayTextChangeNotifications' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B16@0:8' selector='wantsToHandleMouseEvents' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B16@0:8' selector='wantsToInterpretAllKeystrokes' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSKeyValueBindingCreation'>
<method type64='v48@0:8@16@24@32@40' selector='bind:toObject:withKeyPath:options:' type='v24@0:4@8@12@16@20'>
<arg index='0' type='@' declared_type='NSString*' name='binding'/>
<arg index='1' type='@' declared_type='id' name='observable'/>
<arg index='2' type='@' declared_type='NSString*' name='keyPath'/>
<arg index='3' type='@' declared_type='NSDictionary*' name='options'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='exposeBinding:' type='v12@0:4@8' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='binding'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@16@0:8' selector='exposedBindings' type='@8@0:4'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='@24@0:8@16' selector='infoForBinding:' type='@12@0:4@8'>
<arg index='0' type='@' declared_type='NSString*' name='binding'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method type64='@24@0:8@16' selector='optionDescriptionsForBinding:' type='@12@0:4@8'>
<arg index='0' type='@' declared_type='NSString*' name='aBinding'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='v24@0:8@16' selector='unbind:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSString*' name='binding'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='#24@0:8@16' selector='valueClassForBinding:' type='#12@0:4@8'>
<arg index='0' type='@' declared_type='NSString*' name='binding'/>
<retval type='#' declared_type='Class'/>
</method>
</informal_protocol>
<informal_protocol name='NSLayerDelegateContentsScaleUpdating'>
<method type64='B40@0:8@16d24@32' selector='layer:shouldInheritContentsScale:fromWindow:' type='B20@0:4@8f12@16'>
<arg index='0' type='@' declared_type='CALayer*' name='layer'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='newScale'/>
<arg index='2' type='@' declared_type='NSWindow*' name='window'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSLayoutManagerDelegate'>
<method type64='v36@0:8@16@24B32' selector='layoutManager:didCompleteLayoutForTextContainer:atEnd:' type='v20@0:4@8@12B16'>
<arg index='0' type='@' declared_type='NSLayoutManager*' name='layoutManager'/>
<arg index='1' type='@' declared_type='NSTextContainer*' name='textContainer'/>
<arg index='2' type='B' declared_type='BOOL' name='layoutFinishedFlag'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@52@0:8@16@24B32Q36^{_NSRange=QQ}44' selector='layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:' type='@28@0:4@8@12B16I20^{_NSRange=II}24'>
<arg index='0' type='@' declared_type='NSLayoutManager*' name='layoutManager'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='attrs'/>
<arg index='2' type='B' declared_type='BOOL' name='toScreen'/>
<arg index='3' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<arg index='4' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='effectiveCharRange'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method type64='v24@0:8@16' selector='layoutManagerDidInvalidateLayout:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSLayoutManager*' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSMenuDelegate'>
<method type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24' selector='confinementRectForMenu:onScreen:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<arg index='1' type='@' declared_type='NSScreen*' name='screen'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method type64='B44@0:8@16@24q32B40' selector='menu:updateItem:atIndex:shouldCancel:' type='B24@0:4@8@12i16B20'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<arg index='1' type='@' declared_type='NSMenuItem*' name='item'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='index'/>
<arg index='3' type='B' declared_type='BOOL' name='shouldCancel'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v32@0:8@16@24' selector='menu:willHighlightItem:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<arg index='1' type='@' declared_type='NSMenuItem*' name='item'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='menuDidClose:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B48@0:8@16@24^@32^:40' selector='menuHasKeyEquivalent:forEvent:target:action:' type='B24@0:4@8@12^@16^:20'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<arg index='1' type='@' declared_type='NSEvent*' name='event'/>
<arg index='2' type='^@' declared_type='id*' name='target'/>
<arg index='3' type='^:' declared_type='SEL*' name='action'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v24@0:8@16' selector='menuNeedsUpdate:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='menuWillOpen:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='q24@0:8@16' selector='numberOfItemsInMenu:' type='i12@0:4@8'>
<arg index='0' type='@' declared_type='NSMenu*' name='menu'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
</informal_protocol>
<informal_protocol name='NSMenuValidation'>
<method type64='B24@0:8@16' selector='validateMenuItem:' type='B12@0:4@8'>
<arg index='0' type='@' declared_type='NSMenuItem*' name='menuItem'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSNibAwaking'>
<method type64='v16@0:8' selector='awakeFromNib' type='v8@0:4'>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSOpenSavePanelDelegate'>
<method type64='v32@0:8@16@24' selector='panel:didChangeToDirectoryURL:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type='@' declared_type='NSURL*' name='url'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B32@0:8@16@24' selector='panel:shouldEnableURL:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type='@' declared_type='NSURL*' name='url'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@36@0:8@16@24B32' selector='panel:userEnteredFilename:confirmed:' type='@20@0:4@8@12B16'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='filename'/>
<arg index='2' type='B' declared_type='BOOL' name='okFlag'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='B40@0:8@16@24^@32' selector='panel:validateURL:error:' type='B20@0:4@8@12^@16'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type='@' declared_type='NSURL*' name='url'/>
<arg index='2' type='^@' declared_type='NSError**' name='outError'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v28@0:8@16B24' selector='panel:willExpand:' type='v16@0:4@8B12'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type='B' declared_type='BOOL' name='expanding'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='panelSelectionDidChange:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSOutlineViewDataSource'>
<method type64='B48@0:8@16@24@32q40' selector='outlineView:acceptDrop:item:childIndex:' type='B24@0:4@8@12@16i20'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='info'/>
<arg index='2' type='@' declared_type='id' name='item'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@40@0:8@16q24@32' selector='outlineView:child:ofItem:' type='@20@0:4@8i12@16'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='index'/>
<arg index='2' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='v56@0:8@16@24{CGPoint=dd}32Q48' selector='outlineView:draggingSession:endedAtPoint:operation:' type='v28@0:4@8@12{_NSPoint=ff}16I24'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSDraggingSession*' name='session'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<arg index='3' type64='Q' type='I' declared_type='NSDragOperation' name='operation'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v56@0:8@16@24{CGPoint=dd}32@48' selector='outlineView:draggingSession:willBeginAtPoint:forItems:' type='v28@0:4@8@12{_NSPoint=ff}16@24'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSDraggingSession*' name='session'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<arg index='3' type='@' declared_type='NSArray*' name='draggedItems'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B32@0:8@16@24' selector='outlineView:isItemExpandable:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@32@0:8@16@24' selector='outlineView:itemForPersistentObject:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='object'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@40@0:8@16@24@32' selector='outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:' type='@20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSURL*' name='dropDestination'/>
<arg index='2' type='@' declared_type='NSArray*' name='items'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='q32@0:8@16@24' selector='outlineView:numberOfChildrenOfItem:' type='i16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method type64='@40@0:8@16@24@32' selector='outlineView:objectValueForTableColumn:byItem:' type='@20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@32@0:8@16@24' selector='outlineView:pasteboardWriterForItem:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@32@0:8@16@24' selector='outlineView:persistentObjectForItem:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='v48@0:8@16@24@32@40' selector='outlineView:setObjectValue:forTableColumn:byItem:' type='v24@0:4@8@12@16@20'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='object'/>
<arg index='2' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='3' type='@' declared_type='id' name='item'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='outlineView:sortDescriptorsDidChange:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSArray*' name='oldDescriptors'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='outlineView:updateDraggingItemsForDrag:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='draggingInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='Q48@0:8@16@24@32q40' selector='outlineView:validateDrop:proposedItem:proposedChildIndex:' type='I24@0:4@8@12@16i20'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='info'/>
<arg index='2' type='@' declared_type='id' name='item'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='index'/>
<retval type64='Q' type='I' declared_type='NSDragOperation'/>
</method>
<method type64='B40@0:8@16@24@32' selector='outlineView:writeItems:toPasteboard:' type='B20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSArray*' name='items'/>
<arg index='2' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSOutlineViewDelegate'>
<method type64='@40@0:8@16@24@32' selector='outlineView:dataCellForTableColumn:item:' type='@20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='NSCell*'/>
</method>
<method type64='v40@0:8@16@24q32' selector='outlineView:didAddRowView:forRow:' type='v20@0:4@8@12i16'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableRowView*' name='rowView'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='outlineView:didClickTableColumn:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='outlineView:didDragTableColumn:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8@16@24q32' selector='outlineView:didRemoveRowView:forRow:' type='v20@0:4@8@12i16'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableRowView*' name='rowView'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='d32@0:8@16@24' selector='outlineView:heightOfRowByItem:' type='f16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method type64='B32@0:8@16@24' selector='outlineView:isGroupItem:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v32@0:8@16@24' selector='outlineView:mouseDownInHeaderOfTableColumn:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@48@0:8@16@24@32@40' selector='outlineView:nextTypeSelectMatchFromItem:toItem:forString:' type='@24@0:4@8@12@16@20'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='startItem'/>
<arg index='2' type='@' declared_type='id' name='endItem'/>
<arg index='3' type='@' declared_type='NSString*' name='searchString'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@32@0:8@16@24' selector='outlineView:rowViewForItem:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='NSTableRowView*'/>
</method>
<method type64='@32@0:8@16@24' selector='outlineView:selectionIndexesForProposedSelection:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSIndexSet*' name='proposedSelectionIndexes'/>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method type64='B32@0:8@16@24' selector='outlineView:shouldCollapseItem:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B40@0:8@16@24@32' selector='outlineView:shouldEditTableColumn:item:' type='B20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B32@0:8@16@24' selector='outlineView:shouldExpandItem:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B40@0:8@16q24q32' selector='outlineView:shouldReorderColumn:toColumn:' type='B20@0:4@8i12i16'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='columnIndex'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='newColumnIndex'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B32@0:8@16@24' selector='outlineView:shouldSelectItem:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B32@0:8@16@24' selector='outlineView:shouldSelectTableColumn:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B40@0:8@16@24@32' selector='outlineView:shouldShowCellExpansionForTableColumn:item:' type='B20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B32@0:8@16@24' selector='outlineView:shouldShowOutlineCellForItem:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B48@0:8@16@24@32@40' selector='outlineView:shouldTrackCell:forTableColumn:item:' type='B24@0:4@8@12@16@20'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSCell*' name='cell'/>
<arg index='2' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='3' type='@' declared_type='id' name='item'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B40@0:8@16@24@32' selector='outlineView:shouldTypeSelectForEvent:withCurrentSearchString:' type='B20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSEvent*' name='event'/>
<arg index='2' type='@' declared_type='NSString*' name='searchString'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='d32@0:8@16q24' selector='outlineView:sizeToFitWidthOfColumn:' type='f16@0:4@8i12'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method type64='@72@0:8@16@24^{CGRect={CGPoint=dd}{CGSize=dd}}32@40@48{CGPoint=dd}56' selector='outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:' type='@36@0:4@8@12^{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@20@24{_NSPoint=ff}28'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSCell*' name='cell'/>
<arg index='2' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRectPointer' name='rect'/>
<arg index='3' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='4' type='@' declared_type='id' name='item'/>
<arg index='5' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='mouseLocation'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='@40@0:8@16@24@32' selector='outlineView:typeSelectStringForTableColumn:item:' type='@20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='@40@0:8@16@24@32' selector='outlineView:viewForTableColumn:item:' type='@20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='NSView*'/>
</method>
<method type64='v48@0:8@16@24@32@40' selector='outlineView:willDisplayCell:forTableColumn:item:' type='v24@0:4@8@12@16@20'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='3' type='@' declared_type='id' name='item'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v48@0:8@16@24@32@40' selector='outlineView:willDisplayOutlineCell:forTableColumn:item:' type='v24@0:4@8@12@16@20'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='3' type='@' declared_type='id' name='item'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='outlineViewColumnDidMove:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='outlineViewColumnDidResize:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='outlineViewItemDidCollapse:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='outlineViewItemDidExpand:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='outlineViewItemWillCollapse:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='outlineViewItemWillExpand:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='outlineViewSelectionDidChange:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='outlineViewSelectionIsChanging:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B24@0:8@16' selector='selectionShouldChangeInOutlineView:' type='B12@0:4@8'>
<arg index='0' type='@' declared_type='NSOutlineView*' name='outlineView'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSPageControllerDelegate'>
<method type64='v32@0:8@16@24' selector='pageController:didTransitionToObject:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSPageController*' name='pageController'/>
<arg index='1' type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24' selector='pageController:frameForObject:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSPageController*' name='pageController'/>
<arg index='1' type='@' declared_type='id' name='object'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method type64='@32@0:8@16@24' selector='pageController:identifierForObject:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSPageController*' name='pageController'/>
<arg index='1' type='@' declared_type='id' name='object'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='v40@0:8@16@24@32' selector='pageController:prepareViewController:withObject:' type='v20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSPageController*' name='pageController'/>
<arg index='1' type='@' declared_type='NSViewController*' name='viewController'/>
<arg index='2' type='@' declared_type='id' name='object'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@32@0:8@16@24' selector='pageController:viewControllerForIdentifier:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSPageController*' name='pageController'/>
<arg index='1' type='@' declared_type='NSString*' name='identifier'/>
<retval type='@' declared_type='NSViewController*'/>
</method>
<method type64='v24@0:8@16' selector='pageControllerDidEndLiveTransition:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSPageController*' name='pageController'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='pageControllerWillStartLiveTransition:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSPageController*' name='pageController'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSPasteboardItemDataProvider'>
<method type64='v40@0:8@16@24@32' selector='pasteboard:item:provideDataForType:' type='v20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<arg index='1' type='@' declared_type='NSPasteboardItem*' name='item'/>
<arg index='2' type='@' declared_type='NSString*' name='type'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='pasteboardFinishedWithDataProvider:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSPasteboardOwner'>
<method type64='v32@0:8@16@24' selector='pasteboard:provideDataForType:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='type'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='pasteboardChangedOwner:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='sender'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSPasteboardReading'>
<method type64='@32@0:8@16@24' selector='initWithPasteboardPropertyList:ofType:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='id' name='propertyList'/>
<arg index='1' type='@' declared_type='NSString*' name='type'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@24@0:8@16' selector='readableTypesForPasteboard:' type='@12@0:4@8' class_method='true'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='Q32@0:8@16@24' selector='readingOptionsForType:pasteboard:' type='I16@0:4@8@12' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='type'/>
<arg index='1' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type64='Q' type='I' declared_type='NSPasteboardReadingOptions'/>
</method>
</informal_protocol>
<informal_protocol name='NSPasteboardWriting'>
<method type64='@24@0:8@16' selector='pasteboardPropertyListForType:' type='@12@0:4@8'>
<arg index='0' type='@' declared_type='NSString*' name='type'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@24@0:8@16' selector='writableTypesForPasteboard:' type='@12@0:4@8'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='Q32@0:8@16@24' selector='writingOptionsForType:pasteboard:' type='I16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSString*' name='type'/>
<arg index='1' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type64='Q' type='I' declared_type='NSPasteboardWritingOptions'/>
</method>
</informal_protocol>
<informal_protocol name='NSPathCellDelegate'>
<method type64='v32@0:8@16@24' selector='pathCell:willDisplayOpenPanel:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSPathCell*' name='pathCell'/>
<arg index='1' type='@' declared_type='NSOpenPanel*' name='openPanel'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='pathCell:willPopUpMenu:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSPathCell*' name='pathCell'/>
<arg index='1' type='@' declared_type='NSMenu*' name='menu'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSPathControlDelegate'>
<method type64='B32@0:8@16@24' selector='pathControl:acceptDrop:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSPathControl*' name='pathControl'/>
<arg index='1' type='@' declared_type='id' name='info'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B40@0:8@16@24@32' selector='pathControl:shouldDragPathComponentCell:withPasteboard:' type='B20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSPathControl*' name='pathControl'/>
<arg index='1' type='@' declared_type='NSPathComponentCell*' name='pathComponentCell'/>
<arg index='2' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='Q32@0:8@16@24' selector='pathControl:validateDrop:' type='I16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSPathControl*' name='pathControl'/>
<arg index='1' type='@' declared_type='id' name='info'/>
<retval type64='Q' type='I' declared_type='NSDragOperation'/>
</method>
<method type64='v32@0:8@16@24' selector='pathControl:willDisplayOpenPanel:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSPathControl*' name='pathControl'/>
<arg index='1' type='@' declared_type='NSOpenPanel*' name='openPanel'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='pathControl:willPopUpMenu:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSPathControl*' name='pathControl'/>
<arg index='1' type='@' declared_type='NSMenu*' name='menu'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSPlaceholders'>
<method type64='@32@0:8@16@24' selector='defaultPlaceholderForMarker:withBinding:' type='@16@0:4@8@12' class_method='true'>
<arg index='0' type='@' declared_type='id' name='marker'/>
<arg index='1' type='@' declared_type='NSString*' name='binding'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='v40@0:8@16@24@32' selector='setDefaultPlaceholder:forMarker:withBinding:' type='v20@0:4@8@12@16' class_method='true'>
<arg index='0' type='@' declared_type='id' name='placeholder'/>
<arg index='1' type='@' declared_type='id' name='marker'/>
<arg index='2' type='@' declared_type='NSString*' name='binding'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSPopoverDelegate'>
<method type64='@24@0:8@16' selector='detachableWindowForPopover:' type='@12@0:4@8'>
<arg index='0' type='@' declared_type='NSPopover*' name='popover'/>
<retval type='@' declared_type='NSWindow*'/>
</method>
<method type64='v24@0:8@16' selector='popoverDidClose:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='popoverDidShow:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B24@0:8@16' selector='popoverShouldClose:' type='B12@0:4@8'>
<arg index='0' type='@' declared_type='NSPopover*' name='popover'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v24@0:8@16' selector='popoverWillClose:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='popoverWillShow:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSPrintPanelAccessorizing'>
<method type64='@16@0:8' selector='keyPathsForValuesAffectingPreview' type='@8@0:4'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method type64='@16@0:8' selector='localizedSummaryItems' type='@8@0:4'>
<retval type='@' declared_type='NSArray*'/>
</method>
</informal_protocol>
<informal_protocol name='NSRuleEditorDelegate'>
<method type64='@48@0:8@16q24@32Q40' selector='ruleEditor:child:forCriterion:withRowType:' type='@24@0:4@8i12@16I20'>
<arg index='0' type='@' declared_type='NSRuleEditor*' name='editor'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='index'/>
<arg index='2' type='@' declared_type='id' name='criterion'/>
<arg index='3' type64='Q' type='I' declared_type='NSRuleEditorRowType' name='rowType'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@40@0:8@16@24q32' selector='ruleEditor:displayValueForCriterion:inRow:' type='@20@0:4@8@12i16'>
<arg index='0' type='@' declared_type='NSRuleEditor*' name='editor'/>
<arg index='1' type='@' declared_type='id' name='criterion'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='q40@0:8@16@24Q32' selector='ruleEditor:numberOfChildrenForCriterion:withRowType:' type='i20@0:4@8@12I16'>
<arg index='0' type='@' declared_type='NSRuleEditor*' name='editor'/>
<arg index='1' type='@' declared_type='id' name='criterion'/>
<arg index='2' type64='Q' type='I' declared_type='NSRuleEditorRowType' name='rowType'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method type64='@48@0:8@16@24@32q40' selector='ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:' type='@24@0:4@8@12@16i20'>
<arg index='0' type='@' declared_type='NSRuleEditor*' name='editor'/>
<arg index='1' type='@' declared_type='id' name='criterion'/>
<arg index='2' type='@' declared_type='id' name='value'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method type64='v24@0:8@16' selector='ruleEditorRowsDidChange:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSSavePanelDelegateDeprecated'>
<method type64='q44@0:8@16@24@32B40' selector='panel:compareFilename:with:caseSensitive:' type='i24@0:4@8@12@16B20'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='name1'/>
<arg index='2' type='@' declared_type='NSString*' name='name2'/>
<arg index='3' type='B' declared_type='BOOL' name='caseSensitive'/>
<retval type64='q' type='i' declared_type='NSComparisonResult'/>
</method>
<method type64='v32@0:8@16@24' selector='panel:directoryDidChange:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='path'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B32@0:8@16@24' selector='panel:isValidFilename:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='filename'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B32@0:8@16@24' selector='panel:shouldShowFilename:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='filename'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSServicesRequests'>
<method type64='B24@0:8@16' selector='readSelectionFromPasteboard:' type='B12@0:4@8'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B32@0:8@16@24' selector='writeSelectionToPasteboard:types:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSPasteboard*' name='pboard'/>
<arg index='1' type='@' declared_type='NSArray*' name='types'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSSharingServiceDelegate'>
<method type64='v40@0:8@16@24@32' selector='sharingService:didFailToShareItems:error:' type='v20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSSharingService*' name='sharingService'/>
<arg index='1' type='@' declared_type='NSArray*' name='items'/>
<arg index='2' type='@' declared_type='NSError*' name='error'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='sharingService:didShareItems:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSSharingService*' name='sharingService'/>
<arg index='1' type='@' declared_type='NSArray*' name='items'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24' selector='sharingService:sourceFrameOnScreenForShareItem:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSSharingService*' name='sharingService'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method type64='@40@0:8@16@24^q32' selector='sharingService:sourceWindowForShareItems:sharingContentScope:' type='@20@0:4@8@12^i16'>
<arg index='0' type='@' declared_type='NSSharingService*' name='sharingService'/>
<arg index='1' type='@' declared_type='NSArray*' name='items'/>
<arg index='2' type64='^q' type='^i' declared_type='NSSharingContentScope*' name='sharingContentScope'/>
<retval type='@' declared_type='NSWindow*'/>
</method>
<method type64='@40@0:8@16@24^{CGRect={CGPoint=dd}{CGSize=dd}}32' selector='sharingService:transitionImageForShareItem:contentRect:' type='@20@0:4@8@12^{_NSRect={_NSPoint=ff}{_NSSize=ff}}16'>
<arg index='0' type='@' declared_type='NSSharingService*' name='sharingService'/>
<arg index='1' type='@' declared_type='id' name='item'/>
<arg index='2' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect*' name='contentRect'/>
<retval type='@' declared_type='NSImage*'/>
</method>
<method type64='v32@0:8@16@24' selector='sharingService:willShareItems:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSSharingService*' name='sharingService'/>
<arg index='1' type='@' declared_type='NSArray*' name='items'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSSharingServicePickerDelegate'>
<method type64='@32@0:8@16@24' selector='sharingServicePicker:delegateForSharingService:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSSharingServicePicker*' name='sharingServicePicker'/>
<arg index='1' type='@' declared_type='NSSharingService*' name='sharingService'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='v32@0:8@16@24' selector='sharingServicePicker:didChooseSharingService:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSSharingServicePicker*' name='sharingServicePicker'/>
<arg index='1' type='@' declared_type='NSSharingService*' name='service'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@40@0:8@16@24@32' selector='sharingServicePicker:sharingServicesForItems:proposedSharingServices:' type='@20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSSharingServicePicker*' name='sharingServicePicker'/>
<arg index='1' type='@' declared_type='NSArray*' name='items'/>
<arg index='2' type='@' declared_type='NSArray*' name='proposedServices'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</informal_protocol>
<informal_protocol name='NSSoundDelegate'>
<method type64='v28@0:8@16B24' selector='sound:didFinishPlaying:' type='v16@0:4@8B12'>
<arg index='0' type='@' declared_type='NSSound*' name='sound'/>
<arg index='1' type='B' declared_type='BOOL' name='aBool'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSSpeechRecognizerDelegate'>
<method type64='v32@0:8@16@24' selector='speechRecognizer:didRecognizeCommand:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSSpeechRecognizer*' name='sender'/>
<arg index='1' type='@' declared_type='id' name='command'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSSpeechSynthesizerDelegate'>
<method type64='v48@0:8@16Q24@32@40' selector='speechSynthesizer:didEncounterErrorAtIndex:ofString:message:' type='v24@0:4@8I12@16@20'>
<arg index='0' type='@' declared_type='NSSpeechSynthesizer*' name='sender'/>
<arg index='1' type64='Q' type='I' declared_type='NSUInteger' name='characterIndex'/>
<arg index='2' type='@' declared_type='NSString*' name='string'/>
<arg index='3' type='@' declared_type='NSString*' name='message'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='speechSynthesizer:didEncounterSyncMessage:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSSpeechSynthesizer*' name='sender'/>
<arg index='1' type='@' declared_type='NSString*' name='message'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v28@0:8@16B24' selector='speechSynthesizer:didFinishSpeaking:' type='v16@0:4@8B12'>
<arg index='0' type='@' declared_type='NSSpeechSynthesizer*' name='sender'/>
<arg index='1' type='B' declared_type='BOOL' name='finishedSpeaking'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v28@0:8@16s24' selector='speechSynthesizer:willSpeakPhoneme:' type='v16@0:4@8s12'>
<arg index='0' type='@' declared_type='NSSpeechSynthesizer*' name='sender'/>
<arg index='1' type='s' declared_type='short' name='phonemeOpcode'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v48@0:8@16{_NSRange=QQ}24@40' selector='speechSynthesizer:willSpeakWord:ofString:' type='v24@0:4@8{_NSRange=II}12@20'>
<arg index='0' type='@' declared_type='NSSpeechSynthesizer*' name='sender'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='characterRange'/>
<arg index='2' type='@' declared_type='NSString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSSplitViewDelegate'>
<method type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16q24' selector='splitView:additionalEffectiveRectOfDividerAtIndex:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@0:4@8i12'>
<arg index='0' type='@' declared_type='NSSplitView*' name='splitView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='dividerIndex'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method type64='B32@0:8@16@24' selector='splitView:canCollapseSubview:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSSplitView*' name='splitView'/>
<arg index='1' type='@' declared_type='NSView*' name='subview'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='d40@0:8@16d24q32' selector='splitView:constrainMaxCoordinate:ofSubviewAt:' type='f20@0:4@8f12i16'>
<arg index='0' type='@' declared_type='NSSplitView*' name='splitView'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='proposedMaximumPosition'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='dividerIndex'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method type64='d40@0:8@16d24q32' selector='splitView:constrainMinCoordinate:ofSubviewAt:' type='f20@0:4@8f12i16'>
<arg index='0' type='@' declared_type='NSSplitView*' name='splitView'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='proposedMinimumPosition'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='dividerIndex'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method type64='d40@0:8@16d24q32' selector='splitView:constrainSplitPosition:ofSubviewAt:' type='f20@0:4@8f12i16'>
<arg index='0' type='@' declared_type='NSSplitView*' name='splitView'/>
<arg index='1' type64='d' type='f' declared_type='CGFloat' name='proposedPosition'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='dividerIndex'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method type64='{CGRect={CGPoint=dd}{CGSize=dd}}96@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56q88' selector='splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}48@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12{_NSRect={_NSPoint=ff}{_NSSize=ff}}28i44'>
<arg index='0' type='@' declared_type='NSSplitView*' name='splitView'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='proposedEffectiveRect'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='drawnRect'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='dividerIndex'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method type64='v40@0:8@16{CGSize=dd}24' selector='splitView:resizeSubviewsWithOldSize:' type='v20@0:4@8{_NSSize=ff}12'>
<arg index='0' type='@' declared_type='NSSplitView*' name='splitView'/>
<arg index='1' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='oldSize'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B32@0:8@16@24' selector='splitView:shouldAdjustSizeOfSubview:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSSplitView*' name='splitView'/>
<arg index='1' type='@' declared_type='NSView*' name='view'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B40@0:8@16@24q32' selector='splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:' type='B20@0:4@8@12i16'>
<arg index='0' type='@' declared_type='NSSplitView*' name='splitView'/>
<arg index='1' type='@' declared_type='NSView*' name='subview'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='dividerIndex'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B32@0:8@16q24' selector='splitView:shouldHideDividerAtIndex:' type='B16@0:4@8i12'>
<arg index='0' type='@' declared_type='NSSplitView*' name='splitView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='dividerIndex'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v24@0:8@16' selector='splitViewDidResizeSubviews:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='splitViewWillResizeSubviews:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSTabViewDelegate'>
<method type64='v32@0:8@16@24' selector='tabView:didSelectTabViewItem:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTabView*' name='tabView'/>
<arg index='1' type='@' declared_type='NSTabViewItem*' name='tabViewItem'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B32@0:8@16@24' selector='tabView:shouldSelectTabViewItem:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTabView*' name='tabView'/>
<arg index='1' type='@' declared_type='NSTabViewItem*' name='tabViewItem'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v32@0:8@16@24' selector='tabView:willSelectTabViewItem:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTabView*' name='tabView'/>
<arg index='1' type='@' declared_type='NSTabViewItem*' name='tabViewItem'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='tabViewDidChangeNumberOfTabViewItems:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSTabView*' name='tabView'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSTableViewDataSource'>
<method type64='q24@0:8@16' selector='numberOfRowsInTableView:' type='i12@0:4@8'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method type64='B48@0:8@16@24q32Q40' selector='tableView:acceptDrop:row:dropOperation:' type='B24@0:4@8@12i16I20'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='id' name='info'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='3' type64='Q' type='I' declared_type='NSTableViewDropOperation' name='dropOperation'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v56@0:8@16@24{CGPoint=dd}32Q48' selector='tableView:draggingSession:endedAtPoint:operation:' type='v28@0:4@8@12{_NSPoint=ff}16I24'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSDraggingSession*' name='session'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<arg index='3' type64='Q' type='I' declared_type='NSDragOperation' name='operation'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v56@0:8@16@24{CGPoint=dd}32@48' selector='tableView:draggingSession:willBeginAtPoint:forRowIndexes:' type='v28@0:4@8@12{_NSPoint=ff}16@24'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSDraggingSession*' name='session'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='screenPoint'/>
<arg index='3' type='@' declared_type='NSIndexSet*' name='rowIndexes'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@40@0:8@16@24@32' selector='tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:' type='@20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSURL*' name='dropDestination'/>
<arg index='2' type='@' declared_type='NSIndexSet*' name='indexSet'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='@40@0:8@16@24q32' selector='tableView:objectValueForTableColumn:row:' type='@20@0:4@8@12i16'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@32@0:8@16q24' selector='tableView:pasteboardWriterForRow:' type='@16@0:4@8i12'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='v48@0:8@16@24@32q40' selector='tableView:setObjectValue:forTableColumn:row:' type='v24@0:4@8@12@16i20'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='id' name='object'/>
<arg index='2' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='tableView:sortDescriptorsDidChange:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSArray*' name='oldDescriptors'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='tableView:updateDraggingItemsForDrag:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='id' name='draggingInfo'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='Q48@0:8@16@24q32Q40' selector='tableView:validateDrop:proposedRow:proposedDropOperation:' type='I24@0:4@8@12i16I20'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='id' name='info'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='3' type64='Q' type='I' declared_type='NSTableViewDropOperation' name='dropOperation'/>
<retval type64='Q' type='I' declared_type='NSDragOperation'/>
</method>
<method type64='B40@0:8@16@24@32' selector='tableView:writeRowsWithIndexes:toPasteboard:' type='B20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSIndexSet*' name='rowIndexes'/>
<arg index='2' type='@' declared_type='NSPasteboard*' name='pboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSTableViewDataSourceDeprecated'>
<method type64='B40@0:8@16@24@32' selector='tableView:writeRows:toPasteboard:' type='B20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSArray*' name='rows'/>
<arg index='2' type='@' declared_type='NSPasteboard*' name='pboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSTableViewDelegate'>
<method type64='B24@0:8@16' selector='selectionShouldChangeInTableView:' type='B12@0:4@8'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@40@0:8@16@24q32' selector='tableView:dataCellForTableColumn:row:' type='@20@0:4@8@12i16'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='@' declared_type='NSCell*'/>
</method>
<method type64='v40@0:8@16@24q32' selector='tableView:didAddRowView:forRow:' type='v20@0:4@8@12i16'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableRowView*' name='rowView'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='tableView:didClickTableColumn:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='tableView:didDragTableColumn:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8@16@24q32' selector='tableView:didRemoveRowView:forRow:' type='v20@0:4@8@12i16'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableRowView*' name='rowView'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='d32@0:8@16q24' selector='tableView:heightOfRow:' type='f16@0:4@8i12'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method type64='B32@0:8@16q24' selector='tableView:isGroupRow:' type='B16@0:4@8i12'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v32@0:8@16@24' selector='tableView:mouseDownInHeaderOfTableColumn:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='q48@0:8@16q24q32@40' selector='tableView:nextTypeSelectMatchFromRow:toRow:forString:' type='i24@0:4@8i12i16@20'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='startRow'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='endRow'/>
<arg index='3' type='@' declared_type='NSString*' name='searchString'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method type64='@32@0:8@16q24' selector='tableView:rowViewForRow:' type='@16@0:4@8i12'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='@' declared_type='NSTableRowView*'/>
</method>
<method type64='@32@0:8@16@24' selector='tableView:selectionIndexesForProposedSelection:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSIndexSet*' name='proposedSelectionIndexes'/>
<retval type='@' declared_type='NSIndexSet*'/>
</method>
<method type64='B40@0:8@16@24q32' selector='tableView:shouldEditTableColumn:row:' type='B20@0:4@8@12i16'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B40@0:8@16q24q32' selector='tableView:shouldReorderColumn:toColumn:' type='B20@0:4@8i12i16'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='columnIndex'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='newColumnIndex'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B32@0:8@16q24' selector='tableView:shouldSelectRow:' type='B16@0:4@8i12'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B32@0:8@16@24' selector='tableView:shouldSelectTableColumn:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B40@0:8@16@24q32' selector='tableView:shouldShowCellExpansionForTableColumn:row:' type='B20@0:4@8@12i16'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B48@0:8@16@24@32q40' selector='tableView:shouldTrackCell:forTableColumn:row:' type='B24@0:4@8@12@16i20'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSCell*' name='cell'/>
<arg index='2' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B40@0:8@16@24@32' selector='tableView:shouldTypeSelectForEvent:withCurrentSearchString:' type='B20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSEvent*' name='event'/>
<arg index='2' type='@' declared_type='NSString*' name='searchString'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='d32@0:8@16q24' selector='tableView:sizeToFitWidthOfColumn:' type='f16@0:4@8i12'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='column'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method type64='@72@0:8@16@24^{CGRect={CGPoint=dd}{CGSize=dd}}32@40q48{CGPoint=dd}56' selector='tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:' type='@36@0:4@8@12^{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@20i24{_NSPoint=ff}28'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSCell*' name='cell'/>
<arg index='2' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRectPointer' name='rect'/>
<arg index='3' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='4' type64='q' type='i' declared_type='NSInteger' name='row'/>
<arg index='5' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='mouseLocation'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='@40@0:8@16@24q32' selector='tableView:typeSelectStringForTableColumn:row:' type='@20@0:4@8@12i16'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='@40@0:8@16@24q32' selector='tableView:viewForTableColumn:row:' type='@20@0:4@8@12i16'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='@' declared_type='NSView*'/>
</method>
<method type64='v48@0:8@16@24@32q40' selector='tableView:willDisplayCell:forTableColumn:row:' type='v24@0:4@8@12@16i20'>
<arg index='0' type='@' declared_type='NSTableView*' name='tableView'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type='@' declared_type='NSTableColumn*' name='tableColumn'/>
<arg index='3' type64='q' type='i' declared_type='NSInteger' name='row'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='tableViewColumnDidMove:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='tableViewColumnDidResize:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='tableViewSelectionDidChange:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='tableViewSelectionIsChanging:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextAttachmentCell'>
<method type64='@16@0:8' selector='attachment' type='@8@0:4'>
<retval type='@' declared_type='NSTextAttachment*'/>
</method>
<method type64='{CGPoint=dd}16@0:8' selector='cellBaselineOffset' type='{_NSPoint=ff}8@0:4'>
<retval type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint'/>
</method>
<method type64='{CGRect={CGPoint=dd}{CGSize=dd}}80@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGPoint=dd}56Q72' selector='cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}40@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12{_NSPoint=ff}28I36'>
<arg index='0' type='@' declared_type='NSTextContainer*' name='textContainer'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='lineFrag'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='position'/>
<arg index='3' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method type64='{CGSize=dd}16@0:8' selector='cellSize' type='{_NSSize=ff}8@0:4'>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method type64='v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48' selector='drawWithFrame:inView:' type='v28@0:4{_NSRect={_NSPoint=ff}{_NSSize=ff}}8@24'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48Q56' selector='drawWithFrame:inView:characterIndex:' type='v32@0:4{_NSRect={_NSPoint=ff}{_NSSize=ff}}8@24I28'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48Q56@64' selector='drawWithFrame:inView:characterIndex:layoutManager:' type='v36@0:4{_NSRect={_NSPoint=ff}{_NSSize=ff}}8@24I28@32'>
<arg index='0' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='1' type='@' declared_type='NSView*' name='controlView'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<arg index='3' type='@' declared_type='NSLayoutManager*' name='layoutManager'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v60@0:8B16{CGRect={CGPoint=dd}{CGSize=dd}}20@52' selector='highlight:withFrame:inView:' type='v32@0:4B8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12@28'>
<arg index='0' type='B' declared_type='BOOL' name='flag'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='2' type='@' declared_type='NSView*' name='controlView'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='setAttachment:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSTextAttachment*' name='anObject'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B76@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24@56Q64B72' selector='trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:' type='B40@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12@28I32B36'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='2' type='@' declared_type='NSView*' name='controlView'/>
<arg index='3' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<arg index='4' type='B' declared_type='BOOL' name='flag'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B68@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24@56B64' selector='trackMouse:inRect:ofView:untilMouseUp:' type='B36@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12@28B32'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='2' type='@' declared_type='NSView*' name='controlView'/>
<arg index='3' type='B' declared_type='BOOL' name='flag'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B16@0:8' selector='wantsToTrackMouse' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B72@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24@56Q64' selector='wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:' type='B36@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12@28I32'>
<arg index='0' type='@' declared_type='NSEvent*' name='theEvent'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='2' type='@' declared_type='NSView*' name='controlView'/>
<arg index='3' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextDelegate'>
<method type64='v24@0:8@16' selector='textDidBeginEditing:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='textDidChange:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='textDidEndEditing:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B24@0:8@16' selector='textShouldBeginEditing:' type='B12@0:4@8'>
<arg index='0' type='@' declared_type='NSText*' name='textObject'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B24@0:8@16' selector='textShouldEndEditing:' type='B12@0:4@8'>
<arg index='0' type='@' declared_type='NSText*' name='textObject'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextFinderBarContainer'>
<method type64='@16@0:8' selector='contentView' type='@8@0:4'>
<retval type='@' declared_type='NSView*'/>
</method>
<method type64='@16@0:8' selector='findBarView' type='@8@0:4'>
<retval type='@' declared_type='NSView*'/>
</method>
<method type64='v16@0:8' selector='findBarViewDidChangeHeight' type='v8@0:4'>
<retval type='v' declared_type='void'/>
</method>
<method type64='B16@0:8' selector='isFindBarVisible' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v24@0:8@16' selector='setFindBarView:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSView*' name='findBarView'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v20@0:8B16' selector='setFindBarVisible:' type='v12@0:4B8'>
<arg index='0' type='B' declared_type='BOOL' name='findBarVisible'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextFinderClient'>
<method type64='B16@0:8' selector='allowsMultipleSelection' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@32@0:8Q16^{_NSRange=QQ}24' selector='contentViewAtIndex:effectiveCharacterRange:' type='@16@0:4I8^{_NSRange=II}12'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='index'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='outRange'/>
<retval type='@' declared_type='NSView*'/>
</method>
<method type64='v16@0:8' selector='didReplaceCharacters' type='v8@0:4'>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8{_NSRange=QQ}16@32' selector='drawCharactersInRange:forContentView:' type='v20@0:4{_NSRange=II}8@16'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='1' type='@' declared_type='NSView*' name='view'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='{_NSRange=QQ}16@0:8' selector='firstSelectedRange' type='{_NSRange=II}8@0:4'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method type64='B16@0:8' selector='isEditable' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B16@0:8' selector='isSelectable' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@32@0:8{_NSRange=QQ}16' selector='rectsForCharacterRange:' type='@16@0:4{_NSRange=II}8'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='v40@0:8{_NSRange=QQ}16@32' selector='replaceCharactersInRange:withString:' type='v20@0:4{_NSRange=II}8@16'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='1' type='@' declared_type='NSString*' name='string'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8{_NSRange=QQ}16' selector='scrollRangeToVisible:' type='v16@0:4{_NSRange=II}8'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@16@0:8' selector='selectedRanges' type='@8@0:4'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='v24@0:8@16' selector='setSelectedRanges:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSArray*' name='selectedRanges'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B32@0:8@16@24' selector='shouldReplaceCharactersInRanges:withStrings:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSArray*' name='ranges'/>
<arg index='1' type='@' declared_type='NSArray*' name='strings'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@16@0:8' selector='string' type='@8@0:4'>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='@40@0:8Q16^{_NSRange=QQ}24^B32' selector='stringAtIndex:effectiveRange:endsWithSearchBoundary:' type='@20@0:4I8^{_NSRange=II}12^B16'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='characterIndex'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='outRange'/>
<arg index='2' type='^B' declared_type='BOOL*' name='outFlag'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='Q16@0:8' selector='stringLength' type='I8@0:4'>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method type64='@16@0:8' selector='visibleCharacterRanges' type='@8@0:4'>
<retval type='@' declared_type='NSArray*'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextInput'>
<method type64='@32@0:8{_NSRange=QQ}16' selector='attributedSubstringFromRange:' type='@16@0:4{_NSRange=II}8'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='theRange'/>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method type64='Q32@0:8{CGPoint=dd}16' selector='characterIndexForPoint:' type='I16@0:4{_NSPoint=ff}8'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='thePoint'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method type64='q16@0:8' selector='conversationIdentifier' type='i8@0:4'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method type64='v24@0:8:16' selector='doCommandBySelector:' type='v12@0:4:8'>
<arg index='0' type=':' declared_type='SEL' name='aSelector'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{_NSRange=QQ}16' selector='firstRectForCharacterRange:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@0:4{_NSRange=II}8'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='theRange'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method type64='B16@0:8' selector='hasMarkedText' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v24@0:8@16' selector='insertText:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='aString'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='{_NSRange=QQ}16@0:8' selector='markedRange' type='{_NSRange=II}8@0:4'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method type64='{_NSRange=QQ}16@0:8' selector='selectedRange' type='{_NSRange=II}8@0:4'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method type64='v40@0:8@16{_NSRange=QQ}24' selector='setMarkedText:selectedRange:' type='v20@0:4@8{_NSRange=II}12'>
<arg index='0' type='@' declared_type='id' name='aString'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='selRange'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v16@0:8' selector='unmarkText' type='v8@0:4'>
<retval type='v' declared_type='void'/>
</method>
<method type64='@16@0:8' selector='validAttributesForMarkedText' type='@8@0:4'>
<retval type='@' declared_type='NSArray*'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextInputClient'>
<method type64='@16@0:8' selector='attributedString' type='@8@0:4'>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method type64='@40@0:8{_NSRange=QQ}16^{_NSRange=QQ}32' selector='attributedSubstringForProposedRange:actualRange:' type='@20@0:4{_NSRange=II}8^{_NSRange=II}16'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='aRange'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='actualRange'/>
<retval type='@' declared_type='NSAttributedString*'/>
</method>
<method type64='d24@0:8Q16' selector='baselineDeltaForCharacterAtIndex:' type='f12@0:4I8'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='anIndex'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method type64='Q32@0:8{CGPoint=dd}16' selector='characterIndexForPoint:' type='I16@0:4{_NSPoint=ff}8'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='thePoint'/>
<retval type64='Q' type='I' declared_type='NSUInteger'/>
</method>
<method type64='v24@0:8:16' selector='doCommandBySelector:' type='v12@0:4:8'>
<arg index='0' type=':' declared_type='SEL' name='aSelector'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B24@0:8Q16' selector='drawsVerticallyForCharacterAtIndex:' type='B12@0:4I8'>
<arg index='0' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8{_NSRange=QQ}16^{_NSRange=QQ}32' selector='firstRectForCharacterRange:actualRange:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}20@0:4{_NSRange=II}8^{_NSRange=II}16'>
<arg index='0' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='aRange'/>
<arg index='1' type64='^{_NSRange=QQ}' type='^{_NSRange=II}' declared_type='NSRangePointer' name='actualRange'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method type64='d32@0:8{CGPoint=dd}16' selector='fractionOfDistanceThroughGlyphForPoint:' type='f16@0:4{_NSPoint=ff}8'>
<arg index='0' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='aPoint'/>
<retval type64='d' type='f' declared_type='CGFloat'/>
</method>
<method type64='B16@0:8' selector='hasMarkedText' type='B8@0:4'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v40@0:8@16{_NSRange=QQ}24' selector='insertText:replacementRange:' type='v20@0:4@8{_NSRange=II}12'>
<arg index='0' type='@' declared_type='id' name='aString'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='replacementRange'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='{_NSRange=QQ}16@0:8' selector='markedRange' type='{_NSRange=II}8@0:4'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method type64='{_NSRange=QQ}16@0:8' selector='selectedRange' type='{_NSRange=II}8@0:4'>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method type64='v56@0:8@16{_NSRange=QQ}24{_NSRange=QQ}40' selector='setMarkedText:selectedRange:replacementRange:' type='v28@0:4@8{_NSRange=II}12{_NSRange=II}20'>
<arg index='0' type='@' declared_type='id' name='aString'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='selectedRange'/>
<arg index='2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='replacementRange'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v16@0:8' selector='unmarkText' type='v8@0:4'>
<retval type='v' declared_type='void'/>
</method>
<method type64='@16@0:8' selector='validAttributesForMarkedText' type='@8@0:4'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='q16@0:8' selector='windowLevel' type='i8@0:4'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextLayoutOrientationProvider'>
<method type64='q16@0:8' selector='layoutOrientation' type='i8@0:4'>
<retval type64='q' type='i' declared_type='NSTextLayoutOrientation'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextStorageDelegate'>
<method type64='v24@0:8@16' selector='textStorageDidProcessEditing:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='textStorageWillProcessEditing:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSTextViewDelegate'>
<method type64='@40@0:8@16@24Q32' selector='textView:URLForContentsOfTextAttachment:atIndex:' type='@20@0:4@8@12I16'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='NSTextAttachment*' name='textAttachment'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='@' declared_type='NSURL*'/>
</method>
<method type64='v64@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32' selector='textView:clickedOnCell:inRect:' type='v32@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v72@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32Q64' selector='textView:clickedOnCell:inRect:atIndex:' type='v36@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16I32'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='3' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B32@0:8@16@24' selector='textView:clickedOnLink:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='id' name='link'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B40@0:8@16@24Q32' selector='textView:clickedOnLink:atIndex:' type='B20@0:4@8@12I16'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='id' name='link'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@56@0:8@16@24{_NSRange=QQ}32^q48' selector='textView:completions:forPartialWordRange:indexOfSelectedItem:' type='@28@0:4@8@12{_NSRange=II}16^i24'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='NSArray*' name='words'/>
<arg index='2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='charRange'/>
<arg index='3' type64='^q' type='^i' declared_type='NSInteger*' name='index'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='@80@0:8@16{_NSRange=QQ}24Q40@48@56@64q72' selector='textView:didCheckTextInRange:types:options:results:orthography:wordCount:' type='@44@0:4@8{_NSRange=II}12Q20@28@32@36i40'>
<arg index='0' type='@' declared_type='NSTextView*' name='view'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='2' type='Q' declared_type='NSTextCheckingTypes' name='checkingTypes'/>
<arg index='3' type='@' declared_type='NSDictionary*' name='options'/>
<arg index='4' type='@' declared_type='NSArray*' name='results'/>
<arg index='5' type='@' declared_type='NSOrthography*' name='orthography'/>
<arg index='6' type64='q' type='i' declared_type='NSInteger' name='wordCount'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='B32@0:8@16:24' selector='textView:doCommandBySelector:' type='B16@0:4@8:12'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type=':' declared_type='SEL' name='commandSelector'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v64@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32' selector='textView:doubleClickedOnCell:inRect:' type='v32@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v72@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32Q64' selector='textView:doubleClickedOnCell:inRect:atIndex:' type='v36@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16I32'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='cellFrame'/>
<arg index='3' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v72@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64' selector='textView:draggedCell:inRect:event:' type='v36@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@32'>
<arg index='0' type='@' declared_type='NSTextView*' name='view'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='3' type='@' declared_type='NSEvent*' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v80@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64Q72' selector='textView:draggedCell:inRect:event:atIndex:' type='v40@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16@32I36'>
<arg index='0' type='@' declared_type='NSTextView*' name='view'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<arg index='3' type='@' declared_type='NSEvent*' name='event'/>
<arg index='4' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@48@0:8@16@24@32Q40' selector='textView:menu:forEvent:atIndex:' type='@24@0:4@8@12@16I20'>
<arg index='0' type='@' declared_type='NSTextView*' name='view'/>
<arg index='1' type='@' declared_type='NSMenu*' name='menu'/>
<arg index='2' type='@' declared_type='NSEvent*' name='event'/>
<arg index='3' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method type64='B48@0:8@16{_NSRange=QQ}24@40' selector='textView:shouldChangeTextInRange:replacementString:' type='B24@0:4@8{_NSRange=II}12@20'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='affectedCharRange'/>
<arg index='2' type='@' declared_type='NSString*' name='replacementString'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B40@0:8@16@24@32' selector='textView:shouldChangeTextInRanges:replacementStrings:' type='B20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='NSArray*' name='affectedRanges'/>
<arg index='2' type='@' declared_type='NSArray*' name='replacementStrings'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@40@0:8@16@24@32' selector='textView:shouldChangeTypingAttributes:toAttributes:' type='@20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='NSDictionary*' name='oldTypingAttributes'/>
<arg index='2' type='@' declared_type='NSDictionary*' name='newTypingAttributes'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method type64='q48@0:8@16q24{_NSRange=QQ}32' selector='textView:shouldSetSpellingState:range:' type='i24@0:4@8i12{_NSRange=II}16'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='value'/>
<arg index='2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='affectedCharRange'/>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
<method type64='{_NSRange=QQ}56@0:8@16{_NSRange=QQ}24{_NSRange=QQ}40' selector='textView:willChangeSelectionFromCharacterRange:toCharacterRange:' type='{_NSRange=II}28@0:4@8{_NSRange=II}12{_NSRange=II}20'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='oldSelectedCharRange'/>
<arg index='2' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='newSelectedCharRange'/>
<retval type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange'/>
</method>
<method type64='@40@0:8@16@24@32' selector='textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:' type='@20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='NSArray*' name='oldSelectedCharRanges'/>
<arg index='2' type='@' declared_type='NSArray*' name='newSelectedCharRanges'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='@56@0:8@16{_NSRange=QQ}24@40^Q48' selector='textView:willCheckTextInRange:options:types:' type='@28@0:4@8{_NSRange=II}12@20^Q24'>
<arg index='0' type='@' declared_type='NSTextView*' name='view'/>
<arg index='1' type64='{_NSRange=QQ}' type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg index='2' type='@' declared_type='NSDictionary*' name='options'/>
<arg index='3' type='^Q' declared_type='NSTextCheckingTypes*' name='checkingTypes'/>
<retval type='@' declared_type='NSDictionary*'/>
</method>
<method type64='@40@0:8@16@24Q32' selector='textView:willDisplayToolTip:forCharacterAtIndex:' type='@20@0:4@8@12I16'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='NSString*' name='tooltip'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='characterIndex'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='@40@0:8@16@24@32' selector='textView:willShowSharingServicePicker:forItems:' type='@20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSTextView*' name='textView'/>
<arg index='1' type='@' declared_type='NSSharingServicePicker*' name='servicePicker'/>
<arg index='2' type='@' declared_type='NSArray*' name='items'/>
<retval type='@' declared_type='NSSharingServicePicker*'/>
</method>
<method type64='@40@0:8@16@24Q32' selector='textView:writablePasteboardTypesForCell:atIndex:' type='@20@0:4@8@12I16'>
<arg index='0' type='@' declared_type='NSTextView*' name='view'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='B56@0:8@16@24Q32@40@48' selector='textView:writeCell:atIndex:toPasteboard:type:' type='B28@0:4@8@12I16@20@24'>
<arg index='0' type='@' declared_type='NSTextView*' name='view'/>
<arg index='1' type='@' declared_type='id' name='cell'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='charIndex'/>
<arg index='3' type='@' declared_type='NSPasteboard*' name='pboard'/>
<arg index='4' type='@' declared_type='NSString*' name='type'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v24@0:8@16' selector='textViewDidChangeSelection:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='textViewDidChangeTypingAttributes:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@24@0:8@16' selector='undoManagerForTextView:' type='@12@0:4@8'>
<arg index='0' type='@' declared_type='NSTextView*' name='view'/>
<retval type='@' declared_type='NSUndoManager*'/>
</method>
</informal_protocol>
<informal_protocol name='NSTokenFieldCellDelegate'>
<method type64='@48@0:8@16@24q32^q40' selector='tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:' type='@24@0:4@8@12i16^i20'>
<arg index='0' type='@' declared_type='NSTokenFieldCell*' name='tokenFieldCell'/>
<arg index='1' type='@' declared_type='NSString*' name='substring'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='tokenIndex'/>
<arg index='3' type64='^q' type='^i' declared_type='NSInteger*' name='selectedIndex'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='@32@0:8@16@24' selector='tokenFieldCell:displayStringForRepresentedObject:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTokenFieldCell*' name='tokenFieldCell'/>
<arg index='1' type='@' declared_type='id' name='representedObject'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='@32@0:8@16@24' selector='tokenFieldCell:editingStringForRepresentedObject:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTokenFieldCell*' name='tokenFieldCell'/>
<arg index='1' type='@' declared_type='id' name='representedObject'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='B32@0:8@16@24' selector='tokenFieldCell:hasMenuForRepresentedObject:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTokenFieldCell*' name='tokenFieldCell'/>
<arg index='1' type='@' declared_type='id' name='representedObject'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@32@0:8@16@24' selector='tokenFieldCell:menuForRepresentedObject:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTokenFieldCell*' name='tokenFieldCell'/>
<arg index='1' type='@' declared_type='id' name='representedObject'/>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method type64='@32@0:8@16@24' selector='tokenFieldCell:readFromPasteboard:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTokenFieldCell*' name='tokenFieldCell'/>
<arg index='1' type='@' declared_type='NSPasteboard*' name='pboard'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='@32@0:8@16@24' selector='tokenFieldCell:representedObjectForEditingString:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTokenFieldCell*' name='tokenFieldCell'/>
<arg index='1' type='@' declared_type='NSString*' name='editingString'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@40@0:8@16@24Q32' selector='tokenFieldCell:shouldAddObjects:atIndex:' type='@20@0:4@8@12I16'>
<arg index='0' type='@' declared_type='NSTokenFieldCell*' name='tokenFieldCell'/>
<arg index='1' type='@' declared_type='NSArray*' name='tokens'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='index'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='Q32@0:8@16@24' selector='tokenFieldCell:styleForRepresentedObject:' type='I16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTokenFieldCell*' name='tokenFieldCell'/>
<arg index='1' type='@' declared_type='id' name='representedObject'/>
<retval type64='Q' type='I' declared_type='NSTokenStyle'/>
</method>
<method type64='B40@0:8@16@24@32' selector='tokenFieldCell:writeRepresentedObjects:toPasteboard:' type='B20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSTokenFieldCell*' name='tokenFieldCell'/>
<arg index='1' type='@' declared_type='NSArray*' name='objects'/>
<arg index='2' type='@' declared_type='NSPasteboard*' name='pboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSTokenFieldDelegate'>
<method type64='@48@0:8@16@24q32^q40' selector='tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:' type='@24@0:4@8@12i16^i20'>
<arg index='0' type='@' declared_type='NSTokenField*' name='tokenField'/>
<arg index='1' type='@' declared_type='NSString*' name='substring'/>
<arg index='2' type64='q' type='i' declared_type='NSInteger' name='tokenIndex'/>
<arg index='3' type64='^q' type='^i' declared_type='NSInteger*' name='selectedIndex'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='@32@0:8@16@24' selector='tokenField:displayStringForRepresentedObject:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTokenField*' name='tokenField'/>
<arg index='1' type='@' declared_type='id' name='representedObject'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='@32@0:8@16@24' selector='tokenField:editingStringForRepresentedObject:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTokenField*' name='tokenField'/>
<arg index='1' type='@' declared_type='id' name='representedObject'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='B32@0:8@16@24' selector='tokenField:hasMenuForRepresentedObject:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTokenField*' name='tokenField'/>
<arg index='1' type='@' declared_type='id' name='representedObject'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='@32@0:8@16@24' selector='tokenField:menuForRepresentedObject:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTokenField*' name='tokenField'/>
<arg index='1' type='@' declared_type='id' name='representedObject'/>
<retval type='@' declared_type='NSMenu*'/>
</method>
<method type64='@32@0:8@16@24' selector='tokenField:readFromPasteboard:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTokenField*' name='tokenField'/>
<arg index='1' type='@' declared_type='NSPasteboard*' name='pboard'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='@32@0:8@16@24' selector='tokenField:representedObjectForEditingString:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTokenField*' name='tokenField'/>
<arg index='1' type='@' declared_type='NSString*' name='editingString'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@40@0:8@16@24Q32' selector='tokenField:shouldAddObjects:atIndex:' type='@20@0:4@8@12I16'>
<arg index='0' type='@' declared_type='NSTokenField*' name='tokenField'/>
<arg index='1' type='@' declared_type='NSArray*' name='tokens'/>
<arg index='2' type64='Q' type='I' declared_type='NSUInteger' name='index'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='Q32@0:8@16@24' selector='tokenField:styleForRepresentedObject:' type='I16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSTokenField*' name='tokenField'/>
<arg index='1' type='@' declared_type='id' name='representedObject'/>
<retval type64='Q' type='I' declared_type='NSTokenStyle'/>
</method>
<method type64='B40@0:8@16@24@32' selector='tokenField:writeRepresentedObjects:toPasteboard:' type='B20@0:4@8@12@16'>
<arg index='0' type='@' declared_type='NSTokenField*' name='tokenField'/>
<arg index='1' type='@' declared_type='NSArray*' name='objects'/>
<arg index='2' type='@' declared_type='NSPasteboard*' name='pboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSToolTipOwner'>
<method type64='@56@0:8@16q24{CGPoint=dd}32^v48' selector='view:stringForToolTip:point:userData:' type='@28@0:4@8i12{_NSPoint=ff}16^v24'>
<arg index='0' type='@' declared_type='NSView*' name='view'/>
<arg index='1' type64='q' type='i' declared_type='NSToolTipTag' name='tag'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='point'/>
<arg index='3' type='^v' declared_type='void*' name='data'/>
<retval type='@' declared_type='NSString*'/>
</method>
</informal_protocol>
<informal_protocol name='NSToolbarDelegate'>
<method type64='@36@0:8@16@24B32' selector='toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:' type='@20@0:4@8@12B16'>
<arg index='0' type='@' declared_type='NSToolbar*' name='toolbar'/>
<arg index='1' type='@' declared_type='NSString*' name='itemIdentifier'/>
<arg index='2' type='B' declared_type='BOOL' name='flag'/>
<retval type='@' declared_type='NSToolbarItem*'/>
</method>
<method type64='@24@0:8@16' selector='toolbarAllowedItemIdentifiers:' type='@12@0:4@8'>
<arg index='0' type='@' declared_type='NSToolbar*' name='toolbar'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='@24@0:8@16' selector='toolbarDefaultItemIdentifiers:' type='@12@0:4@8'>
<arg index='0' type='@' declared_type='NSToolbar*' name='toolbar'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='v24@0:8@16' selector='toolbarDidRemoveItem:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='@24@0:8@16' selector='toolbarSelectableItemIdentifiers:' type='@12@0:4@8'>
<arg index='0' type='@' declared_type='NSToolbar*' name='toolbar'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='v24@0:8@16' selector='toolbarWillAddItem:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSToolbarItemValidation'>
<method type64='B24@0:8@16' selector='validateToolbarItem:' type='B12@0:4@8'>
<arg index='0' type='@' declared_type='NSToolbarItem*' name='theItem'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSUserInterfaceItemIdentification'>
<method type64='@16@0:8' selector='identifier' type='@8@0:4'>
<retval type='@' declared_type='NSString*'/>
</method>
<method type64='v24@0:8@16' selector='setIdentifier:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSString*' name='identifier'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSUserInterfaceItemSearching'>
<method type64='@24@0:8@16' selector='localizedTitlesForItem:' type='@12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='item'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='v24@0:8@16' selector='performActionForItem:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='item'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v40@0:8@16q24@?32' selector='searchForItemsWithSearchString:resultLimit:matchedItemHandler:' type='v20@0:4@8i12@?16'>
<arg index='0' type='@' declared_type='NSString*' name='searchString'/>
<arg index='1' type64='q' type='i' declared_type='NSInteger' name='resultLimit'/>
<arg index='2' function_pointer='true' type='@?' declared_type='void (^)(NSArray *)' name='handleMatchedItems'>
<arg type='@' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='showAllHelpTopicsForSearchString:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSString*' name='searchString'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='NSUserInterfaceValidations'>
<method type64='B24@0:8@16' selector='validateUserInterfaceItem:' type='B12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='anItem'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='NSValidatedUserInterfaceItem'>
<method type64=':16@0:8' selector='action' type=':8@0:4'>
<retval type=':' declared_type='SEL'/>
</method>
<method type64='q16@0:8' selector='tag' type='i8@0:4'>
<retval type64='q' type='i' declared_type='NSInteger'/>
</method>
</informal_protocol>
<informal_protocol name='NSWindowDelegate'>
<method type64='@24@0:8@16' selector='customWindowsToEnterFullScreenForWindow:' type='@12@0:4@8'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='@24@0:8@16' selector='customWindowsToExitFullScreenForWindow:' type='@12@0:4@8'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method type64='v32@0:8@16@24' selector='window:didDecodeRestorableState:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type='@' declared_type='NSCoder*' name='state'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B56@0:8@16@24{CGPoint=dd}32@48' selector='window:shouldDragDocumentWithEvent:from:withPasteboard:' type='B28@0:4@8@12{_NSPoint=ff}16@24'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type='@' declared_type='NSEvent*' name='event'/>
<arg index='2' type64='{CGPoint=dd}' type='{_NSPoint=ff}' declared_type='NSPoint' name='dragImageLocation'/>
<arg index='3' type='@' declared_type='NSPasteboard*' name='pasteboard'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B32@0:8@16@24' selector='window:shouldPopUpDocumentPathMenu:' type='B16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type='@' declared_type='NSMenu*' name='menu'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v32@0:8@16d24' selector='window:startCustomAnimationToEnterFullScreenWithDuration:' type='v20@0:4@8d12'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type='d' declared_type='NSTimeInterval' name='duration'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16d24' selector='window:startCustomAnimationToExitFullScreenWithDuration:' type='v20@0:4@8d12'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type='d' declared_type='NSTimeInterval' name='duration'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v32@0:8@16@24' selector='window:willEncodeRestorableState:' type='v16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type='@' declared_type='NSCoder*' name='state'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='{CGRect={CGPoint=dd}{CGSize=dd}}64@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32' selector='window:willPositionSheet:usingRect:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}32@0:4@8@12{_NSRect={_NSPoint=ff}{_NSSize=ff}}16'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type='@' declared_type='NSWindow*' name='sheet'/>
<arg index='2' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='rect'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
<method type64='{CGSize=dd}56@0:8@16{CGSize=dd}24{CGSize=dd}40' selector='window:willResizeForVersionBrowserWithMaxPreferredSize:maxAllowedSize:' type='{_NSSize=ff}28@0:4@8{_NSSize=ff}12{_NSSize=ff}20'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='maxPreferredFrameSize'/>
<arg index='2' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='maxAllowedFrameSize'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method type64='{CGSize=dd}40@0:8@16{CGSize=dd}24' selector='window:willUseFullScreenContentSize:' type='{_NSSize=ff}20@0:4@8{_NSSize=ff}12'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='proposedSize'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method type64='Q32@0:8@16Q24' selector='window:willUseFullScreenPresentationOptions:' type='I16@0:4@8I12'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type64='Q' type='I' declared_type='NSApplicationPresentationOptions' name='proposedOptions'/>
<retval type64='Q' type='I' declared_type='NSApplicationPresentationOptions'/>
</method>
<method type64='v24@0:8@16' selector='windowDidBecomeKey:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowDidBecomeMain:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowDidChangeBackingProperties:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowDidChangeScreen:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowDidChangeScreenProfile:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowDidDeminiaturize:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowDidEndLiveResize:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowDidEndSheet:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowDidEnterFullScreen:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowDidEnterVersionBrowser:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowDidExitFullScreen:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowDidExitVersionBrowser:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowDidExpose:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowDidFailToEnterFullScreen:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowDidFailToExitFullScreen:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowDidMiniaturize:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowDidMove:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowDidResignKey:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowDidResignMain:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowDidResize:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowDidUpdate:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='B24@0:8@16' selector='windowShouldClose:' type='B12@0:4@8'>
<arg index='0' type='@' declared_type='id' name='sender'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='B56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24' selector='windowShouldZoom:toFrame:' type='B28@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='newFrame'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method type64='v24@0:8@16' selector='windowWillBeginSheet:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowWillClose:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowWillEnterFullScreen:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowWillEnterVersionBrowser:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowWillExitFullScreen:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowWillExitVersionBrowser:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowWillMiniaturize:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='v24@0:8@16' selector='windowWillMove:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='{CGSize=dd}40@0:8@16{CGSize=dd}24' selector='windowWillResize:toSize:' type='{_NSSize=ff}20@0:4@8{_NSSize=ff}12'>
<arg index='0' type='@' declared_type='NSWindow*' name='sender'/>
<arg index='1' type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize' name='frameSize'/>
<retval type64='{CGSize=dd}' type='{_NSSize=ff}' declared_type='NSSize'/>
</method>
<method type64='@32@0:8@16@24' selector='windowWillReturnFieldEditor:toObject:' type='@16@0:4@8@12'>
<arg index='0' type='@' declared_type='NSWindow*' name='sender'/>
<arg index='1' type='@' declared_type='id' name='client'/>
<retval type='@' declared_type='id'/>
</method>
<method type64='@24@0:8@16' selector='windowWillReturnUndoManager:' type='@12@0:4@8'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<retval type='@' declared_type='NSUndoManager*'/>
</method>
<method type64='v24@0:8@16' selector='windowWillStartLiveResize:' type='v12@0:4@8'>
<arg index='0' type='@' declared_type='NSNotification*' name='notification'/>
<retval type='v' declared_type='void'/>
</method>
<method type64='{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24' selector='windowWillUseStandardFrame:defaultFrame:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}28@0:4@8{_NSRect={_NSPoint=ff}{_NSSize=ff}}12'>
<arg index='0' type='@' declared_type='NSWindow*' name='window'/>
<arg index='1' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect' name='newFrame'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' declared_type='NSRect'/>
</method>
</informal_protocol>
<informal_protocol name='NSWindowRestoration'>
<method type64='v40@0:8@16@24@?32' selector='restoreWindowWithIdentifier:state:completionHandler:' type='v20@0:4@8@12@?16' class_method='true'>
<arg index='0' type='@' declared_type='NSString*' name='identifier'/>
<arg index='1' type='@' declared_type='NSCoder*' name='state'/>
<arg index='2' function_pointer='true' type='@?' declared_type='void (^)(NSWindow *, NSError *)' name='completionHandler'>
<arg type='@' declared_type='NSWindow*'/>
<arg type='@' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
</signatures>
