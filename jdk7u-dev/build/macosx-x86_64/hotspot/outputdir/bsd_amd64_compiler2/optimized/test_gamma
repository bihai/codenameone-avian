#!/bin/sh

# Generated by /Users/shannah/src/jdk7u-dev/hotspot/make/bsd/makefiles/buildtree.make

# Include environment settings for gamma run

. ./env.sh

# Do not run gamma test for cross compiles

if [ -n "" ]; then 
  echo Cross compiling for ARCH , skipping gamma run.
  exit 0
fi

# Make sure JAVA_HOME is set as it is required for gamma

if [ -z "${JAVA_HOME}" ]; then 
  echo JAVA_HOME must be set to run this test.
  exit 0
fi

# Check JAVA_HOME version to be used for the test

${JAVA_HOME}/bin/java -d64 -fullversion > /dev/null 2>&1
if [ $? -ne 0 ]; then 
  echo JAVA_HOME must point to a 64-bit OpenJDK.
  exit 0
fi

# Use gamma_g if it exists

GAMMA_PROG=gamma
if [ -f gamma_g ]; then 
  GAMMA_PROG=gamma_g
fi

if [ "Darwin" = "Darwin" ]; then 
  # Ensure architecture for gamma and JAVA_HOME is the same.
  # NOTE: gamma assumes the OpenJDK directory layout.

  GAMMA_ARCH="`file ${GAMMA_PROG} | awk '{print $NF}'`"
  JVM_LIB="${JAVA_HOME}/jre/lib/libjava.dylib"
  if [ ! -f ${JVM_LIB} ]; then
    JVM_LIB="${JAVA_HOME}/jre/lib/amd64/libjava.dylib"
  fi
  if [ ! -f ${JVM_LIB} ] || [ -z "`file ${JVM_LIB} | grep ${GAMMA_ARCH}`" ]; then 
    echo JAVA_HOME must point to a 64-bit OpenJDK.
    exit 0
  fi
fi

# Compile Queens program for test

rm -f Queens.class
${JAVA_HOME}/bin/javac -d . /Users/shannah/src/jdk7u-dev/hotspot/make/test/Queens.java

# Set library path solely for gamma launcher test run

LD_LIBRARY_PATH=.:${JAVA_HOME}/jre/lib/amd64/native_threads:${JAVA_HOME}/jre/lib/amd64:
export LD_LIBRARY_PATH
unset LD_LIBRARY_PATH_32
unset LD_LIBRARY_PATH_64

if [ "Darwin" = "Darwin" ]; then 
  DYLD_LIBRARY_PATH=.:${JAVA_HOME}/jre/lib/native_threads:${JAVA_HOME}/jre/lib:${JAVA_HOME}/jre/lib/amd64/native_threads:${JAVA_HOME}/jre/lib/amd64:
  export DYLD_LIBRARY_PATH
fi

# Use the gamma launcher and JAVA_HOME to run the test

./${GAMMA_PROG} -Xbatch -showversion Queens < /dev/null
